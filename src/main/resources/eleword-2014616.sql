-- MySQL dump 10.9
--
-- Host: localhost    Database: eleword
-- ------------------------------------------------------
-- Server version	5.1.34-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article`
--

DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `author` varchar(255) NOT NULL,
  `category_id` bigint(20) DEFAULT NULL,
  `content` text NOT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `modify_date` datetime DEFAULT NULL,
  `post_date` datetime DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `title` varchar(255) NOT NULL,
  `views` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `id` (`id`),
  KEY `category_id` (`category_id`),
  KEY `post_date` (`post_date`)
) ENGINE=InnoDB AUTO_INCREMENT=150 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `article`
--


/*!40000 ALTER TABLE `article` DISABLE KEYS */;
LOCK TABLES `article` WRITE;
INSERT INTO `article` VALUES (1,'admin',1,'<h2>\r\n	1. find\r\n</h2>\r\n<p>\r\n	find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。\r\n</p>\r\n<p>\r\n	find的使用格式如下：\r\n</p>\r\n<p>\r\n	$ find &lt;指定目录&gt; &lt;指定条件&gt; &lt;指定动作&gt;\r\n</p>\r\n<p>\r\n	- &lt;指定目录&gt;： 所要搜索的目录及其所有子目录。默认为当前目录。\r\n</p>\r\n<p>\r\n	- &lt;指定条件&gt;： 所要搜索的文件的特征。\r\n</p>\r\n<p>\r\n	- &lt;指定动作&gt;： 对搜索结果进行特定的处理。\r\n</p>\r\n<p>\r\n	如果什么参数也不加，find默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。\r\n</p>\r\n<p>\r\n	find的使用实例：\r\n</p>\r\n<p>\r\n	$ find . -name \'my*\'\r\n</p>\r\n<p>\r\n	搜索当前目录（含子目录，以下同）中，所有文件名以my开头的文件。\r\n</p>\r\n<p>\r\n	$ find . -name \'my*\' -ls\r\n</p>\r\n<p>\r\n	搜索当前目录中，所有文件名以my开头的文件，并显示它们的详细信息。\r\n</p>\r\n<p>\r\n	$ find . -type f -mmin -10\r\n</p>\r\n<p>\r\n	搜索当前目录中，所有过去10分钟中更新过的普通文件。如果不加-type f参数，则搜索普通文件+特殊文件+目录。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	2. locate\r\n</h2>\r\n<p>\r\n	locate命令其实是\"find -name\"的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。\r\n</p>\r\n<p>\r\n	locate命令的使用实例：\r\n</p>\r\n<p>\r\n	$ locate /etc/sh\r\n</p>\r\n<p>\r\n	搜索etc目录下所有以sh开头的文件。\r\n</p>\r\n<p>\r\n	$ locate ~/m\r\n</p>\r\n<p>\r\n	搜索用户主目录下，所有以m开头的文件。\r\n</p>\r\n<p>\r\n	$ locate -i ~/m\r\n</p>\r\n<p>\r\n	搜索用户主目录下，所有以m开头的文件，并且忽略大小写。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	3. whereis\r\n</h2>\r\n<p>\r\n	whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。\r\n</p>\r\n<p>\r\n	whereis命令的使用实例：\r\n</p>\r\n<p>\r\n	$ whereis grep\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	4. which\r\n</h2>\r\n<p>\r\n	which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\r\n</p>\r\n<p>\r\n	which命令的使用实例：\r\n</p>\r\n<p>\r\n	$ which grep\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	5. type\r\n</h2>\r\n<p>\r\n	type命令其实不能算查找命令，它是用来区分某个命令到底是由shell自带的，还是由shell外部的独立二进制文件提供的。如果一个命令是外部命令，那么使用-p参数，会显示该命令的路径，相当于which命令。\r\n</p>\r\n<p>\r\n	type命令的使用实例：\r\n</p>\r\n<p>\r\n	$ type cd\r\n</p>\r\n<p>\r\n	系统会提示，cd是shell的自带命令（build-in）。\r\n</p>\r\n<p>\r\n	$ type grep\r\n</p>\r\n<p>\r\n	系统会提示，grep是一个外部命令，并显示该命令的路径。\r\n</p>\r\n<p>\r\n	$ type -p grep\r\n</p>\r\n<p>\r\n	加上-p参数后，就相当于which命令。\r\n</p>',NULL,NULL,'2014-04-09 07:18:26',0,'Linux查找命令',0),(2,'admin',2,'<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">涉及到web相关的开发越来越多了，所谓涉及是指大部分客户端都会向服务端请求数据，以及服务端向客户端返回数据，所以了解发送请求以及应答的数据格式自然是非常重要的了。本篇文章主要介绍关于MIME的基本知识。</span> \r\n</p>\r\n<h2>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME的由来</span> \r\n</h2>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME的全称为多用途互联网邮件扩展（Multipurpose Internet Mail Extensions），目前已经是一个互联网标准，它扩展了电子邮件标准，使其能够支持非ASCII字符、二进制格式附件等多种格式的邮件消息。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 早期由RFC 822转变而来的RFC 2822，规定电子邮件标准并不允许在邮件消息中使用7位ASCII字符集以外的字符。正因如此，一些非英语字符消息和二进制文件，图像，声音等非文字消息都不能在电子邮件中传输。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 但在之后的RFC 2045、RFC 2046、RFC 2047、RFC 2048、RFC 2049等RFC中为了弥补早起RFC的不足。推出并正式使用MIME来规定用于表示各种各样的数据类型的符号化方法。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 一句话概括就是MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 现如今，在万维网中使用的HTTP协议中也使用了MIME的框架。</span> \r\n</p>\r\n<h2>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME headers</span> \r\n</h2>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME headers是指通过标准化电子邮件报文的头部的附加域（fields）而实现的；这些头部的附加域，描述新的报文类型的内容和组织形式。主要包括：MIME版本、内容类型、内容传输编码、内容标识符（可选）、内容描述（可选）等内容。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> MIME版本（MIME-Version）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 这个头部域在邮件消息的报文用一个版本号码来指明消息遵从的MIME规范的版本。目前版本是1.0。</span> \r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME-Version: 1.0</span> \r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">内容类型（Content-Type）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 这个头部领域用于指定消息的类型。一般以下面的形式出现。</span> \r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">Content-Type: [type]/[subtype]; parameter</span> \r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">type有下面的形式。</span> \r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">Text：用于标准化地表示的文本信息，文本消息可以是多种字符集和或者多种格式的；</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> Multipart：用于连接消息体的多个部分构成一个消息，这些部分可以是不同类型的数据；</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> Application：用于传输应用程序数据或者二进制数据；</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> Message：用于包装一个E-mail消息；</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> Image：用于传输静态图片数据；</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> Audio：用于传输音频或者音声数据；</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> Video：用于传输动态影像数据，可以是与音频编辑在一起的视频数据格式。</span> \r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">subtype用于指定type的详细形式。content-type/subtype配对的集合和与此相关的参数，将随着时间而增长。为了确保这些值在一个有序而且公开的状态下开发，MIME使用Internet Assigned Numbers Authority (IANA)作为中心的注册机制来管理这些值。常用的subtype值如下所示：</span> \r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">text/plain（纯文本）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> text/html（HTML文档）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/xhtml+xml（XHTML文档）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> image/gif（GIF图像）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> image/jpeg（JPEG图像）【PHP中为：image/pjpeg】</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> image/png（PNG图像）【PHP中为：image/x-png】</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> video/mpeg（MPEG动画）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/octet-stream（任意的二进制数据）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/pdf（PDF文档）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/msword（Microsoft Word文件）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/vnd.wap.xhtml+xml (wap1.0+)</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/xhtml+xml (wap2.0+)</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> message/rfc822（RFC 822形式）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> multipart/alternative（HTML邮件的HTML形式和纯文本形式，相同内容使用不同形式表示）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> application/x-www-form-urlencoded（使用HTTP的POST方法提交的表单）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> multipart/form-data（同上，但主要用于表单提交时伴随文件上传的场合）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 此外，尚未被接受为正式数据类型的subtype，可以使用x-开始的独立名称（例如application/x-gzip）。vnd-开始的固有名称也可以使用（例：application/vnd.ms-excel）。</span> \r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">parameter可以用来指定附加的信息，更多情况下是用于指定text/plain和text/htm等的文字编码方式的charset参数。MIME根据type制定了默认的subtype，当客户端不能确定消息的subtype的情况下，消息被看作默认的subtype进行处理。Text默认是text/plain，Application默认是application/octet-stream而Multipart默认情况下被看作multipart/mixed。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 内容传输编码（Content-Transfer-Encoding）</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 这个区域使指定ASCII以外的字符编码方式成为可能。形式如下：</span> \r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">Content-Transfer-Encoding: [mechanism]</span> \r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">其中，mechanism的值可以指定为“7bit”，“8bit”，“binary”，“quoted-printable”，“base64”。</span> \r\n</p>\r\n<ol>\r\n	<li>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">7bit &nbsp; &nbsp;7bit这里指的是7位的ASCII编码方式。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">8bit &nbsp; &nbsp;8位元ASCII码。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">binary</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">quoted-printable &nbsp; &nbsp;因为欧洲的一些文字和ASCII字符集中的某些字符有部分相同。如果邮件消息使用的是这些语言的话，于ASCII重叠的那些字符可以原样使用，ASCII字符集中不存在的字符采用形如“=??”的方法编码。这里“??”需要用将字符编码后的16进制数字来指定。采用quoted-printable编码的消息，长度不会变得太长，而且大部分都是ASCII中的字符，即使不通过解码也大致可以读懂消息的内容。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">base64 &nbsp; &nbsp;base64是一种将二进制的01序列转化成ASCII字符的编码方法。编码后的文本或者二进制消息，就可以运用SMTP等只支持ASCII字符的协议传送了。Base64一般被认为会平均增加33%的报文长度，而且，经过编码的消息对于人类来说是不可读的。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">x-encodingname &nbsp; &nbsp;这个值是预留的扩展。</span> \r\n	</li>\r\n</ol>\r\n<h2>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">自定义MIME</span> \r\n</h2>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">Internet中有一个专门组织IANA来确认标准的MIME类型，但Internet发展的太快，很多应用程序等不及IANA来确认他们使用的MIME类型为标准类型。因此他们使用在类别中以x-开头的方法标识这个类别还没有成为标准，例如：x-gzip，x-tar等。事实上这些类型运用的很广泛，已经成为了事实标准。只要客户机和服务器共同承认这个MIME类型，即使它是不标准的类型也没有关系，客户程序就能根据MIME类型，采用具体的处理手段来处理数据。而Web服务器和浏览器（包括操作系统）中，缺省都设置了标准的和常见的MIME类型，只有对于不常见的 MIME类型，才需要同时设置服务器和客户浏览器，以进行识别。</span> \r\n</p>\r\n<h2>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">万维网中使用MIME</span> \r\n</h2>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME在1992年最早应用于电子邮件系统，但之后也慢慢延伸到了HTTP等网络协议中了，比如用户使用浏览器去请求服务器获得内容，服务器会将它们发送的多媒体数据的类型告诉浏览器，而通知手段就是说明该多媒体数据的MIME类型，从而让浏览器知道接收到的信息哪些是MP3文件，哪些是Shockwave文件等等。服务器将MIME标志符放入传送的数据中来告诉浏览器使用哪种插件读取相关文件。</span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> 浏览器接收到文件后，会进入插件系统进行查找，查找出哪种插件可以识别读取接收到的文件。如果浏览器不清楚调用哪种插件系统，它可能会告诉用户缺少某插件，或者直接选择某现有插件来试图读取接收到的文件，后者可能会导致系统的崩溃。传输的信息中缺少MIME标识可能导致的情况很难估计，因为某些计算机系统可能不会出现什么故障，但某些计算机可能就会因此而崩溃。</span> \r\n</p>\r\n<h2>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">应用MIME到web开发</span> \r\n</h2>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">经过前面这一系列关于MIME的介绍，我们应该对MIME有了一定的理解和认识，既然MIME标识了请求、响应的数据类型，所以在做web相关的开发时，一定要注意设计好请求数据类型和返回类型的定义，并在开发过程中将MIME添加到请求、响应的header中。</span> \r\n</p>\r\n<h2>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME类型列表</span> \r\n</h2>\r\n<p>\r\n	<a href=\"http://www.w3school.com.cn/media/media_mimeref.asp\" target=\"_blank\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">MIME 参考手册</span></a> \r\n</p>',NULL,'2014-04-10 02:30:56','2014-04-09 14:08:41',0,'初步了解MIME',0),(3,'admin',2,'<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp; &nbsp; REST是</span><a href=\"http://zh.wikipedia.org/w/index.php?title=Roy_Fielding&amp;action=edit&amp;redlink=1\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Roy Fielding</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">博士在2000年他的博士论文中提出来的一种</span><a href=\"http://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">软件架构</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">风格。目前在三种主流的</span><a href=\"http://zh.wikipedia.org/wiki/Web%E6%9C%8D%E5%8A%A1\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Web服务</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">实现方案中，因为REST模式与复杂的</span><a href=\"http://zh.wikipedia.org/wiki/SOAP\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">SOAP</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">和</span><a href=\"http://zh.wikipedia.org/wiki/XML-RPC\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">XML-RPC</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">相比更加简洁，越来越多的web服务开始采用REST风格设计和实现。例如，</span><a href=\"http://zh.wikipedia.org/wiki/Amazon.com\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Amazon.com</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">提供接近REST风格的Web服务进行图书查找；</span><a href=\"http://zh.wikipedia.org/wiki/%E9%9B%85%E8%99%8E\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">雅虎</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">提供的Web服务也是REST风格的。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">要点及标准</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">需要注意的是，REST是设计风格而不是标准。REST通常基于使用</span><a href=\"http://zh.wikipedia.org/wiki/HTTP\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">HTTP</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">，</span><a href=\"http://zh.wikipedia.org/wiki/URI\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">URI</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">，和</span><a href=\"http://zh.wikipedia.org/wiki/XML\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">XML</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">以及</span><a href=\"http://zh.wikipedia.org/wiki/HTML\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">HTML</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">这些现有的广泛流行的协议和标准。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">资源是由URI来指定。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">对资源的操作包括获取、创建、修改和删除资源，这些操作正好对应HTTP协议提供的GET、POST、PUT和DELETE方法。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">通过操作资源的表现形式来操作资源。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">资源的表现形式则是XML或者HTML，取决于读者是机器还是人，是消费web服务的客户软件还是web浏览器。当然也可以是任何其他的格式。</span>\r\n	</li>\r\n</ul>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">REST的要求</span>\r\n</h1>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">客户端和服务器结构</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">连接协议具有无状态性</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">能够利用Cache机制增进性能</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">层次化的系统</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">随需代码 - Javascript （可选）</span>\r\n	</li>\r\n</ul>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">关于状态</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">应该注意区别应用的状态和连接协议的状态。HTTP连接是无状态的（也就是不记录每个连接的信息），而REST传输会包含应用的所有状态信息，因此可以大幅降低对HTTP连接的重复请求资源消耗。</span>\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">含状态传输的 Web 服务</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">含状态传输的 Web 服务（也称为 RESTful&nbsp;</span><a href=\"http://zh.wikipedia.org/w/index.php?title=Web_API&amp;action=edit&amp;redlink=1\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Web API</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">）是一个使用HTTP并遵循REST原则的Web服务。它从以下三个方面资源进行定义：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">直观简短的资源地址：URI，比如：http://example.com/resources/。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">传输的资源：Web服务接受与返回的</span><a href=\"http://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">互联网媒体类型</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">，比如：</span><a href=\"http://zh.wikipedia.org/wiki/JSON\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">JSON</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">，</span><a href=\"http://zh.wikipedia.org/wiki/XML\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">XML</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;，</span><a href=\"http://zh.wikipedia.org/wiki/YAML\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">YAML</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;等。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">对资源的操作：Web服务在该资源上所支持的一系列</span><a href=\"http://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#.E8.AF.B7.E6.B1.82.E6.96.B9.E6.B3.95\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">请求方法</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">（比如：POST，GET，PUT或DELETE）。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">下表列出了在实现 含状态传输的 Web 服务时HTTP请求方法的典型用途。</span>\r\n</p>\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">HTTP 请求方法在RESTful Web 服务中的典型应用</span><a href=\"http://zh.wikipedia.org/wiki/REST#cite_note-1\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">[1]</span></a>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">资源</span>\r\n			</th>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">GET</span>\r\n			</th>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">PUT</span>\r\n			</th>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">POST</span>\r\n			</th>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">DELETE</span>\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">一组资源的URI，比如http://example.com/resources/</span>\r\n			</th>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">列出&nbsp;URI，以及该资源组中每个资源的详细信息（后者可选）。</span>\r\n			</td>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">使用给定的一组资源替换当前整组资源。</span>\r\n			</td>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">在本组资源中创建/追加一个新的资源。 该操作往往返回新资源的URL。</span>\r\n			</td>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">删除&nbsp;整组资源。</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">单个资源的URI，比如http://example.com/resources/142</span>\r\n			</th>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">获取&nbsp;指定的资源的详细信息，格式可以自选一个合适的网络媒体类型（比如：XML、JSON等）</span>\r\n			</td>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">替换/创建&nbsp;指定的资源。并将其追加到相应的资源组中。</span>\r\n			</td>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">把指定的资源当做一个资源组，并在其下创建/追加一个新的元素，使其隶属于当前资源。</span>\r\n			</td>\r\n			<td>\r\n				<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">删除&nbsp;指定的元素。</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">PUT 和 DELETE 方法是</span><a href=\"http://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#.E5.B9.82.E7.AD.89.E6.96.B9.E6.B3.95\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">幂等方法</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">。GET方法是</span><a href=\"http://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#.E5.AE.89.E5.85.A8.E6.96.B9.E6.B3.95\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">安全方法</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;（不会对服务器端有修改，因此当然也是幂等的）。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">不像基于</span><a href=\"http://zh.wikipedia.org/wiki/SOAP\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">SOAP</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">的Web服务，RESTful Web服务并没有的“正式”标准</span><a href=\"http://zh.wikipedia.org/wiki/REST#cite_note-2\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">[2]</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">。 这是因为REST是一种架构，而SOAP只是一个协议。虽然REST不是一个标准，但在实现RESTful Web服务时可以使用其他各种标准（比如HTTP，URL，XML，PNG等）。</span>\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">实现举例</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">例如，一个简单的网络商店应用，</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">列举所有商品，</span>\r\n</p>\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">GET http://www.store.com/products</span>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">呈现某一件商品，</span>\r\n</p>\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">GET http://www.store.com/product/12345</span>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">下单购买，</span>\r\n</p>\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">POST http://www.store.com/order\r\n&lt;purchase-order&gt;\r\n  &lt;item&gt; ... &lt;/item&gt;\r\n&lt;/purchase-order&gt;</span>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">REST的优点</span>\r\n</h1>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">可更高效利用缓存来提高响应速度</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">通讯本身的无状态性可以让不同的服务器的处理一系列请求中的不同请求，提高服务器的扩展性</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">浏览器即可作为客户端，简化软件需求</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">相对于其他叠加在</span><a href=\"http://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">HTTP协议</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">之上的机制，REST的软件依赖性更小</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">不需要额外的资源发现机制</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">在软件技术演进中的长期的兼容性更好</span>\r\n	</li>\r\n</ul>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">实现</span>\r\n</h1>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://zh.wikipedia.org/wiki/Ruby_on_Rails\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Ruby on Rails</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">1.2以后的版本支持</span><a href=\"http://weblog.rubyonrails.org/2007/1/19/rails-1-2-rest-admiration-http-lovefest-and-utf-8-celebrations\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">REST model</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">。</span>\r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.jboss.org/resteasy\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">JBoss RESTEasy</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">JBoss的REST实现</span>\r\n	</li>\r\n</ul>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">参考资料</span>\r\n</h1>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;Roy Fielding的博士论文《Architectural Styles and the Design of Network-based Software Architectures》</span>\r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.xml.com/pub/a/2002/02/06/rest.html\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">http://www.xml.com/pub/a/2002/02/06/rest.html</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;第二代web服务，Paul Prescod。</span>\r\n	</li>\r\n</ul>\r\n<ol>\r\n	<li>\r\n		<a href=\"http://zh.wikipedia.org/wiki/REST#cite_ref-1\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">^</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;Richardson, Leonard;&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Sam_Ruby\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Ruby, Sam</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">, RESTful Web Services, O\'Reilly. 2007 ((May 8, 2007)),&nbsp;</span><a href=\"http://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E6%A0%87%E5%87%86%E4%B9%A6%E5%8F%B7\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">ISBN</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;</span><a href=\"http://zh.wikipedia.org/wiki/Special:%E7%BD%91%E7%BB%9C%E4%B9%A6%E6%BA%90/0596529260\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">0596529260</span></a>\r\n	</li>\r\n	<li>\r\n		<a href=\"http://zh.wikipedia.org/wiki/REST#cite_ref-2\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">^</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;Elkstein, M.&nbsp;</span><a href=\"http://rest.elkstein.org/2008/02/what-is-rest.html\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">What is REST?</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">. Retrieved on 2009-07-04.</span>\r\n	</li>\r\n</ol>\r\n<p>\r\n	<span><span style=\"font-size:14px;line-height:21px;\">&nbsp; &nbsp; &nbsp;引用维基百科</span></span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>',NULL,NULL,'2014-04-10 06:20:51',0,'初步认识RESTful',0),(4,'admin',2,'<p>\r\n	Web服务是一种服务导向架构的技术，通过标准的Web协议提供服务，目的是保证不同平台的应用服务可以互操作。\r\n</p>\r\n<p>\r\n	根据W3C的定义，Web服务（Web service）应当是一个软件系统，用以支持网络间不同机器的互动操作。网络服务通常是许多应用程序接口（API）所组成的，它们透过网络，例如国际互联网（Internet）的远程服务器端，执行客户所提交服务的请求。\r\n</p>\r\n<p>\r\n	尽管W3C的定义涵盖诸多相异且无法介分的系统，不过通常我们指有关于主从式架构（Client-server）之间根据SOAP协议进行传递XML格式消息。无论定义还是实现，WEB服务过程中会由服务器提供一个机器可读的描述（通常基于WSDL）以辨识服务器所提供的WEB服务。另外，虽然WSDL不是SOAP服务端点的必要条件，但目前基于Java的主流WEB服务开发框架往往需要WSDL实现客户端的源代码生成。一些工业标准化组织，比如WS-I，就在WEB服务定义中强制包含SOAP和WSDL。\r\n</p>\r\n<h3>\r\n	核心定义\r\n</h3>\r\n<p>\r\n	考虑到并没某个独立文档包含一切相关内容，可采用模块化的方式给出对WEB服务的描述，但不能给出一个“绝对全面和准确”的定义。受外部环境和实现技术影响，各方给出的核心定义可能稍有出入，但通常包括：\r\n</p>\r\n<p>\r\n	SOAP一个基于XML的可扩展消息信封格式，需同时绑定一个网络传输协议。这个协议通常是HTTP或HTTPS，但也可能是SMTP或XMPP。WSDL一个XML格式文档，用以描述服务端口访问方式和使用协议的细节。通常用来辅助生成服务器和客户端代码及配置信息。UDDI一个用来发布和搜索WEB服务的协议，应用程序可借由此协议在设计或运行时找到目标WEB服务。\r\n</p>\r\n<p>\r\n	这些标准由这些组织制订：W3C负责XML、SOAP及WSDL；OASIS负责UDDI。\r\n</p>\r\n<h3>\r\n	协议集\r\n</h3>\r\n<p>\r\n	为提高WEB服务间的互操作能力，WS-I还特别发布了WEB服务协议集（Profile）。协议集包含了一系列特定版本的核心定义（诸如SOAP和WSDL），以及对其使用上的限制与约束。WS-I还发布了用于部署协议集兼容WEB服务的测试工具及相关用例。\r\n</p>\r\n<h3>\r\n	WS-系列追加定义\r\n</h3>\r\n<p>\r\n	为扩展WEB服务能力，一些新的标准已经或正在被开发。这些标准通常被冠以WS字头（Web Service的简称），以下是一个WS系列追加标准的不完全列表：\r\n</p>\r\n<p>\r\n	WS安全（WS-Security）定义了如何在SOAP中使用XML加密或XML签名来保护消息传递。可作为HTTPS保护的一种替代或扩充。WS信赖性（WS-Reliability）一个来自OASIS的标准协议，用来提供可信赖的WEB服务间消息传递。WS可信赖消息（WS-ReliableMessaging）同样是一个提供信赖消息的协议，由Microsoft, BEA 和IBM发布。目前OASIS正对其实施标准化工作。WS寻址（WS-Addressing）定义了在SOAP消息内描述发送／接收方地址的方式。WS事务（WS-Transaction）定义事务处理方式。\r\n</p>\r\n<p>\r\n	一直以来，W3C负责制定了不少WS追加定义，但近来此举开始受到怀疑。一些人呼吁W3C作为网络和语义网构建者应当把精力放在核心网络本身，而不是为WEB服务改换版本。特别是2007年2月的企业级WEB服务论坛上，对W3C不再充当WEB服务定义者的诉求开始表面化。 此外，OASIS对WEB服务扩展实施了许多标准化工作。包括WEB服务资源框架以及WSDM。\r\n</p>\r\n<h2>\r\n	使用WEB服务的方式\r\n</h2>\r\n<p>\r\n	WEB服务实际上是一组工具，并有多种不同的方法调用之。三种最普遍的手段是：远程过程调用（RPC），面向服务架构（SOA）以及表述性状态转移（REST）。\r\n</p>\r\n<h3>\r\n	远程过程调用\r\n</h3>\r\n<div>\r\n	主条目：远程过程调用\r\n</div>\r\n<p>\r\n	WEB服务提供一个分布式函数或方法接口供用户调用，这是一种比较传统的方式。通常，在WSDL中对RPC接口进行定义（类似于早期的XML-RPC）。\r\n</p>\r\n<p>\r\n	尽管最初的WEB服务广泛采用RPC方式部署，但针对其过于紧密之耦合性的批评声也随之不断。这是因为RPC式WEB服务实质上是利用一个简单的映射，以把用户请求直接转化成为一个特定语言编写的函数或方法。如今，多数服务提供商认定此种方式在未来将难有作为，在他们的推动下，WS-I基本协议集（WS-I Basic Profile）已不再支持远程过程调用。\r\n</p>\r\n<h3>\r\n	服务导向架构\r\n</h3>\r\n<div>\r\n	主条目：服务导向架构\r\n</div>\r\n<p>\r\n	现在，业界比较关注的是遵从服务导向架构（Service-oriented architecture，SOA）概念来构筑WEB服务。在服务导向架构中，通讯由消息驱动，而不再是某个动作（方法调用）。这种WEB服务也被称作面向消息的服务。\r\n</p>\r\n<p>\r\n	SOA式WEB服务得到了大部分主要软件供应商以及业界专家的支持和肯定。作为与RPC方式的最大差别，SOA方式更加关注如何去连接服务而不是去特定某个实现的细节。WSDL定义了联络服务的必要内容。\r\n</p>\r\n<h3>\r\n	表述性状态转移\r\n</h3>\r\n<div>\r\n	主条目：REST\r\n</div>\r\n<p>\r\n	表述性状态转移式（Representational state transfer，REST）WEB服务类似于HTTP或其他类似协议，它们把接口限定在一组广为人知的标准动作中（比如HTTP的GET、PUT、DELETE）以供调用。此类WEB服务关注与那些稳定的资源的互动，而不是消息或动作。\r\n</p>\r\n<p>\r\n	此种服务可以通过WSDL来描述SOAP消息内容，通过HTTP限定动作接口；或者完全在SOAP中对动作进行抽象。\r\n</p>\r\n<h2>\r\n	批评\r\n</h2>\r\n<p>\r\n	一些人抱怨，WEB服务（具象化状态转移式除外）过于复杂，认为它太过于偏重那些大型软件开发商，而不利于开源项目。但是至今不少开发工具已经具备自动化产生具象物件，已经减少web服务的调用难度。例如Microsoft visual studio、eclipse 等等IDE工具。使用者只需要专注于调用与实行。\r\n</p>\r\n<p>\r\n	<br />\r\nWEB服务的性能也时常是人们关注的一个问题。由于使用XML作为消息格式，并以SOAP封装，由HTTP传输，WEB服务始终处于较高的开销状态。不过目前一些新兴技术正在试图解决此一问题，诸如新的XML处理模型致力于解决XML这一部分的性能。\r\n</p>\r\n<h2>\r\n	类似方式\r\n</h2>\r\n<p>\r\n	无论是在WEB服务出现以前，还是现在，一直不断有各种同类技术问世。比如，RMI作为这样一种中间件系统就得到了广泛部署。CORBA和DCOM则更加雄心壮志，两者都尝试将作用域波及到分布式对象，这一点也为WEB服务所模仿。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	这些类似方式往往借助于XML-RPC和HTTP本身，而不依靠SOAP封装参数。\r\n</p>',NULL,'2014-04-10 13:36:33','2014-04-10 13:35:55',0,'Web服务',0),(5,'admin',2,'<div>\r\n	<div>\r\n		<span style=\"line-height:1.5;font-family:\'Microsoft YaHei\';font-size:14px;\">本论文是 Web 发展史上一篇非常重要的技术文献。出于社会责任感，译者认为极其有必要将它介绍给国人，使国人得以一窥 HTTP 和 URI 等 Web 架构标准背后的基本原理。基于相同的基本原理，Web 开发者能够设计并建造出最为高效的 Web 应用。</span>\r\n	</div>\r\n</div>\r\n<p>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">本论文的翻译</span><a href=\"http://www.infoq.com/cn/news/2007/07/dlee-fielding-rest\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">在2007年完成</span></a><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">，最初放在曹晓钢满江红开源网站上，现在为了方便大家获取，在原作者Fielding博士、译者们的许可下，在InfoQ中文站上以迷你书的形式提供下载。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">内容目录</span>\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">论文摘要</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">绪论</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第 1 章 软件架构</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第 2 章 基于网络的应用的架构</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第 3 章 基于网络的架构风格</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第 4 章 设计 Web 架构:问题与洞察力</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第 5 章 表述性状态转移(REST)</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第 6 章 经验与评估</span>\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\">&nbsp; &nbsp;&nbsp;<a class=\"ke-insertfile\" href=\"/upload/file/20140410/20140410210538_744.pdf\" target=\"_blank\">免费下载架构风格与基于网络的软件架构设计</a></span>\r\n	</p>\r\n</p>',NULL,NULL,'2014-04-10 21:06:06',0,'架构风格与基于网络的软件架构设计论文',0),(6,'admin',3,'<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">和大家分享一下我整理的有趣的Github repository，最新版本信息请移步项目地址：</span><br />\r\n<a href=\"https://github.com/flyhigher139/repo_starred\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">repo_starred</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">大家可以给我发送</span><a href=\"https://github.com/flyhigher139/repo_starred/issues\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">issue</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">&nbsp;分享自己觉得有趣的资源</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">正文如下：</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">navigation</span>\r\n</h2>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#collection\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">collection</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#algorithm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">algorithm</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#android\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">android</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#database\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">database</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#javascript\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">javascript</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#nginx\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">nginx</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#other\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">other</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#python\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">python</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/60553e51ba81#php\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">php</span></a> \r\n	</li>\r\n</ul>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">collection</span>\r\n</h2>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/apiaryio/api-blueprint\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">api-blueprint</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - API Blueprint</span><br />\r\n<a href=\"http://apiblueprint.org/\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">http://apiblueprint.org</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/hzlzh/Best-App\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Best-App</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 收集&amp;推荐优秀的 Apps (Mac OS/iOS/Mac硬件/周边等)</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/execat/bookmarks\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">bookmarks</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A list of interesting open source projects.</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/lexrus/CNiDev\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">CNiDev</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 我关注的中文 iOS/Mac 开发小伙伴以及 TA 们的 Blog 的列表，提供 OPML 方便在阅读器里订阅哦，欢迎补充</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/Suxiaogang/Code_Guide\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Code_Guide</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Code guide and best practice</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/chaconnewu/free-data-science-books\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">free-data-science-books</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Free resources for learning data science</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/vhf/free-programming-books\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">free-programming-books</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> -&nbsp;</span><a href=\"http://resrc.io/list/10/list-of-free-programming-books/\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">http://resrc.io/list/10/list-of-free-programming-books/</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/bingwen/free-programming-books\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">free-programming-books</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - focus on chinese version</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/justjavac/free-programming-books-zh_CN\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">free-programming-books-zh_CN</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 免费的计算机编程类中文书籍，欢迎投稿</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/lisposter/frontend-books\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">frontend-books</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 收集前端方面的书籍</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/foru17/front-end-collect\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">front-end-collect</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 分享自己长期关注的前端开发相关的优秀网站、博客、以及活跃开发者</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/dypsilon/frontend-dev-bookmarks\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">frontend-dev-bookmarks</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A huge list of frontend development resources I collected over time</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/darcyclarke/Front-end-Developer-Interview-Questions\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Front-end-Developer-Interview-Questions</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A list of helpful front-end related questions you can use to interview potential candidates, test yourself or completely ignore</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Front-end-Developer-Questions</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 2014年最新前端开发面试题</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/chhantyal/influential-programming-books\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">influential-programming-books</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Most influential computer science/programming books</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/adambard/learnxinyminutes-docs\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">learnxinyminutes-docs</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Code documentation written as code! How novel and totally my idea!</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/neiesc/ListOfMinimalistFrameworks\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">ListOfMinimalistFrameworks</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A list of minimalist frameworks (simple and lightweight).</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/papers-we-love/papers-we-love\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">papers-we-love</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Papers from the computer science community to read and discuss</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/greatghoul/remote-working\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">remote-working</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 收集整理远程工作相关的资料</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/LearnProgramming/standards-and-practices\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">standards-and-practices</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A collection of documents outlining what it is that we intend to do</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">algorithm</span>\r\n</h2>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/julycoding/The-Art-Of-Programming-By-July\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">The-Art-Of-Programming-By-July</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 本项目是Csdn博客「结构之法 算法之道」的部分经典博文的github版本</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">android</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/Trinea/android-open-project\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">android-open-project</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - collect and classify android open projects</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/thecodepath/android_guides\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">android_guides</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Extensive Open-Source Guides for Android Developers</span><br />\r\n<a href=\"http://guides.thecodepath.com/\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">http://guides.thecodepath.com/</span></a> \r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">database</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/karlseguin/the-little-mongodb-book\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">the-little-mongodb-book</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - The Little MongoDB Book</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">javascript</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/JacksonTian/fks\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">fks</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 前端技能汇总 Frontend Knowledge Structure</span><br />\r\n<a href=\"http://html5ify.com/fks/\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">http://html5ify.com/fks/</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/airbnb/javascript\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">javascript</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - JavaScript Style Guide</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">angularjs</span>\r\n</h3>\r\n<p>\r\n	<a href=\"https://github.com/jmcunningham/AngularJS-Learning\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">AngularJS-Learning</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A bunch of links to blog posts, articles, videos, etc for learning AngularJS</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/mgechev/angularjs-style-guide\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">angularjs-style-guide</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Community-driven set of best practices for AngularJS application development</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">nodejs</span>\r\n</h3>\r\n<p>\r\n	<a href=\"https://github.com/nqdeng/7-days-nodejs\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">7-days-nodejs</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 七天学会NodeJS</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/youyudehexie/node123\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">node123</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - node.js中文资料导航</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/sergtitov/NodeJS-Learning\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">NodeJS-Learning</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - This page contains collection of curated links to blog posts, articles, etc. to help you learn Node.js and keep up to date.</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">nginx</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/taobao/nginx-book\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">nginx-book</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Nginx开发从入门到精通</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/h5bp/server-configs-nginx\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">server-configs-nginx</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Nginx HTTP server boilerplate configs</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">objective-c</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/raywenderlich/objective-c-style-guide\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">objective-c-style-guide</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A style guide that outlines the coding conventions for raywenderlich.com</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">python</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/rpicard/explore-flask\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">explore-flask</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Source of Explore Flask book</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/humiaozuzu/flask-dev-bookmarks\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">flask-dev-bookmarks</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Lists of flask development recourses</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/kirang89/pycrumbs\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">pycrumbs</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Bits and bytes of Python from the Internet</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/hit9/PyZh\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">PyZh</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - 一起写Python文章，一起看Python文章 - 利用readthedocs的Python技术文章的收集和翻译</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">PHP</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/ziadoz/awesome-php\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">awesome-php</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - A curated list of amazingly awesome PHP libraries, resources and shiny things.</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">other</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/larrycai/kaiyuanbook\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">kaiyuanbook</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - How to write opensource books</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/hzlzh/1MarkDown\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">1MarkDown</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - The only one MarkDown standard for one team.</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/chriskempson/base16\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"></span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">base16</span></a><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> - Color schemes for hackers</span>\r\n</p>',NULL,NULL,'2014-04-10 22:03:52',0,'Github上有趣的资料',0),(7,'admin',3,'<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">和大家分享一下我整理的有趣的Github repository，最新版本信息请移步项目地址：</span><br />\r\n<a href=\"https://github.com/flyhigher139/repo_starred\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">repo_starred</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">大家可以给我发送</span><a href=\"https://github.com/flyhigher139/repo_starred/issues\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">issue</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&nbsp;分享自己觉得有趣的资源</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">本文的主题是python，正文如下：</span>\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">navigation</span>\r\n</h1>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/d4e89f79140e#study_meterials\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Study meterials</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/d4e89f79140e#python_proj\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python</span></a> \r\n		<ul>\r\n			<li>\r\n				<a href=\"http://jianshu.io/p/d4e89f79140e#django\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django</span></a> \r\n			</li>\r\n			<li>\r\n				<a href=\"http://jianshu.io/p/d4e89f79140e#flask\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">flask</span></a> \r\n			</li>\r\n			<li>\r\n				<a href=\"http://jianshu.io/p/d4e89f79140e#other\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">other</span></a> \r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<a href=\"http://jianshu.io/p/d4e89f79140e#RaspberryPi\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">raspberry pi</span></a> \r\n	</li>\r\n</ul>\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Study meterials</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&lt;a name=\'study_meterials\'&gt;</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/jacobian/djangobook.com\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">djangobook.com</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> -&nbsp;</span><a href=\"http://www.djangobook.com/\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">http://www.djangobook.com/</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/humiaozuzu/flask-dev-bookmarks\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">flask-dev-bookmarks</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Lists of flask development recourses</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Probabilistic-Programming-and-Bayesian-Methods-for-Hackers</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - An introduction to Bayesian methods + probabilistic programming with a computation/understanding-first, mathematics-second point of view. All in pure Python</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/kennethreitz/python-guide\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python-guide</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Python best practices guidebook, written for Humans</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/kirang89/pycrumbs\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">pycrumbs</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Bits and bytes of Python from the Internet</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/gregmalcolm/python_koans\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python_koans</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Python Koans - Learn Python through TDD</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/hit9/PyZh\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">PyZh</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - 一起写Python文章，一起看Python文章 - 利用readthedocs的Python技术文章的收集和翻译</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/rpicard/explore-flask\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">explore-flask</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Source of Explore Flask book</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/karan/Projects\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Projects</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Trying to complete over 100 projects in various categories in Python. Fork to learn any new language.</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/faif/python-patterns\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python-patterns</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> -&nbsp;A collection of design patterns in python</span>\r\n</p>\r\n<hr />\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&lt;a name=\'python_proj\'&gt;</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/django/djangoproject.com\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">djangoproject.com</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Source code to djangoproject.com</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/jacobian/django-shorturls\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-shorturls</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A URL shortening app for Django</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/django-extensions/django-extensions\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-extensions</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - This is a repository for collecting global custom management extensions for the Django Framework</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/toastdriven/django-tastypie\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-tastypie</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Creating delicious APIs for Django apps since 2010</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/django-compressor/django-compressor\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-compressor</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Compresses linked and inline javascript or CSS into a single cached file.</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/torchbox/wagtail\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">wagtail</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A new Django content management system</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/epantry/django-sql-explorer\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-sql-explorer</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Easily share data via SQL queries, right from Django</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/lionheart/django-pyodbc\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-pyodbc</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - An ODBC-powered MS SQL Server DB backend for Django 1.4+</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/howiworkdaily/django-faq\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-faq</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - a simple faq application for django apps</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/divio/django-cms\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-cms</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - The easy-to-use and developer-friendly CMS</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/jezdez/django-configurations\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-configurations</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A helper for organizing Django project settings by relying on well established programming patterns</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/omab/django-social-auth\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-social-auth</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Django social authentication made simple</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/tomchristie/django-rest-framework\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">django-rest-framework</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Awesome web-browseable Web APIs</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/django-nonrel/djangoappengine\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">djangoappengine</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Django backends for App Engine (datastore, mail, ...)</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">flask</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/nicolaiarocci/eve\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">eve</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - REST API framework powered by Flask, MongoDB and good intentions</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/mitsuhiko/flask\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">flask</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A microframework based on Werkzeug, Jinja2 and good intentions</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/tomchristie/flask-api\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">flask-api</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Browsable web APIs for Flask</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/twilio/flask-restful\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">flask-restful</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Simple framework for creating REST APIs</span>\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">other</span>\r\n</h2>\r\n<p>\r\n	<a href=\"https://github.com/bear/python-twitter\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python-twitter</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A Python wrapper around the Twitter API</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/hay/xml2json\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">xml2json</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Python script converts XML to JSON or the other way around</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/jiangwen365/pypyodbc\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">pypyodbc</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A pure Python Cross Platform ODBC interface module</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/huzhifeng/51dingpiao\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">51dingpiao</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A python script used to buy ticket on 12306</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/jkbr/httpie\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">httpie</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - HTTPie is a CLI, cURL-like tool for humans</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/rtfd/readthedocs.org\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">readthedocs.org</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> -&nbsp;</span><a href=\"https://github.com/rtfd/readthedocs.org\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">https://github.com/rtfd/readthedocs.org</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/trentm/python-markdown2\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python-markdown2</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - markdown2: A fast and complete implementation of Markdown in Python</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/jeffknupp/sandman\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">sandman</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Sandman \"makes things REST\".</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/mkleehammer/pyodbc\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">pyodbc</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Python ODBC bridge</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/liushuaikobe/evermd\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">evermd</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A command line tool that make your markdown file to an Evernote</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/Ceasar/twosheds\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">twosheds</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Hack your shell, in Python</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/binux/pyspider\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">pyspider</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - A spider system in python(most powerful spider system in python!)</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/fxsjy/jieba\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">jieba</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - \"结巴\"中文分词：做最好的Python中文分词组件</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/kennethreitz/requests\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">requests</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Python HTTP Requests for Humans</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/SohuTech/essay\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">essay</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Python项目自动化多服务器部署的工具</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/sloria/marshmallow\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">marshmallow</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> -&nbsp;A lightweight library for converting complex objects into datatypes that can be used in a REST API.</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/scrapy/scrapy\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">scrapy</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Scrapy, a fast high-level screen scraping and web crawling framework for Python.</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/omab/python-social-auth\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">python-social-auth</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Social auth made simple</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/sqlmapproject/sqlmap\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">sqlmap</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Automatic SQL injection and database takeover tool</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/princehaku/pyrailgun\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">pyrailgun</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Simple And Easy Python Crawl Framework，支持javascript解析的简单实用高效的python网页爬虫抓取模块</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/clowwindy/shadowsocks\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">shadowsocks</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - a lightweight tunnel proxy which can help you get through firewalls</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/tweepy/tweepy\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">tweepy</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Twitter for Python!</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/livid/v2ex\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">v2ex</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Community running on Google App Engine</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/michaelliao/sinaweibopy\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">sinaweibopy</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - 新浪微博Python SDK</span>\r\n</p>\r\n<hr />\r\n<h1>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Raspberry Pi</span>\r\n</h1>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">&lt;a name=\'RaspberryPi\'&gt;</span>\r\n</p>\r\n<p>\r\n	<a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"></span><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Adafruit-Raspberry-Pi-Python-Code</span></a><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> - Adafruit library code for Raspberry Pi</span>\r\n</p>',NULL,NULL,'2014-04-10 22:05:06',0,'Github上有趣的资料(二)',0),(8,'admin',4,'<p>\r\n	spring 配置文件：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\r\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:context=\"http://www.springframework.org/schema/context\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd\"&gt;\r\n \r\n    &lt;!-- Scan for spring annotated components --&gt;\r\n    &lt;context:component-scan base-package=\"com.luckyryan.sample\"/&gt;\r\n \r\n    &lt;!-- Process annotations on registered beans like @Autowired... --&gt;\r\n    &lt;context:annotation-config/&gt;\r\n \r\n    &lt;!-- This tag registers the DefaultAnnotationHandlerMapping and\r\n         AnnotationMethodHandlerAdapter beans that are required for Spring MVC  --&gt;\r\n    &lt;mvc:annotation-driven/&gt;\r\n \r\n    &lt;!-- Exception Resolver that resolves exceptions through @ExceptionHandler methods --&gt;\r\n    &lt;bean class=\"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver\"/&gt;\r\n \r\n    &lt;!-- View Resolver for JSPs --&gt;\r\n    &lt;bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"&gt;\r\n        &lt;property name=\"prefix\" value=\"/WEB-INF/pages/\"/&gt;\r\n        &lt;property name=\"suffix\" value=\".jsp\"/&gt;\r\n    &lt;/bean&gt;\r\n \r\n    &lt;!-- This tag allows for mapping the DispatcherServlet to \"/\" --&gt;\r\n    &lt;mvc:default-servlet-handler/&gt;\r\n \r\n    &lt;!-- resources exclusions from servlet mapping --&gt;\r\n    &lt;mvc:resources mapping=\"/assets/**\" location=\"classpath:/META-INF/resources/webjars/\"/&gt;\r\n    &lt;mvc:resources mapping=\"/css/**\" location=\"/css/\"/&gt;\r\n    &lt;mvc:resources mapping=\"/img/**\" location=\"/img/\"/&gt;\r\n    &lt;mvc:resources mapping=\"/js/**\" location=\"/js/\"/&gt;\r\n \r\n&lt;/beans&gt;</pre>\r\n创建配置类：ApplicationConfiguration\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">@Configuration\r\n@EnableWebMvc\r\n@ComponentScan(basePackages = {\"com.demo.blog\"})\r\npublic class ApplicationConfiguration {\r\n\r\n}</pre>\r\n<span style=\"color:#003399;\">@Configuration</span><span style=\"color:#003399;\"> 相当于spring 容器bean 的定义</span>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"color:#003399;\">@EnableWebMvc 相当于<span style=\"color:#555555;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;background-color:#FFFFFF;\">&nbsp;&lt;mvc:annotation-driven/&gt;</span></span>\r\n</p>\r\n<p>\r\n	<span style=\"color:#003399;\">@ComponentScan(basePackages = {\"com.benjsicam.restfulblog\"}) 相当于 配置文件中的&lt;context:component-scan base-package=”com.demo.blog”/&gt;<br />\r\n</span>\r\n</p>',NULL,NULL,'2014-04-11 06:16:17',0,'将springmvc 中的配置转换成java 注解配置',0),(9,'admin',5,'<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	好久没有写博客，学期接近尾声，时间方面会宽松些了，其实想写的东西还挺多的。前段时间一个项目用到了几个云存储，其中就包括Amazon S3，于是这篇文章主要分享一些Amazon S3 Rest API的经验（Amazon S3还包括SOAP API）。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	首先还是要先说一下Amazon S3，全称是Amazon Simple Storage Service。EC2和S3是Amazon最早推出的两项云服务。在传统的计算机领域，主要包括计算、存储、网络这几个方面， 在云计算时代，前两者分别对应虚拟化和cloud storage，由此可以显现出Amazon EC2和S3的重要性。如今随着云计算的大红大紫，也有很多使用Amazon S3的例子，典型的有Dropbox，还有之前被FB收购的Instagram，其照片存储就使用的S3。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	关于REST，这也是比较火的一种Web服务架构。简单来说，资源是由URI指定，对资源的操作包括GET、PUT、POST、DELETE和HEAD，返回结果常常是XML或者其他形式。如果你想了解更多，可以查看<a href=\"http://zh.wikipedia.org/wiki/REST\" target=\"_blank\">REST的Wiki页面</a>。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	Amazon S3的操作包括三部分：Service，Buckets和Objects。Service只包括GET操作，就是返回所有的Buckets的列表。Object顾名思义，是指存储在云端的文件，值得注意的是，S3中并没有明确的文件夹的概念，而是通过指定object的路径来实现，比如说，object可以为“photos/1.jpg”。而Bucket拥有全局名，名称由用户定义，用来存放Object，由于是全局名，所以要确保名字是别人没用过的。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	访问Web服务时，Http request headers需要一些参数。主要包括：\r\n</p>\r\n<ul style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Date：当前UTC时间，形式为“<span style=\"font-family:verdana, arial, sans-serif;font-size:inherit;font-style:inherit;font-weight:inherit;line-height:normal;vertical-align:baseline;color:#000000;\"> </span>Wed, 01 Mar 2009 12:00:00 GMT ”。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Content-Length： 当对Object进行操作的时候，返回内容的长度，注意不要包括headers中的内容。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Content-MD5：用base64编码文件内容的MD5值。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Content-Type：资源的类型，比如：text/plain。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Host：Get Service时为“ s3.amazonaws.com&nbsp;”。在对bucket和object进行操作时，例如bucket的名字是“bucketname”，那么Host就是“bucketname.s3.amazonaws.com”。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		x-amz-meta-和x-am-开头的：包括Amazon定义的一些元数据和一些特定的header。后面如果出现会提到。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Authorization：这个是最重要的，主要作用是签名，Amazon根据的请求计算出一个签名值和这里计算的签名值进行比对，只有相同时，访问才是合法的。接下来对Authorization的计算方法进行详述。\r\n	</li>\r\n</ul>\r\n<h3 style=\"font-family:\'Source Sans Pro\';font-size:1.35em;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	Authorization的计算方法\r\n</h3>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	这个是Amazon文档中的说明：\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	<div id=\"highlighter_898461\" class=\"syntaxhighlighter java\" style=\"padding:1px;border:0px;font-family:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;margin:1em 0px !important;font-size:1em !important;\">\r\n		<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin:12px 0px 24px;width:807px;padding:0px !important;border:0px !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;height:auto !important;\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td class=\"gutter\" style=\"border:1px solid #E9E9E9;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;vertical-align:baseline !important;color:#787878 !important;\">\r\n						<div class=\"line number1 index0 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							1\r\n						</div>\r\n						<div class=\"line number2 index1 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							2\r\n						</div>\r\n						<div class=\"line number3 index2 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							3\r\n						</div>\r\n						<div class=\"line number4 index3 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							4\r\n						</div>\r\n						<div class=\"line number5 index4 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							5\r\n						</div>\r\n						<div class=\"line number6 index5 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							6\r\n						</div>\r\n						<div class=\"line number7 index6 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							7\r\n						</div>\r\n						<div class=\"line number8 index7 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							8\r\n						</div>\r\n						<div class=\"line number9 index8 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							9\r\n						</div>\r\n						<div class=\"line number10 index9 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							10\r\n						</div>\r\n						<div class=\"line number11 index10 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							11\r\n						</div>\r\n						<div class=\"line number12 index11 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							12\r\n						</div>\r\n						<div class=\"line number13 index12 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							13\r\n						</div>\r\n						<div class=\"line number14 index13 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							14\r\n						</div>\r\n						<div class=\"line number15 index14 alt2\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							15\r\n						</div>\r\n						<div class=\"line number16 index15 alt1\" style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;font-size:1em !important;vertical-align:baseline !important;text-align:right !important;\">\r\n							16\r\n						</div>\r\n					</td>\r\n					<td class=\"code\" style=\"border:1px solid #E9E9E9;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n						<div class=\"container\" style=\"margin:0px !important;padding:0px !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n							<div class=\"line number1 index0 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								Authorization =\"AWS\"+\" \"+ AWSAccessKeyId +\":\"+ Signature;\r\n							</div>\r\n							<div class=\"line number2 index1 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n							</div>\r\n							<div class=\"line number3 index2 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								Signature = Base64( HMAC-SHA1( YourSecretAccessKeyID, UTF-8-Encoding-Of( StringToSign ) ) );\r\n							</div>\r\n							<div class=\"line number4 index3 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n							</div>\r\n							<div class=\"line number5 index4 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								StringToSign = HTTP-Verb +\"\\n\"+\r\n							</div>\r\n							<div class=\"line number6 index5 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								Content-MD5 +\"\\n\"+\r\n							</div>\r\n							<div class=\"line number7 index6 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								Content-Type +\"\\n\"+\r\n							</div>\r\n							<div class=\"line number8 index7 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								Date +\"\\n\"+\r\n							</div>\r\n							<div class=\"line number9 index8 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								CanonicalizedAmzHeaders +\r\n							</div>\r\n							<div class=\"line number10 index9 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								CanonicalizedResource;\r\n							</div>\r\n							<div class=\"line number11 index10 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n							</div>\r\n							<div class=\"line number12 index11 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								CanonicalizedResource = [\"/\"+ Bucket ] +\r\n							</div>\r\n							<div class=\"line number13 index12 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								<http-request-uri, from=\"\" the=\"\" protocol=\"\" name=\"\" up=\"\" to=\"\" query=\"\" string=\"\"> +</http-request-uri,>\r\n							</div>\r\n							<div class=\"line number14 index13 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								[ sub-resource,ifpresent. For example\"?acl\",\"?location\",\"?logging\", or\"?torrent\"];\r\n							</div>\r\n							<div class=\"line number15 index14 alt2\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n							</div>\r\n							<div class=\"line number16 index15 alt1\" style=\"margin:0px !important;padding:0px 1em !important;border:0px !important;font-size:1em !important;vertical-align:baseline !important;\">\r\n								CanonicalizedAmzHeaders =\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	首先Authorization是由”AWS {0}:{1}“组成的，第0个参数为你的Access Key ID，在注册了AWS之后，在<a href=\"https://aws-portal.amazon.com/gp/aws/securityCredentials\" target=\"_blank\">这里</a>可以得到。第1个参数是计算出来的签名值。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	签名值的计算方法是对一个UTF-8的字符串，用你的Secret Access Key（同样在Access Key ID处获取）进行SHA1加密。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	StringToSign字符串也需要满足一定的格式。如上所示，第一行是你的操作名，应该为PUT、GET、DELETE、HEAD和POST中的一种。第二行是内容的MD5值的base64编码，和headers中的Content-MD5值应保持一致。第三行是Content-Type，同样需要和headers中的一致。第四行Date，和headers中的Date一致。需要说明的是CanonicalizedAmzHeaders和CanonicalizedResource。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	CanonicalizedAmzHeaders就是把headers中的x-amz-开头的作为key转化为小写并按顺序排列，key和value之间用冒号相连，用换行符“\\n”把它们给连接起来。比如说headers中有：\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre>X-Amz-Meta-ReviewedBy: joe@johnsmith.net \r\nX-Amz-Meta-ReviewedBy: jane@johnsmith.net \r\nX-Amz-Meta-FileChecksum: 0x02661779 \r\nX-Amz-Meta-ChecksumAlgorithm: crc32</pre>\r\n</blockquote>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	那么CanonicalizedAmzHeaders就是：\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre>x-amz-meta-checksumalgorithm:crc32\\n\r\nx-amz-meta-filechecksum:0x02661779\\n\r\nx-amz-meta-reviewedby:joe@johnsmith.net,jane@johnsmith.net</pre>\r\n</blockquote>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	CanonicalizedResource是指规范化的资源。如果访问资源没有指定bucket，那么就是“/”；如果包括bucket，而不包括object，那就是“/bucket_name/”，注意前后的“/”不要落了；如果既包括bucket，也包括object，那么就是“/bucket_name/object_name”；另外，有时候比如是访问bucket的acl（访问控制列表acess control list）时，object_name就是?acl，因此这时CanonicalizedResource就是“/bucket_name/?acl”，访问object的acl时，CanonicalizedResource&nbsp;就是“/bucket_name/object_name?acl”。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	需要说明的是，如果计算出的CanonicalizedAmzHeaders不为空时，要确保CanonicalizedAmzHeaders和CanonicalizedResource之间有换行符“\\n”连接。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	关于Authorization的详细内容，可以参考<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/dev/RESTAuthentication.html#ConstructingTheAuthenticationHeader\" target=\"_blank\">官方文档</a>。\r\n</p>\r\n<h3 style=\"font-family:\'Source Sans Pro\';font-size:1.35em;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	Service\r\n</h3>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	对Service的操作只包括Get，即获取用户所有的Buckets列表。Request headers除了通用的，没有其他的内容。比如\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre>GET / HTTP/1.1\r\nHost: s3.amazonaws.com\r\nDate: date\r\nAuthorization: signatureValue</pre>\r\n</blockquote>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	返回的XML中包括Owner和各个Buckets，比如：\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre><!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->bcaf1ffd86f461ca5fb16fd081034fwebfilequotes2006-02-03T16:45:09.000Zsamples2006-02-03T16:41:58.000Z</pre>\r\n</blockquote>\r\n<h3 style=\"font-family:\'Source Sans Pro\';font-size:1.35em;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	Buckets\r\n</h3>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	由于项目中只用到了Buckets的PUT、GET、DELETE，关于acl、lifecycle、policy等就不作过多说明，如果这方面有疑问，可以参考<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/Welcome.html\" target=\"_blank\">官方文档</a>。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	接下来，如果Http request headers中内容没有什么特别说明的，将会略去不写。\r\n</p>\r\n<h4 style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html\" target=\"_blank\">PUT Bucket</a> \r\n</h4>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	需要说明的是，在request headers可以加入bucket的权限控制，即指定x-amz-acl，合法的值包括：private，public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control，从名字就可以看出具体的含义。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	在request body中可以包括位置信息，即用户期望Bucket放置在Amazon的哪个数据中心。默认为US Standard，其他数据中心包括US West (Oregon) Region、US West (Northern California) Region、EU (Ireland) Region、Asia Pacific (Singapore) Region、Asia Pacific (Tokyo) Region、South America (Sao Paulo) Region。对于我们中国用户来说，离得最近的是东京的数据中心。不过在body中内容中，这七个数据中心写成：\'EU\'、&nbsp;\'eu-west-1\'、\'us-west-1\'、 \'us-west-2\'、\'ap-southeast-1\'、\'ap-northeast-1\'和\'sa-east-1\'。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	比如请求如下：\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre>PUT / HTTP/1.1\r\nHost: BucketName.s3.amazonaws.com\r\nContent-Length: length\r\nDate: date\r\nAuthorization: signatureValueBucketRegion</pre>\r\n</blockquote>\r\n<h4 style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html\" target=\"_blank\">GET Bucket</a> \r\n</h4>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	Get Bucket主要是列出这个Bucket下所有的objects。值得提的是四个参数Prefix、Marker、MaxKeys和Delimiter，利用这四个参数，可以达到多种效果。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	首先是Prefix，它表示这个Bucket中返回的Object以这个值为开头。Marker表示，返回这个值以后的Objects，比如说，第一次调用没有返回全部结果，则把第一次调用返回的Objects的最后一个作为Maker调用，以返回其以后的Objects。MaxKeys返回单次请求返回的最大Objects数，默认为1000。Delimiter表示分隔符，是在设置了Prefix之后，能够返回共同的Prefix（在结果中为CommonPrefix）。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	因此，通过设置MaxKeys和Marker可以达到翻页效果，每次返回的最后一个Object作为下一次请求的Marker，在返回值中，如果IsTruncated为true，那么表示还有下一页。此外，通过设置Prefix和将Delimiter设为”/“，可以达到返回某个文件夹下所有内容的效果，其中CommonPrefix下的Prefix表示文件夹路径，而每个Contents中是Object的信息。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	下面是一个请求的例子：\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre>GET ?prefix=N&amp;marker=Ned&amp;max-keys=40 HTTP/1.1\r\nHost: quotes.s3.amazonaws.com\r\nDate: Wed, 01 Mar  2009 12:00:00 GMT\r\nAuthorization: AWS AKIAIOSFODNN7EXAMPLE:xQE0diMbLRepdf3YB+FIEXAMPLE=</pre>\r\n</blockquote>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	返回结果为：\r\n</p>\r\n<blockquote style=\"font-family:\'Source Sans Pro\';font-size:1.1em;vertical-align:baseline;color:#353535;background-color:#EAEAE5;\">\r\n<pre>HTTP/1.1 200 OK\r\nx-amz-id-2: gyB+3jRPnrkN98ZajxHXr3u7EFM67bNgSAxexeEHndCX/7GRnfTXxReKUQF28IfP\r\nx-amz-request-id: 3B3C7C725673C630\r\nDate: Wed, 01 Mar  2009 12:00:00 GMT\r\nContent-Type: application/xml\r\nContent-Length: 302\r\nConnection: close\r\nServer: AmazonS3\r\n\r\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->bucket1000falsemy-image.jpg2009-10-12T17:50:30.000Z\"fba9dede5f27731c9771645a39863328\"434234STANDARD75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06amtd@amazon.commy-third-image.jpg2009-10-12T17:50:30.000Z\"1b2cf535f27731c974343645a3985328\"64994STANDARD75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06amtd@amazon.com</pre>\r\n</blockquote>\r\n<h4 style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html\" target=\"_blank\">DELETE Bucket</a> \r\n</h4>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	DELETE Bucket没有什么需要特殊说明的。\r\n</p>\r\n<h3 style=\"font-family:\'Source Sans Pro\';font-size:1.35em;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	Objects\r\n</h3>\r\n<h4 style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html\" target=\"_blank\">PUT Object</a> \r\n</h4>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	PUT Object基本操作类似，在Http body中添加Object的内容，这里就需要计算Content-Type等值。与PUT Bucket类似，可以在Http headers中加入x-amz-acl，以控制Object的权限。\r\n</p>\r\n<h4 style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html\" target=\"_blank\">GET Object</a> \r\n</h4>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	在GET Object时，Response headers中会包括这个Object的相关信息，除了Content-Length和Content-Type等，Etag其实就是内容的MD5后的16进制的字符串。而Response body中就是文件的内容。\r\n</p>\r\n<h4 style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#252122;background-color:#FFFFFF;\">\r\n	<a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html\" target=\"_blank\">DELETE Object</a> \r\n</h4>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	DELETE操作仍然没有什么特别说明的。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	综上，本文主要说明了Amazon S3中对Service的GET，以及对Bucket和Object的PUT、GET和DELETE操作。但是REST API中还有一部分没有提到，这个可以查看具体的文档，其中解释得还是比较详细的。这篇文章还是为了想写Amazon S3客户端调用的同学们提供导向作用。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	最后，提及一下当时的项目，项目主要是要实现一个本地的多云存储的备份。我们的项目使用了Python，而Amazon S3有一些第三方的API调用的实现，比较知名的有<a href=\"https://github.com/boto/boto\" target=\"_blank\">Boto</a>，但是由于其支持很多云服务，显得过于庞大，最后我决定自己实现，而Amazon S3这块的中文资料也不是很多，这里分享出来，让入门的同学能够更快的上手，仅此而已。如果想看我们项目中Amazon S3 REST API的客户端实现，可以移步<a href=\"https://github.com/chineking/CloudBackup/blob/master/CloudBackup/lib/s3.py\" target=\"_blank\">这里</a>。\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'Source Sans Pro\';font-size:15px;vertical-align:baseline;color:#5D5D5D;background-color:#FFFFFF;\">\r\n	原文链接：<a href=\"http://qinxuye.me/article/detail-about-amazon-s3-rest-api/\">http://qinxuye.me/article/detail-about-amazon-s3-rest-api/</a> \r\n</p>',NULL,'2014-04-11 10:22:19','2014-04-11 10:18:21',0,'(转)Amazon S3 REST API详解',0),(10,'admin',2,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">本文将带您领略REST架构的起源、与Web的关系、REST架构的本质及特性，以及REST架构与其他架构风格之间的比较。</span><br />\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">引子</span> \r\n</h2>\r\n<p>\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在移动互联网、云计算迅猛发展</span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">的今天，作为一名Web开发者，如果您还没听说过“REST”这个buzzword，显然已经落伍了。夸张点说，甚至“出了门都不好意思跟别人打招呼”。尽管如此，对于REST这个泊来品的理解，大多数人（包括一些资深的架构师）仍然停留在“盲人摸象”的阶段。常常听到各种各样关于REST的说法，例如：有人说：“我们这套新的API决定不用Web Service（SOAP+WSDL），而是直接使用HTTP+JSON，也就是用RESTful的方式来开发。” 不用SOAP，甚至也不用XML，就自动变成了RESTful了。还有人认为：REST与传统的Web Service其实没有本质区别，只是对于URI的构造方式提出了更多要求，而这些要求Web Service完全都可以实现。潜台词是：既生瑜，何生亮。Web Service已经足够好了，干嘛还要再折腾什么REST。这些对于REST的不同说法，果真如此吗？REST究竟是什么？是一种新的技术、一种新的架构、还是一种新的规范？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">对于这些问题笔者先不解答，为了深入理解REST是什么，我们需要回顾一下Web发展的最初年代，从源头上讲讲REST是怎么得来的。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Web技术发展与REST的由来</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Web（万维网World Wide Web的简称）是个包罗万象的万花筒，不同的人从不同的角度观察，对于Web究竟是什么会得出大不相同的观点。作为Web开发者，我们需要从技术上来理解Web。从技术架构层面上看，Web的技术架构包括了四个基石：</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">URI</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HTTP</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HyperText（除了HTML外，也可以是带有超链接的XML或JSON）</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">MIME</span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">这四个基石相互支撑，促使Web这座宏伟的大厦以几何级数的速度发展了起来。在这四个基石之上，Web开发技术的发展可以粗略划分成以下几个阶段：</span> \r\n</div>\r\n<div>\r\n	<ol>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">静态内容阶段：在这个最初的阶段，使用Web的主要是一些研究机构。Web由大量的静态HTML文档组成，其中大多是一些学术论文。Web服务器可以被看作是支持超文本的共享文件服务器。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">CGI程序阶段：在这个阶段，Web服务器增加了一些编程API。通过这些API编写的应用程序，可以向客户端提供一些动态变化的内容。Web服务器与应用程序之间的通信，通过CGI（Common Gateway Interface）协议完成，应用程序被称作CGI程序。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">脚本语言阶段：在这个阶段，服务器端出现了ASP、PHP、JSP、ColdFusion等支持session的脚本语言技术，浏览器端出现了Java Applet、JavaScript等技术。使用这些技术，可以提供更加丰富的动态内容。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">瘦客户端应用阶段：在这个阶段，在服务器端出现了独立于Web服务器的应用服务器。同时出现了Web MVC开发模式，各种Web MVC开发框架逐渐流行，并且占据了统治地位。基于这些框架开发的Web应用，通常都是瘦客户端应用，因为它们是在服务器端生成全部的动态内容。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">RIA应用阶段：在这个阶段，出现了多种RIA（Rich Internet Application）技术，大幅改善了Web应用的用户体验。应用最为广泛的RIA技术是DHTML+Ajax。Ajax技术支持在不刷新页面的情况下动态更新页面中的局部内容。同时诞生了大量的Web前端DHTML开发库，例如Prototype、Dojo、ExtJS、jQuery/jQuery UI等等，很多开发库都支持单页面应用（Single Page Application）的开发。其他的RIA技术还有Adobe公司的Flex、微软公司的Silverlight、Sun公司的JavaFX（现在为Oracle公司所有）等等。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">移动Web应用阶段：在这个阶段，出现了大量面向移动设备的Web应用开发技术。除了Android、iOS、Windows Phone等操作系统平台原生的开发技术之外，基于HTML5的开发技术也变得非常流行。</span> \r\n		</li>\r\n	</ol>\r\n	<div>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">从上述Web开发技术的发展过程看，Web从最初其设计者所构思的主要支持静态文档的阶段，逐渐变得越来越动态化。Web应用的交互模式，变得越来越复杂：从静态文档发展到以内容为主的门户网站、电子商务网站、搜索引擎、社交网站，再到以娱乐为主的大型多人在线游戏、手机游戏。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在互联网行业，实践总是走在理论的前面。Web发展到了1995年，在CGI、ASP等技术出现之后，沿用了多年、主要面向静态文档的HTTP/1.0协议已经无法满足Web应用的开发需求，因此需要设计新版本的HTTP协议。在HTTP/1.0协议专家组之中，有一位年轻人脱颖而出，显示出了不凡的洞察力，后来他成为了HTTP/1.1协议专家组的负责人。这位年轻人就是Apache HTTP服务器的核心开发者Roy Fielding，他还是Apache软件基金会的合作创始人。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Roy Fielding和他的同事们在HTTP/1.1协议的设计工作中，对于Web之所以取得巨大成功，在技术架构方面的因素做了一番深入的总结。Fielding将这些总结纳入到了一套理论框架之中，然后使用这套理论框架中的指导原则，来指导HTTP/1.1协议的设计方向。HTTP/1.1协议的第一个草稿是在1996年1月发布的，经过了三年多时间的修订，于1999年6月成为了IETF的正式规范（包括了RFC 2616以及用于对客户端做身份认证的RFC 2617）。HTTP/1.1协议设计的极为成功，以至于发布之后整整10年时间里，都没有多少人认为有修订的必要。用来指导HTTP/1.1协议设计的这套理论框架，最初是以备忘录的形式在专家组成员之间交流，除了IETF/W3C的专家圈子，并没有在外界广泛流传。Fielding在完成HTTP/1.1协议的设计工作之后，回到了加州大学欧文分校继续攻读自己的博士学位。第二年（2000年）在他的博士学位论文Architectural Styles and the Design of Network-based Software Architectures中，Fielding更为系统、严谨地阐述了这套理论框架，并且使用这套理论框架推导出了一种新的架构风格，并且为这种架构风格取了一个令人轻松愉快的名字“REST”——Representational State Transfer（表述性状态转移）的缩写。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在笔者看来，Fielding这篇博士论文在Web发展史上的价值，不亚于Web之父Tim Berners-Lee关于超文本的那篇经典论文。然而遗憾的是，这篇博士论文在诞生之后的将近5年时间里，一直没有得到足够的重视。例如Web Service相关规范SOAP/WSDL的设计者们，显然不大理解REST是什么，HTTP/1.1究竟是一个什么样的协议、为何要设计成这个样子。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">这种情况在2005年之后有了很大的改善，随着Ajax、Ruby on Rails等新的Web开发技术的兴起，在Web开发技术社区掀起了一场重归Web架构设计本源的运动，REST架构风格得到了越来越多的关注。在2007年1月，支持REST开发的Ruby on Rails 1.2版正式发布，并且将支持REST开发作为Rails未来发展中的优先内容。Ruby on Rails的创始人DHH做了一个名为“World of Resources”的精彩演讲，DHH在Web开发技术社区中的强大影响力，使得REST一下子处在Web开发技术舞台的聚光灯之下。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">今天，各种流行的Web开发框架，几乎没有不支持REST开发的了。大多数Web开发者都是通过阅读某种REST开发框架的文档，以及通过一些例子代码来学习REST开发的。然而，通过例子代码来学习REST有非常大的局限性。因为REST并不是一种具体的技术，也不是一种具体的规范，REST其实是一种内涵非常丰富的架构风格。通过例子代码来学习REST，除了学习到一种有趣的Web开发技术之外，并不能全面深入的理解REST究竟是什么。甚至还会误以为这些简单的例子代码就是REST本身，REST不过是一种简单的Web开发技术而已。就像盲人摸象一样，有的人摸到了象鼻子、有的人摸到了象耳朵、有的人摸到了象腿、有的人摸到了象尾巴。他们都坚信自己感觉到的大象，才是最真实的大象，而其他人的感觉都是错误的。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">对于不理解REST的Web开发者，人们习惯于展示一些例子代码来让他们理解REST，笔者不赞同上述做法。如果Web开发者想要深入理解REST是什么，就很难避开Fielding的这篇博士论文。笔者在本文中对于REST是什么的介绍，也是基于Fielding的博士论文的。尽管如此，笔者强烈建议本文的读者亲自去通读一下Fielding的博士论文，就像想要了解孔子的思想应该直接去读《论语》等著作，而不是首先去读其他人的转述一样。笔者在本文中也仅仅是努力不做一个把经书念错了的歪嘴和尚而已。那么，下面我们言归正传。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在Fielding的这篇名为Architectural Styles and the Design of Network-based Software Architectures的博士论文（中文版名为《架构风格与基于网络的软件架构设计》）中，提出了一整套基于网络的软件（即所谓的“分布式应用”）的设计方法，值得所有分布式应用的开发者仔细阅读、深入体会。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在论文的前三章中，Fielding在批判性继承前人研究成果的基础上，建立起来一整套研究和评价软件架构的方法论。这套方法论的核心是“架构风格”这个概念。架构风格是一种研究和评价软件架构设计的方法，它是比架构更加抽象的概念。一种架构风格是由一组相互协作的架构约束来定义的。架构约束是指软件的运行环境施加在架构设计之上的约束。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在论文的第四章中，Fielding研究了Web这样一个分布式系统对于软件架构设计提出了哪些需求。在第五章中，Fielding将第四章Web提出的需求具体化为一些架构约束，通过逐步添加各种架构约束，推导出来了REST这种新的架构风格。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST架构风格的推导过程如下图所示：</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">图1：REST所继承的架构风格约束（</span><a href=\"http://infoqstatic.com/resource/articles/understanding-restful-style/zh/resources/restrest.zip\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">原图可在这里下载</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">）</span> \r\n		</p>\r\n		<p>\r\n			<a href=\"http://officialblog-wordpress.stor.sinaapp.com/uploads/2013/09/21.png\"><img title=\"\" src=\"http://officialblog-wordpress.stor.sinaapp.com/uploads/2013/09/21.png\" alt=\"\" width=\"563\" height=\"266\" style=\"height:auto;width:auto;\" align=\"\" /></a> \r\n		</p>\r\n	</div>\r\n</div>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在图1中，每一个椭圆形里面的缩写词代表了一种架构风格，而每一个箭头边的单词代表了一种架构约束。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST架构风格最重要的架构约束有6个：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">客户-服务器（Client-Server）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">通信只能由客户端单方面发起，表现为请求-响应的形式。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">无状态（Stateless）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">通信的会话状态（Session State）应该全部由客户端负责维护。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">缓存（Cache）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">响应内容可以在通信链的某处被缓存，以改善网络效率。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">统一接口（Uniform Interface）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">通信链的组件之间通过统一的接口相互通信，以提高交互的可见性。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">分层系统（Layered System）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">通过限制组件的行为（即，每个组件只能“看到”与其交互的紧邻层），将架构分解为若干等级的层。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">按需代码（Code-On-Demand，可选）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">支持通过下载并执行一些代码（例如Java Applet、Flash或JavaScript），对客户端的功能进行扩展。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在论文中推导出的REST架构风格如下图所示：</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">图2：REST架构风格（</span><a href=\"http://infoqstatic.com/resource/articles/understanding-restful-style/zh/resources/restrest.zip\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">原图可在这里下载</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">）</span> \r\n	</p>\r\n	<p>\r\n		<a href=\"http://officialblog-wordpress.stor.sinaapp.com/uploads/2013/09/22.png\"><img title=\"22\" src=\"http://officialblog-wordpress.stor.sinaapp.com/uploads/2013/09/22-1024x389.png\" alt=\"\" width=\"650\" height=\"289\" style=\"height:auto;width:auto;\" /></a> \r\n	</p>\r\n</div>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">而HTTP/1.1协议作为一种REST架构风格的架构实例，其架构如下图所示：</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">图3：一个基于REST的架构的过程视图（</span><a href=\"http://infoqstatic.com/resource/articles/understanding-restful-style/zh/resources/restrest.zip\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">原图可在这里下载</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">）</span> \r\n	</p>\r\n	<p>\r\n		<a href=\"http://officialblog-wordpress.stor.sinaapp.com/uploads/2013/09/13.png\"><img title=\"13\" src=\"http://officialblog-wordpress.stor.sinaapp.com/uploads/2013/09/13-1024x459.png\" alt=\"\" width=\"650\" height=\"259\" style=\"height:auto;width:auto;\" /></a> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">用户代理处在三个并行交互（a、b和c）的中间。用户代理的客户端连接器缓存无法满足请求，因此它根据每个资源标识符的属性和客户端连接器的配置，将每个请求路由到资源的来源。请求（a）被发送到一个本地代理，代理随后访问一个通过DNS查找发现的缓存网关，该网关将这个请求转发到一个能够满足该请求的来源服务器，服务器的内部资源由一个封装过的对象请求代理（object request broker）架构来定义。请求（b）直接发送到一个来源服务器，它能够通过自己的缓存来满足这个请求。请求（c）被发送到一个代理，它能够直接访问WAIS（一种与Web架构分离的信息服务），并将WAIS的响应翻译为一种通用的连接器接口能够识别的格式。每一个组件只知道与它们自己的客户端或服务器连接器的交互；整个过程拓扑是我们的视图的产物。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">通过比较图2和图3，读者不难发现这两张图中的架构是高度一致的。对于HTTP/1.1协议为何要设计成这个样子，读者想必已经有所领悟。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在论文的第六章中，Fielding对于到2000年为止在Web基础架构协议的设计和开发方面的一些经验教训进行了深入的分析。其中，“HTTP不是RPC”、“HTTP不是一种传输协议”两部分值得读者反复阅读。时至13年之后的今日，对于HTTP协议的误解仍然广泛存在。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">以上简要介绍了Fielding博士论文中的内容。为了帮助读者仔细阅读Fielding的博士论文，笔者整理了一套Fielding博士论文的导读，将在</span><a href=\"http://www.infoq.com/cn/rest-deep-dive\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">本专栏</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">后续文章中载出。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST详解</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST究竟是什么？因为REST的内涵非常丰富，所以很难用一两句话解释清楚这个问题。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">首先，REST是Web自身的架构风格。REST也是Web之所以取得成功的技术架构方面因素的总结。REST是世界上最成功的分布式应用架构风格（成功案例：Web，还不够吗？）。它是为 运行在互联网环境 的 分布式 超媒体系统量身定制的。互联网环境与企业内网环境有非常大的差别，最主要的差别是两个方面：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">可伸缩性需求无法控制：并发访问量可能会暴涨，也可能会暴跌。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">安全性需求无法控制：无法控制客户端发来的请求的格式，很可能会是恶意的请求。</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">而所谓的“超媒体系统”，即，使用了超文本的系统。可以把“超媒体”理解为超文本+媒体内容。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST是HTTP/1.1协议等Web规范的设计指导原则，HTTP/1.1协议正是为实现REST风格的架构而设计的。新的Web规范，其设计必须符合REST的要求，否则整个Web的体系架构会因为引入严重矛盾而崩溃。这句话不是危言耸听，做个类比，假如苏州市政府同意在市区著名园林的附近大型土木，建造大量具有后现代风格的摩天大楼，那么不久之后世界闻名的苏州园林美景将不复存在。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">上述这些关于“REST是什么”的描述，可以总结为一句话：REST是所有Web应用都应该遵守的架构设计指导原则。当然，REST并不是法律，违反了REST的指导原则，仍然能够实现应用的功能。但是违反了REST的指导原则，会付出很多代价，特别是对于大流量的网站而言。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">要深入理解REST，需要理解REST的五个关键词：</span> \r\n	</p>\r\n	<ol>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">资源（Resource）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">资源的表述（Representation）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">状态转移（State Transfer）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">统一接口（Uniform Interface）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">超文本驱动（Hypertext Driven）</span> \r\n		</li>\r\n	</ol>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">什么是资源？</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">资源是一种看待服务器的方式，即，将服务器看作是由很多离散的资源组成。每个资源是服务器上一个可命名的抽象概念。因为资源是一个抽象的概念，所以它不仅仅能代表服务器文件系统中的一个文件、数据库中的一张表等等具体的东西，可以将资源设计的要多抽象有多抽象，只要想象力允许而且客户端应用开发者能够理解。与面向对象设计类似，资源是以名词为核心来组织的，首先关注的是名词。一个资源可以由一个或多个URI来标识。URI既是资源的名称，也是资源在Web上的地址。对某个资源感兴趣的客户端应用，可以通过资源的URI与其进行交互。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">什么是资源的表述？</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">资源的表述是一段对于资源在某个特定时刻的状态的描述。可以在客户端-服务器端之间转移（交换）。资源的表述可以有多种格式，例如HTML/XML/JSON/纯文本/图片/视频/音频等等。资源的表述格式可以通过协商机制来确定。请求-响应方向的表述通常使用不同的格式。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">什么是状态转移？</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">状态转移（state transfer）与状态机中的状态迁移（state transition）的含义是不同的。状态转移说的是：在客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资源的表述，来间接实现操作资源的目的。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">什么是统一接口？</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST要求，必须通过统一的接口来对资源执行各种操作。对于每个资源只能执行一组有限的操作。以HTTP/1.1协议为例，HTTP/1.1协议定义了一个操作资源的统一接口，主要包括以下内容：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">7个HTTP方法：GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HTTP头信息（可自定义）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HTTP响应状态代码（可自定义）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">一套标准的内容协商机制</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">一套标准的缓存机制</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">一套标准的客户端身份认证机制</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST还要求，对于资源执行的操作，其操作语义必须由HTTP消息体之前的部分完全表达，不能将操作语义封装在HTTP消息体内部。这样做是为了提高交互的可见性，以便于通信链的中间组件实现缓存、安全审计等等功能。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">什么是超文本驱动？</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">“超文本驱动”又名“将超媒体作为应用状态的引擎”（Hypermedia As The Engine Of Application State，来自Fielding博士论文中的一句话，缩写为HATEOAS）。将Web应用看作是一个由很多状态（应用状态）组成的有限状态机。资源之间通过超链接相互关联，超链接既代表资源之间的关系，也代表可执行的状态迁移。在超媒体之中不仅仅包含数据，还包含了状态迁移的语义。以超媒体作为引擎，驱动Web应用的状态迁移。通过超媒体暴露出服务器所提供的资源，服务器提供了哪些资源是在运行时通过解析超媒体发现的，而不是事先定义的。从面向服务的角度看，超媒体定义了服务器所提供服务的协议。客户端应该依赖的是超媒体的状态迁移语义，而不应该对于是否存在某个URI或URI的某种特殊构造方式作出假设。一切都有可能变化，只有超媒体的状态迁移语义能够长期保持稳定。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">一旦读者理解了上述REST的五个关键词，就很容易理解REST风格的架构所具有的6个的主要特征：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">面向资源（Resource Oriented）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">可寻址（Addressability）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">连通性（Connectedness）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">无状态（Statelessness）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">统一接口（Uniform Interface）</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">超文本驱动（Hypertext Driven）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">这6个特征是REST架构设计优秀程度的判断标准。其中，面向资源是REST最明显的特征，即，REST架构设计是以资源抽象为核心展开的。可寻址说的是：每一个资源在Web之上都有自己的地址。连通性说的是：应该尽量避免设计孤立的资源，除了设计资源本身，还需要设计资源之间的关联关系，并且通过超链接将资源关联起来。无状态、统一接口是REST的两种架构约束，超文本驱动是REST的一个关键词，在前面都已经解释过，就不再赘述了。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">从架构风格的抽象高度来看，常见的分布式应用架构风格有三种：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">分布式对象（Distributed Objects，简称DO）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">架构实例有CORBA/RMI/EJB/DCOM/.NET Remoting等等</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">远程过程调用（Remote Procedure Call，简称RPC）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">架构实例有SOAP/XML-RPC/Hessian/Flash AMF/DWR等等</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">表述性状态转移（Representational State Transfer，简称REST）</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">架构实例有HTTP/WebDAV</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">DO和RPC这两种架构风格在企业应用中非常普遍，而REST则是Web应用的架构风格，它们之间有非常大的差别。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST与DO的差别在于：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST支持抽象（即建模）的工具是资源，DO支持抽象的工具是对象。在不同的编程语言中，对象的定义有很大差别，所以DO风格的架构通常都是与某种编程语言绑定的。跨语言交互即使能实现，实现起来也会非常复杂。而REST中的资源，则完全中立于开发平台和编程语言，可以使用任何编程语言来实现。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">DO中没有统一接口的概念。不同的API，接口设计风格可以完全不同。DO也不支持操作语义对于中间组件的可见性。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">DO中没有使用超文本，响应的内容中只包含对象本身。REST使用了超文本，可以实现更大粒度的交互，交互的效率比DO更高。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST支持数据流和管道，DO不支持数据流和管道。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">DO风格通常会带来客户端与服务器端的紧耦合。在三种架构风格之中，DO风格的耦合度是最大的，而REST的风格耦合度是最小的。REST松耦合的源泉来自于统一接口+超文本驱动。</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST与RPC的差别在于：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST支持抽象的工具是资源，RPC支持抽象的工具是过程。REST风格的架构建模是以名词为核心的，RPC风格的架构建模是以动词为核心的。简单类比一下，REST是面向对象编程，RPC则是面向过程编程。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">RPC中没有统一接口的概念。不同的API，接口设计风格可以完全不同。RPC也不支持操作语义对于中间组件的可见性。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">RPC中没有使用超文本，响应的内容中只包含消息本身。REST使用了超文本，可以实现更大粒度的交互，交互的效率比RPC更高。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST支持数据流和管道，RPC不支持数据流和管道。</span> \r\n		</li>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">因为使用了平台中立的消息，RPC风格的耦合度比DO风格要小一些，但是RPC风格也常常会带来客户端与服务器端的紧耦合。支持统一接口+超文本驱动的REST风格，可以达到最小的耦合度。</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">比较了三种架构风格之间的差别之后，从面向实用的角度来看，REST架构风格可以为Web开发者带来三方面的利益：</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">简单性</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">采用REST架构风格，对于开发、测试、运维人员来说，都会更简单。可以充分利用大量HTTP服务器端和客户端开发库、Web功能测试/性能测试工具、HTTP缓存、HTTP代理服务器、防火墙。这些开发库和基础设施早已成为了日常用品，不需要什么火箭科技（例如神奇昂贵的应用服务器、中间件）就能解决大多数可伸缩性方面的问题。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">可伸缩性</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">充分利用好通信链各个位置的HTTP缓存组件，可以带来更好的可伸缩性。其实很多时候，在Web前端做性能优化，产生的效果不亚于仅仅在服务器端做性能优化，但是HTTP协议层面的缓存常常被一些资深的架构师完全忽略掉。</span> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">松耦合</span> \r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">统一接口+超文本驱动，带来了最大限度的松耦合。允许服务器端和客户端程序在很大范围内，相对独立地进化。对于设计面向企业内网的API来说，松耦合并不是一个很重要的设计关注点。但是对于设计面向互联网的API来说，松耦合变成了一个必选项，不仅在设计时应该关注，而且应该放在最优先位置。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">有的读者可能会问：“你说了这么多，REST难道就没有任何缺点了吗？”当然不是，正如Fielding在博士论文中阐述的那样，评价一种软件架构的优劣，不能脱离开软件的具体运行环境。永远不存在适用于任何运行环境的、包治百病的银弹式架构。笔者在前面强调过REST是一种为运行在互联网环境中的Web应用量身定制的架构风格。REST在互联网这个运行环境之中已经占据了统治地位，然而，在企业内网运行环境之中，REST还会面临DO、RPC的巨大挑战。特别是一些对实时性要求很高的应用，REST的表现不如DO和RPC。所以需要针对具体的运行环境来具体问题具体分析。但是，REST可以带来的上述三方面的利益即使在开发企业应用时，仍然是非常有价值的。所以REST在企业应用开发，特别是在SOA架构的开发中，已经得到了越来越大的重视。本专栏将有一篇文章专门介绍REST在企业级应用中与SOA的结合。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">到了这里，“REST究竟是什么”这个问题笔者就解答完了。本文开头那些说法是否正确，笔者还是笑而不语，读者此时应该已经有了自己的判断。在接下来的REST系列文章中，我将会为读者澄清一些关于HTTP协议和REST的常见误解。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">参考资料：</span> \r\n	</p>\r\n	<p>\r\n		<a href=\"http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Roy Fielding博士论文英文版</span></a> \r\n	</p>\r\n	<p>\r\n		<a href=\"http://www.infoq.com/cn/minibooks/dissertation-rest-cn\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Roy Fielding博士论文中文版</span></a> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HTTP/1.1协议</span><a href=\"http://www.ietf.org/rfc/rfc2616.txt\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">RFC2616</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">、</span><a href=\"http://www.ietf.org/rfc/rfc2617.txt\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">RFC2617</span></a> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">感谢</span><a href=\"http://www.infoq.com/cn/author/%E9%A9%AC%E5%9B%BD%E8%80%80\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">马国耀</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">对本文的策划和审校。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">作者： </span><a href=\"http://www.infoq.com/cn/author/%E6%9D%8E%E9%94%9F\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">李锟</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 来源：</span><a href=\"http://www.infoq.com/cn/articles/understanding-restful-style\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">infoq</span></a> \r\n	</p>\r\n</div>',NULL,'2014-04-21 07:05:46','2014-04-12 08:01:43',0,'理解本真的REST架构风格',0),(11,'admin',2,'<p>\r\n	Fielding博士的<a href=\"http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\">那篇经典论文</a>（<a href=\"http://www.redsaga.com/opendoc/REST_cn.pdf\">中文版</a>）对万维网架构的贡献可谓是居功至伟。可想而知，当REST一词变得流行起来之后，其滥用甚至是“挂羊头卖狗肉”的现象是不可避免的。而糟糕的是，对于那些没有时间、也没有耐心去仔细阅读该论文的人来说，可能就会在看过或用过某些号称具有REST风格的应用之后对REST本身产生错误的理解，进而在错误的思想指导之下错误地运用REST。这正是其创造者本身所不愿意看到的。\r\n</p>\r\n<p>\r\n	这不，Fielding博士本人终于按捺不住发飚了。在其10月28日发表的博文<a href=\"http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven\">《REST API必须是超文本驱动的》</a>中，博士坦言了他的失望，并对<a href=\"http://wikis.glassfish.org/socialsite/Wiki.jsp?page=FinalizeRESTAPI\">SocialSite REST API</a>提出了批评。同时他还指出，除非应用状态引擎是超文本驱动的，否则它就不是RESTful或REST API。据此，他给出了REST API应该具备的条件：\r\n</p>\r\n<ul>\r\n	<li>\r\n		REST API不应该依赖于任何通信协议，尽管要成功映射到某个协议可能会依赖于元数据的可用性、所选的方法等。\r\n	</li>\r\n	<li>\r\n		REST API不应该包含对通信协议的任何改动，除非是补充或确定标准协议中未规定的部分。\r\n	</li>\r\n	<li>\r\n		REST API应该将大部分的描述工作放在定义用于表示资源和驱动应用状态的媒体类型上，或定义现有标准媒体类型的扩展关系名和（或）支持超文本的标记。\r\n	</li>\r\n	<li>\r\n		REST API绝不应该定义一个固定的资源名或层次结构（客户端和服务器之间的明显耦合）。\r\n	</li>\r\n	<li>\r\n		REST API永远也不应该有那些会影响客户端的“类型化”资源。\r\n	</li>\r\n	<li>\r\n		REST API不应该要求有先验知识（prior knowledge），除了初始URI（书签）和适合目标用户的一组标准化的媒体类型（即，它能被任何潜在使用该API的客户端理解）。\r\n	</li>\r\n</ul>\r\n<p>\r\n	按照Fielding博士这些条件，一大批我们熟知的、号称是RESTful的应用和架构无疑都不属于REST的行列，包括Google/Amazon/Yahoo!等大公司所提供的API和应用。可想而知，该文发表之后的反响是巨大的，其后长长的回复列表即是明证。面对诸多疑问，Fielding博士一一做了回复。其言论整理如下：\r\n</p>\r\n<ul>\r\n	<li>\r\n		对于“超文本”，Fielding说道：“我所说的超文本指的是信息与控件的同时呈现，这样一来，信息便具有自解释性（affordance），从而用户（或程序）可以通过它获取选项、并作出选择。”（回复#3）\r\n	</li>\r\n	<li>\r\n		他认为“真正的RESTful API”就想超文本一样，信息的每个寻址单元显式地（如，link和id属性）或隐式地（如，由媒体类型定义和表示结构推导而来）携带一个地址。（回复#5）鉴于超文本中已经包含了寻址信息，故而他认为接口并不一定需要是可发现的。（回复#11）\r\n	</li>\r\n	<li>\r\n		对“为什么会有如此多的人对REST理解有误”之一问题，Fielding承认由于他时间的关系对媒体类型的设计未在论文中做详细阐述，但同时强调这并非表示他认为这些内容不重要。（#8）\r\n	</li>\r\n	<li>\r\n		对于资源建模的目的，Fielding表示这是为了找出哪些资源值得标识、表示和操作。（回复#11）\r\n	</li>\r\n	<li>\r\n		对于先验知识，Fielding认为客户端是允许有先验知识的，但REST强调的是这些先验知识应该以一种标准化的形式出现。（回复#20）\r\n	</li>\r\n	<li>\r\n		对于批操作，Fielding认为人们觉得需要批操作是因为他们没有理解资源的范围。他指出资源并非存储项（至少不等同于后台中某些存储项），并且同一资源状态可以由多个资源来分担。如果谁发现他需要一个批操作，那么很可能只是因为他没有定义足够的资源。（回复#21）\r\n	</li>\r\n	<li>\r\n		不要混淆了应用状态和资源状态，前者指的是计算某个任务的用户应用的状态，后者则是指作为某个服务所暴露出的状态（回复#22）\r\n	</li>\r\n	<li>\r\n		媒体类型标识出了定义如何处理表示的规范。一旦表示以携带了类型化关系的超文本形式被提供，那么自动化的代理就能像人一样在这些应用之间穿梭自如。（回复#30）\r\n	</li>\r\n	<li>\r\n		对于安全性的问题，Fielding说道：“RESTful系统实现安全操作的方式和其他任何消息传递协议的方式是一样的：不是封装消息流（SSL、TLS、SSH、IPspec……），就是加密消息（PGP、S/MIME等）。”（回复#34）\r\n	</li>\r\n</ul>\r\n<p>\r\n	在这样短的一篇新闻中很难详细的罗列该文所有的内容和评论，尤其是其间不乏某些很有价值的讨论和观点。请一定要阅读一下Fielding博士的这篇<a href=\"http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven\">引起广泛讨论的文章</a>。另外，REST论文中文版的译者之一dlee也在JavaEye论坛上就此文发起了<a href=\"http://www.javaeye.com/topic/295195\">讨论</a>。其中他这样写道：\r\n</p>\r\n<blockquote>\r\n	Fielding发表这篇blog，这件事情其实并不出我的意外。我在两年前就很奇怪世界上为何一下子冒出来这么多REST专家。那一年，我翻译了《Ajax Patterns and Best Practices》。这本书的内容非常深入，作者Christian Gross宣称他所设计的所有模式遵循的都是REST架构风格。但是Gross先生却没有将REST的来龙去脉讲清楚，甚至只字未提Fielding的那本著名的博士论文。&nbsp;<br />\r\n<br />\r\nREST似乎是一个技术界的罗生门，每个人的描述都不一样，而他们都坚信自己的理解才是正确的。……&nbsp;<br />\r\n<br />\r\n现在真相大白了，Fielding对于REST架构风格定下了如此严格的判断标准，世界一下子清静了。\r\n</blockquote>\r\n<p>\r\n	附注：非常感谢《RESTful Web Service中文版》的译者徐涵对本文提出的意见和帮助。\r\n</p>',NULL,NULL,'2014-04-12 08:37:46',0,'Roy Fielding：REST API必须是超文本驱动的！',0),(12,'admin',2,'<h3 style=\"text-indent:2em;\">\r\n	简介\r\n</h3>\r\n<p style=\"text-indent:2em;\">\r\n	互联网以前所未有之势为计算机和通信世界带来了变革。电报、电话、收音机和计算机的发明为这一前所未有的能力整合搭建了舞台。互联网转眼间就具有了在全世界传播的能力，成为了一种信息传播机制、以及个人和他们的计算机间进行协作和互动的媒介，不论他们身处何地。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	互联网是不断投资、锲而不舍地进行信息基础设施研发并产生效益的最成功例子之一。从早期的分组交换研究开始，政府、产业界和学术界在发展和部署这项令人兴奋的新技术的过程中结成了紧密的合作伙伴。如今，街头的路人都能脱口说出“<a href=\"mailto:bleiner@computer.org\">bleiner@computer.org</a>”和“<a href=\"http://www.acm.org/\">http://www.acm.org</a>”之类的术语。<a href=\"http://www.isoc.org/internet/history/brief.shtml#exaggeration\">1</a>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	本文旨在还原一部简要、必然粗略且不尽完整的历史。现在有很多关于互联网的资料，内容涵盖其历史、技术和使用。走进任何一家书店都能找到成堆的关于互联网的书籍。<a href=\"http://www.isoc.org/internet/history/brief.shtml#tokyotrip\">2</a>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在本文中，<a href=\"http://www.isoc.org/internet/history/brief.shtml#cacm\">3</a>我们几位互联网发展和演变的参与者将向大家介绍我们关于其起源和历史的观点。历史围绕四个截然不同的方面展开。首先是技术演变，它始于对分组交换和阿帕网（及相关技术）的早期研究，并且当前的研究继续在几个方面扩展基础设施的范围，例如规模、性能和高级功能。其次是全球性的复杂运营基础设施的运营和管理方面。然后是社会方面，形成了广大的网民&nbsp;社区，他们齐心协力创建并发展技术。最后是商业化方面，将研究成果极其高效地转化为广泛部署且人人可得的信息基础设施。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	今天的互联网是广泛的信息基础设施，是常被称为国家（或全球或银河）信息基础设施的最初原型。其历史复杂，涉及许多方面，包括技术方面、组织方面和社区方面。随着我们越来越多地使用在线工具进行电子商务、获取信息、完成社区运作，其影响力不但达到计算机通信的技术领域，而且波及了整个社会。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	互联网的起源\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	对可能通过网络实现的社交互动的最初文字记载是麻省理工学院的J.C.R. Licklider（立克里德）于1962年8月撰写的一系列讨论他的“银河网络”概念的<a href=\"http://46.43.36.213/internet/internet-51/history-internet/brief-history-internet#JCRL62\">备忘录</a>。他构想了一套由世界各地相互连接的计算机组成的系统，每个人通过这个系统都能从任何站点快速获得数据和程序。这个概念在本质上与今天的互联网非常相似。自1962年10月起，Licklider成为了DARPA计算机研究项目的第一个负责人。<a href=\"http://www.isoc.org/internet/history/brief.shtml#darpa\">4</a>在 DARPA，他说服了自己在DARPA的继任者Ivan Sutherland（伊凡·沙日尔兰德）、Bob Taylor（鲍勃·泰勒）和麻省理工学院研究员Lawrence G. Roberts（劳伦斯·罗伯茨），使他们相信这个网络概念的重要性。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	麻省理工学院的Leonard Kleinrock（雷纳德·克兰罗克）于1961年7月发表了<a href=\"http://www.isoc.org/internet/history/brief.shtml#LK61\">第一篇关于分组交换理论的论文</a>，而<a href=\"http://www.isoc.org/internet/history/brief.shtml#LK64\">关于这个主题的第一本书</a>于1964年出版。Kleinrock说服了Roberts，使他相信使用数据包而非电路进行通信在理论上可行，这是向着计算机联网发展的道路上迈出的重要一步。另一个关键步骤是让计算机互相交流。为进行这方面探索，Roberts于1965年和Thomas Merrill（托马斯·梅里尔）一起把位于麻省的 TX-2计算机用一条低速拨号电话线连接到加利福尼亚的Q-32，创建了<a href=\"http://www.isoc.org/internet/history/brief.shtml#LGR66\">首个（虽然很小）广域计算机网络</a>。这个实验的结果是人们认识到，分时计算机可以很好地一起工作，运行程序并在必要时从远程机器上检索数据，但是使用电路交换的电话系统远远不能胜任这项工作。Kleinrock的有必要进行分组交换的信念得到了证实。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在1966年晚些时候，Roberts来到DARPA，发展了计算机网络概念并很快制定了他的<a href=\"http://www.isoc.org/internet/history/brief.shtml#LGR67\">“阿帕网” 计划</a>，并于1967年发表了这个计划。在Roberts宣读自己论文的会议上，来自英国的Donald Davies（唐纳德·戴维斯）和NPL 的Roger Scantlebury（罗杰·斯坎特伯里）也宣读了有关数据包网络概念的论文。Scantlebury给Roberts讲述了NPL的工作以及兰德公司（RAND）的Paul Baran（保罗·巴兰）和其他人的工作。兰德集团已于1964年撰写了一篇有关军队<a href=\"http://www.isoc.org/internet/history/brief.shtml#PB64\">保密电话分组交换网络的论文</a>。麻省理工学院（1961-1967）、兰德公司（1962-1965）和NPL （1964-1967）的工作碰巧都同时进行，但任何一位研究人员都不知道其他人从事的工作。NPL的工作推动了“数据包”这个词的采用，在阿帕网设计中建议使用的线路速度从2.4 kbps 升级到 50 kbps。<a href=\"http://www.isoc.org/internet/history/brief.shtml#rand\">5</a>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1968年8月，在Roberts和 DARPA 资助的社区完善了阿帕网的总体结构和规格后，DARPA为关键组件之一，即一个名为接口信息处理机（IMP）的分组交换的开发发出了询价单（RFQ）。Bolt Beranek 和 Newman （BBN）公司的Frank Heart（法兰克·哈特）领导的一个小组于1968年12月赢得了这个项目。在BBN 团队和Bob Kahn（鲍勃·卡恩)一起开发IMP的同时（Kahn在阿帕网的总体架构设计起到了重要的作用），Roberts和Howard Frank（霍华德·弗兰克）及其他在Network Analysis Corporation的团队设计并优化了网络拓扑结构和经济性，而Kleinrock在加利福尼亚大学洛杉矶分校的团队则设计了网络测量系统。<a href=\"http://www.isoc.org/internet/history/brief.shtml#nms\">6</a>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	由于Kleinrock对分组交换理论的早期开发，及其对分析、设计和测量的专注，他在加利福尼亚大学洛杉矶分校的网络测量中心被选为阿帕网上的第一个节点。所有这些终于在 1969 年9月汇集在一起，此时BBN 公司在加利福尼亚大学洛杉矶分校安装了首台IMP，首台主机也被连接起来。道格·恩格尔巴特（Doug Engelbart）在斯坦福研究所（SRI）的“人类智能增强”（包括一种早期超文本系统NLS）项目提供了第二个节点。SRI 为 Elizabeth (Jake) Feinler（伊莉莎白·芬恩勒，又称贾克）领导的网络信息中心提供了支持，包括保管主机名称表格，以解决映像和RFC（请求注解）目录等功能。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	一个月后，当SRI 连接到阿帕网时，首条主机到主机的消息从Kleinrock的实验室发送到了 SRI。随后又在加州圣塔-芭芭拉分校和犹他州立大学增加了两个节点。后两个节点纳入了应用程序可视化项目，其中UCSB 的Glen Culler（格伦·卡勒尔）和Burton Fried（波顿·弗莱德）研究使用存储显示来显示数学函数的办法，以解决网络刷新的问题；而犹他的Robert Taylor和Ivan Sutherland则研究在网上进行三维呈现的方式。这样，到1969年年底，有四台主机连接到了最初的阿帕网，处于萌芽状态的互联网呱呱坠地了。即使在这一早期阶段，也应注意到联网研究既包括基础网络工作，也包括如何应用网络的工作。这个传统一直传承至今。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随后几年计算机被快速添加到阿帕网中，完成功能完整的主机到主机协议和其它网络软件的工作也在进行。1970年12月，S.Crocker（史蒂夫·克洛克）领导的网络工作组（NWG）完成了最初的名为 网络控制协议（NCP）的阿帕网主机到主机协议。随着阿帕网站点在1971至1972年间完成NCP的实施，网络用户终于可以开始开发应用程序了。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1972年10月，Kahn在计算机通信会议（ICCC）上非常成功地组织了一场大型阿帕网演示。这是首次向公众公开演示这个新的网络技术。同样在1972年，最初的“热门”应用程序 -- 电子邮件推出了。3月，阿帕网开发人员需要便捷的协调机制，促使BBN公司的Ray Tomlinson（雷·汤姆林森）编写了基本的发送和阅读电子邮件信息的软件。7&nbsp;月，Roberts编写了第一个电子邮件实用程序，对邮件进行列表、选择阅读、存档、转发和回复，从而扩大了它的实用性。从那时起，电子邮件就开始成为10多年时间里最大的网络应用程序。这预示了我们今日在万维网上所见的那种活动，即蓬勃发展的各种“人到人”的流量。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	早期的互联网构想\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	最初的阿帕网发展成为互联网。互联网基于这样的理念：存在多个任意设计的独立网络，它始于分组交换的先驱网络阿帕网，但很快就包括数据分组卫星网络，地面分组无线网络和其它网络。如我们现在所知，互联网体现了一个关键的基本技术理念，即开放式架构联网。在这种方法中，对任何单独网络技术的选择并不取决于一个特定的网络架构，而是可以由提供商自由选择，并通过一个元级“联网体系结构”与其它网络互通。在那之前，只有一个联合网络的一般方法。这是传统的电路交换方法，网络在电路层面相互连接，沿着一对终点位置间的一段端到端电路同步传输单独的比特。回忆一下，Kleinrock在1961年已经证明分组交换是一种更高效的交换方法。有了分组交换，特殊用途的网络之间的互连安排是另一种可能性。虽然把不同网络互连还有其它有限的几种方式，但它们都要求一个网络作为另一个网络的组成部分，而不是在提供端到端服务时，同等地发挥作用。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在一个开放架构网络中，每个独立的网络都可以单独设计和开发，每个网络都可拥有自己的接口，供用户和/或其他提供商使用。包括其他互联网提供商。每个网络可以按照其特定环境和用户对网络的要求进行设计。对能够包含进来的网络类型或它们的地理范围一般没有限制，虽然一些务实的考虑会决定提供什么内容才合乎情理。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	开放式架构网络的设想最先由Kahn于1972年提出，他那时刚到DARPA不久。这项工作最初是分组无线网项目的一部分，但后来它凭借自身力量成为一个独立的项目。当时，该计划被称为“Internetting”。可靠的端到端协议是使分组无线网系统正常运行的关键，它能在面对拥塞和其它无线电干扰时保持有效的通信，还能抵挡如在隧道中或由当地地形阻挡引起的间歇性中断。Kahn首先考虑发展只适用于分组无线网络的协议，因为这能避免处理众多不同的操作系统，而且能继续使用NCP。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	然而，NCP并不具备应对阿帕网上的目的地IMP下游的网络（和机器）的能力，因此还需要对NCP做一些改变。（假设的是阿帕网在这方面不可更改）。NCP 依靠阿帕网提供端到端的可靠性。如果丢失任何数据包，那么协议（和可能它支持的任何应用程序）会戛然而止。在此模式中，NCP没有端到端主机错误控制，因为阿帕网是唯一存在的网络，它应如此可靠，以至于主机方面无需差错控制。因此，Kahn决定开发一个能够满足开放式架构网络环境需要的一个新版本的协议。该协议最终被称为传输控制协议/互联网协议（TCP/IP）。虽然NCP往往起到一个设备驱动程序的作用，但新协议更像是一个通信协议。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	四条基本规则对Kahn的早期设想起到了关键作用：\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<ul>\r\n		<li>\r\n			每一个截然不同的网络必须独立存在，任何一个这样的网络连接到互联网时都不需要做出内部改变。\r\n		</li>\r\n		<li>\r\n			通信将以“最大努力”进行。如果一个数据包没有到达最终目的地，那么稍后会从来源重新传送。\r\n		</li>\r\n		<li>\r\n			将使用黑盒子来连接网络；黑盒子后来被称作网关和路由器。网关不保留经过它们的单独数据包流的任何信息，因此保持了自己的简单状态，避免从各种故障模式进行复杂的适应和恢复。\r\n		</li>\r\n		<li>\r\n			在操作层面不存在全局控制。\r\n		</li>\r\n	</ul>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	其它需要解决的关键问题如下：\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<ul>\r\n		<li>\r\n			防止丢失的数据包造成永久性地禁用通信，并能成功地从源头上重发丢失的数据包的算法。\r\n		</li>\r\n		<li>\r\n			提供主机到主机的“流水线”，如果中间的网络允许，可以使多个数据包按照参与主机的决定从源头到达目的地。\r\n		</li>\r\n		<li>\r\n			网关功能使它能够相应地转发数据包。这包括为路由解释IP头、处理接口、必要情况下把数据包分为更小的包，等等。\r\n		</li>\r\n		<li>\r\n			如有需要，进行端到端校验，将片段重组为数据包以及检测重复。\r\n		</li>\r\n		<li>\r\n			需要全局寻址\r\n		</li>\r\n		<li>\r\n			主机到主机的流量控制技术。\r\n		</li>\r\n		<li>\r\n			与各种操作系统对接\r\n		</li>\r\n	</ul>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	还有其它问题，例如实施效率，互联网络的性能，但这些在开始时都是次要的考虑因素。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在BBN公司时，Kahn开始着手开发面向通信的一套操作系统原则，并把自己早期的想法记录在题为“<a href=\"http://www.isoc.org/internet/history/brief.shtml#REK72\">操作系统通信原理</a>”的BBN内部备忘录中。此时，他意识到有必要了解每一个操作系统的实施细节，以便有效地把任何新的协议嵌入其中。因此，在1973年春天，在开始“internetting”的工作后，他请求Vint Cerf（温顿·瑟夫，当时在斯坦福大学）与他一起进行详细的协议设计工作。Cerf一直密切参与最初的NCP的设计和开发，并已经掌握了和现有操作系统对接的知识。因此，有了Kahn在通信方面的架构方法和Cerf在NCP领域的经验，他们联手阐明了后来成为TCP/IP的细节。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这种给予和接受非常富有成效，在1973年9月在英国苏塞克斯大学（Sussex University）召开的一次国际网络工作组（INWG）特别会议上，发放了因此产生的第一个书面版本<a href=\"http://www.isoc.org/internet/history/brief.shtml#cer74\">7</a>。Cerf应邀主持这个特别会议，并借这个机会组织INWG成员开会，他们大部分都参加了在苏塞克斯举行的会议。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	从Kahn和Cerf的合作中产生的一些基本方法包括：\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<ul>\r\n		<li>\r\n			两个进程之间的通信在逻辑上将包括一个很长的字节流（他们称之为八进制）。将使用任何八进制在字节流中的位置来识别它。\r\n		</li>\r\n		<li>\r\n			将使用滑动窗口和确认（ACK）进行流量控制。目标可以选择何时确认，每个返回的ACK将是到那时为止收到的所有数据包的累积值。\r\n		</li>\r\n		<li>\r\n			来源和目标究竟怎样就要使用的窗口化参数达成一致则未确定。最初使用的是默认值。\r\n		</li>\r\n		<li>\r\n			虽然当时施乐公司帕洛阿尔托研究中心（Xerox PARC）正在开发以太网，但还没有设想到局域网（LAN）的扩散普及，更不用说PC和工作站了。最初的模式是阿帕网（ARPANET）这样的全国性网络，预计只会存在少量这样的网络。因此就使用了一个32位的IP地址，其中前8&nbsp;位代表网络，其余24位指定该网络上的主机。在可预见的将来，256个网络就足够了，这一假设在局域网于20世纪70年代末开始出现时，显然需要重新考虑。\r\n		</li>\r\n	</ul>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Cerf和Kahn关于互联网的论文描述了一个名叫TCP协议，它提供了互联网上全部的传输和转发服务。Kahn设想TCP协议支持众多的传输服务，从完全可靠的已编序的数据传输（虚拟电路模式）到一种数据报&nbsp;服务，在这种服务中应用程序直接使用基础的网络服务，这也许意味着数据包会偶尔丢失、损坏或重新排序。但是，实施TCP的最初努力得到的是只允许虚拟电路的版本。这种模式在文件传输和远程登录应用程序上效果不错，但在先进网络应用领域的一些早期工作，特别是20世纪70年代的分组语音，明确指出在某些情况下TCP不应纠正丢失的数据包，而应把它们留给应用程序处理。这导致最初的TCP重组为两个协议，简单的IP只针对单个数据包的寻址和转发；而独立的TCP关注服务功能，例如流量控制和从丢失的数据包进行恢复。对于那些不需要TCP服务的应用程序，增加了另一种称为用户数据报协议（UDP）的替代方案，以便直接访问IP基本服务。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	成立阿帕网和互联网最初的一个主要动机是资源共享 -- 例如允许分组无线网络上的用户访问连接到阿帕网的分时系统。把两者连接起来，要比复制这些非常昂贵的计算机要经济得多。然而，虽然文件传输和远程登录（Telnet）是非常重要的应用，但电子邮件很可能受到那个年代的这一创新最显著的影响。电子邮件提供了一个人与人之间相互沟通的新模式，并改变了协作的性质，这首先体现在互联网本身的建设（如下面讨论所示）上，后来体现在社会的大部分领域中。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在互联网初期也提出过其它应用程序，包括基于分组的语音通信（互联网电话的前身），各种文件和磁盘共享模式，和显示了代理（当然还有病毒）概念的早期“蠕虫”程序。互联网的一个关键理念是，它不是只为一个应用程序设计的，而是作为通用的基础设施，可以在其上孕育新的应用程序，后来出现的万维网就说明了这一点。而TCP和IP所提供服务的通用性质使这一理念变成现实。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	验证创意\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	DARPA给斯坦福大学（Cerf），BBN公司（Ray Tomlinson）和伦敦大学学院（Peter Kirstein[彼得•柯尔斯坦]）各一份合同，以实施TCP/IP（它在Cerf和Kahn的论文中只被称为TCP，但包含这两个组成部分）。Cerf领衔的斯坦福大学团队制订了详细的规格，并在大约一年时间里，实施了三个可以互操作的独立TCP。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这是让互联网的概念和技术发展并成熟的长期试验和开发的开端。从最早的三个网络（阿帕网，分组无线网、分组卫星网络）和各自的早期研究社区开始，试验环境已发展到可以融合几乎每一种形式的网络和一个具有非常广泛基础的研究和开发社区。<a href=\"http://www.isoc.org/internet/history/brief.shtml#REK78\">[REK78]</a>每一次扩展都伴随着新的挑战。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	早期TCP的实施是为大型的分时系统，比如Tenex和TOPS 20而进行的。当台式计算机刚出现时，有人认为TCP太大，太复杂，无法在个人计算机上运行。David Clark（大卫·克拉克）和他在麻省理工学院的研究小组着手证明，紧凑而简单的TCP实施是可能的。他们首先为施乐Alto（Xerox PARC开发的早期个人工作站），然后为IBM个人计算机完成了实施。这一实施可以与其它TCP完全互操作，但却是为应用程序套件和个人电脑的性能目标量身定制的，这一实施证明了工作站和大型的分时系统一样都可以成为互联网的一部分。1976年，Kleinrock出版了<a href=\"http://www.isoc.org/internet/history/brief.shtml#LK76\">第一本关于阿帕网的书</a>。在书中，他强调了协议的复杂性以及它们经常制造的陷阱。这本书很有影响，它把分组交换网络的知识传播到更广大的社区。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	局域网、PC及工作站在20世纪80年代的广泛普及使新生的互联网蓬勃发展。由Bob Metcalfe（鲍勃•梅特卡夫）于1973年在施乐公司帕洛阿尔托研究中心开发的以太网技术，现在很可能是互联网中占主导地位的网络技术，而PC和工作站已成为占主导地位的计算机。从拥有数量不多的分时主机的少数几个网络（最初的阿帕网模型）到拥有众多网络的转变，导致若干新概念的产生，以及基础技术的改变。首先，它导致三个网络类别（A，B和C）定义的出现，以容纳众多的网络。A类代表大型全国规模的网络（有大量主机的少数网络）；B类代表地区规模的网络；C类代表局域网（很多网络，主机相对较少）。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着互联网规模的扩大以及相关管理问题的增加，出现了一个重大的转变。为了让人们更容易地使用网络，给主机分配了名称，因此没有必要记住主机的数字地址。起初，主机的数量相当有限，所以只保持一份所有主机及其相关名称和地址的表格是可行的。向大量独立管理的网络（如局域网）的转变，意味着只保持一份主机表格已不再可行，于是USC/ISI 的 Paul Mockapetris（保罗•莫卡派乔斯）发明了域名系统（DNS）。DNS允许一个可伸缩的分布式机制，它把分层的主机名（例如<a href=\"http://www.acm.org/\">www.acm.org</a>）解析为一个互联网地址。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	互联网规模的扩大，也给路由器的功能带来了挑战。最初，有一种由互联网上所有路由器统一实施的单一路由分布式算法。随着互联网上网络数量的爆炸式增长，这种最初的设计不能根据需要扩展，因此它被分层路由模式取代，在互联网的每个区域内使用一个内部网关协议（IGP），并使用一个外部网关协议（EGP）把各区域连接起来。这种设计允许不同区域使用不同的IGP，这样就能满足对成本、快速重新配置、可靠性和规模的不同要求。路由算法和寻址表的大小都强调了路由器的容量。地址聚合的新方法，特别是无类别域间路由（CIDR）方法，最近被采用来控制路由表的大小。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着互联网的发展，人们面临的主要挑战之一是如何把变化传播到软件，特别是主机软件中。DARPA支持加州大学伯克利分校（UC Berkeley）对Unix操作系统进行修改的研究，包括把在BBN公司开发的TCP/IP加入其中。虽然加州大学伯克利分校后来重写了BBN代码，以便让它更高效地融入Unix系统和内核，但TCP/IP加入Unix BSD系统的发布被证明是将协议向研究社区传播的一个关键要素。多数CS研究社区开始在它们日常的计算环境中使用Unix BSD。回顾过去，把互联网协议纳入受支持的研究社区的操作系统是广泛和成功地采用互联网的关键因素之一。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	更有趣的挑战之一是从1983年1月1日起，阿帕网的主机协议从NCP转为TCP/IP。这是一个“国旗日”般的风格转型，要求所有的主机同时转换，否则就它们就不得不通过临时机制进行通信。这次转型早在实际发生前几年就已经在社区内部经过精心策划，其过程令人惊讶的顺利（但导致人们散布这样的按钮，上面写的是：“我在TCP/IP转型后幸存了下来”）。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1980年TCP/IP协议被作为国防标准采用，比计划提前了三年时间。这使国防部门开始分享DARPA的互联网技术，并直接导致了最终的军事和非军事社区的区分。到1983年，阿帕网已被大量国防研发和运营组织使用。阿帕网从NCP转为TCP/IP，允许将它拆分为支持作战要求的军用网（MILNET）和支持研究需求的阿帕网。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	因此，到1985年，互联网已经完全成为一种支持广大的研究人员和开发人员社区的技术，并开始被其他社区用于日常计算机通信。电子邮件已被几个社区广泛使用，这些社区常采用不同的系统，但不同的邮件系统之间的互连体现了人与人之间广泛的电子通信的效用。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	向广泛的基础设施过渡\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	在互联网技术正在经受实验验证，并被少数计算机科学研究人员广泛使用之时，人们也在探索其它网络和网络技术。由DARPA和国防部承包商在阿帕网上展现出的计算机网络（尤其是电子邮件）的有用性在其它社区和学科也依然有用，因此到20世纪70年代中期，计算机网络就开始在任何能找到资金支持的地方飞速发展。美国能源部（DoE）为其磁聚变能的研究人员设立了磁合能源网（MFENET），而能源部的高能物理学家也相应地建立了高能物理网（HEPNet）。美国宇航局空间物理学家跟着建立了SPAN，Rick Adrion（里克•阿德里恩）、David Farber（大卫·法布尔）和Larry Landweber（拉里·兰德韦伯）使用美国国家科学基金会（NSF）的首笔拨款为（学术界和工业界的）计算机科学界建立了计算机科学网（CSNET）。用户网(USENET)是通过美国电话电报公司(AT&amp;T)自由传播的UNIX计算机操作系统，根据UNIX内置的UUCP通讯协议发展起来的。1981年，Ira Fuchs（艾拉·弗契斯）和Greydon Freeman（格雷登·弗里曼）设计了因时网(BITNET)，BITNET将大学院校的大型计算机以一种“卡片图像式的电子邮件”范式连接起来。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	除BITNET和USENET以外，这些早期的网络（包括阿帕网）均是为特定用途而创建的，即它们专供封闭的学者社区使用且在很大程度上仅限在这样的社区使用；因此，几乎没有任何压力要求单独网络具有兼容性，而它们中的多数也确实不兼容。此外，替代技术在商业领域受到追捧，其中有美国施乐公司的施乐网络系统(XNS)、数字设备公司网(DECNet)和IBM公司的系统网络体系结构(SNA)。<a href=\"http://www.isoc.org/internet/history/brief.shtml#email\">8</a>直至英国联合科研网(JANET)（1984年）项目和美国国家科学基金会网(NSFNET)（1985年）项目明确宣布将不分学科地为整个高等教育社区服务，这一局面才被打破。实际上，美国大学在互联网连接方面得到美国国家科学基金会(NSF)资助的条件是：“……校内所有具备资格的用户必须都能联网。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1985年，来自爱尔兰的Dennis Jennings（丹尼斯·詹宁斯）在NSF花了一年的时间牵头负责NSFNET项目。他与社区携手合作，帮助NSF做出了一个重大的决定 -- NSFNET项目必须采用TCP/IP。Steve Wolff（史蒂夫·沃尔夫）于1986年接管NSFNET项目时，认识到了为整体教育和研究社区提供支持需要广域网基础设施，同时还需要制定战略，在最终不依赖联邦政府的直接拨款的基础上建立这一基础设施。为达到这一目的，NSF采用了很多政策和策略（见下文）。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	NSF还选择支持DARPA现有的互联网组织基础结构，在等级上该结构排在（当时的）互联网活动委员会(IAB)之下。IAB的互联网工程专责小组及架构专责小组与NSF的RFC985（互联网网关要求）网络技术咨询小组共同撰写了公开声明，宣布这一选择，此份公开声明正式保证了DARPA与NSF的互联网网络的互操作性。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	除NSFNET项目选择采用TCP/IP以外，联邦政府机构还做出和实施了数项其它政策决定，造就了如今的互联网。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<ul>\r\n		<li>\r\n			联邦政府机构共同承担公共基础设施（如越洋电路）的费用。它们还为了机构间流量交换而共同支持“托管的互连点”；为这一目的而创建的联邦互联网交换中心(FIX-E和FIX-W)，是网络接入点和“各种互联网交换(*IX)”设施（这些代表了当今互联网架构的显著特征）的模型。\r\n		</li>\r\n		<li>\r\n			为协调这一共享，联邦网络委员会(FNC)<a href=\"http://www.isoc.org/internet/history/brief.shtml#fricc\">9</a>成立了。FNC也与诸如欧洲科研网络协会(RARE)之类的一些其它国际组织合作，通过洲际研究网络协调委员会(CCIRN)来协调全球研究社区的互联网支持。\r\n		</li>\r\n		<li>\r\n			各种机构在互联网相关问题上进行这样的共享和合作有着悠久的历史。Farber代表计算机科学网(CSNET)及NSF与DARPA的Kahn于1981年签订了一份前所未有的协议，该协议允许CSNET流量在统计但不进行计量处理的基础上共用阿帕网基础设施。\r\n		</li>\r\n		<li>\r\n			随后，NSF以相似的方式鼓励其区域网络（最初为教育网络），寻找商业型而非学术型的客户，扩大设施为客户提供服务，并利用产生的规模经济来降低所有人的订购费用。\r\n		</li>\r\n		<li>\r\n			NSFNET主干网是NSFNET全美范围内的网络，NSF在NSFNET主干网上执行“可接受的使用政策”(AUP)，禁止主干网被用于“不支持研究和教育”的用途。尽管商业网络被拒绝接入全美范围的网络，但在当地和区域级别上鼓励商业网络流量所产生的可预测（和预期）的结果，促成了诸如PSI、UUNET、ANS CO+RE（以及后来的）其它网络等“专用”、竞争性和长距离传输网络的诞生和/或发展。从1988年开始，NSF在哈佛大学肯尼迪政府学院召开的一系列有关“互联网的商业化和私有化”和网络本身“商业化—私有化”列表的会议，全面讨论和制定了私人出资增强网络用于商业用途的这一流程。\r\n		</li>\r\n		<li>\r\n			1988年，由Kleinrock担任主席、Kahn和Clark担任委员的一个美国国家研究委员会接受NSF的委托，编写了一份名为“建立一个全国的研究网络”的报告。这一报告对当时的参议员Al Gore（阿尔戈尔）产生了很大影响，并迎来了高速网络，为日后的信息高速公路奠定了网络基础。\r\n		</li>\r\n		<li>\r\n			1994年，还是由Kleinrock担任主席（同时还是由Kahn和Clark担任委员）的一个美国国家研究委员会发布了一份名为“实现信息的未来：互联网和其它”的报告。这一报告是受NSF委托而编写的，这份文件详细描述了信息高速公路的演变蓝图，它对人们对信息高速公路演变的看法有着持久的影响。它预测到了互联网将涉及的知识产权、道德准则、定价、教育、架构和监管等重要问题。\r\n		</li>\r\n		<li>\r\n			由于NSFNET主干网的资金被抽回，NSF私有化政策于1995年4月达到最高潮。由此抽走的资金重新分配（以竞争方式）给区域性网络，用于向已经出现的无数专用、长距离传输网络购买全国规模的互联网连接。\r\n		</li>\r\n	</ul>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	NSFNET主干网已从一个采用研究社区的路由器（由戴维·米尔斯(David Mills)的模糊球路由器）建立的网络转变成一个商业设备。在其8年半的生命周期中，NSFNET主干网已从网速每秒56kb的6个节点增长至拥有网速达每秒45Mb的多个链接的21个节点。在此期间，互联网已扩张至5万多个网络，覆盖了所有七个大洲以及以外的空间，其中美国约有2.9万个网络。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这就是NSFNET项目的世界一同主义和资助（从1986年到1995年为2亿美元）的影响力以及各种协议本身的质量。到1990年，当阿帕网最终退役时<a href=\"http://www.isoc.org/internet/history/brief.shtml#UCLAarpanet\">10</a>，TCP/IP已取代全球其它大多数广域计算机网络协议或将之边缘化，同时IP正日渐成为全球信息基础设施的承载服务。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	文档的作用\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	能够自由开放地获取基本文档，尤其是各种协议规格，这一直是互联网得以迅速发展的关键。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	阿帕网和互联网开始在大学研究社区得到应用，这使公开发表观点与成果的学术传统得到了弘扬。但是，传统学术发表的周期对于活跃的思想交流来说太过于正式和缓慢，而活跃的思想交流是创建网络所必不可少的。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1969年，在创建<a href=\"http://www.isoc.org/internet/history/brief.shtml#SC69\">请求注解</a>(RFC)系列注释文档时，S. Crocker（当时任职加州大学洛杉矶分校）迈出了关键的一步。创建这些备忘录的原意是将其作为与其他网络研究人员交流思想的一个非正式的、快速的传播方式。起初，这些RFC文档打印在纸上，通过蜗牛邮件发放。随着文件传输协议(FTP)开始被采用，RFC文档被编制为在线文件，可通过FTP访问。当然现在可以通过万维网在全世界的很多网站上很容易地访问RFC文档。SRI作为网络信息中心维护着在线目录。Jon Postel（乔纳森·波思泰尔）担任RFC编辑并对必要的协议号码分配进行集中管理，他一直负责这些工作，直至1998年10月16日去世。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	RFC文档的作用是创建一个正反馈循环，一份RFC文档中提出的观点或建议将引来另一份有更多观点的RFC文档，并依次增加。一些共识（或至少是一套前后一致的观点）汇总到一起就可以编制一份规范文档。然后这样一份规范文档将被各个研究团队用作实施的基础。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着时间的推移，RFC文档变得更加着重于协议标准（“官方”规范），尽管仍有一些信息性的RFC文档介绍替代方法或提供协议和工程问题的背景信息。现在RFC文档在互联网工程和标准社区被视为“记录文档”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	RFC文档的开放访问（上网就能免费获取）促进了互联网的发展，因为它使得真实的规范文档能被用作大学课堂上的示例，同时还能被企业家用于开发新系统。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	电子邮件已成为互联网所有领域的重要因素，这一点在协议规范、技术标准和互联网工程的发展中确切无疑。最早的RFC文档通常将某个地方的研究人员开发出的一套观点介绍给社区中的其他人。在开始使用电子邮件之后，RFC文档的创作形式发生了变化 -- RFC文档由持有共同观点的创作者共同编写，不受地域限制。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在协议规范的制定过程中，专用的电子邮件列表已被人们长期使用，直至现在也是一项重要的工具。IETF现在已经拥有75个以上的工作组，每个工作组均致力于互联网工程的不同方面。每个工作组均有一个邮件列表，用于讨论一个或多个编制中的草稿文档。一致通过的草稿文档可作为RFC文档发放。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	互联网实现了促进信息共享的功能，这为当前互联网的快速发展提供了动力；与此同时，我们应该了解网络在信息共享方面的首要作用是要通过RFC文档分享有关其本身的设计和运行的信息。发展网络新功能的这一独特方法将在互联网的未来演变中继续发挥重要的作用。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	广大社区的形成\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	互联网是技术的集合，也是社区的集合，它的成功很大程度上归功于它不仅满足了社区的基本需求，同时还有效地利用社区推动了基础设施的发展。这种社区精神历史悠久，源自早期的阿帕网。为完成上文介绍的分组交换技术的首次演示，早期的阿帕网研究人员作为一个组织严密的社区通力合作。同样，分组卫星、分组无线和其它几个DARPA计算机科学研究项目都是多个承包商相互协作的活动，他们在这些活动中大量使用了任何可用的机制来协调彼此的工作，从电子邮件到文件共享、远程访问再到最后的万维网功能。从阿帕网网络工作组开始，这些项目中的每一个都成立了一个工作组。由于阿帕网在支持各项研究项目时，发挥了一个基础设施的独特作用，所以随着互联网开始演变，网络工作组逐渐转变成了互联网工作组。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在20世纪70年代末期，DARPA当时的互联网项目经理Vint Cerf认识到互联网发展的同时，有兴趣的研究社区的规模也在发展，因而对协调机制的需求出现了增长。因此，他创立了数个协调机构 -- 国际合作委员会(ICB)，由伦敦大学学院的Peter Kirstein担任主席，负责协调以分组卫星研究为重点的一些合作欧洲国家的工作；互联网研究组，一个为普遍信息交换创造环境的包容性工作组；以及互联网配置控制委员会(ICCB)，由Clark担任主席。ICCB是一个邀请式机构，负责协助Cerf管理蓬勃发展的互联网活动。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1983年，Barry Leiner（贝瑞·雷纳）接管DARPA的互联网研究项目时，他与Clark认识到为了互联网社区的持续发展，需要对协调机制进行重组。他们解散了ICCB，成立了专责小组这一结构来取而代之，每个专责小组专门负责技术（如路由器、端对端协议等）的一个特定领域。而专责小组的各个主席组成了互联网活动委员会(IAB)。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	专责小组的各个主席都是前ICCB的委员，这当然只是一个巧合，而Dave Clark继续担任IAB的主席。IAB经过一些人员变动之后，Phill Gross（菲尔·格罗斯）成了重振旗鼓的互联网工程专责小组(IETF)的主席，此时IETF只是IAB的一个专责小组。如上所述，到1985年，互联网在更实用的方面/工程方面已取得了巨大发展。这一发展导致了IETF会议出席人数的激增，迫使Gross以工作组的形式为IETF创建了子结构。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	伴随这一发展的是社区的大幅扩张。美国国防部高级研究计划局(DARPA)不再是互联网唯一的主要资助机构。除美国国家科学基金会网(NSFNet)和美国政府及国际政府资助的各项活动外，人们对于商业领域的兴趣也开始出现增长。同时在1985年，Kahn和Leiner都从DARPA离职，DARPA的互联网活动大幅下降。结果，互联网活动委员会(IAB)连一名主要的发起人也没有，并逐渐挑起大梁。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着发展的继续，IAB和 IETF的子结构均进一步增加。IETF将工作组按不同领域划分，并指定领域指导。互联网工程指导组(IESG)由领域指导组成。IAB认识到了IETF日益增加的重要性，重组了标准流程来明确认可IESG为各项标准的主要审核机构。IAB也进行了重组，以便其余的专责小组（除IETF以外）被合并成为一个互联网研究专责小组(IRTF)，由Postel担任主席，以前的专责小组均更名为研究小组。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	商业领域的发展带来了对标准流程本身的更多关注。从20世纪80年代初期起直至今日，互联网的发展已超越了其最初的研究根基，如今不仅包括广大的用户社区，还包括更多的商业活动。人们越来越多地关注如何使流程公开和公平。同时伴随的是对互联网需要社区支持的认识，在Kahn创建的美国国家研究推进机构(CNRI)的支持下和Cerf的领导之下（Cerf当时属于CNRI），在1991最终促成了互联网协会的成立。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1992年发生了另一次重组。1992年，互联网活动委员会进行了重组并更名为“互联网架构委员会”，在互联网协会的支持之下进行运营。新的IAB与IESG之间的关系被定义为更加“平级”的关系，只不过IETF和IESG对标准的审批承担了更多的责任。最终，IAB、IETF和互联网协会之间形成了携手合作、互相支持的工作关系，同时互联网协会的目标是提供服务和其它措施，以方便IETF的工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	万维网的近期发展和广泛部署产生了一个新型社区，而致力于万维网工作的人员原先并未将自己主要当作网络的研究人员和开发人员来看待。万维网联盟(W3C)作为一个新的协调机构成立了。万维网联盟最初在麻省理工学院的计算机科学实验室成立，创建者是 Tim Berners-Lee（蒂姆·伯纳斯·李，万维网的发明者）和 Al Vezza（艾尔·韦扎）；万维网联盟负责发展与网络相关的各种协议和标准。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这样，经过二十多年的互联网活动，实现了组织结构的平稳演变，旨在为共同致力于解决互联网问题的、不断增长的社区提供支持和方便。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	技术商业化\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	互联网的商业化不仅包括竞争性的专用网络服务的开发，同时还包括实施互联网技术的商业产品的开发。在20世纪80年代初期，数十家供应商将TCP/IP纳入他们的产品中，因为他们发现存在这种联网方法的买家。不幸的是，他们对于有关技术应如何发挥作用和客户如何计划使用这种联网方法的真实信息缺乏了解。许多人认为这是不得不绑在他们自己专有网络解决方案，如SNA, DECNet, Netware, NetBios等中的令人讨厌的附加物。美国国防部要求在它购买的很多产品中使用TCP/IP，但在关于如何构建有用的TCP/IP产品方面却很少给予供应商帮助。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在认识到信息可获得性与相关培训的匮乏之后，Dan Lynch（丹·林奇）与 IAB合作，于1985年为所有的供应商举办了为期三天的研讨会，让他们了解TCP/IP的运作方式以及仍然做得不好的地方。研讨会的发言人主要来自DARPA研究社区，他们制定了这些协议又在日常的工作中运用了这些协议。大约有250位供应商人员前来聆听50位发明家和实验员的发言。此次研讨会为双方均带来了可喜的结果：供应商很惊奇地发现发明家们对于各种协议的运作方式（以及仍然做得不好的地方）是如此地毫无遮掩；而发明家们也很乐于倾听他们之前未加以考虑、供应商们在实际使用中正在发现的新问题。这样便形成了双向的讨论方式，并持续了十多年。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在举办了两年的会议、辅导班、设计会议和研讨会之后，互联网架构委员会组织了一场特别的活动，邀请其产品成功运行TCP/IP的供应商共聚一堂，在三天的时间里展示这些产品之间配合使用达到何种程度，以及在互联网中运行的效果。1988年九月，第一届Interop贸易展览会诞生了。50家公司被邀请参展。来自潜在的客户公司的5000名工程师前来参观，以亲眼目睹它是否真的完全象所说的那样神奇。为什么？因为供应商付出了极大的努力，以确保每个人的产品都能与其它所有的产品（甚至是其竞争对手的产品）进行互操作。自此之后，Interop贸易展览会经历了巨大的发展，目前每年在全世界7个地方举行，参观者超过25万人次，他们前来了解哪些产品能无缝地相互配合、了解最新产品并讨论最新技术。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Interop贸易展览会活动突出了人们为互联网商业化所作的努力，与此同时，供应商们也开始参加每年举行3到4次的IETF会议，就扩展TCP/IP协议集的新想法进行讨论。起初，这些会议的与会者只有数百人，他们中的大多数来自学术界，会议费用由政府承担；但现在，这些会议的与会者经常超过1000人，他们中的大多数来自供应商社区，会议费用由与会者自行承担。这一自发形成的团体以互相合作的方式发展了TCP/IP协议集。该团体能带来如此大的帮助作用是因为它由所有利益相关者组成，包括研究人员、最终用户和供应商。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	网络管理是研究社区和商业社区之间相互作用的一个例证。在互联网初期，人们将定义和执行实现互操作的协议作为重点。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着网络逐步发展壮大，人们开始明白用于管理网络的特别程序有时将无法扩展。分布式的自动算法取代了的表格的手工配置，同时为隔离故障，人们还发明了一些更好的工具。1987年，人们开始明白要对网络的各个组成部分（如路由器）进行统一的远程管理，需要制订一份协议。为此，出现了数份协议提案，其中有简单网络管理协议(或SNMP，正如其名称的含义一样，该协议以简化管理为目的，它是从之前的一份名为简单网关监控协议[SGMP]的提案派生出来的）、高级实体管理标准(HEMS)（来自研究社区的较为复杂的方案）以及公共管理信息协议(CMIP)（来自OSI社区）。在经过一系列会议讨论之后，为解决竞争问题，人们决定不将HEMS列为标准化的候选方案；但是SNMP和CMIP的工作将继续进行，他们的想法是SNMP可以作为较近时期内的解决方案，而CMIP为较长时期的方法。市场可以从中选择其认为更合适的一个。现在SNMP在基于网络的管理中几乎随处可用。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在过去的几年中，商业化已进入了一个新的阶段。原先，互联网商业化主要是供应商供应基本的网络产品，而服务提供商提供连通性和基本的互联网服务。但是现在，互联网已近乎成为一项“商品”服务，并且最近人们将很多注意力放在使用这一全球信息基础设施来支持其它商业服务之上。因为浏览器和万维网技术被广泛而迅速地采用，因而极大地促进了这一趋势的发展，用户因此能够轻松地在世界各地访问连接在一起的信息。市面上出现了为信息的提供创造便利条件的产品，同时许多最新的技术发展的目标都是除了提供互联网基本数据通信之外，还提供越来越复杂的信息服务。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	未来的历史\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	1995年10月24日，FNC一致通过一项决议，对“互联网”一词进行了定义。该定义是在与互联网和知识产权社区的成员们共同协商之后确立的。决议：联邦网络委员会(FNC)同意以下文字反映了“互联网”一词的定义。“互联网”指符合以下条件的全球信息系统：(i)&nbsp;根据互联网协议(IP)或其今后的扩展协议/后续协议，由一个全球独一无二的地址空间逻辑地连接在一起；(ii)&nbsp;能够支持使用传输控制协议/互联网协议(TCP/IP)集或其今后的扩展协议/后续协议，和/或其它与IP兼容的协议的通信；并且 (iii)&nbsp;公开或私下地提供、使用本文中介绍的相关基础设施上分层的高级别服务，或使这些服务可访问。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	互联网自从诞生后，在二十年中已发生了很大的变化。它是在分时时代孕育产生的，但是已经持续发展并进入到了个人电脑、客户端服务器和对等计算以及网络计算机的时代。互联网在局域网(LAN)之前创建，但却纳入了这一新网络技术以及较近期的异步传输模式(ATM)和框架交换式服务。互联网被人们寄予厚望：支持从文件共享和远程登陆到资源共享和互相协作等一系列的功能，并催生了电子邮件和最近的万维网。但是最重要的是，互联网起初是由一小群专注的研究人员创造出来的，发展至今，已在商业上取得了成功，每年可获数十亿美元的投资。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	然而，我们却不应就此得出结论说互联网的演变现在已经结束。互联网尽管在名义上和地理意义上是一个网络，但是它是计算机的产物，而非电话或电视产业的传统意义上的网络。如果它仍然要与计算机相关联，则它将（实际上必须）以计算机产业的发展速度进行变化和演变。目前，它正在变化以提供诸如实时传输之类的新服务，以支持诸如声频流和视频流之类的新功能。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	渗透式网络（如即互联网）与功能强大、价格实惠的便携式计算和通信产品（如笔记本电脑、双向传呼机、PDA、手机）的出现将使新范式的游牧计算和通信成为可能。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这一演变将给我们带来新的应用 -- 互联网电话，以及再远一点说，互联网电视。互联网将继续演变，到时将允许存在更复杂的定价和成本回收形式，在这个商业世界中，这可能是一个令人痛苦的要求。互联网还将不断变化，以容纳带有不同特点和要求的下一代基础网络技术（如宽带社区接入技术和卫星技术）。新的网络接入模式和新的服务形式将催生新的应用，反过来又将推动网络本身的进一步演变。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	关于互联网的未来，最紧迫的问题不是技术将如何变化，而是将如何管理变化和演变过程本身。正如本文所述，互联网的架构始终受由设计人员组成的核心团队驱动，但是随着相关方数量的增加，这一团队的形式也已发生了变化。互联网的成功产生了大量的利益相关者，利益相关者现在对网络不仅进行经济投资，同时还进行智力投资。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	从对域名空间的控制和下一代IP地址形式的辩论可以看出，人们在艰难地寻找将引领互联网未来发展的下一个社会结构。因为涉及的利益相关者很多，这一结构形式将更难寻找。同时，互联网产业也在艰难地寻找未来发展所需巨额投资的经济论据，例如将住宅的网络接入升级为更加合适的技术。如果互联网的发展举步维艰，不是因为我们没有新技术、远见或动力。而是因为我们不能确定方向，然后统一步伐地向未来进发。\r\n</p>\r\n<p>\r\n	<img alt=\"timeline\" src=\"https://www.internetsociety.org/sites/default/files/Timeline.png\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	时间表\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	脚注\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1&nbsp;这可能是一种夸张的说法，因为第一作者居住在硅谷。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2&nbsp;在最近一次去东京书店时，一位作者查点到有关互联网的英文杂志有14种。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	3&nbsp;本文的精简版于1997年2月发表于《CACM》杂志50周年刊。作者特此表达他们对《CACM》杂志的高级编辑 Andy Rosebloom（ 安迪·罗圣朋）的感激之情，感谢他鼓励我们撰写本文，以及在编辑本文及其精简版本时给予的宝贵帮助。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	4&nbsp;1971年美国高级研究计划局(ARPA)更名为美国国防部高级研究计划局(DARPA)，于1993年改回原名，然后于1996年又再次改为DARPA。本文全文采用现有名称DARPA。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	5&nbsp;兰德公司(RAND)的研究引发了阿帕网与创建抵抗核战争的网络有某种联系的谣言。其实阿帕网根本并非如此，只有兰德公司与此无关的安全语音研究才涉及核战争。不过，互联网连接的后期工作确实重视稳健性与耐久性，包括承受大部分基础网络损失的能力。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	6&nbsp;其中有Vint Cerf、Steve Crocker和Jon Postel。后来加入他们的有David Crocker，他在创建电子邮件协议的文档中发挥了重要的作用； 以及Robert Braden（ 罗伯特·布雷登），他为IBM公司的大型计算机开发了首个NCP和TCP，并在ICCB和IAB长期任职。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	7&nbsp;该文件随后以“<a href=\"http://www.isoc.org/internet/history/brief.shtml#VGC74\">分组网络互联协议”</a>的名称由V. G. Cerf和 R. E. Kahn于1974年5月发表于《IEE Trans. Comm. Tech》杂志第COM-22卷V5部分第627-641页。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	8&nbsp;想要实现电子邮件的交换，结果却导致了第一批“互联网书籍”之一&nbsp;《!%@::电子邮件寻址和网络目录》的问世，它是由 Frey（弗雷）和 Adams（亚当斯）所著，与电子邮件地址的转换和转发有关。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	9&nbsp;原名为“联邦研究互联网协调委员会”(FRICC)。FRICC最初是为协调美国研究网络活动，支持CCIRN提供的国际协调工作而创建的。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	10&nbsp;1989年在阿帕网诞生20周年之际，加州大学洛杉矶分校的一个学术报告会举行了阿帕网退役的庆祝活动。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	参考资料\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“论分布式通信网络”，P. Baran著，1964年3月发表于《IEEE Trans. Comm. Systems》杂志。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“分组网络互联协议”，V. G. Cerf与R. E. Kahn著，1974年5月发表于&nbsp;《IEEE Trans. Comm.&nbsp; Tech》杂志第COM-22卷V5部分第627-641页。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“RFC001主机软件”，S. Crocker著，发表于1969年4月7日。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“操作系统的通信原理”，R. Kahn著，1972年1月发表于BBN公司的内部读物之上。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“电气与电子工程师学会会报”，1978年11月发表于《分组通信网络特刊》第11号66卷。（客座编辑：Robert Kahn；副客座编辑： Keith Uncapher[基斯·昂卡福]和Harry van Trees[哈瑞·凡·特瑞斯]）\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“大型通信网络中的信息流”，L. Kleinrock著，1961年7月发表于《RLE季度进度报告》。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“通信网络：随机的信息流动与延迟”，L. Kleinrock著，Mcgraw-Hill（纽约）1964年出版。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“排队系统：计算机应用第二卷”&nbsp;L. Kleinrock著，John Wiley and Sons（纽约）1976年出版。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“在线人机通迅”，J.C.R. Licklider &amp; W. Clark著，1962年8月出版。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“通向分时计算机的合作网络”，L. Roberts &amp; T. Merrill著，AFIPS秋季会议 1966&nbsp;年10月出版。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“多个计算机网络和计算机间的通信”，L. Roberts著，ACM Gatlinburg Conf.公司 1967年10月出版。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	作者\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Barry M. Leiner曾在<a href=\"http://www.riacs.edu/\">高级计算机科学研究所</a>担任总监。他于2003年4月去世。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:vint@google.com\">Vinton G. Cerf</a>是<a href=\"http://www.google.com/\">Google公司</a>的副总裁兼首席互联网传道者。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:ddc@lcs.mit.edu\">David D. Clark</a>是<a href=\"http://web.mit.edu/\">麻省理工学院计算机科学实验室</a>的高级研究科学家。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:rkahn@cnri.reston.va.us\">Robert E. Kahn</a>是<a href=\"http://www.cnri.reston.va.us/\">美国国家研究倡议公司</a>的总裁。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:lk@cs.ucla.edu\">Leonard Kleinrock</a>是<a href=\"http://www.ucla.edu/\">加州大学洛杉矶分校</a>的计算科学教授，同时还是<a href=\"http://www.nomadix.com/\">Nomadix公司</a>的董事长兼创始人。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:dan@lynch.com\">Daniel C. Lynch</a>是<a href=\"http://www.cybercash.com/\">CyberCash Inc.</a>和Interop网络贸易展会的创始人。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://www.isoc.org/postel/\">Jon Postel</a>曾在南加州大学的<a href=\"http://www.isi.edu/\">信息科学学院</a>的计算机网络部担任总监，并一直从事此份工作直至1998年10月16日去世。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:lroberts@anagran.com\">Lawrence G. Roberts 博士</a>是<a href=\"http://www.anagran.com/\">Anagran, Inc</a>的首席执行官、总裁兼主席。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"mailto:swolff@cisco.com\">Stephen Wolff</a>是<a href=\"http://www.internet2.edu/\">Internet2</a>的技术总监。\r\n</p>',NULL,'2014-04-12 08:45:04','2014-04-12 08:40:58',0,'互联网简史',0),(13,'admin',7,'<p>\r\n	本文原文连接: http://blog.csdn.net/bluishglc/article/details/7622286 ,转载请注明出处！\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	1.为什么使用exec？\r\n</h2>\r\n<br />\r\n现在的工程往往依赖众多的jar包，不像war包工程，对于那些打包成jar包形式的本地java应用来说，通过java命令启动将会是一件极为繁琐的事情，原因很简单，太多的依赖让参数-classpath变得异常的恐怖。为此，在发布应用时，一般使用两种方法来启动应用程序：一种是通过工具将工程及其所有依赖的jar包打包成一个独立的jar包（在maven里有两个插件assemly和shade是用来完成这种工作的）;另一种方法是编写一个run.bat文件，文件包含一个启动应用的java命令，很显然，这个命令的classpath必须包含全部依赖的jar包。但是对于尚处在开发阶段的应用来说，第一种方法需要将所有jar包解压再重新打包，因此非常耗时，特别是工程非常大的时候。第二种方法的问题在于，对处在开发阶段的工程，经常需要引入或升级jar包，这就需要频繁地修改run.bat文件。实际上，对于使用maven管理的工程，完全可以通过maven来获取工程的classpath,简化应用程序的启动命令，这正是maven插件exec被设计出来的主要动机。使用exec比使用java命令去启动应用程序最大的优势就在于：你不需要再去为-classpath而伤脑筋了。<br />\r\n<br />\r\n<h2>\r\n	2. exec:exec和exec:java的区别\r\n</h2>\r\n<br />\r\n<p>\r\n	exec主要由两个goal组成：exec:exec和exec:java。你应该如何选择呢？首先，你需要记住，exec:exec总是比exec:java强大而灵活，这一点会在后面的示例中体现出来，除此之外，两者的主要区别是在线程管理上：exec:exec总是启动一个新的线程，并且在只剩下守护线程的时候从VM上退出(关闭应用程序)。而对于exec:java，当所有非守护线程结束时，守护线程会被joine或interrupt，应该程序不会关闭。但是对于一般的使用者来说，这种差别并不重要。对于两者的选择，一般来说，如果你的工程启动非常简单，不需要设置jvm参数、系统属性、命令行参数，那么就用exec:java，你只需要指定一下mainClass，一切就OK了。例如这面这段配置：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-xml\">	&lt;plugin&gt;\r\n		&lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;\r\n		&lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;\r\n		&lt;version&gt;1.2.1&lt;/version&gt;\r\n		&lt;executions&gt;\r\n			&lt;execution&gt;\r\n				&lt;goals&gt;\r\n					&lt;goal&gt;java&lt;/goal&gt;\r\n				&lt;/goals&gt;\r\n			&lt;/execution&gt;\r\n		&lt;/executions&gt;\r\n		&lt;configuration&gt;\r\n			&lt;mainClass&gt;com.yourcompany.app.Main&lt;/mainClass&gt;\r\n		&lt;/configuration&gt;\r\n	&lt;/plugin&gt;</pre>\r\n</p>\r\n<br />\r\n如果恰恰相反，你的应用程序启动非常复杂，需要设置jvm参数、系统属性、命令行参数等，那么你就需要使用exec:exec了，下面我们看一个exec:exec的“好”“大”“全”示例。<br />\r\n<br />\r\n<h2>\r\n	3.一个“好”“大”“全”的例子\r\n</h2>\r\n<br />\r\n<p>\r\n	假定我们的应用程序是通过这样的java命令来启动的：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	java -DsystemProperty1=value1 -DsystemProperty2=value2 -XX:MaxPermSize=256m -classpath .... com.yourcompany.app.Main arg1 arg2\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	这个启动命令先后为应用程序设置了必要的系统属性systemProperty1和systemProperty2，然后设置了一个jvm参数，接着是程序的classpath，....省略的部分就是我不说你也能想到会有多么冗长的类路径了，再接下来是程序入口--主类的类名，arg1 arg2是传给应用程序的命令行参数。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	3.1. 在xml中配置：\r\n</h2>\r\n首先我们来看一下如何在pom中通过配置来实现这个启动命令：\r\n<p>\r\n<pre class=\"prettyprint lang-xml\">	&lt;plugin&gt;\r\n		&lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;\r\n		&lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;\r\n		&lt;version&gt;1.2.1&lt;/version&gt;\r\n		&lt;configuration&gt;\r\n			&lt;executable&gt;java&lt;/executable&gt; &lt;!-- executable指的是要执行什么样的命令 --&gt;\r\n			&lt;arguments&gt;\r\n				&lt;argument&gt;-DsystemProperty1=value1&lt;/argument&gt; &lt;!-- 这是一个系统属性参数 --&gt;\r\n				&lt;argument&gt;-DsystemProperty2=value2&lt;/argument&gt; &lt;!-- 这是一个系统属性参数 --&gt;\r\n				&lt;argument&gt;-XX:MaxPermSize=256m&lt;/argument&gt; &lt;!-- 这是一个JVM参数 --&gt;\r\n				&lt;!--automatically creates the classpath using all project dependencies, \r\n					also adding the project build directory --&gt;\r\n				&lt;argument&gt;-classpath&lt;/argument&gt; &lt;!-- 这是classpath属性，其值就是下面的&lt;classpath/&gt; --&gt;\r\n				&lt;classpath/&gt; &lt;!-- 这是exec插件最有价值的地方，关于工程的classpath并不需要手动指定，它将由exec自动计算得出 --&gt;\r\n				&lt;argument&gt;com.yourcompany.app.Main&lt;/argument&gt; &lt;!-- 程序入口，主类名称 --&gt;\r\n				&lt;argument&gt;arg1&lt;/argument&gt; &lt;!-- 程序的第一个命令行参数 --&gt;\r\n				&lt;argument&gt;arg2&lt;/argument&gt; &lt;!-- 程序的第二个命令行参数 --&gt;\r\n			&lt;/arguments&gt;\r\n		&lt;/configuration&gt;\r\n	&lt;/plugin&gt;</pre>\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	将上面的配置加到pom中并保存，然后执行：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	mvn exec:exec\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	即可启动应用程序了。\r\n</p>\r\n<br />\r\n<h2>\r\n	3.2. 在命令行中配置：\r\n</h2>\r\n<br />\r\n<p>\r\n	除写在pom配置文件中，exec也支持更加灵活的命令行方式来启动，你可以在你的pom中只声明引入了exec插件，不提供任何配置内容，然后在命令行中设置相关参数，同样以上面的命令为例，如果使用命令行方式来配置，那么这个命令将会是：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	mvn exec:exec -Dexec.executable=\"java\" -Dexec.args=\"-DsystemProperty1=value1 -DsystemProperty2=value2 -XX:MaxPermSize=256m -classpath %classpath com.yourcompany.app.Main arg1 arg2\"\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	怎么样，是不是看起来更加简洁？\r\n</p>\r\n<br />\r\n注意：exec.args指的是exec:exec的commandlineArgs参数，而我们上面xml配置中的参数是arguments，两者是不一样的，这种做法是比较好的，因为exec规定：如果有commandlineArgs，将优先使用commandlineArgs，如果没有再去找是否配置了argument，这样给我们在命令行执行不同设定参数的机会。下面是exec官网对此的相关说明：<br />\r\n<br />\r\n1.If commandLineArgs is specified, it will be used as is, except for replacing %classpath with proper classpath using dependencies<br />\r\n2.Otherwise if the property exec.args is specified, it will be used<br />\r\n3.Otherwise the list of argument and classpath will be parsed and used',NULL,'2014-04-14 09:26:47','2014-04-14 09:24:48',0,'Exec Maven Plugin全面解析和使用示例',0),(14,'admin',4,'<h2>\r\n	导言\r\n</h2>\r\n<p>\r\n	过去几年，REST逐渐成为影响Web框架、Web协议与Web应用设计的重要概念。如果你还不了解REST，那<a href=\"http://www.infoq.com/articles/rest-introduction\">这个简短的介绍</a>将有助你快速掌握REST，此外还可以点击<a href=\"http://www.infoq.com/rest\">这里</a>了解关于REST的更多信息。\r\n</p>\r\n<p>\r\n	现在有越来越多的公司希望能以简单而又贴合Web架构本身的方式公开Web API，因此REST变得越来越重要也就不足为奇了。使用Ajax进行通信的富浏览器端也在朝这个目标不断迈进。这个架构原则提升了万维网的可伸缩性，无论何种应用都能从该原则中受益无穷。\r\n</p>\r\n<p>\r\n	<a href=\"http://jcp.org/en/jsr/detail?id=311\">JAX-RS</a>（JSR 311）指的是Java API for RESTful Web Services，<a href=\"http://www.ics.uci.edu/~fielding/\">Roy Fielding</a>也参与了JAX-RS的制订，他在自己的博士<a href=\"http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\">论文</a>中定义了REST。对于那些想要构建RESTful Web Services的开发者来说，JAX-RS给出了不同于JAX-WS（JSR-224）的另一种解决方案。目前共有4种JAX-RS实现，所有这些实现都支持Spring，<a href=\"http://wikis.sun.com/display/Jersey/Main\">Jersey</a>则是JAX-RS的参考实现，也是本文所用的实现。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	如果你使用Spring进行开发，那可能想知道（或者有人曾问过你）Spring MVC与JAX-RS有何异同点？更进一步，如果你手头有一个Spring MVC应用，使用了控制类继承（SimpleFormController等），你可能还意识不到现在的Spring MVC对REST广泛的支持。\r\n</p>\r\n<p>\r\n	本文将介绍Spring 3中的REST特性并与JAX-RS进行对比，希望能帮助你理顺这两种编程模型之间的异同点。\r\n</p>\r\n<p>\r\n	开始前，有必要指出JAX-RS的目标是Web Services开发（这与HTML Web应用不同）而Spring MVC的目标则是Web应用开发。Spring 3为Web应用与Web Services增加了广泛的REST支持，但本文则关注于与Web Services开发相关的特性。我觉得这种方式更有助于在JAX-RS的上下文中讨论Spring MVC。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	要说明的第二点是我们将要讨论的REST特性是Spring Framework的一部分，也是现有的Spring MVC编程模型的延续，因此，并没有所谓的“Spring REST framework”这种概念，有的只是Spring和Spring MVC。这意味着如果你有一个Spring应用的话，你既可以使用Spring MVC创建HTML Web层，也可以创建RESTful Web Services层。\r\n</p>\r\n<h3>\r\n	关于文中的代码片段\r\n</h3>\r\n<p>\r\n	文中的代码片段假想了一个简单的领域模型：两个JPA注解实体，分别是Account和Portfolio，其中一个Account对应多个Portfolio。持久层使用Spring配置，包含了一个JPA仓储实现，用于获取和持久化实体实例。Jersey和Spring MVC用于构建Web Services层，通过调用底层的Spring托管应用来服务客户端请求。\r\n</p>\r\n<h2>\r\n	引导程序与Web层包装\r\n</h2>\r\n<p>\r\n	我们会在Spring MVC和JAX-RS中都使用Spring实现依赖注入。Spring MVC DispatcherServlet和Jersey SpringServlet会把请求代理给Spring管理的REST层组件（控制器或资源），后者会由业务或持久层组件包装起来，如下图所示：\r\n</p>\r\n<p>\r\n	<img border=\"0\" src=\"http://www.infoq.com/resource/articles/springmvc_jsx-rs/en/resources/wiring.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	Jersey和Spring MVC都使用Spring的ContextLoaderListener加载业务与持久层组件，比如JpaAccountRepository：\r\n</p>\r\ncontextConfigLocationclasspath:META-INF/spring/module-config.xmlorg.springframework.web.context.ContextLoaderListener\r\n<p>\r\n	ContextLoaderListener可用于任何Web或REST框架环境中。\r\n</p>\r\n<h3>\r\n	在Jersey中创建Spring管理的JAX-RS资源\r\n</h3>\r\n<p>\r\n	Jersey支持在REST层中使用Spring，两个简单的步骤就能搞定（事实上有3步，还需要将构建依赖加到maven artifact com.sun.jersey.contribs:jersey-spring中）。\r\n</p>\r\n<p>\r\n	步骤一：将如下配置片段加到web.xml中以保证Spring能够创建JAX-RS根资源：\r\n</p>\r\nJersey Web Applicationcom.sun.jersey.spi.spring.container.servlet.SpringServletJersey Web Application/resources/*\r\n<p>\r\n	步骤二：使用Spring和JAX-RS注解声明根JAX-RS资源类：\r\n</p>\r\n@Path(\"/accounts/\")\r\n@Component\r\n@Scope(\"prototype\")\r\npublic class AccountResource {\r\n    @Context\r\n    UriInfo uriInfo;\r\n    @Autowired\r\n    private AccountRepository accountRepository;\r\n}\r\n<p>\r\n	如下是对这些注解的说明：\r\n</p>\r\n<p>\r\n	@Component将AccountResource声明为Spring bean。\r\n</p>\r\n<p>\r\n	@Scope声明了一个prototype Spring bean，这样每次使用时都会实例化（比如每次请求时）。\r\n</p>\r\n<p>\r\n	@Autowired指定了一个AccountRepository引用，Spring会提供该引用。\r\n</p>\r\n<p>\r\n	@Path是个JAX-RS注解，它将AccountResource声明为“根”JAX-RS资源。\r\n</p>\r\n<p>\r\n	@Context也是一个JAX-RS注解，要求注入特定于请求的UriInfo对象。\r\n</p>\r\n<p>\r\n	JAX-RS有“根”资源（标记为@Path）和子资源的概念。在上面的示例中，AccountResource就是个根资源，它会处理以“/accounts/”开头的路径。AccountResource中的方法如getAccount()只需声明针对类型级别的相对路径即可。\r\n</p>\r\n@Path(\"/accounts/\")\r\n@Component\r\n@Scope(\"prototype\")\r\npublic class AccountResource {\r\n    @GET\r\n    @Path(\"{username}\")\r\n    public Account getAccount(@PathParam(\"username\") String username) {\r\n    }\r\n}\r\n<p>\r\n	访问路径“/accounts/{username}”（其中的username是路径参数，可以是某个账户的用户名）的请求将由getAccount()方法处理。\r\n</p>\r\n<p>\r\n	根资源由JAX-RS运行时（在本示例中是Spring）实例化，子资源则由应用本身实例化。比如说，对于“/accounts/{username}/portfolios/{portfolioName}”这样的请求，AccountResource（由路径的第一部分“/accounts”标识）会创建一个子资源实例，请求会被代理给该实例：\r\n</p>\r\n@Path(\"/accounts/\")\r\n@Component\r\n@Scope(\"prototype\")\r\npublic class AccountResource {\r\n    @Path(\"{username}/portfolios/\")\r\n    public PortfolioResource getPortfolioResource(@PathParam(\"username\") String username) {\r\n        return new PortfolioResource(accountRepository, username, uriInfo);\r\n    }\r\n}\r\n<p>\r\n	PortfolioResource本身的声明并没有使用注解，因此其所有的依赖都是由父资源传递过来的：\r\n</p>\r\npublic class PortfolioResource {\r\n    private AccountRepository accountRepository;\r\n    private String username;\r\n    private UriInfo uriInfo;\r\n    public PortfolioResource(AccountRepository accountRepository, String username, UriInfo uriInfo) {\r\n        this.accountRepository = accountRepository;\r\n        this.username = username;\r\n        this.uriInfo = uriInfo;\r\n    }\r\n}\r\n<p>\r\n	JAX-RS中的根与子资源创建了一个处理链，它会调用多个资源：\r\n</p>\r\n<p>\r\n	<img border=\"0\" src=\"http://www.infoq.com/resource/articles/springmvc_jsx-rs/en/resources/resource-chain.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	请记住，资源类是Web Services层组件，应当关注于Web Services相关的处理，比如输入转换、准备响应、设定响应代码等等。此外，将Web Services逻辑与业务逻辑分隔开来的实践需要将业务逻辑包装到单独的方法中以作为事务边界。\r\n</p>\r\n<h3>\r\n	创建Spring MVC @Controller类\r\n</h3>\r\n<p>\r\n	对于Spring MVC来说，我们需要创建DispatcherServlet，同时将contextConfigLocation参数指定为Spring MVC配置：\r\n</p>\r\nSpring MVC Dispatcher Servletorg.springframework.web.servlet.DispatcherServletcontextConfigLocation/WEB-INF/spring/*.xml\r\n<p>\r\n	要想在Spring MVC（@MVC）中使用基于注解的编程模型还需要少量的配置。下面的component-scan元素会告诉Spring去哪里寻找@Controller注解类。\r\n</p>\r\n<p>\r\n	接下来，我们声明了AccountController，如下代码所示：\r\n</p>\r\n@Controller\r\n@RequestMapping(\"/accounts\")\r\npublic class AccountController {\r\n    @Autowired\r\n    private AccountRepository accountRepository;\r\n}\r\n<p>\r\n	@RequestMapping注解会将该控制器映射到所有以“/accounts”开头的请求上。AccountController中的方法如getAccount()只需声明针对“/accounts”的相对地址即可。\r\n</p>\r\n@RequestMapping(value = \"/{username}\", method = GET)\r\npublic Account getAccount(@PathVariable String username) {\r\n}\r\n<p>\r\n	Spring MVC则没有根资源与子资源的概念，这样每个控制器都是由Spring而非应用来管理的：\r\n</p>\r\n@Controller\r\n@RequestMapping(\"/accounts/{username}/portfolios\")\r\npublic class PortfolioController {\r\n    @Autowired\r\n    private AccountRepository accountRepository;\r\n}\r\n<p>\r\n	对“/accounts/{username}/portfolios”的请求会被直接代理给PortfolioController，AccountController则完全不会参与其中。需要注意的是，该请求也可以直接由AccountController处理，这样就不需要PortfolioController了。\r\n</p>\r\n<h3>\r\n	Web层组件范围\r\n</h3>\r\n<p>\r\n	在JAX-RS中，AccountResource是通过前请求（per-request）语义声明的，这也是JAX-RS默认的推荐设置。这么做可以将特定于请求的数据注入并存储到资源类本身当中，这适用于由JAX-RS所管理的根级别资源。子资源由应用实例化，并不会直接从这种方法中获益。\r\n</p>\r\n<p>\r\n	在Spring MVC中，控制器永远都是单例的，他们将特定于请求的数据作为方法参数。JAX-RS也可以这么做，以单例的方式创建资源。\r\n</p>\r\n<h2>\r\n	将请求映射到方法上\r\n</h2>\r\n<p>\r\n	接下来，我们看看Spring MVC和JAX-RS如何将请求映射到方法上。@Path和@RequestMapping都可以从URL中抽取出路径变量：\r\n</p>\r\n@Path(\"/accounts/{username}\")\r\n@RequestMapping(\"/accounts/{username}\")\r\n<p>\r\n	这两个框架也都可以使用正则表达式抽取路径变量：\r\n</p>\r\n@Path(\"/accounts/{username:.*}\")\r\n@RequestMapping(\"/accounts/{username:.*}\"\r\n<p>\r\n	Spring MVC的@RequestMapping可以根据查询参数的有无来匹配请求：\r\n</p>\r\n@RequestMapping(parameters=\"foo\")\r\n@RequestMapping(parameters=\"!foo\")\r\n<p>\r\n	或是根据查询参数值进行匹配：\r\n</p>\r\n@RequestMapping(parameters=\"foo=123\")\r\n<p>\r\n	@RequestMapping还可以根据头信息的有无来匹配请求：\r\n</p>\r\n@RequestMapping(headers=\"Foo-Header\")\r\n@RequestMapping(headers=\"!Foo-Header\")\r\n<p>\r\n	或是根据头信息的值进行匹配：\r\n</p>\r\n@RequestMapping(headers=\"content-type=text/*\")\r\n<h2>\r\n	处理请求数据\r\n</h2>\r\n<p>\r\n	HTTP请求中包含着应用需要提取和处理的数据，如HTTP头、cookie、查询字符串参数、表单参数以及请求体（XML、JSON等）中所包含的大量数据。在RESTful应用中，URL本身也可以带有重要的信息，如通过路径参数指定需要访问哪个资源、通过文件扩展名（.html, .pdf）指定需要何种内容类型等。HttpServletRequest提供了处理这一切的所有底层访问机制，但直接使用HttpServletRequest实在是太乏味了。\r\n</p>\r\n<h3>\r\n	请求参数、Cookies和HTTP头\r\n</h3>\r\n<p>\r\n	Spring MVC和JAX-RS拥有能够抽取这种HTTP请求值的注解：\r\n</p>\r\n@GET @Path\r\npublic void foo(@QueryParam(\"q\") String q, @FormParam(\"f\") String f, @CookieParam(\"c\") String c,\r\n    @HeaderParam(\"h\") String h, @MatrixParam(\"m\") m) {\r\n    // JAX-RS\r\n}\r\n@RequestMapping(method=GET)\r\npublic void foo(@RequestParam(\"q\") String q, @CookieValue(\"c\") String c, @RequestHeader(\"h\") String h) {\r\n    // Spring MVC\r\n}\r\n<p>\r\n	上面的注解非常像，区别在于JAX-RS支持矩阵参数（matrix parameters）的抽取，拥有单独的注解来处理查询字符串和表单参数。矩阵参数并不常见，他们类似于查询字符串参数，但却使用了特殊的路径片段（比如GET /images;name=foo;type=gif）。稍后将介绍表单参数。\r\n</p>\r\n<p>\r\n	假如使用了前请求范围声明资源，那么JAX-RS可以在属性和setters方法上使用上述注解。\r\n</p>\r\n<p>\r\n	Spring MVC有个特性能让我们少敲几个字符，如果注解名与Java参数名相同，那么就可以省略掉上面的注解名了。比如说，名为“q”的请求参数要求方法参数也得为“q”：\r\n</p>\r\npublic void foo(@RequestParam String q, @CookieValue c, @RequestHeader h) {\r\n}\r\n<p>\r\n	这对于那些在参数中使用了注解而导致方法签名变长的情况来说实在是太方便了。请记住，这个特性要求代码使用调试符号进行编译。\r\n</p>\r\n<h4>\r\n	类型转换与HTTP请求值的格式化\r\n</h4>\r\n<p>\r\n	HTTP请求值（头、cookies和参数）是不变的字符串并且需要解析。\r\n</p>\r\n<p>\r\n	JAX-RS通过寻找valueOf()方法或是在客户化的目标类型中接收字符串的构造方法来解析请求数据。JAX-RS支持如下类型的注解方法参数，包括路径变量、请求参数、HTTP头值和cookies：\r\n</p>\r\n<ul>\r\n	<li>\r\n		原生类型。\r\n	</li>\r\n	<li>\r\n		拥有接收单个字符串参数的构造方法的类型。\r\n	</li>\r\n	<li>\r\n		拥有一个接收单个字符串参数的名为valueOf的静态方法的类型。\r\n	</li>\r\n	<li>\r\n		List、Set或是SortedSet，其中的T满足上面2个或3个要求。\r\n	</li>\r\n</ul>\r\n<p>\r\n	Spring 3支持上面所有要求。除此之外，Spring 3提供了一种全新的<a href=\"http://blog.springsource.com/2009/11/17/spring-3-type-conversion-and-validation/\">类型转换与格式化机制</a>，并且可以使用注解实现。\r\n</p>\r\n<h4>\r\n	表单数据\r\n</h4>\r\n<p>\r\n	如前所述，JAX-RS处理查询字符串参数和表单参数的方式是不同的。虽然Spring MVC只有一个@RequestParam，但它还提供了一种Spring MVC用户很熟悉的数据绑定机制来处理表单输入。\r\n</p>\r\n<p>\r\n	比如说，如果一个表单提交了3个数据，那么一种可能的处理方式就是声明一个带有3个参数的方法：\r\n</p>\r\n@RequestMapping(method=POST)\r\npublic void foo(@RequestParam String name, @RequestParam creditCardNumber, @RequestParam expirationDate) {\r\n    Credit card = new CreditCard();\r\n    card.setName(name);\r\n    card.setCreditCardNumber(creditCardNumber);\r\n    card.setExpirationDate(expirationDate);\r\n}\r\n<p>\r\n	然而，随着表单数据量的增加，这种处理方式就会变得不切实际。借助于数据绑定，Spring MVC可以创建、组装并传递包含有嵌套数据（账单地址、邮件地址等）、任意结构的表单对象。\r\n</p>\r\n@RequestMapping(method=POST)\r\npublic void foo(CreditCard creditCard) {\r\n    // POST /creditcard/1\r\n    //		name=Bond\r\n    //		creditCardNumber=1234123412341234\r\n    //		expiration=12-12-2012\r\n}\r\n<p>\r\n	要想与Web浏览器协同工作，表单处理是个重要环节。另一方面，Web Services客户端一般会在请求体中提交XML或JSON格式的数据。\r\n</p>\r\n<h3>\r\n	处理请求体中的数据\r\n</h3>\r\n<p>\r\n	无论是Spring MVC还是JAX-RS都能够自动处理请求体中的数据：\r\n</p>\r\n@POST\r\npublic Response createAccount(Account account) {\r\n    // JAX_RS\r\n}\r\n@RequestMapping(method=POST)\r\npublic void createAccount(@RequestBody Account account) {\r\n    // Spring MVC\r\n}\r\n<h4>\r\n	JAX-RS中的请求体数据\r\n</h4>\r\n<p>\r\n	在JAX-RS中，类型MessageBodyReader的实体供应者负责转换请求体数据。JAX-RS的实现需要拥有一个JAXB MessageBodyReader，这可以使用具有注解@Provider的客户化MessageBodyReader实现。\r\n</p>\r\n<h4>\r\n	Spring MVC中的请求体数据\r\n</h4>\r\n<p>\r\n	在Spring MVC中，如果想通过请求体数据初始化方法参数，那可以将@RequestBody注解加到该方法参数前，这与之前介绍的表单参数初始化正好相反。\r\n</p>\r\n<p>\r\n	在Spring MVC中，HttpMessageConverter类负责转换请求体数据，Spring MVC提供了一个开箱即用的<a href=\"http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/ch14.html\">Spring OXM</a> HttpMessageConverter。它支持JAXB、Castor、JiBX、XMLBeans和XStream，此外还有一个用于<a href=\"http://blog.springsource.com/2010/01/25/ajax-simplifications-in-spring-3-0/\">处理JSON</a>的<a href=\"http://jackson.codehaus.org/\">Jackson</a> HttpMessageConverter。\r\n</p>\r\n<p>\r\n	HttpMessageConverter会注册到AnnotationMethodHandlerAdapter上，后者会将到来的请求映射到Spring MVC @Controllers上。下面是其配置：\r\n</p>\r\n<p>\r\n	下图阐述了该配置：\r\n</p>\r\n<p>\r\n	<img border=\"0\" src=\"http://www.infoq.com/resource/articles/springmvc_jsx-rs/en/resources/handler-adapter.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	Spring 3新增的<a href=\"http://blog.springsource.com/2009/12/21/mvc-simplifications-in-spring-3-0/\">mvc客户化命名空间</a>将上述配置自动化了，只需增加如下配置片段即可：\r\n</p>\r\n<p>\r\n	如果JAXB位于类路径上，它会注册一个用于读写XML的转换器；如果<a href=\"http://jackson.codehaus.org/\">Jackson</a>位于类路径上，它会注册一个用于读写JSON的转换器。\r\n</p>\r\n<h2>\r\n	准备响应\r\n</h2>\r\n<p>\r\n	典型的响应需要准备响应代码、设定HTTP响应头、将数据放到响应体当中，还需要处理异常。\r\n</p>\r\n<h3>\r\n	使用JAX-RS设定响应体数据\r\n</h3>\r\n<p>\r\n	在JAX-RS中，要想将数据加到响应体中，只需要从资源方法中返回对象即可：\r\n</p>\r\n@GET\r\n@Path(\"{username}\")\r\npublic Account getAccount(@PathParam(\"username\") String username) {\r\n    return accountRepository.findAccountByUsername(username);\r\n}\r\n<p>\r\n	JAX-RS会寻找类型MessageBodyWriter的实体供应者，它能将对象转换为所需的内容类型。JAX-RS实现需要具备一个JAXB MessageBodyWriter，这可以使用具有注解@Provider的客户化MessageBodyWriter实现。\r\n</p>\r\n<h3>\r\n	使用Spring MVC设定响应体数据\r\n</h3>\r\n<p>\r\n	在Spring MVC中，响应是通过一个视图解析过程来实现的，这样就可以从一系列视图技术中选择了。但在与Web Services客户端交互时，更加合理的方式则是舍弃视图解析过程，转而使用方法所返回的对象：\r\n</p>\r\n@RequestMapping(value=\"/{username}\", method=GET)\r\npublic @ResponseBody Account getAccount(@PathVariable String username) {\r\n    return accountRepository.findAccountByUsername(username);\r\n}\r\n<p>\r\n	如果对控制器方法或其返回类型应用注解@ResponseBody，那么就会使用HttpMessageConverter处理返回值，然后用该返回值设定响应体。用于请求体参数的HttpMessageConverter集合也用于响应体，因此无需再做任何配置。\r\n</p>\r\n<h3>\r\n	状态代码与响应头\r\n</h3>\r\n<p>\r\n	JAX-RS使用一个链式API来构建响应：\r\n</p>\r\n@PUT @Path(\"{username}\")\r\npublic Response updateAccount(Account account) {\r\n    // ...\r\n    return Response.noContent().build();	// 204 (No Content)\r\n}\r\n<p>\r\n	这可以与UriBuilder联合使用来为Location响应头创建实体链接：\r\n</p>\r\n@POST\r\npublic Response createAccount(Account account) {\r\n    // ...\r\n    URI accountLocation = uriInfo.getAbsolutePathBuilder().path(account.getUsername()).build();\r\n    return Response.created(accountLocation).build();\r\n}\r\n<p>\r\n	上面代码中所用的uriInfo要么被注入到根资源（使用了@Context）中，要么是从父资源传递给子资源。它可以附加到当前请求的路径之后。\r\n</p>\r\n<p>\r\n	Spring MVC提供了一个注解来设定响应代码：\r\n</p>\r\n@RequestMapping(method=PUT)\r\n@ResponseStatus(HttpStatus.NO_CONTENT)\r\npublic void updateAccount(@RequestBody Account account) {\r\n    // ...\r\n}\r\n<p>\r\n	可以直接使用HttpServletResponse对象设定Location头：\r\n</p>\r\n@RequestMapping(method=POST)\r\n@ResponseStatus(CREATED)\r\npublic void createAccount(@RequestBody Account account, HttpServletRequest request,\r\n				HttpServletResponse response) {\r\n    // ...\r\n    String requestUrl = request.getRequestURL().toString();\r\n    URI uri = new UriTemplate(\"{requestUrl}/{username}\").expand(requestUrl, account.getUsername());\r\n    response.setHeader(\"Location\", uri.toASCIIString());\r\n}\r\n<h3>\r\n	异常处理\r\n</h3>\r\n<p>\r\n	JAX-RS允许资源方法抛出WebApplicationException类型的异常，该异常会包含一个响应。下面的示例代码将一个JPA NoResultException转换为特定于Jersey的NotFoundException，这会导致一个404的错误：\r\n</p>\r\n@GET\r\n@Path(\"{username}\")\r\npublic Account getAccount(@PathParam(\"username\") String username) {\r\n    try {\r\n        return accountRepository.findAccountByUsername(username);\r\n    } catch (NoResultException e) {\r\n        throw new NotFoundException();\r\n    }\r\n}\r\n<p>\r\n	WebApplicationException实例会封装必要的逻辑来生成特定的响应，但每个独立的资源类方法中都需要捕获异常。\r\n</p>\r\n<p>\r\n	Spring MVC支持定义控制器级别的方法来处理异常：\r\n</p>\r\n@Controller\r\n@RequestMapping(\"/accounts\")\r\npublic class AccountController {\r\n    @ResponseStatus(NOT_FOUND)\r\n    @ExceptionHandler({NoResultException.class})\r\n    public void handle() {\r\n        // ...\r\n    }\r\n}\r\n<p>\r\n	如果任何控制器方法抛出了JPA的NoResultException异常，上面的处理器方法就会得到调用并处理该异常，然后返回一个404错误。这样，每个控制器就都能处理异常了，好象来自同一个地方一样。\r\n</p>\r\n<h2>\r\n	总结\r\n</h2>\r\n<p>\r\n	希望本文有助于你理解Spring MVC构建RESTful Web Services的方式及其与JAX-RS编程模型之间的异同点。\r\n</p>\r\n<p>\r\n	如果你是个Spring MVC用户，那么你可能用它开发过HTML Web应用了。REST概念适用于Web Services和Web应用，尤其是富客户端交互上更是如此。除了本文介绍的特性之外，Spring 3还增加了对RESTful Web应用的支持。这是部分新特性的列表：用于从URL模板构建URL的新的JSP客户化标签、基于HTTP PUT和DELETE模拟表单提交的Servlet过滤器、根据内容类型自动选择视图的ContentTypeNegotiatingViewResolver、新的视图实现等等。此外，Spring文档也改进颇多。\r\n</p>\r\n<p>\r\n	关于作者\r\n</p>\r\n<p>\r\n	Rossen Stoyanchev是SpringSource的高级咨询师。在其职业生涯中，他做过贸易应用、记账系统和电子商务等Web应用。在SpringSource中，Rossen专注于Web技术，包括咨询、培训和“Rich-Web Development With Spring”课程的内容开发，该课程旨在帮助受训者成为认证的Spring Web应用开发者。\r\n</p>\r\n<p>\r\n	查看英文原文：<a href=\"http://www.infoq.com/articles/springmvc_jsx-rs\">A Comparison of Spring MVC and JAX-RS</a> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>',NULL,'2014-04-14 13:29:32','2014-04-14 13:28:43',0,'Spring MVC与JAX-RS比较与分析',0),(15,'admin',2,'<h4>\r\n	编者注：我们发现了比较有趣的系列文章<a href=\"http://segmentfault.com/a/1190000000349384\" target=\"_blank\">《30天学习30种新技术》</a>，准备翻译，一天一篇更新，年终礼包。下面是第十三天的内容。\r\n</h4>\r\n<hr />\r\n<p>\r\n	我已经是一个使用了8年Java的软件开发人员了，我写过的大多数应用程序是用的Spring框架或Java EE。最近，我花了一些时间学习用Python进行web开发，其中印象非常深刻的是&nbsp;<a href=\"http://segmentfault.com/a/1190000000351512\" target=\"_blank\">Flask</a>&nbsp;框架——一个微型架构，这使得它很容易写REST后端。所以今天我决定找一个Java的Python Flask框架替代品，做一些研究后，我发现&nbsp;<a href=\"http://dropwizard.codahale.com/\" target=\"_blank\">Dropwizard</a>&nbsp;框架可以帮助达到Flask框架同样的生产力。在这篇博客中，我们将学习如何使用Dropwizard构建一个基于REST的Java MongoDB应用程序。\r\n</p>\r\n<p>\r\n	<a target=\"_blank\" href=\"http://segmentfault.com/img/bVbFJI/view\"><img src=\"http://segmentfault.com/img/bVbFJI\" alt=\"logo\" /></a> \r\n</p>\r\n<hr />\r\n<h2>\r\n	什么是Dropwizard？\r\n</h2>\r\n<p>\r\n	<a href=\"http://www.dropwizard.io/\" target=\"_blank\">Dropwizard</a>&nbsp;是一个开源的Java框架，用于开发OPS友好、高性能的基于REST的后端。它是由<a href=\"https://www.yammer.com/\" target=\"_blank\">Yammer</a>开发的，来驱动基于JVM的后端。\r\n</p>\r\n<p>\r\n	Dropwizard提供同类最佳的Java库到一个嵌入式应用程序包。它由以下部分组成：\r\n</p>\r\n<ol>\r\n	<li>\r\n		嵌入式Jetty：每一个应用程序被打包成一个jar（而不是war）文件，并开始自己的嵌入式Jetty容器。没有任何war文件和外部servlet容器。\r\n	</li>\r\n	<li>\r\n		JAX-RS：Jersey（JAX-RS的参考实现）是用来写基于REST的Web服务的。\r\n	</li>\r\n	<li>\r\n		JSON：REST服务用的是JSON，Jackson库用来做所有的JSON处理。\r\n	</li>\r\n	<li>\r\n		日志：使用Logback和SLF4J完成。\r\n	</li>\r\n	<li>\r\n		Hibernate验证：Dropwizard使用Hibernate验证API进行声明性验证。\r\n	</li>\r\n	<li>\r\n		指标：Dropwizard支持监控使用标准库，它在监控代码方面有无与伦比的洞察力。\r\n	</li>\r\n</ol>\r\n<p>\r\n	除了上面提到的这几个，Dropwizard还使用了一些其他的库，你可以在<a href=\"http://dropwizard.codahale.com/getting-started/\" target=\"_blank\">这里找到完整的列表</a>。\r\n</p>\r\n<hr />\r\n<h2>\r\n	为什么是Dropwizard？\r\n</h2>\r\n<p>\r\n	我决定学Dropwizard的原因有以下几点：\r\n</p>\r\n<ol>\r\n	<li>\r\n		快速的项目引导：如果你已经在使用Spring和Java EE，你就会明白开发人员在引导项目时的痛苦。使用Dropwizard，你只需要在你的&nbsp;pom.xml&nbsp;文件中添加一个依赖就完成了。\r\n	</li>\r\n	<li>\r\n		应用指标：Dropwizard自带应用程序指标的支持。它提供了类似请求/响应时间这种非常有用的信息，只要把@ 定时注解来获取方法的执行时间。\r\n	</li>\r\n	<li>\r\n		生产力：每个Dropwizard应用程序有一个启动Jetty容器的主程序。这意味着，完全可以把应用程序作为一个主程序在IDE中运行和调试。所以就没有重新编译或部署war文件。\r\n	</li>\r\n</ol>\r\n<hr />\r\n<h2>\r\n	Github库\r\n</h2>\r\n<p>\r\n	今天的演示应用程序的代码在GitHub上有：<a href=\"https://github.com/shekhargulati/day13-dropwizard-mongodb-demo-app\" target=\"_blank\">day13-dropwizard-mongodb-demo-app</a>。\r\n</p>\r\n<h2>\r\n	必备条件\r\n</h2>\r\n<ol>\r\n	<li>\r\n		基础的Java知识是必须的；\r\n	</li>\r\n	<li>\r\n		下载并安装&nbsp;<a href=\"http://www.mongodb.org/\" target=\"_blank\">MongoDB数据库</a>；\r\n	</li>\r\n	<li>\r\n		安装最新版本的Java Development Kit (JDK)，<a href=\"http://openjdk.java.net/\" target=\"_blank\">OpenJDK 7</a>&nbsp;或是&nbsp;<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\">Oracle JDK 7</a>&nbsp;都可以，这篇文章中使用JDK 7；\r\n	</li>\r\n	<li>\r\n		去<a href=\"http://www.eclipse.org/downloads/\" target=\"_blank\">Eclipse官网</a>下载最新版本的Eclipse包，就目前而言eclipse最新版的代号是Kepler；<br />\r\n<a target=\"_blank\" href=\"http://segmentfault.com/img/bVbDZ4/view\"><img src=\"http://segmentfault.com/img/bVbDZ4\" alt=\"img-1\" /></a> \r\n	</li>\r\n</ol>\r\n<p>\r\n	Eclipse的安装很容易，只需要解压下载下来的包即可。如果是在Linux或者Mac机器上，开个命令行窗口，输入如下命令：\r\n</p>\r\n$ tar -xzvf eclipse-jee-kepler-R-*.tar.gz\r\n<p>\r\n	Windows下，你解压到哪里，那里就会有一个eclipse文件夹，这样就可以直接操作了，当然你也可以创建执行文件的快捷方式到桌面。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	第1步：创建一个新的Maven项目\r\n</h3>\r\n<p>\r\n	打开Eclipse IDE，然后到项目工作区(project workspace)。要创建一个新的项目，转到&nbsp;文件&gt;新建&gt; Maven项目 (File &gt; New &gt; Maven Project)&nbsp;,然后选择&nbsp;Maven 原型 - 快速启动 (maven-archetype-quickstart)，然后进入Ground Id&nbsp;和&nbsp;Artifact Id，最后点击“完成”。<br />\r\n<a target=\"_blank\" href=\"http://segmentfault.com/img/bVbFKo/view\"><img src=\"http://segmentfault.com/img/bVbFKo\" alt=\"img-2\" /></a> \r\n</p>\r\n<h3>\r\n	第2步：更新pom.xml\r\n</h3>\r\n<p>\r\n	现在更新pom.xml文件以包括dropwizard核心maven依赖。同时也将更新Maven项目使用Java 1.7版本，更新pom.xml文件后，更新Maven项目（右键单击&gt;Maven&gt;更新项目）。\r\n</p>\r\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;groupId&gt;com.shekhar&lt;/groupId&gt;&lt;artifactId&gt;blog&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;packaging&gt;jar&lt;/packaging&gt;&lt;name&gt;blog&lt;/name&gt;&lt;url&gt;http://maven.apache.org&lt;/url&gt;&lt;properties&gt;&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;com.yammer.dropwizard&lt;/groupId&gt;&lt;artifactId&gt;dropwizard-core&lt;/artifactId&gt;&lt;version&gt;0.6.2&lt;/version&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;&lt;version&gt;3.1&lt;/version&gt;&lt;configuration&gt;&lt;source&gt;1.7&lt;/source&gt;&lt;target&gt;1.7&lt;/target&gt;&lt;/configuration&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;\r\n<h3>\r\n	第3步：创建配置类\r\n</h3>\r\n<p>\r\n	每个Dropwizard应用程序都有一个配置类，它指定特定的环境参数。文章后面会将如主机、端口和数据库名之类的MongoDB的配置参数添加给它。这个类扩展了&nbsp;com.yammer.dropwizard.config.Configuration类。\r\n</p>\r\nimportcom.yammer.dropwizard.config.Configuration;publicclassBlogConfigurationextendsConfiguration{}\r\n<h3>\r\n	第4步：创建服务类\r\n</h3>\r\n<p>\r\n	该Dropwizard项目由一个服务类自举。这个类将各种提供基本功能的捆绑和命令集合在一块，它还启动嵌入式Jetty服务器并延伸com.yammer.dropwizard.Service。\r\n</p>\r\nimportcom.yammer.dropwizard.Service;importcom.yammer.dropwizard.config.Bootstrap;importcom.yammer.dropwizard.config.Environment;publicclassBlogServiceextendsService&lt;BlogConfiguration&gt; {publicstaticvoidmain(String[] args)throwsException {newBlogService().run(newString[] {\"server\"});\r\n    }@Overridepublicvoidinitialize(Bootstrap&lt;BlogConfiguration&gt; bootstrap) {\r\n        bootstrap.setName(\"blog\");\r\n    }@Overridepublicvoidrun(BlogConfiguration configuration, Environment environment)throwsException {\r\n    }\r\n}\r\n<p>\r\n	上面的这些服务类可以：\r\n</p>\r\n<ol>\r\n	<li>\r\n		有一个作为服务入口点的main方法。在main方法里面，创建BlogService的实例，并调用run方法。我们将服务器命令作为参数传递，服务器命令将启动嵌入式Jetty服务器。\r\n	</li>\r\n	<li>\r\n		初始化方法在服务运行方法之前被调用。\r\n	</li>\r\n	<li>\r\n		接下来，服务运行时将调用它的run方法，文章后面会将JAX-RS源加到这个方法里。\r\n	</li>\r\n</ol>\r\n<h3>\r\n	第5步：写IndexResource\r\n</h3>\r\n<p>\r\n	写一个当GET请求指向“/” URL时会被调用的源，创建一个新的JAX-RS源（此资源将列出所有的博客），如下：\r\n</p>\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.Produces;\r\nimport javax.ws.rs.core.MediaType;\r\nimport com.yammer.metrics.annotation.Timed;\r\n@Path(\"/\")publicclassIndexResource{@GET\r\n    @Produces(value = MediaType.APPLICATION_JSON)\r\n    @TimedpublicList&lt;Blog&gt; index() {returnArrays.asList(new Blog(\"Day 12: OpenCV--Face Detection for Java Developers\",\"https://www.openshift.com/blogs/day-12-opencv-face-detection-for-java-developers\"));\r\n    }\r\n}\r\n<p>\r\n	上面这段代码是一个标准的JAX-RS资源类。它添加@ Path注释和定义index()方法，这个index()会返回一个博客集合，这些博客将被转换为JSON文档。\r\n</p>\r\n<p>\r\n	上面提到IndexResource是用博客表示的。下面这段则表明该博客使用Hibernate验证器注解，以确保内容是有效的。例如，使用@URL注释，以确保只有合法的URL存储在MongoDB数据库。\r\n</p>\r\nimport java.util.Date;\r\nimport java.util.UUID;\r\nimport org.hibernate.validator.constraints.NotBlank;\r\nimport org.hibernate.validator.constraints.URL;publicclassBlog{privateStringid= UUID.randomUUID().toString();\r\n    @NotBlankprivateString title;\r\n    @URL\r\n    @NotBlankprivateString url;privatefinal Date publishedOn = new Date();publicBlog() {\r\n    }publicBlog(String title, String url) {super();this.title= title;this.url= url;\r\n    }publicString getId() {returnid;\r\n    }publicString getTitle() {returntitle;\r\n    }publicString getUrl() {returnurl;\r\n    }publicDate getPublishedOn() {returnpublishedOn;\r\n    }\r\n}\r\n<p>\r\n	接下来，在服务类的run方法注册IndexResource。用下面的方式更新BlogService run方法。\r\n</p>\r\n@Overridepublicvoidrun(BlogConfiguration configuration, Environment environment)throwsException {\r\n   environment.addResource(newIndexResource());\r\n}\r\n<p>\r\n	现在，可以将BlogService类作为一个主程序来运行（右键点击&gt;运行方式&gt; Java应用程序），这将启动嵌入式Jetty容器，我们可以看到程序在&nbsp;http://localhost:8080/&nbsp;里运行。\r\n</p>\r\n$curlhttp://localhost:8080[{\"id\":\"9bb43d53-5436-4dac-abaa-ac530c833df1\",\"title\":\"Day 12: OpenCV--Face Detection for Java Developers\",\"url\":\"https://www.openshift.com/blogs/day-12-opencv-face-detection-for-java-developers\",\"publishedOn\":1384090975372}]\r\n<p>\r\n	现在可以通过点击“指标(Metrics)”检查IndexResource的指标，该数据是可用的JSON格式。\r\n</p>\r\n\"com.shekhar.blog.IndexResource\" : {\r\n    \"index\" : {\r\n      \"type\" : \"timer\",\r\n      \"duration\" : {\r\n        \"unit\" : \"milliseconds\",\r\n        \"min\" : 17.764,\r\n        \"max\" : 17.764,\r\n        \"mean\" : 17.764,\r\n        \"std_dev\" : 0.0,\r\n        \"median\" : 17.764,\r\n        \"p75\" : 17.764,\r\n        \"p95\" : 17.764,\r\n        \"p98\" : 17.764,\r\n        \"p99\" : 17.764,\r\n        \"p999\" : 17.764\r\n      },\r\n      \"rate\" : {\r\n        \"unit\" : \"seconds\",\r\n        \"count\" : 1,\r\n        \"mean\" : 7.246537731991882E-4,\r\n        \"m1\" : 2.290184897291144E-12,\r\n        \"m5\" : 3.551918562683463E-5,\r\n        \"m15\" : 2.445031498756583E-4\r\n      }\r\n    }\r\n  },\r\n<h3>\r\n	第6步：配置MongoDB\r\n</h3>\r\n<p>\r\n	在pom.xml&nbsp;里加入&nbsp;mongo-jackson-mapper&nbsp;的依赖。\r\n</p>\r\n&lt;dependency&gt;&lt;groupId&gt;net.vz.mongodb.jackson&lt;/groupId&gt;&lt;artifactId&gt;mongo-jackson-mapper&lt;/artifactId&gt;&lt;version&gt;1.4.2&lt;/version&gt;&lt;/dependency&gt;\r\n<p>\r\n	用MongoDB数据库的详细信息（如主机、端口和数据库名等）更新BlogConfiguration类。\r\n</p>\r\nimportjavax.validation.constraints.Max;importjavax.validation.constraints.Min;importorg.codehaus.jackson.annotate.JsonProperty;importorg.hibernate.validator.constraints.NotEmpty;importcom.yammer.dropwizard.config.Configuration;publicclassBlogConfigurationextendsConfiguration{@JsonProperty@NotEmptypublicString mongohost =\"localhost\";@JsonProperty@Min(1)@Max(65535)publicintmongoport =27017;@JsonProperty@NotEmptypublicString mongodb =\"mydb\";\r\n}\r\n<p>\r\n	接下来，创建一个名为MongoManaged的新类，它将允许你在应用程序启动和停止时管理程序资源。这样就实现了com.yammer.dropwizard.lifecycle.Managed。\r\n</p>\r\nimportcom.mongodb.Mongo;importcom.yammer.dropwizard.lifecycle.Managed;publicclassMongoManagedimplementsManaged{privateMongo mongo;publicMongoManaged(Mongo mongo) {this.mongo = mongo;\r\n    }@Overridepublicvoidstart()throwsException {\r\n    }@Overridepublicvoidstop()throwsException {\r\n        mongo.close();\r\n    }\r\n}\r\n<p>\r\n	在上面的代码中，关闭了stop方法中的MongoDB连接。\r\n</p>\r\n<p>\r\n	下一步，写一个MongoHealthCheck来检查MongoDB的连接与否。\r\n</p>\r\nimportcom.mongodb.Mongo;importcom.yammer.metrics.core.HealthCheck;publicclassMongoHealthCheckextendsHealthCheck{privateMongo mongo;protectedMongoHealthCheck(Mongo mongo) {super(\"MongoDBHealthCheck\");this.mongo = mongo;\r\n    }@OverrideprotectedResult check()throwsException {\r\n        mongo.getDatabaseNames();returnResult.healthy();\r\n    }\r\n}\r\n<p>\r\n	现在，更新BlogService类，将MongoDB的配置包含进来。\r\n</p>\r\npackagecom.shekhar.blog;importcom.mongodb.Mongo;importcom.yammer.dropwizard.Service;importcom.yammer.dropwizard.config.Bootstrap;importcom.yammer.dropwizard.config.Environment;publicclassBlogServiceextendsService&lt;BlogConfiguration&gt; {publicstaticvoidmain(String[] args) throws Exception {newBlogService().run(newString[] {\"server\"});\r\n    }\r\n    @Overridepublicvoidinitialize(Bootstrap&lt;BlogConfiguration&gt; bootstrap) {\r\n        bootstrap.setName(\"blog\");\r\n    }\r\n    @Overridepublicvoidrun(BlogConfiguration configuration, Environment environment) throws Exception {\r\n        Mongo mongo =newMongo(configuration.mongohost, configuration.mongoport);\r\n        MongoManaged mongoManaged =newMongoManaged(mongo);\r\n        environment.manage(mongoManaged);\r\n        environment.addHealthCheck(newMongoHealthCheck(mongo));\r\n        environment.addResource(newIndexResource());\r\n    }\r\n}\r\n<p>\r\n	上面这段代码：\r\n</p>\r\n<ol>\r\n	<li>\r\n		使用BlogConfiguration对象创建了一个新的Mongo实例。\r\n	</li>\r\n	<li>\r\n		一个新的MongoManaged实例被创建并添加到环境中。\r\n	</li>\r\n	<li>\r\n		健康检查被添加。\r\n	</li>\r\n</ol>\r\n<p>\r\n	运行该应用程序作为主程序。你可以到本地的&nbsp;http://localhost:8081/healthcheck&nbsp;健康检查页面去检验MongoDB是否在运行，如果MongoDB没有运行，会看到一个异常堆栈跟踪。\r\n</p>\r\n! MongoDBHealthCheck: ERROR\r\n!can\'t call something : Shekhars-MacBook-Pro.local/192.168.1.101:27017/admincom.mongodb.MongoException$Network:can\'t call something : Shekhars-MacBook-Pro.local/192.168.1.101:27017/admin\r\n    atcom.mongodb.DBTCPConnector.call(DBTCPConnector.java:227)\r\n    atcom.mongodb.DBApiLayer$MyCollection.__find(DBApiLayer.java:305)\r\n    atcom.mongodb.DB.command(DB.java:160)\r\n    atcom.mongodb.DB.command(DB.java:183)\r\n    atcom.mongodb.Mongo.getDatabaseNames(Mongo.java:327)\r\n    atcom.shekhar.blog.MongoHealthCheck.check(MongoHealthCheck.java:17)\r\n    atcom.yammer.metrics.core.HealthCheck.execute(HealthCheck.java:195)\r\n    at \r\nCaused by:java.io.IOException:couldn\'t connect to[Shekhars-MacBook-Pro.local/192.168.1.101:27017]bc:java.net.ConnectException: Connection refused\r\n    atcom.mongodb.DBPort._open(DBPort.java:228)\r\n    atcom.mongodb.DBPort.go(DBPort.java:112)\r\n    atcom.mongodb.DBPort.call(DBPort.java:79)\r\n    atcom.mongodb.DBTCPConnector.call(DBTCPConnector.java:218)\r\n    ...33more\r\n* deadlocks: OK\r\n<p>\r\n	现在启动MongoDB，可以看到：\r\n</p>\r\n*MongoDBHealthCheck: OK*deadlocks: OK\r\n<h3>\r\n	第7步：创建BlogResource\r\n</h3>\r\n<p>\r\n	现在写BlogResource类，它负责创建博客条目。\r\n</p>\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport javax.validation.Valid;\r\nimport javax.ws.rs.Consumes;\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.POST;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.Produces;\r\nimport javax.ws.rs.core.MediaType;\r\nimport javax.ws.rs.core.Response;\r\nimport net.vz.mongodb.jackson.DBCursor;\r\nimport net.vz.mongodb.jackson.JacksonDBCollection;\r\nimport com.yammer.metrics.annotation.Timed;\r\n@Path(\"/blogs\")\r\n@Produces(value = MediaType.APPLICATION_JSON)\r\n@Consumes(value = MediaType.APPLICATION_JSON)publicclassBlogResource{privateJacksonDBCollection&lt;Blog, String&gt; collection;publicBlogResource(JacksonDBCollection&lt;Blog, String&gt; blogs) {this.collection= blogs;\r\n    }\r\n    @POST\r\n    @TimedpublicResponse publishNewBlog(@Valid Blog blog) {\r\n        collection.insert(blog);returnResponse.noContent().build();\r\n    }\r\n}\r\n<p>\r\n	下一步，更新BlogService run方法，将BlogResource也加进来。\r\n</p>\r\n@Overridepublicvoidrun(BlogConfiguration configuration, Environment environment) throws Exception {\r\n        Mongo mongo = new Mongo(configuration.mongohost, configuration.mongoport);\r\n        MongoManaged mongoManaged = new MongoManaged(mongo);\r\n        environment.manage(mongoManaged);\r\n        environment.addHealthCheck(new MongoHealthCheck(mongo));\r\n        DB db = mongo.getDB(configuration.mongodb);\r\n        JacksonDBCollection&lt;Blog, String&gt; blogs = JacksonDBCollection.wrap(db.getCollection(\"blogs\"), Blog.class, String.class);\r\n        environment.addResource(new IndexResource());\r\n        environment.addResource(new BlogResource(blogs));\r\n    }\r\n<p>\r\n	将BlogService类作为一个Java应用程序运行。为了测试BlogResource，做一个curl请求：\r\n</p>\r\n$curl -i -XPOST-H\"Content-Type: application/json\"-d\'{\"title\":\"Day 12: OpenCV--Face Detection for Java Developers\",\"url\":\"https://www.openshift.com/blogs/day-12-opencv-face-detection-for-java-developers\"}\'http://localhost:8080/blogsHTTP/1.1204NoContentDate:Sun,10Nov201314:08:03GMTContent-Type: application/json\r\n<h3>\r\n	第8步：更新IndexResource\r\n</h3>\r\n<p>\r\n	现在，更新IndexResource index()方法来从MongoDB获取所有的博客文件。\r\n</p>\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.Produces;\r\nimport javax.ws.rs.core.MediaType;\r\nimport net.vz.mongodb.jackson.DBCursor;\r\nimport net.vz.mongodb.jackson.JacksonDBCollection;\r\nimport com.yammer.metrics.annotation.Timed;\r\n@Path(\"/\")publicclassIndexResource{privateJacksonDBCollection&lt;Blog, String&gt; collection;publicIndexResource(JacksonDBCollection&lt;Blog, String&gt; blogs) {this.collection= blogs;\r\n    }\r\n    @GET\r\n    @Produces(value = MediaType.APPLICATION_JSON)\r\n    @TimedpublicList&lt;Blog&gt; index() {\r\n        DBCursor&lt;Blog&gt; dbCursor = collection.find();\r\n        List&lt;Blog&gt; blogs = new ArrayList&lt;&gt;();while(dbCursor.hasNext()) {\r\n            Blog blog = dbCursor.next();\r\n            blogs.add(blog);\r\n        }returnblogs;\r\n    }\r\n}\r\n<p>\r\n	更新BlogService run方法将博客集合传递给IndexResource。\r\n</p>\r\n@Overridepublicvoidrun(BlogConfiguration configuration, Environment environment) throws Exception {\r\n        Mongo mongo = new Mongo(configuration.mongohost, configuration.mongoport);\r\n        MongoManaged mongoManaged = new MongoManaged(mongo);\r\n        environment.manage(mongoManaged);\r\n        environment.addHealthCheck(new MongoHealthCheck(mongo));\r\n        DB db = mongo.getDB(configuration.mongodb);\r\n        JacksonDBCollection&lt;Blog, String&gt; blogs = JacksonDBCollection.wrap(db.getCollection(\"blogs\"), Blog.class, String.class);\r\n        environment.addResource(new IndexResource(blogs));\r\n        environment.addResource(new BlogResource(blogs));\r\n    }\r\n<p>\r\n	将BlogService类作为一个Java应用程序运行。为了测试BlogResource，做一个curl请求：\r\n</p>\r\n$curlhttp://localhost:8080[{\"id\":\"527f9806300462bbd300687e\",\"title\":\"Day 12: OpenCV--Face Detection for Java Developers\",\"url\":\"https://www.openshift.com/blogs/day-12-opencv-face-detection-for-java-developers\",\"publishedOn\":1384093702592}]\r\n<h3>\r\n	第9步：部署到云端\r\n</h3>\r\n<p>\r\n	这里有一篇文章，教你如何在OpenShift部署Dropwizard应用，点击<a href=\"http://dmly.github.io/blog/2013/05/01/diy-java-app-server-on-openshift-so-far-so-good/\" target=\"_blank\">这里</a>。\r\n</p>\r\n<p>\r\n	<br />\r\n<br />\r\n今天就这些，欢迎反馈。\r\n</p>\r\n<hr />\r\n<p>\r\n	原文&nbsp;<a href=\"https://www.openshift.com/blogs/day-13-dropwizard-the-awesome-java-rest-server-stack\" target=\"_blank\">Day 13: Dropwizard--The Awesome Java REST Server Stack</a><br />\r\n整理&nbsp;<a href=\"http://segmentfault.com/\" target=\"_blank\">SegmentFault</a> \r\n</p>',NULL,NULL,'2014-04-14 14:40:12',0,'Dropwizard —非常棒的Java REST服务器栈',0),(16,'admin',4,'<pre class=\"prettyprint lang-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;beans\r\n	xmlns=\"http://www.springframework.org/schema/beans\"\r\n	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n	xmlns:tx=\"http://www.springframework.org/schema/tx\"\r\n	xmlns:context=\"http://www.springframework.org/schema/context\"  \r\n	xmlns:mvc=\"http://www.springframework.org/schema/mvc\"  \r\n	xsi:schemaLocation=\"http://www.springframework.org/schema/beans \r\n	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd \r\n	http://www.springframework.org/schema/tx \r\n	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd\r\n	http://www.springframework.org/schema/context\r\n    http://www.springframework.org/schema/context/spring-context-3.0.xsd\r\n	http://www.springframework.org/schema/mvc\r\n    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd\"&gt;\r\n    \r\n\r\n    &lt;!-- 自动扫描包，可以写多个 --&gt;\r\n    &lt;context:component-scan base-package=\"com.xxx,com.xxx.session,com.xxx.xxx\" &gt;&lt;/context:component-scan&gt;\r\n    \r\n    &lt;!-- 多视图处理器 --&gt;\r\n    &lt;bean class=\"com.xxx.core.web.MixedViewResolver\"&gt;\r\n		&lt;property name=\"resolvers\"&gt;\r\n			&lt;map&gt;\r\n				&lt;entry key=\"jsp\"&gt;\r\n					&lt;bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"&gt;\r\n						&lt;property name=\"prefix\" value=\"/WEB-INF/jsp/\"/&gt;\r\n						&lt;property name=\"viewClass\" value=\"org.springframework.web.servlet.view.JstlView\"&gt;&lt;/property&gt;\r\n					&lt;/bean&gt;\r\n				&lt;/entry&gt;\r\n				&lt;entry key=\"ftl\"&gt;\r\n					&lt;bean class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver\"&gt;\r\n						&lt;property name=\"cache\" value=\"true\"/&gt;\r\n						&lt;property name=\"contentType\" value=\"text/html;charset=UTF-8\"&gt;&lt;/property&gt;\r\n						&lt;!-- 宏命令的支持  --&gt;  \r\n						&lt;property name=\"exposeSpringMacroHelpers\" value=\"true\"/&gt;\r\n						&lt;property name=\"viewClass\" value=\"org.springframework.web.servlet.view.freemarker.FreeMarkerView\"/&gt;\r\n						&lt;property name=\"requestContextAttribute\" value=\"rc\"&gt;&lt;/property&gt;\r\n					&lt;/bean&gt;\r\n				&lt;/entry&gt;\r\n			&lt;/map&gt;\r\n		&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n	\r\n	&lt;!-- freemarker config --&gt;\r\n    &lt;bean id=\"freeMarkerConfigurer\" class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer\"&gt; \r\n        &lt;property name=\"templateLoaderPath\" value=\"/WEB-INF/ftl/\" /&gt; \r\n        &lt;property name=\"freemarkerSettings\"&gt; \r\n            &lt;props&gt; \r\n                &lt;prop key=\"template_update_delay\"&gt;5&lt;/prop&gt; \r\n                &lt;prop key=\"default_encoding\"&gt;UTF-8&lt;/prop&gt; \r\n                &lt;prop key=\"locale\"&gt;zh_CN&lt;/prop&gt; \r\n            &lt;/props&gt; \r\n        &lt;/property&gt; \r\n    &lt;/bean&gt; \r\n    \r\n    &lt;!-- 日志拦截器--&gt;\r\n    &lt;bean id=\"logNDCInteceptor\" class=\"com.xxx.core.web.LogNDCInteceptor\"/&gt;\r\n    \r\n    &lt;!-- 权限拦截器--&gt;\r\n    &lt;bean id=\"myPermissionsInteceptor\" class=\"com.xxx.userplatform.mvc.MyPermissionsInteceptor\"&gt;&lt;/bean&gt;\r\n    \r\n    &lt;!-- RequestHelper拦截器--&gt;\r\n    &lt;bean id=\"myRequestHelperInteceptor\" class=\"com.xxx.core.web.MyRequestHelperInteceptor\"&gt;&lt;/bean&gt;\r\n    \r\n    &lt;!-- 用户信息拦截器--&gt;\r\n    &lt;bean id=\"myUserInfoInteceptor\" class=\"com.xxx.userplatform.mvc.MyUserInfoInteceptor\"&gt;&lt;/bean&gt;\r\n    \r\n    &lt;!-- 注解请求映射  --&gt;\r\n    &lt;bean class=\"org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping\"&gt;        \r\n		&lt;property name=\"interceptors\"&gt;\r\n		    &lt;list&gt;  \r\n		    	&lt;ref bean=\"logNDCInteceptor\"/&gt;   &lt;!-- 日志拦截器 --&gt;\r\n		    	&lt;ref bean=\"myRequestHelperInteceptor\"/&gt;   &lt;!-- RequestHelper拦截器--&gt; \r\n		    	&lt;ref bean=\"myPermissionsInteceptor\"/&gt;  &lt;!-- 权限拦截器--&gt; \r\n		    	&lt;ref bean=\"myUserInfoInteceptor\"/&gt;  &lt;!-- 用户信息拦截器--&gt; \r\n		    &lt;/list&gt;        \r\n		&lt;/property&gt;        \r\n	&lt;/bean&gt;  	\r\n	&lt;bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\"&gt;\r\n		&lt;property name=\"messageConverters\"&gt;  \r\n			&lt;list&gt;  \r\n				&lt;ref bean=\"byteArray_hmc\" /&gt;  \r\n				&lt;ref bean=\"string_hmc\" /&gt;  \r\n				&lt;ref bean=\"resource_hmc\" /&gt;  \r\n				&lt;ref bean=\"source_hmc\" /&gt;  \r\n				&lt;ref bean=\"xmlAwareForm_hmc\" /&gt;  \r\n				&lt;ref bean=\"jaxb2RootElement_hmc\" /&gt;  \r\n				&lt;ref bean=\"jackson_hmc\" /&gt;  \r\n			&lt;/list&gt;  \r\n		&lt;/property&gt;  \r\n	&lt;/bean&gt;  \r\n	&lt;bean id=\"byteArray_hmc\" class=\"org.springframework.http.converter.ByteArrayHttpMessageConverter\" /&gt;&lt;!-- 处理.. --&gt;\r\n	&lt;bean id=\"string_hmc\" class=\"org.springframework.http.converter.StringHttpMessageConverter\" /&gt;&lt;!-- 处理.. --&gt;\r\n	&lt;bean id=\"resource_hmc\" class=\"org.springframework.http.converter.ResourceHttpMessageConverter\" /&gt;&lt;!-- 处理.. --&gt;\r\n	&lt;bean id=\"source_hmc\" class=\"org.springframework.http.converter.xml.SourceHttpMessageConverter\" /&gt;&lt;!-- 处理.. --&gt;\r\n	&lt;bean id=\"xmlAwareForm_hmc\" class=\"org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter\" /&gt;&lt;!-- 处理.. --&gt;\r\n	&lt;bean id=\"jaxb2RootElement_hmc\" class=\"org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter\" /&gt;&lt;!-- 处理.. --&gt;\r\n	&lt;bean id=\"jackson_hmc\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\" /&gt;&lt;!-- 处理json--&gt;\r\n	\r\n	\r\n	&lt;!-- 总错误处理--&gt;\r\n	&lt;bean id=\"exceptionResolver\" class=\"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\"&gt;\r\n		\r\n		&lt;property name=\"exceptionMappings\"&gt; \r\n			&lt;props&gt; \r\n			&lt;!-- 上传文件大于最大尺寸后转向出错页面 --&gt; \r\n				&lt;prop key=\"org.springframework.web.multipart.MaxUploadSizeExceededException\"&gt; \r\n					redirect:/uploadError.jsp\r\n				&lt;/prop&gt; \r\n			&lt;/props&gt; \r\n		&lt;/property&gt; \r\n		&lt;property name=\"defaultErrorView\"&gt;  \r\n		 	&lt;value&gt;forward:/error.jsp&lt;/value&gt;\r\n		&lt;/property&gt;\r\n		&lt;property name=\"defaultStatusCode\"&gt;  \r\n		 	&lt;value&gt;200&lt;/value&gt;\r\n		&lt;/property&gt;		 	\r\n		&lt;property name=\"warnLogCategory\"&gt;  \r\n		 	&lt;value&gt;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&lt;/value&gt;\r\n		&lt;/property&gt;		 	\r\n		\r\n	&lt;/bean&gt; \r\n	\r\n	&lt;!-- 允许对静态资源文件的访问 --&gt; \r\n	&lt;mvc:default-servlet-handler/&gt;\r\n\r\n	&lt;!-- 数据源 ,DBCP连接池--&gt;\r\n	&lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"&gt;\r\n		&lt;property name=\"driverClassName\" value=\"oracle.jdbc.driver.OracleDriver\"/&gt;\r\n		&lt;property name=\"url\" value=\"jdbc:oracle:thin:@192.168.3.141:1521:xxx\"/&gt;\r\n		&lt;property name=\"username\" value=\"xxxdb\"/&gt;\r\n		&lt;property name=\"password\" value=\"xxxdb\"/&gt;\r\n		&lt;property name=\"initialSize\" value=\"2\"/&gt;\r\n		&lt;property name=\"maxActive\" value=\"10\"/&gt;\r\n		&lt;property name=\"maxIdle\" value=\"10\"/&gt;\r\n		&lt;property name=\"maxWait\" value=\"1000\"/&gt;\r\n		&lt;property name=\"poolPreparedStatements\" value=\"true\"/&gt;\r\n	&lt;/bean&gt;\r\n	\r\n	&lt;!-- JNDI数据源\r\n	&lt;bean id=\"dataSource\" class=\"org.springframework.jndi.JndiObjectFactoryBean\"&gt;\r\n		&lt;property name=\"jndiName\"&gt;\r\n			&lt;value&gt;jdbc/xxx&lt;/value&gt;\r\n		&lt;/property&gt;\r\n	&lt;/bean&gt;\r\n	--&gt;\r\n	\r\n	&lt;!-- JDBC模板 --&gt;\r\n	&lt;bean id=\"jdbcTemplate\" class=\"org.springframework.jdbc.core.JdbcTemplate\" &gt;\r\n		&lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\r\n	&lt;/bean&gt;\r\n	&lt;!-- 事务管理器 --&gt;\r\n	&lt;bean id=\"transactionManager\"\r\n		class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"&gt;\r\n		&lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\r\n	&lt;/bean&gt;\r\n	&lt;!-- 用注解来实现事务管理 --&gt;\r\n	&lt;tx:annotation-driven transaction-manager=\"transactionManager\" proxy-target-class=\"true\"/&gt;\r\n	\r\n    &lt;!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean(\'xxxx\')的静态方法得到spring bean对象 --&gt;  \r\n    &lt;bean class=\"com.xxxxx.SpringContextHolder\" lazy-init=\"false\" /&gt;  \r\n	\r\n&lt;/beans&gt;</pre>',NULL,NULL,'2014-04-14 19:33:06',0,'Spring mvc 配置文件',0),(17,'admin',7,'<pre class=\"prettyprint lang-xml\">&lt;plugin&gt;\r\n	&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n	&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\r\n	&lt;version&gt;3.1&lt;/version&gt;\r\n	&lt;configuration&gt;\r\n		&lt;source&gt;1.7&lt;/source&gt;\r\n		&lt;target&gt;1.7&lt;/target&gt;\r\n	&lt;/configuration&gt;\r\n&lt;/plugin&gt;</pre>',NULL,NULL,'2014-04-15 11:24:04',0,'maven 编译插件',0),(18,'admin',2,'<p>\r\n	Original&nbsp;artical:&nbsp;\r\n</p>\r\n<p>\r\n	<a href=\"http://tomayko.com/writings/rest-to-my-wife\">http://tomayko.com/writings/rest-to-my-wife</a> \r\n</p>\r\n<p>\r\n	中文版：\r\n</p>\r\n<p>\r\n	<a href=\"http://www.kevenlw.name/archives/672\">http://www.kevenlw.name/archives/672</a> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Wife:&nbsp;谁是<a href=\"http://www.ics.uci.edu/~fielding/\">Roy Fielding</a>?\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;某男，很聪明。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;哦，他干哈的？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;他<a href=\"http://1997.webhistory.org/www.lists/www-talk.1994q2/1072.html\">帮着写了第一个Web服务器</a>，又对于Web的如此运行做了<a href=\"http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\">大量的研究</a>。<a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616.html\">他的名字在规定浏览器如何从服务器获取页面的协议规范里都有。</a> \r\n</p>\r\n<p>\r\n	Wife:&nbsp;咋弄的？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;你是说web?\r\n</p>\r\n<p>\r\n	Wife:&nbsp;嗯哪。\r\n</p>\r\n<p>\r\n	Ryan:哦，啊，这真是很神奇。最奇怪的是人们常常低估这个协议，我是说HTTP，几乎可以做任何事情，干净利落，却总是被人们忽视。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;你是说&nbsp;http，就是我每次在浏览器地址栏中输入的那个？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;是啊，这第一部分告诉浏览器用什么协议，这个东东可以说是整个计算机历史上最重要最具突破性的进展。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;Why?\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;因为它能够在世界上任何地方指向在世界上另一个地方的某样东西。他是万维网的基础，你可以把它当作知识或者信息的GPS系统。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;获取网页？\r\n</p>\r\n<p>\r\n	Ryan:实际上可以获取任何东西。这个Roy Fielding专门研究这些东西如何指向什么东西，万维网就建立在一种叫做<a href=\"http://en.wikipedia.org/wiki/Representational_State_Transfer\">REST</a>的架构之上，REST 定义了“资源”，就是所指向的那些东西。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;网页也是资源？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;是一种。网页是一个资源的“表现物”。资源只不过是一个概念，用URL来代表，也就是那些你键入在浏览器地址栏中的东西。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;我知道什么是URL…\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;哦，是了，它告诉浏览器某处有一个概念，浏览器就请求索取这个概念的“表现物”，即以这个网页来代表。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;那么还会有什么其它的表现物呢？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;实际上表现物并不多，资源经常只有一种表现形式，但我们希望将来会有很多，因为总有很多新格式不断冒出来。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;比如？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;呵呵，有一个概念叫“Web服务”，对不同的人可能有不同的含义，但它的基本意思是机器可以像人一样使用Web。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;又是机器人之类的东西？\r\n</p>\r\n<p>\r\n	Ryan:不，不太一样。我不是说机器可以坐在桌子边上浏览Web，而是计算机可以使用相同的协议互相收发信息。我们实际上早就能这样做了，但让我们对全世界所有的机器都这样做，现在的技术还打不到。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;为什么不行?\r\n</p>\r\n<p>\r\n	Ryan:因为没有这样设计。当Fielding和他的同伴开始构建Web的时候，具备对话任何地方任何一台机器的能力是一个重要的需求，但当时的计算机互联技术还都没有这种考虑，只需要在很小的范围内沟通。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;现在需要所有机器都互相对话？\r\n</p>\r\n<p>\r\n	Ryan:是啊，不仅如此，我们需要所有的机器都能跟所有其它的机器谈论他们肚子里的东西，我们也要有办法让一台机器告诉另一台机器关于第三台机器里有某个资源。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;什么？\r\n</p>\r\n<p>\r\n	Ryan:比方说你的小姐妹要向你借吸尘器用用，但是你没有，你大姨有，于是你告诉她向你大姨借。在生活中这很常见，同样如果机器能够互相通话也会经常发生。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;那么机器是如何说东西在哪里的？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;当然是URL。如果机器要说的所有东西都有一个URL，也就是说你同意说“那台机器所指的即等同于一个名词“，你、我以及其他人都同意以某种方式谈论这些个”名词“，这很重要，是吗？\r\n</p>\r\n<p>\r\n	Wife:&nbsp;当然。\r\n</p>\r\n<p>\r\n	Ryan:机器并没有名词——那是他们的悲哀。每一种编程语言、数据库或者系统都有不同的”名词“，这就是URL如此重要的原因，它使所有这些系统能够沟通彼此的”名词“。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;但是当我浏览一个页面的时候，并不是这样看的。\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;没人这样看，除了Fielding和他的那班人，所以说机器还是很悲哀。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;那么动词、代词、形容词呢？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;有意思你竟然问了，这正是REST的另一个重要方面。我们先来说说动词。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;我只是开个玩笑。\r\n</p>\r\n<p>\r\n	Ryan:这是个有趣的玩笑，但其实根本不是玩笑。动词非常重要，计算机理论中有一个强大的概念：”多态性“，用技客的话说，不同的名词可以使用同样的动词。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;不懂。\r\n</p>\r\n<p>\r\n	Ryan:好吧…看那个咖啡桌，名词是什么？杯子、盘子、报纸、遥控器，对所有这些，你可以做什么？\r\n</p>\r\n<p>\r\n	Wife:&nbsp;没明白（get获得）你的意思…\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;你可以“获得“（get）他们，是吗？你可以拿起它们，敲打它们，烧掉它们，你可以对它们用同样的动词。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;OK，那又怎样？\r\n</p>\r\n<p>\r\n	Ryan:这很重要，如果不是我对你说”去拿（get）杯子“、”去拿报纸“、”去拿遥控器“，或者我们用其它动词说这些东西，我不能总用”去拿“这个词，我们必须想一些新词进行动名词组合。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;哇，不可思议。\r\n</p>\r\n<p>\r\n	Ryan:是，我们的大脑很聪明，可以用一个动词对付很多不同的名词，某些动词比另一些更专指，只能用于少量的名词。例如，我不能驾驶一个杯子，也不能喝一辆汽车，但是有一些动词就具有普适性，例如GET（获得），PUT（送出）,&nbsp;DELETE（删除）。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;你不能删除一个杯子！\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;啊啊，好吧，我们可以把它扔掉。这又是一个玩笑，是吗？\r\n</p>\r\n<p>\r\n	Wife:&nbsp;恩。\r\n</p>\r\n<p>\r\n	Ryan:所以，无论如何，Fielding和他的朋友创造的HTTP协议，就是负责把动词赋给名词的。例如，当你要浏览一个网页时，浏览器就对你键入的那个URL采用HTTP的GET（获取）操作，以获取那个网页。网页通常包括图像，对吧？这些都是不同的资源，网页只是指明这些图像的URL以便浏览器逐个”获取“并显示他们。其中很重要的是：各类不同的名词可以采用相同的方式来处理，不管这些名词是图像、文本、视频、mp3、幻灯片等等，我们都可以通过URL以相同的方式获得它们。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;这样看来GET一定是个很重要的动词。\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;正是。特别是当你使用浏览器的时候，浏览器几乎只用”GET’获取东西，而不常与资源进行其它方式的交互。这样就造成一个问题：人们常以为HTTP只会“获得”东西。其实HTTP实际上是把动词赋予名词的一般协议。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;酷！可是我还是没有看出有什么不同，你需要什么名词和动词呢？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;名词已经有了，但形式不对。\r\n</p>\r\n<p>\r\n	试想你正在浏览亚马逊网站，想给我买圣诞礼物。如果每一件商品都是一个名词，如果用一种机器能够懂得的方式表达，你可以做很多漂亮的事情。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;机器为什么不能懂得一个通常的网页呢？\r\n</p>\r\n<p>\r\n	Ryan:因为网页是设计给人看的，机器是不管排版和风格的。机器通常只需要数据，理想情况：每个URL都应该包含一个给人看的网页和一个给机器读的表达，当一个机器“获取”一个资源，应该只给那个为机器准备的东东，如果一个浏览器“获取”，就给那个给人看的网页。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;因而人们就应该为机器准备那些给机器读的格式？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;如果值得的话。\r\n</p>\r\n<p>\r\n	你看，我们谈论了很多抽象的事情，何不举个具体的例子呢？你是一个老师–在学校里一定有一个不小的计算机系统，甚至可能有三、四个计算机系统，来管理学生、安排课程、记录成绩、存储教学信息和参考资料等等。如果这些系统是基于Web的，可能对于这里的每一个名词：学生、老师、班级、教材、教室等都有一个URL。一般而言你如果用浏览器访问这些URL，你可以看到记载它们的网页。而如果每个URL同时有给机器获取的内容，则会给系统带来许多新奇的工具，因为所有的信息都会以另一种标准方式获得利用。每一个系统之间也可以更方便地“对话”。或者，你就可以建立一个在全国范围内可以使每个学校的系统互相”对话“的系统以汇总考试成绩，等等，潜力未可估量。\r\n</p>\r\n<p>\r\n	每个系统都可以采用简单的HTTP协议从其它系统中获取信息。如果一个系统需要向另一个系统增加东西，它可以用HTTP的POST命令，如果一个系统想更新另一个系统的数据，它可以用HTTP的PUT命令。剩下的事情只有搞清楚数据应该看起来像什么了。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;这就是你和你那些计算机哥们整天整的东西？决定数据看起来像什么吗？\r\n</p>\r\n<p>\r\n	Ryan:很不幸，不是的。大多数人都忙着写一些复杂的层次规范，想以不同的方式达到同样的目的，但实际上不是那么有用和有效。名词并不通用，动词也不多态。我们扔掉了几十年的经验总结和已被验证的技术，却以过去失败的系统另起炉灶。我们用HTTP只是因为它能帮助我们少与我们的网络和安全人员对话。我们丧失了简单性，换来了炫目的工具和魔术。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;这是为什么涅？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;木有概念。\r\n</p>\r\n<p>\r\n	Wife:&nbsp;你为嘛不说点啥？\r\n</p>\r\n<p>\r\n	Ryan:&nbsp;中，以后再说。\r\n</p>',NULL,NULL,'2014-04-16 10:26:28',0,'我怎样向老伴解释REST / How I Explained REST to My Wife',0),(19,'admin',3,'<p>\r\n	最近一年开源项目特别的热，很多技术大会或论坛都以开源项目作为主题进行探讨，可见这是一种趋势。而Github作为开源项目的著名托管地，可谓无人不知，越来越多的个人和公司纷纷加入到Github的大家族里来，为开源尽一份绵薄之力。对于个人来讲，你把自己的项目托管到Github上并不表示你参与了Github开源项目，只能说你开源了自己的项目，可以任别人自由下载。\r\n</p>\r\n<p>\r\n	那么该如何参与Github的开源项目呢？相信很多人都有这方面的疑问，网上也有一些参差不齐的教程教大家如何“Pull Request”、如何“Commit”等等。但这些教程往往不够全面或不够完全正确，搞不好可能让你陷入一个误区。鉴于此，前几天Github官方团队写了一篇很棒的文章&nbsp;<a target=\"_blank\" href=\"https://guides.github.com/overviews/os-contributing/\">Contributing to Open Source on GitHub</a>，专业指导大家如何参与Github的开源项目。&nbsp;下面是&nbsp;<a href=\"https://guides.github.com/overviews/os-contributing/\" target=\"_blank\">原文</a>的翻译。\r\n</p>\r\n<hr />\r\n<p>\r\n	参与开源项目的最佳办法就是加入到你正在使用的已有项目上来。Github上有500多万开源项目，涉及到各个领域的技术，像&nbsp;<a target=\"_blank\" href=\"https://github.com/sinker/tacofancy\">recipes</a>,&nbsp;<a target=\"_blank\" href=\"https://github.com/tobiasahlin/SpinKit\">HTML/CSS</a>,&nbsp;<a target=\"_blank\" href=\"https://github.com/sferik/t\">Ruby</a>,&nbsp;<a target=\"_blank\" href=\"https://github.com/dfm/emcee\">Astrophysics</a>等等。该指南将涵盖你在一个典型的项目中可能出现的事情以及如何为开源项目作出贡献。\r\n</p>\r\n<h2>\r\n	找项目<br />\r\n</h2>\r\n我们推荐你从已正在使用的或感兴趣的项目开始。这里有几个很棒的地方供你参考：\r\n<ul>\r\n	<li>\r\n		<a target=\"_blank\" href=\"https://github.com/explore\">GitHub Explore</a>：受欢迎和热门的项目。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		<a target=\"_blank\" href=\"https://github.com/stars?direction=desc&amp;sort=created\">GitHub Stars</a>：被其他人star过的项目（指的是你自己库的项目）。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		<a target=\"_blank\" href=\"https://github.com/showcases\">GitHub Showcases</a>：一个能搜索相关库的方法。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		<a target=\"_blank\" href=\"http://news.layervault.com/\">LayerVault News</a>：前端和设计相关的项目。&nbsp;<br />\r\n	</li>\r\n</ul>\r\n<p>\r\n	<a href=\"http://cms.csdnimg.cn/article/201404/14/534b717ad0536.jpg\" target=\"_blank\"><img src=\"http://cms.csdnimg.cn/article/201404/14/534b717ad0536_middle.jpg?_=31085\" border=\"0\" alt=\"\" style=\"height:auto;\" />&nbsp;</a> \r\n</p>\r\n<h2>\r\n	一个典型的项目<br />\r\n</h2>\r\n<p>\r\n	下面是一些你在Github开源项目中可能遇到的因素。\r\n</p>\r\n<h4>\r\n	The Community（社区）\r\n</h4>\r\n<p>\r\n	项目通常会有一个社区维护，由不同角色（正规或非正规）的其他用户组成：\r\n</p>\r\n<ul>\r\n	<li>\r\n		所有者（Owner）：即创建该项目且在他们Github账户上有该项目的用户或组织。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		维护者和协作者（Maintainers and Collaborators）： 致力于一个项目并促进该项目发展的用户。通常所有者和维护者是同一个用户或组织，他们对项目库都有写的权限。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		贡献者（Contributors）：每一个对该项目发出过pull&nbsp;request并合并到项目中的用户都是贡献者。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		社区成员（Community Members）：即那些经常使用且非常关心该项目的用户，他们在讨论功能特征和pull&nbsp;request上非常活跃。\r\n	</li>\r\n</ul>\r\n<h4>\r\n	The Docs（文档）\r\n</h4>\r\n一般项目中都有的文件。\r\n<h4>\r\n	<ul>\r\n		<li>\r\n			Readme：几乎所有的Github项目都包含一个README.md文件。readme提供了该项目的一个概览及关于如何使用、构建甚至如何贡献于一个项目的相关细节。\r\n		</li>\r\n		<li>\r\n			Contributing：项目和项目维护者不同，所以每个项目所期望的作贡献的最佳方法也会有所不同。一定要注意一个标注为CONTRIBUTING的文档，Contributing文档详细描述了一个项目的维护者希望看到贡献的补丁或功能应该符合怎样的规格。这可能包含要写什么测试，代码语法规范或补丁集中的区域。\r\n		</li>\r\n		<li>\r\n			License：一个LICENSE文件当然就是该项目的许可证了。一个开源项目的license会告诉用户他们能做和不能做的（例如使用、修改、重新发布），及告诉贡献者他们允许其他人做的。有许多的办法对开源项目加上许可证，你可以在&nbsp;<a target=\"_blank\" href=\"http://choosealicense.com/\">choosealicense.com</a>读到更多的关于每个许可证的含义。\r\n		</li>\r\n		<li>\r\n			Documentation and Wikis：许多大型项目有的不只有一个readme来指导人么如何使用他们的项目。在这种情况下你通常能够发现一个指向库中名为“docs”的另一个文件或文件夹的链接。\r\n		</li>\r\n	</ul>\r\n</h4>\r\n<p>\r\n	<a href=\"http://cms.csdnimg.cn/article/201404/14/534b71d05b57b.jpg\" target=\"_blank\"><img src=\"http://cms.csdnimg.cn/article/201404/14/534b71d05b57b.jpg\" border=\"0\" style=\"height:auto;\" /></a> \r\n</p>\r\n<p>\r\n	另外，该库也可能使用Github&nbsp;wiki来代替文档。&nbsp;\r\n</p>\r\n<p>\r\n	<a href=\"http://cms.csdnimg.cn/article/201404/14/534b7235b755f.jpg\" target=\"_blank\"><img src=\"http://cms.csdnimg.cn/article/201404/14/534b7235b755f_middle.jpg?_=5174\" border=\"0\" alt=\"\" style=\"height:auto;\" />&nbsp;</a> \r\n</p>\r\n<h2>\r\n	贡献于一个项目<br />\r\n</h2>\r\n既然你已经找到了理解该项目的相关资料，下面你就可以采取一些行动了。\r\n<h4>\r\n	建立一个话题\r\n</h4>\r\n如果你发现了你正在使用的项目中的一个bug（但是你不知道怎么去修复它），或对文档有不解或对项目有疑问 —&nbsp;那么创建一个话题吧！这非常容易且一般你不管创建什么话题，你都可能不是唯一一个出现该问题的人，所以其他人可能会发现你的话题很有帮助。关于更多的话题介绍，请查看我们的&nbsp;<a target=\"_blank\" href=\"http://guides.github.com/overviews/issues\">Issues guide</a>。\r\n<h4>\r\n	话题专业提示\r\n</h4>\r\n<ul>\r\n	<li>\r\n		在建话题之前检查已有的话题：话题重复对双方都无利，所以搜索整个正开放和已关闭的话题以检查你遇到的问题是否已经有人解决了。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		务必对自己的问题有清晰的认识：期望的结果是什么？然而却发生了什么？&nbsp;详细描述其他人如何重现该问题。\r\n	</li>\r\n	<li>\r\n		在像&nbsp;<a target=\"_blank\" href=\"http://jsfiddle.net/\">JSFiddle</a>或&nbsp;<a target=\"_blank\" href=\"http://codepen.io/\">CodePen</a>类似的平台上重现该问题并给出问题demo的链接。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		包含一些系统相关的细节，比如用的什么浏览器、库或操作系统及版本号。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		在你的话题或在&nbsp;<a target=\"_blank\" href=\"http://gist.github.com/\">Gist</a>里贴出你的错误输出或日志。如果在话题里贴出来，请用三个反引号```&nbsp;包围起来使得能够良好的呈现给大家。\r\n	</li>\r\n</ul>\r\n<h4>\r\n	Pull Request\r\n</h4>\r\n如果你能够修复bug或自己添加功能 —&nbsp;太棒了，请发一个pull&nbsp;request吧！确保你已经读过任何关于contributing的文档，且需要理解license以及已经签过CLA（如果需要的话）。一旦你提交了一个pull&nbsp;request，维护者就会将你的分支与已有的分支作比较来决定是否要合并（即pull&nbsp;in）你作的改动。\r\n<h4>\r\n	Pull Request专业提示<br />\r\n</h4>\r\n<ul>\r\n	<li>\r\n		<a target=\"_blank\" href=\"http://guides.github.com/overviews/forking/\">Fork</a>&nbsp;该项目库及将它clone到本地。通过添加为远程的方式在本地连接到原来的‘upstream’库。经常从‘upstream’库pull in改动以保持库最新，这样当你提交pull&nbsp;request时，就不大可能发生合并冲突了。点&nbsp;<a target=\"_blank\" href=\"https://help.github.com/articles/syncing-a-fork\">这里</a>看更多的指导细节。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		为你的编辑单独建立一个<a target=\"_blank\" href=\"http://guides.github.com/overviews/flow/\">分支</a>&nbsp;。\r\n	</li>\r\n	<li>\r\n		务必清楚所出现的问题以及如何重现该问题或为什么你的功能有帮助。然后同样的要清楚做一些改变有哪些步骤。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		最好测试一下。在任何已有的测试（如果存在）上运行你所做的改动并在必要时创建新的测试。不管测试存不存在，都要确保你的改动不会破坏已有的项目。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		如果你的改动包含了HTML/CSS方面的不同，那么请包含改动前和改动后的截图。将你的图片拖放到你pull&nbsp;request的正文里。&nbsp;<br />\r\n	</li>\r\n	<li>\r\n		尽你所能的在项目的风格上多做努力。这可能意味着使用不同于你自己Github库中采用的缩进，分号或注释，但是这让维护者更容易合并，也让其他人更容易理解和以后的维护。\r\n	</li>\r\n</ul>\r\n<h4>\r\n	<a href=\"http://cms.csdnimg.cn/article/201404/14/534b7275380df.jpg\" target=\"_blank\"><img src=\"http://cms.csdnimg.cn/article/201404/14/534b7275380df_middle.jpg?_=53854\" border=\"0\" alt=\"\" style=\"height:auto;\" /></a><br />\r\n</h4>\r\n<h4>\r\n	开放的Pull Requests\r\n</h4>\r\n一旦你打开一个pull&nbsp;request，就会有一个讨论，围绕你提出的改变作出探讨。其他的贡献者和用户可能会参与进来，但最终由维护者做决定。你可能会被要求对你的pull&nbsp;request做一些改变，如果这样，请给你的分支添加更多的commit并push它们 —&nbsp;它们将自动的加入到已有的pull&nbsp;request里。\r\n<p>\r\n	如果你的pull&nbsp;request被合并了——太好了！如果没被合并的话，也没什么大不了的，也许这不是项目维护者所期望看到的改动，亦或者他们已经致力于该bug或功能。这种情况有可能发生，所以我们的建议是：对收到的结果做出反馈，进一步努力然后再次pull&nbsp;request出去—&nbsp;或者创建你自己的开源项目。\r\n</p>\r\n<p>\r\n	VIA&nbsp;<a target=\"_blank\" href=\"https://guides.github.com/overviews/os-contributing/\">GitHub</a>&nbsp;&amp;&nbsp;<a href=\"http://blog.csdn.net/lanxuezaipiao/article/details/23546349\" target=\"_blank\">CSDN 博客</a> \r\n</p>',NULL,NULL,'2014-04-16 11:11:31',0,'如何参与一个GitHub开源项目？',0),(20,'admin',2,'<p>\r\n	HTTP状态码，我都是现查现用。 我以前记得几个常用的状态码，比如200，302，304，404， 503。 一般来说我也只需要了解这些常用的状态码就可以了。&nbsp; 如果是做AJAX，REST,网络爬虫，机器人等程序。还是需要了解其他状态码。&nbsp; 本文我花了一个多月的时间把所有的状态码都总结了下，内容太多，看的时候麻烦耐心点了。\r\n</p>\r\n<p>\r\n	HTTP状态码的学习资料到处都有，但是都是理论上讲解。&nbsp; 本文介绍HTTP协议中的HTTP状态码（HTTP Status Code）， 会对大部分的状态码都进行了详细的实例讲解。\r\n</p>\r\n<p>\r\n	要了解状态码，应该在实例中去理解状态码的意义，否则看了也会忘记的。\r\n</p>\r\n<p>\r\n	用Fiddler工具可以查看HTTP Request和Response, 还可以方便地查看Response中的状态码， 如果不熟悉这个工具，可以先参考【<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/02/06/2337728.html\" target=\"_blank\">Fiddler教程】</a> \r\n</p>\r\n<p>\r\n	为了重现HTTP 状态码，本文会使用Fiddler Composer来创建“特殊的HTTP Request”.&nbsp; 可以参考【<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/12/25/2829709.html\">Fiddler Composer创建和发送HTTP Request</a>】\r\n</p>\r\n<h1>\r\n	什么是HTTP状态码<a></a> \r\n</h1>\r\n<p>\r\n	HTTP状态码的作用是：Web服务器用来告诉客户端，发生了什么事。\r\n</p>\r\n<p>\r\n	状态码位于HTTP Response 的第一行中，会返回一个”三位数字的状态码“和一个“状态消息”。 ”三位数字的状态码“便于程序进行处理， “状态消息”更便于人理解。\r\n</p>\r\n<p>\r\n	如下图，&nbsp; 当客户端请求一个不存在的URL的时候， Web服务器会返回 “HTTP/1.1 404 Not Found” 告诉浏览器客户端。 服务器无法找到所请求的URL。\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012121416231094.png\" alt=\"\" style=\"width:817px;\" /> \r\n</p>\r\n<h1>\r\n	状态码分类<a></a> \r\n</h1>\r\n<p>\r\n	HTTP状态码被分为五大类， 目前我们使用的HTTP协议版本是1.1， 支持以下的状态码。随着协议的发展，HTTP规范中会定义更多的状态码。\r\n</p>\r\n<p>\r\n	小技巧：&nbsp; 假如你看到一个状态码518， 你并不知道具体518是什么意思。 这时候你只要知道518是属于（5XX，服务器错误就可以了）\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			</td>\r\n			<td>\r\n				已定义范围\r\n			</td>\r\n			<td>\r\n				分类\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				1XX\r\n			</td>\r\n			<td>\r\n				100-101\r\n			</td>\r\n			<td>\r\n				信息提示\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				2XX\r\n			</td>\r\n			<td>\r\n				200-206\r\n			</td>\r\n			<td>\r\n				成功\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				3XX\r\n			</td>\r\n			<td>\r\n				300-305\r\n			</td>\r\n			<td>\r\n				重定向\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				4XX\r\n			</td>\r\n			<td>\r\n				400-415\r\n			</td>\r\n			<td>\r\n				客户端错误\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				5XX\r\n			</td>\r\n			<td>\r\n				500-505\r\n			</td>\r\n			<td>\r\n				服务器错误\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	常见的状态码<a></a> \r\n</h1>\r\n<p>\r\n	一般人只需要了解以下常见的状态码就够了， 如果你想了解更多， 请继续往下看。\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				200 OK 服务器成功处理了请求（这个是我们见到最多的）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				301/302 Moved Permanently（重定向）请求的URL已移走。Response中应该包含一个Location URL, 说明资源现在所处的位置\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				304 Not Modified（未修改）客户的缓存资源是最新的， 要客户端使用缓存\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				404 Not Found 未找到资源\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				501 Internal Server Error服务器遇到一个错误，使其无法对请求提供服务\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	1XX 信息性状态码<a></a> \r\n</h1>\r\n<p>\r\n	这些状态码是HTTP 1.1引入的。 对于这些状态码的价值还存在争论 （我个人从来没见过这些状态码， 也没有理解这些状态码。）\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				状态码\r\n			</td>\r\n			<td>\r\n				状态消息\r\n			</td>\r\n			<td>\r\n				含义\r\n			</td>\r\n			<td>\r\n				实例\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				100\r\n			</td>\r\n			<td>\r\n				Continue(继续)\r\n			</td>\r\n			<td>\r\n				收到了请求的起始部分，客户端应该继续请求\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				101\r\n			</td>\r\n			<td>\r\n				Switching Protocols（切换协议）\r\n			</td>\r\n			<td>\r\n				服务器正根据客户端的指示将协议切换成Update Header列出的协议\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	2XX 成功状态码<a></a> \r\n</h1>\r\n<p>\r\n	客户端发起请求时， 这些请求通常都是成功的。服务器有一组用来表示成功的状态码，分别对应于不同类型的请求。\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				状态码\r\n			</td>\r\n			<td>\r\n				状态消息\r\n			</td>\r\n			<td>\r\n				含义\r\n			</td>\r\n			<td>\r\n				实例\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				200\r\n			</td>\r\n			<td>\r\n				OK\r\n			</td>\r\n			<td>\r\n				服务器成功处理了请求（这个是我们见到最多的）\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#code200\" target=\"_blank\">HTTP协议详解-200</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				201\r\n			</td>\r\n			<td>\r\n				Created（已创建）\r\n			</td>\r\n			<td>\r\n				对于那些要服务器创建对象的请求来说，资源已创建完毕。\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				202\r\n			</td>\r\n			<td>\r\n				Accepted（已接受）\r\n			</td>\r\n			<td>\r\n				请求已接受， 但服务器尚未处理\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				203\r\n			</td>\r\n			<td>\r\n				Non-Authoritative Information（非权威信息）\r\n			</td>\r\n			<td>\r\n				服务器已将事务成功处理，只是实体Header包含的信息不是来自原始服务器，而是来自资源的副本。\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				204\r\n			</td>\r\n			<td>\r\n				No Content(没有内容)\r\n			</td>\r\n			<td>\r\n				Response中包含一些Header和一个状态行， 但不包括实体的主题内容（没有response body）\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code204\">状态码204</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				205\r\n			</td>\r\n			<td>\r\n				Reset Content(重置内容)\r\n			</td>\r\n			<td>\r\n				另一个主要用于浏览器的代码。意思是浏览器应该重置当前页面上所有的HTML表单。\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				206\r\n			</td>\r\n			<td>\r\n				Partial Content（部分内容）\r\n			</td>\r\n			<td>\r\n				部分请求成功\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code206\">状态码206</a> \r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	3XX 重定向状态码<a></a> \r\n</h1>\r\n<p>\r\n	重定向状态码用来告诉浏览器客户端，它们访问的资源已被移动， Web服务器发送一个重定向状态码和一个可选的Location Header, 告诉客户端新的资源地址在哪。\r\n</p>\r\n<p>\r\n	浏览器客户端会自动用Location中提供的地址，重新发送新的Request。 这个过程对用户来说是透明的。\r\n</p>\r\n<p>\r\n	301和302 非常相似，&nbsp; 一个是永久转移，一个是临时转移。\r\n</p>\r\n<p>\r\n	（SEO中，搜索引擎如果碰到301， 比如网页A用301重定向到网页B，搜索引擎可以肯定网页A永久性改变地址，就会把网页B当做唯一有效目标）\r\n</p>\r\n<p>\r\n	302，303，307 是一样。&nbsp; 这是因为302是HTTP 1.0定义的， HTTP1.1中使用303,307. 同时又保留了302.&nbsp; （但在现实中，我们还是用302，我是没见过303和307）\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	所以这一节， 我们只需要掌握302， 304 就可以了。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				状态码\r\n			</td>\r\n			<td>\r\n				状态消息\r\n			</td>\r\n			<td>\r\n				含义\r\n			</td>\r\n			<td>\r\n				实例\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				300\r\n			</td>\r\n			<td>\r\n				Multiple Choices（多项选择）\r\n			</td>\r\n			<td>\r\n				客户端请求了实际指向多个资源的URL。这个代码是和一个选项列表一起返回的，然后用户就可以选择他希望的选项了\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				301\r\n			</td>\r\n			<td>\r\n				Moved Permanently（永久移除)\r\n			</td>\r\n			<td>\r\n				请求的URL已移走。Response中应该包含一个Location URL, 说明资源现在所处的位置\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code301\">状态码301</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				302\r\n			</td>\r\n			<td>\r\n				Found（已找到）\r\n			</td>\r\n			<td>\r\n				与状态码301类似。但这里的移除是临时的。 客户端会使用Location中给出的URL，重新发送新的HTTP request\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#Found302\" target=\"_blank\">HTTP协议详解-302</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				303\r\n			</td>\r\n			<td>\r\n				See Other（参见其他）\r\n			</td>\r\n			<td>\r\n				类似302\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				304\r\n			</td>\r\n			<td>\r\n				Not Modified（未修改）\r\n			</td>\r\n			<td>\r\n				客户的缓存资源是最新的， 要客户端使用缓存\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/11/28/2793365.html#lastModify\" target=\"_blank\">HTTP协议之缓存-304</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				305\r\n			</td>\r\n			<td>\r\n				Use Proxy（使用代理）\r\n			</td>\r\n			<td>\r\n				必须通过代理访问资源， 代理的地址在Response 的Location中\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				306\r\n			</td>\r\n			<td>\r\n				未使用\r\n			</td>\r\n			<td>\r\n				这个状态码当前没使用\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				307\r\n			</td>\r\n			<td>\r\n				Temporary Redirect（临时重定向\r\n			</td>\r\n			<td>\r\n				类似302\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	4XX客户端错误状态码<a></a> \r\n</h1>\r\n<p>\r\n	有时客户端会发送一些服务器无法处理的东西，比如格式错误的Request, 或者最常见的是， 请求一个不存在的URL。\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				状态码\r\n			</td>\r\n			<td>\r\n				状态消息\r\n			</td>\r\n			<td>\r\n				含义\r\n			</td>\r\n			<td>\r\n				实例\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				400\r\n			</td>\r\n			<td>\r\n				Bad Request（坏请求）\r\n			</td>\r\n			<td>\r\n				告诉客户端，它发送了一个错误的请求。\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code400\">状态码400</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				401\r\n			</td>\r\n			<td>\r\n				Unauthorized（未授权）\r\n			</td>\r\n			<td>\r\n				需要客户端对自己认证\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/09/26/2695955.html#guocheng\" target=\"_blank\">HTTP协议之基本认证-401</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				402\r\n			</td>\r\n			<td>\r\n				Payment Required（要求付款）\r\n			</td>\r\n			<td>\r\n				这个状态还没被使用， 保留给将来用\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				403\r\n			</td>\r\n			<td>\r\n				Forbidden（禁止）\r\n			</td>\r\n			<td>\r\n				请求被服务器拒绝了\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code403\">状态码403</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				404\r\n			</td>\r\n			<td>\r\n				Not Found（未找到）\r\n			</td>\r\n			<td>\r\n				未找到资源\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#code404\" target=\"_blank\">HTTP协议详解-404</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				405\r\n			</td>\r\n			<td>\r\n				Method Not Allowed（不允许使用的方法）\r\n			</td>\r\n			<td>\r\n				不支持该Request的方法。\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code405\">状态码405</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				406\r\n			</td>\r\n			<td>\r\n				Not Acceptable（无法接受）\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				407\r\n			</td>\r\n			<td>\r\n				Proxy Authentication Required(要求进行代理认证)\r\n			</td>\r\n			<td>\r\n				与状态码401类似， 用于需要进行认证的代理服务器\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/12/12/2794160.html#proxyAuth\" target=\"_blank\">HTTP协议之代理-407</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				408\r\n			</td>\r\n			<td>\r\n				Request Timeout（请求超时）\r\n			</td>\r\n			<td>\r\n				如果客户端完成请求时花费的时间太长， 服务器可以回送这个状态码并关闭连接\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				409\r\n			</td>\r\n			<td>\r\n				Conflict（冲突）\r\n			</td>\r\n			<td>\r\n				发出的请求在资源上造成了一些冲突\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				410\r\n			</td>\r\n			<td>\r\n				Gone（消失了）\r\n			</td>\r\n			<td>\r\n				服务器曾经有这个资源，现在没有了， 与状态码404类似\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				411\r\n			</td>\r\n			<td>\r\n				Length Required（要求长度指示）\r\n			</td>\r\n			<td>\r\n				服务器要求在Request中包含Content-Length。\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code411\">状态码411</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				412\r\n			</td>\r\n			<td>\r\n				Precondition Failed（先决条件失败）\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				413\r\n			</td>\r\n			<td>\r\n				Request Entity Too Large（请求实体太大）\r\n			</td>\r\n			<td>\r\n				客户端发送的实体主体部分比服务器能够或者希望处理的要大\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code413\">状态码413</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				414\r\n			</td>\r\n			<td>\r\n				Request URI Too Long（请求URI太长）\r\n			</td>\r\n			<td>\r\n				客户端发送的请求所携带的URL超过了服务器能够或者希望处理的长度\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code414\">状态码414</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				415\r\n			</td>\r\n			<td>\r\n				Unsupported Media Type（不支持的媒体类型）\r\n			</td>\r\n			<td>\r\n				服务器无法理解或不支持客户端所发送的实体的内容类型\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				416\r\n			</td>\r\n			<td>\r\n				Requested Range Not Satisfiable（所请求的范围未得到满足）\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				417\r\n			</td>\r\n			<td>\r\n				Expectation Failed（无法满足期望）\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n</h1>\r\n<h1>\r\n</h1>\r\n<h1>\r\n</h1>\r\n<h1>\r\n</h1>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	5XX服务器错误状态码<a></a> \r\n</h1>\r\n<p>\r\n	有时候客户端发送了一条有效Request, Web服务器自身却出错了。 可能是Web服务器运行出错了， 或者网站都挂了。&nbsp; 5XX就是用来描述服务器错误的。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				状态码\r\n			</td>\r\n			<td>\r\n				状态消息\r\n			</td>\r\n			<td>\r\n				含义\r\n			</td>\r\n			<td>\r\n				实例\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				500\r\n			</td>\r\n			<td>\r\n				Internal Server Error(内部服务器错误)\r\n			</td>\r\n			<td>\r\n				服务器遇到一个错误，使其无法为请求提供服务\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code500\">状态码500</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				501\r\n			</td>\r\n			<td>\r\n				Not Implemented（未实现）\r\n			</td>\r\n			<td>\r\n				客户端发起的请求超出服务器的能力范围(比如，使用了服务器不支持的请求方法)时，使用此状态码。\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code501\">状态码501</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				502\r\n			</td>\r\n			<td>\r\n				Bad Gateway（网关故障）\r\n			</td>\r\n			<td>\r\n				代理使用的服务器遇到了上游的无效响应\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code502\">状态码502</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				503\r\n			</td>\r\n			<td>\r\n				Service Unavailable（未提供此服务）\r\n			</td>\r\n			<td>\r\n				服务器目前无法为请求提供服务，但过一段时间就可以恢复服务\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				504\r\n			</td>\r\n			<td>\r\n				Gateway Timeout（网关超时）\r\n			</td>\r\n			<td>\r\n				与状态吗408类似， 但是响应来自网关或代理，此网关或代理在等待另一台服务器的响应时出现了超时\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				505\r\n			</td>\r\n			<td>\r\n				HTTP Version Not Supported（不支持的HTTP版本）\r\n			</td>\r\n			<td>\r\n				服务器收到的请求使用了它不支持的HTTP协议版本。 有些服务器不支持HTTP早期的HTTP协议版本，也不支持太高的协议版本\r\n			</td>\r\n			<td>\r\n				<a href=\"http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html#code505\">状态码505</a> \r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	204 No Content(没有内容)<a></a> \r\n</h1>\r\n<p>\r\n	返回的Response中只有一些Header和一个状态行， 没有实体的主题内容（没有response body）\r\n</p>\r\n<p>\r\n	204状态码的作用在于： 1. 在不获取资源的情况下了解资源的情况（比如判断其类型）\r\n</p>\r\n<p>\r\n	2. 通过查看Response中的状态码， 看看某个对象是否存在\r\n</p>\r\n<p>\r\n	3. 通过查看Header, 测试资源是否被修改了。\r\n</p>\r\n<p>\r\n	实例：先打开Fiddler, 然后启动浏览器访问ditu.google.cn,&nbsp; 你会捕获到很多204\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/04225053-532d11c568574bb399315974d5790a18.PNG\" alt=\"\" style=\"width:817px;\" /> \r\n</p>\r\n<h1>\r\n	206 Partial Content(部分内容)<a></a> \r\n</h1>\r\n<p>\r\n	206状态码代表服务器已经成功处理了部分GET请求（只有发送GET 方法的request, web服务器才可能返回206），\r\n</p>\r\n<p>\r\n	应用场景：\r\n</p>\r\n<p>\r\n	1. FlashGet, 迅雷或者HTTP下载工具都是使用206状态码来实现断点续传\r\n</p>\r\n<p>\r\n	2. 将以个大文档分解为多个下载段同时下载 比如，在线看视频\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	实例：　一些流媒体技术比如在线视频，可以边看边下载。　就是使用206来实现的。\r\n</p>\r\n<p>\r\n	打开Fiddler， 然后用浏览器打开“搜狐视频中的绿箭侠” <a href=\"http://tv.sohu.com/20121011/n354681393.shtml\" target=\"_blank\">http://tv.sohu.com/20121011/n354681393.shtml</a> 然后你在Fiddler中就能看到一堆的206\r\n</p>\r\n<p>\r\n	1. 浏览器发送一个Get 方法的request.&nbsp; header中包含 Range: bytes=5303296-5336063. (意思就是请求得到5303296-5336063这个范围的数据)。\r\n</p>\r\n<p>\r\n	2. Web服务器返回一个206 的Response. header中包含Content-Range: bytes 5303296-5336063/12129376(表明这次返回的内容范围)\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012121611285394.png\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	301 Moved Permanently（永久移除)<a></a> \r\n</h1>\r\n<p>\r\n	请求的URL已移走。Response中应该包含一个Location URL, 说明资源现在所处的位置\r\n</p>\r\n<p>\r\n	例如：&nbsp; 1.&nbsp; 浏览器客户端访问 <a>http://map.google.cn</a> \r\n</p>\r\n<p>\r\n	2. Web服务器返回Response 301，Location=http://titu.google.cn&nbsp; （告诉客户端我们的资源位于这里， ）\r\n</p>\r\n<p>\r\n	3. 浏览器客户端会自动再发送一个Request 去访问http://titu.google.cn\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03201816-6db40fd0da20457c9506e01ada8c8f05.PNG\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	400 Bad Request（坏请求)<a></a> \r\n</h1>\r\n<p>\r\n	发送的Request中的数据有错误(比如：表单有错误，Cookie有错误)，&nbsp; 这个我们也经常见到。\r\n</p>\r\n<p>\r\n	实例： 还没想到， 想到了再贴个实例上来。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	403 Forbidden(禁止)<a></a> \r\n</h1>\r\n<p>\r\n	Web客户端发送的请求被Web服务器拒绝了， 如果服务器想说明为什么拒绝请求，可以包含实体的主体部分来对原因进行描述。但这个状态码通常是服务器不想说明拒绝原因。\r\n</p>\r\n<p>\r\n	访问下面的URL， 会被服务器拒绝. 并且返回403状态码\r\n</p>\r\n<p>\r\n	<a href=\"http://t2.baidu.com/it/u=1791561788,200960144&fm=0&gp=0.jpg\" target=\"_blank\">http://t2.baidu.com/it/u=1791561788,200960144&amp;fm=0&amp;gp=0.jpg</a> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	404 Page not Found (请求的资源不存在)\r\n</h1>\r\n<p>\r\n	这个大家都懂的， 值得一提的是：　腾讯把404页面做成了“寻找被拐儿童”\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201304/14121821-7c587ff3e92644b7be5a87579e5c37bc.png\" alt=\"\" style=\"width:817px;\" /> \r\n</p>\r\n<h1>\r\n	405 Method Not Allowed(不允许使用的方法)<a></a> \r\n</h1>\r\n<p>\r\n	405是指Web服务器不支持Request中的方法。\r\n</p>\r\n<p>\r\n	我个人认为状态码405Method Not Allowed和501 Not Implemented 是一样的意思。都是不支持Request的方法。 （目前我还不知道这两个的区别）\r\n</p>\r\n<p>\r\n	实例:&nbsp; 发送一个是trace方法的Request 给www.google.com\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03222934-a9a9a891a4664f77ac70eba66e5cb879.PNG\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03222951-eb4a108431044bcaa596c23fe6eec82a.PNG\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	411 Length Required（要求长度指示）<a></a> \r\n</h1>\r\n<p>\r\n	服务器要求在Request中包含Content-Length。\r\n</p>\r\n<p>\r\n	当浏览器使用Post方法，发送数据给Web服务器时， 必须要有Content-Length。这样Web服务器才知道你要发送多少数据，否则Web服务器会返回411状态码\r\n</p>\r\n<p>\r\n	实例： 发送一个Post方法的Request 给www.google.com.&nbsp;&nbsp; Request中没有Content-Length\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03225016-b2f01dda49c545bc805b4654057f934f.PNG\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03225026-419624b4d401451ca1a7309de6668f26.PNG\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	413 Request Entity Too Large（请求实体太大）<a></a> \r\n</h1>\r\n<p>\r\n	作用：客户端发送的实体主体部分比服务器能够或者希望处理的要大。&nbsp; 一般情况下我们看不到这个状态码。 因为浏览器不会发送太大的数据给网站，但是机器人可能会。\r\n</p>\r\n<p>\r\n	实例: 用post方法发送一个大文件(100MB以上)给www.google.com\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03231604-bc5dd1ece83f45f8993f21d132a93424.PNG\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03231619-7c1f0f1b595f4719b33f7de8d4d02cda.PNG\" alt=\"\" style=\"width:817px;\" /> \r\n</p>\r\n<h1>\r\n	414 Request URI Too Long(请求URI太长)<a></a> \r\n</h1>\r\n<p>\r\n	就是说Request URI太长， 一般浏览器本身对URI的长度就会有限制，所以不会发送URI很长的Request. 我们平常是根本看不到414错误的。 但是机器人可以发送很长URI。\r\n</p>\r\n<p>\r\n	例如：我们用Fiddler Composer发送一个很长的URI给Google, 比如 \"<a href=\"http://www.google.com/?q\">www.google.com?q</a>=asdfasdasf..\"&nbsp; q=后面的参数很长。 就可以看到414了\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201212/25230448-2254e70e6fce4ee79bf30547d72d728a.PNG\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201212/25230559-eb419ff70320495da542f69717c2c951.PNG\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	500 Internal Server Error(内部服务器错误)<a></a> \r\n</h1>\r\n<p>\r\n	这个太常见了， 我们开发网站的时候，当我们的程序出错了时，就会返回500错误。\r\n</p>\r\n<p>\r\n	实例：ASP.NET 程序出错\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/04234543-4b9159fc6099430c92b1ee0b2aecbbd7.PNG\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/04234556-e3a122f3051d4743940a3ea36ae0d7af.PNG\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	501 Not Implemented(未实现)<a></a> \r\n</h1>\r\n<p>\r\n	客户端发起的请求超出服务器的能力范围(比如，使用了服务器不支持的请求方法)时，使用此状态码）。&nbsp; 一般的Web服务器只支持GET和POST方法。\r\n</p>\r\n<p>\r\n	实例： 使用Fiddler Composer 给www.qq.com,&nbsp; 发送一个OPTIONS 方法的Request.&nbsp;&nbsp; 服务器就能返回501了。\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012122418172928.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012122418174411.png\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	502 Bad Gateway（网关故障）<a></a> \r\n</h1>\r\n<p>\r\n	代理使用的服务器遇到了上游的无效响应。\r\n</p>\r\n<p>\r\n	Fiddler本身就是代理服务器。&nbsp; 当我们访问www.facebook.com，这网站被我们天朝屏蔽了。 所以我们可以得到502\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03200534-adede527f8f242e8b80fc0574d0f3a3e.PNG\" alt=\"\" /> \r\n</p>\r\n<h1>\r\n	505 HTTP Version Not Supported(不支持的HTTP版本)<a></a> \r\n</h1>\r\n<p>\r\n	表示Web服务器不支持此HTTP协议的版本。\r\n</p>\r\n<p>\r\n	众所周知我们现在使用的HTTP协议版本是HTTP/1.1， 如果我们发送一个HTTP/2.0 的request 给博客园， 博客园肯定不能支持HTTP/2.0，所以会返回505\r\n</p>\r\n<p>\r\n	想要发送这样的request, 可以使用Fiddler工具中的Composer来发送自定义的request, 如下图。\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/blog/263119/201301/03202101-73a92373995e4307abf2b9e06bb01b9e.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012121418075283.png\" alt=\"\" style=\"width:817px;\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	[本文参考了： HTTP：The Definitive Guide]\r\n</p>',NULL,'2014-04-17 20:58:11','2014-04-17 20:57:22',0,'HTTP协议-状态码详解',0),(21,'admin',2,'<p>\r\n	当今web程序的开发技术真是百家争鸣，ASP.NET, PHP, JSP，Perl, AJAX 等等。 无论Web技术在未来如何发展，理解Web程序之间通信的基本协议相当重要, 因为它让我们理解了Web应用程序的内部工作. 本文将对HTTP协议进行详细的实例讲解，内容较多，希望大家耐心看。也希望对大家的开发工作或者测试工作有所帮助。使用Fiddler工具非常方便地捕获HTTP Request和HTTP Response,&nbsp; 关于Fiddler工具的用法，请看我另一篇博客[<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/02/06/2337728.html\" target=\"_blank\">Fiddler 教程</a>]\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<hr />\r\n</p>\r\n<h1>\r\n	什么是HTTP协议<a></a> \r\n</h1>\r\n<p>\r\n	协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则，超文本传输协议(HTTP)是一种通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	目前我们使用的是HTTP/1.1 版本\r\n</p>\r\n<h1>\r\n	Web服务器，浏览器,代理服务器<a></a> \r\n</h1>\r\n<p>\r\n	当我们打开浏览器，在地址栏中输入URL，然后我们就看到了网页。 原理是怎样的呢？\r\n</p>\r\n<p>\r\n	实际上我们输入URL后，我们的浏览器给Web服务器发送了一个Request, Web服务器接到Request后进行处理，生成相应的Response，然后发送给浏览器， 浏览器解析Response中的HTML,这样我们就看到了网页，过程如下图所示\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012020910422542.png\" alt=\"\" width=\"586\" height=\"272\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	我们的Request 有可能是经过了代理服务器，最后才到达Web服务器的。\r\n</p>\r\n<p>\r\n	过程如下图所示\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012020910491417.png\" alt=\"\" width=\"583\" height=\"256\" /> \r\n</p>\r\n<p>\r\n	代理服务器就是网络信息的中转站，有什么功能呢？\r\n</p>\r\n<p>\r\n	1. 提高访问速度， 大多数的代理服务器都有缓存功能。\r\n</p>\r\n<p>\r\n	2. 突破限制， 也就是翻墙了\r\n</p>\r\n<p>\r\n	3. 隐藏身份。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	URL详解<a></a> \r\n</h1>\r\n<p>\r\n	&nbsp;URL(Uniform Resource Locator) 地址用于描述一个网络上的资源,&nbsp; 基本格式如下\r\n</p>\r\n<div>\r\n	schema://host[:port#]/path/.../[?query-string][#anchor]\r\n</div>\r\n<p>\r\n	scheme&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 指定低层使用的协议(例如：http, https, ftp)\r\n</p>\r\n<p>\r\n	host&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HTTP服务器的IP地址或者域名\r\n</p>\r\n<p>\r\n	port#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 http://www.cnblogs.com:8080/\r\n</p>\r\n<p>\r\n	path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 访问资源的路径\r\n</p>\r\n<p>\r\n	query-string&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 发送给http服务器的数据\r\n</p>\r\n<p>\r\n	anchor-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 锚\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	URL 的一个例子\r\n</p>\r\n<div>\r\n	<div>\r\n		<a href=\"\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a>\r\n	</div>\r\nhttp://www.mywebsite.com/sj/test/test.aspx?name=sviergn&amp;x=true#stuff\r\nSchema:                 http\r\nhost:                   www.mywebsite.com\r\npath:                   /sj/test/test.aspx\r\nQuery String:           name=sviergn&amp;x=true\r\nAnchor:                 stuff\r\n	<div>\r\n		<a href=\"\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a>\r\n	</div>\r\n</div>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	HTTP协议是无状态的<a></a> \r\n</h1>\r\n<p>\r\n	http协议是无状态的，同一个客户端的这次请求和上次请求是没有对应关系，对http服务器来说，它并不知道这两个请求来自同一个客户端。 为了解决这个问题， Web程序引入了Cookie机制来维护状态.\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	打开一个网页需要浏览器发送很多次Request<a></a> \r\n</h1>\r\n<p>\r\n	1. 当你在浏览器输入URL http://www.cnblogs.com 的时候，浏览器发送一个Request去获取 http://www.cnblogs.com 的html.&nbsp; 服务器把Response发送回给浏览器.\r\n</p>\r\n<p>\r\n	2. 浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如图片，CSS文件，JS文件。\r\n</p>\r\n<p>\r\n	3. 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。\r\n</p>\r\n<p>\r\n	4. 等所有的文件都下载成功后。 网页就被显示出来了。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	HTTP消息的结构<a></a> \r\n</h1>\r\n<p>\r\n	先看Request 消息的结构,&nbsp;&nbsp; Request 消息分为3部分，第一部分叫Request line, 第二部分叫Request header, 第三部分是body. header和body之间有个空行， 结构如下图\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012020914293943.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	第一行中的Method表示请求方法,比如\"POST\",\"GET\",&nbsp; Path-to-resoure表示请求的资源， Http/version-number 表示HTTP协议的版本号\r\n</p>\r\n<p>\r\n	当使用的是\"GET\" 方法的时候， body是为空的\r\n</p>\r\n<p>\r\n	比如我们打开博客园首页的request 如下\r\n</p>\r\n<div>\r\n	GET http://www.cnblogs.com/ HTTP/1.1\r\nHost: www.cnblogs.com\r\n</div>\r\n<p>\r\n	抽象的东西，难以理解，老感觉是虚的， 所谓眼见为实, 实际见到的东西，我们才能理解和记忆。 我们今天用Fiddler，实际的看看Request和Response.\r\n</p>\r\n<p>\r\n	下面我们打开Fiddler 捕捉一个博客园登录的Request 然后分析下它的结构, 在Inspectors tab下以Raw的方式可以看到完整的Request的消息， &nbsp; 如下图\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012022009421183.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	我们再看Response消息的结构, 和Request消息的结构基本一样。 同样也分为三部分,第一部分叫Response line, 第二部分叫Response header，第三部分是body. header和body之间也有个空行,&nbsp; 结构如下图\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021309365350.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	HTTP/version-number表示HTTP协议的版本号，&nbsp; status-code 和message 请看下节[<a href=\"http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statecode\" target=\"_blank\">状态代码</a>]的详细解释.\r\n</p>\r\n<p>\r\n	我们用Fiddler 捕捉一个博客园首页的Response然后分析下它的结构, 在Inspectors tab下以Raw的方式可以看到完整的Response的消息， &nbsp; 如下图\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012022009373182.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	Get和Post方法的区别<a></a> \r\n</h1>\r\n<p>\r\n	Http协议定义了很多与服务器交互的方法，最基本的有4种，分别是GET,POST,PUT,DELETE. 一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。 我们最常见的就是GET和POST了。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息.\r\n</p>\r\n<p>\r\n	我们看看GET和POST的区别\r\n</p>\r\n<p>\r\n	1. GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name=test1&amp;id=123456.&nbsp; POST方法是把提交的数据放在HTTP包的Body中.\r\n</p>\r\n<p>\r\n	2. GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.\r\n</p>\r\n<p>\r\n	3. GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。\r\n</p>\r\n<p>\r\n	4. GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	状态码<a></a> \r\n</h1>\r\n<p>\r\n	Response 消息中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。\r\n</p>\r\n<p>\r\n	状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response.\r\n</p>\r\n<p>\r\n	HTTP/1.1中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别\r\n</p>\r\n<p>\r\n	1XX&nbsp; 提示信息 - 表示请求已被成功接收，继续处理\r\n</p>\r\n<p>\r\n	2XX&nbsp; 成功 - 表示请求已被成功接收，理解，接受\r\n</p>\r\n<p>\r\n	3XX&nbsp; 重定向 - 要完成请求必须进行更进一步的处理\r\n</p>\r\n<p>\r\n	4XX&nbsp; 客户端错误 -&nbsp; 请求有语法错误或请求无法实现\r\n</p>\r\n<p>\r\n	5XX&nbsp; 服务器端错误 -&nbsp;&nbsp; 服务器未能实现合法的请求\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	看看一些常见的状态码\r\n</p>\r\n<p>\r\n	200 OK<a></a> \r\n</p>\r\n<p>\r\n	最常见的就是成功响应状态码200了， 这表明该请求被成功地完成，所请求的资源发送回客户端\r\n</p>\r\n<p>\r\n	如下图， 打开博客园首页\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021114423456.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;<a></a> \r\n</p>\r\n<p>\r\n	302 Found\r\n</p>\r\n<p>\r\n	重定向，新的URL会在response 中的Location中返回，浏览器将会自动使用新的URL发出新的Request\r\n</p>\r\n<p>\r\n	例如在IE中输入， http://www.google.com. HTTP服务器会返回302， IE取到Response中Location header的新URL, 又重新发送了一个Request.\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021115280744.png\" alt=\"\" width=\"766\" height=\"527\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	304 Not Modified\r\n</p>\r\n<p>\r\n	代表上次的文档已经被缓存了， 还可以继续使用，\r\n</p>\r\n<p>\r\n	例如打开博客园首页, 发现很多Response 的status code 都是304\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021115064471.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	提示：　如果你不想使用本地缓存可以用Ctrl+F5 强制刷新页面\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	400 Bad Request&nbsp; 客户端请求与语法错误，不能被服务器所理解\r\n</p>\r\n<p>\r\n	403 Forbidden 服务器收到请求，但是拒绝提供服务\r\n</p>\r\n<p>\r\n	404 Not Found<a></a> \r\n</p>\r\n<p>\r\n	请求资源不存在（输错了URL）\r\n</p>\r\n<p>\r\n	比如在IE中输入一个错误的URL， http://www.cnblogs.com/tesdf.aspx\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021114534541.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	500 Internal Server Error 服务器发生了不可预期的错误\r\n</p>\r\n<p>\r\n	503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	HTTP Request header<a></a> \r\n</h1>\r\n<p>\r\n	使用Fiddler 能很方便的查看Reques header, 点击Inspectors tab -&gt;Request tab-&gt; headers&nbsp; 如下图所示.\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021116181545.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	header 有很多，比较难以记忆，我们也按照Fiddler那样把header 进行分类，这样比较清晰也容易记忆。\r\n</p>\r\n<h2>\r\n	Cache 头域\r\n</h2>\r\n<p>\r\n	If-Modified-Since\r\n</p>\r\n<p>\r\n	作用： 把浏览器端缓存页面的最后修改时间发送到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行对比。如果时间一致，那么返回304，客户端就直接使用本地缓存文件。如果时间不一致，就会返回200和新的文件内容。客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示在浏览器中.\r\n</p>\r\n<p>\r\n	例如：If-Modified-Since: Thu, 09 Feb 2012 09:07:57 GMT\r\n</p>\r\n<p>\r\n	实例如下图\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021322503738.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	If-None-Match\r\n</p>\r\n<p>\r\n	作用: If-None-Match和ETag一起工作，工作原理是在HTTP Response中添加ETag信息。 当用户再次请求该资源时，将在HTTP Request 中加入If-None-Match信息(ETag的值)。如果服务器验证资源的ETag没有改变（该资源没有更新），将返回一个304状态告诉客户端使用本地缓存文件。否则将返回200状态和新的资源和Etag.&nbsp; 使用这样的机制将提高网站的性能\r\n</p>\r\n<p>\r\n	例如: If-None-Match: \"03f2b33c0bfcc1:0\"\r\n</p>\r\n<p>\r\n	实例如下图\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021117041918.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Pragma\r\n</p>\r\n<p>\r\n	作用： 防止页面被缓存， 在HTTP/1.1版本中，它和Cache-Control:no-cache作用一模一样\r\n</p>\r\n<p>\r\n	Pargma只有一个用法， 例如： Pragma: no-cache\r\n</p>\r\n<p>\r\n	注意: 在HTTP/1.0版本中，只实现了Pragema:no-cache, 没有实现Cache-Control\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Cache-Control\r\n</p>\r\n<p>\r\n	作用: 这个是非常重要的规则。 这个用来指定Response-Request遵循的缓存机制。各个指令含义如下\r\n</p>\r\n<p>\r\n	Cache-Control:Public&nbsp;&nbsp; 可以被任何缓存所缓存（）\r\n</p>\r\n<p>\r\n	Cache-Control:Private&nbsp;&nbsp;&nbsp;&nbsp; 内容只缓存到私有缓存中\r\n</p>\r\n<p>\r\n	Cache-Control:no-cache&nbsp; 所有内容都不会被缓存\r\n</p>\r\n<p>\r\n	还有其他的一些用法， 我没搞懂其中的意思， 请大家参考其他的资料\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	Client 头域\r\n</h2>\r\n<p>\r\n	Accept\r\n</p>\r\n<p>\r\n	作用：&nbsp;浏览器端可以接受的媒体类型,\r\n</p>\r\n<p>\r\n	例如：&nbsp; Accept: text/html &nbsp;代表浏览器可以接受服务器回发的类型为 text/html &nbsp;也就是我们常说的html文档,\r\n</p>\r\n<p>\r\n	如果服务器无法返回text/html类型的数据,服务器应该返回一个406错误(non acceptable)\r\n</p>\r\n<p>\r\n	通配符 * 代表任意类型\r\n</p>\r\n<p>\r\n	例如 &nbsp;Accept: */* &nbsp;代表浏览器可以处理所有类型,(一般浏览器发给服务器都是发这个)\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Accept-Encoding：\r\n</p>\r\n<p>\r\n	作用： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate），（注意：这不是只字符编码）;\r\n</p>\r\n<p>\r\n	例如： Accept-Encoding: gzip, deflate\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Accept-Language\r\n</p>\r\n<p>\r\n	作用： 浏览器申明自己接收的语言。&nbsp;\r\n</p>\r\n<p>\r\n	语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等；\r\n</p>\r\n<p>\r\n	例如： Accept-Language: en-us\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	User-Agent\r\n</p>\r\n<p>\r\n	作用：告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本.\r\n</p>\r\n<p>\r\n	我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了你的操作系统的名称和版本，你所使用的浏览器的名称和版本，这往往让很多人感到很神奇，实际上，服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。\r\n</p>\r\n<p>\r\n	例如：&nbsp;User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; CIBA; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; InfoPath.2; .NET4.0E)\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Accept-Charset\r\n</p>\r\n<p>\r\n	作用：浏览器申明自己接收的字符集，这就是本文前面介绍的各种字符集和字符编码，如gb2312，utf-8（通常我们说Charset包括了相应的字符编码方案）；\r\n</p>\r\n<p>\r\n	例如：\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	Cookie/Login 头域\r\n</h2>\r\n<p>\r\n	Cookie:\r\n</p>\r\n<p>\r\n	作用： 最重要的header, 将cookie的值发送给HTTP 服务器\r\n</p>\r\n<h2>\r\n	Entity头域\r\n</h2>\r\n<p>\r\n	Content-Length\r\n</p>\r\n<p>\r\n	作用：发送给HTTP服务器数据的长度。\r\n</p>\r\n<p>\r\n	例如： Content-Length: 38\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Content-Type\r\n</p>\r\n<p>\r\n	作用：\r\n</p>\r\n<p>\r\n	例如：Content-Type: application/x-www-form-urlencoded\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	Miscellaneous 头域\r\n</h2>\r\n<p>\r\n	Referer:\r\n</p>\r\n<p>\r\n	作用： 提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的，比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。\r\n</p>\r\n<p>\r\n	例如: Referer:http://translate.google.cn/?hl=zh-cn&amp;tab=wT\r\n</p>\r\n<h2>\r\n	Transport 头域\r\n</h2>\r\n<p>\r\n	Connection\r\n</p>\r\n<p>\r\n	例如：　Connection: keep-alive&nbsp;&nbsp; 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接\r\n</p>\r\n<p>\r\n	例如：&nbsp; Connection: close&nbsp; 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Host（发送请求时，该报头域是必需的）\r\n</p>\r\n<p>\r\n	作用: 请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的\r\n</p>\r\n<p>\r\n	例如: 我们在浏览器中输入：http://www.guet.edu.cn/index.html\r\n</p>\r\n<p>\r\n	浏览器发送的请求消息中，就会包含Host请求报头域，如下：\r\n</p>\r\n<p>\r\n	Host：http://www.guet.edu.cn\r\n</p>\r\n<p>\r\n	此处使用缺省端口号80，若指定了端口号，则变成：Host：指定端口号\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	HTTP Response header<a></a>\r\n</h1>\r\n<p>\r\n	同样使用Fiddler 查看Response header, 点击Inspectors tab -&gt;Response tab-&gt; headers&nbsp; 如下图所示\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021116212815.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;我们也按照Fiddler那样把header 进行分类，这样比较清晰也容易记忆。\r\n</p>\r\n<h2>\r\n	Cache头域\r\n</h2>\r\n<p>\r\n	Date\r\n</p>\r\n<p>\r\n	作用:&nbsp; 生成消息的具体时间和日期\r\n</p>\r\n<p>\r\n	例如：　Date: Sat, 11 Feb 2012 11:35:14 GMT&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Expires\r\n</p>\r\n<p>\r\n	作用: 浏览器会在指定过期时间内使用本地缓存\r\n</p>\r\n<p>\r\n	例如: Expires: Tue, 08 Feb 2022 11:35:14 GMT\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Vary\r\n</p>\r\n<p>\r\n	作用：\r\n</p>\r\n<p>\r\n	例如: Vary: Accept-Encoding\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	Cookie/Login 头域\r\n</h2>\r\n<p>\r\n	P3P\r\n</p>\r\n<p>\r\n	作用: 用于跨域设置Cookie, 这样可以解决iframe跨域访问cookie的问题\r\n</p>\r\n<p>\r\n	例如: P3P: CP=CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Set-Cookie\r\n</p>\r\n<p>\r\n	作用： 非常重要的header, 用于把cookie 发送到客户端浏览器， 每一个写入cookie都会生成一个Set-Cookie.\r\n</p>\r\n<p>\r\n	例如: Set-Cookie: sc=4c31523a; path=/; domain=.acookie.taobao.com\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/263119/2012021119563476.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	Entity头域\r\n</h2>\r\n<p>\r\n	ETag\r\n</p>\r\n<p>\r\n	作用:&nbsp; 和If-None-Match 配合使用。 （实例请看上节中If-None-Match的实例）\r\n</p>\r\n<p>\r\n	例如: ETag: \"03f2b33c0bfcc1:0\"\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Last-Modified:\r\n</p>\r\n<p>\r\n	作用： 用于指示资源的最后修改日期和时间。（实例请看上节的If-Modified-Since的实例）\r\n</p>\r\n<p>\r\n	例如: Last-Modified: Wed, 21 Dec 2011 09:09:10 GMT\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Content-Type\r\n</p>\r\n<p>\r\n	作用：WEB服务器告诉浏览器自己响应的对象的类型和字符集,\r\n</p>\r\n<p>\r\n	例如:\r\n</p>\r\n<p>\r\n	Content-Type: text/html; charset=utf-8\r\n</p>\r\n<p>\r\n	Content-Type:text/html;charset=GB2312\r\n</p>\r\n<p>\r\n	Content-Type: image/jpeg\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Content-Length\r\n</p>\r\n<p>\r\n	指明实体正文的长度，以字节方式存储的十进制数字来表示。在数据下行的过程中，Content-Length的方式要预先在服务器中缓存所有数据，然后所有数据再一股脑儿地发给客户端。\r\n</p>\r\n<p>\r\n	例如: Content-Length: 19847\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Content-Encoding\r\n</p>\r\n<p>\r\n	WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。\r\n</p>\r\n<p>\r\n	例如：Content-Encoding：gzip\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Content-Language\r\n</p>\r\n<p>\r\n	作用： WEB服务器告诉浏览器自己响应的对象的语言者\r\n</p>\r\n<p>\r\n	例如： Content-Language:da\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	Miscellaneous 头域\r\n</h2>\r\n<p>\r\n	Server:\r\n</p>\r\n<p>\r\n	作用：指明HTTP服务器的软件信息\r\n</p>\r\n<p>\r\n	例如:Server: Microsoft-IIS/7.5\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	X-AspNet-Version:\r\n</p>\r\n<p>\r\n	作用：如果网站是用ASP.NET开发的，这个header用来表示ASP.NET的版本\r\n</p>\r\n<p>\r\n	例如: X-AspNet-Version: 4.0.30319\r\n</p>\r\n<p>\r\n	X-Powered-By:\r\n</p>\r\n<p>\r\n	作用：表示网站是用什么技术开发的\r\n</p>\r\n<p>\r\n	例如： X-Powered-By: ASP.NET\r\n</p>\r\n<h2>\r\n	Transport头域\r\n</h2>\r\n<p>\r\n	Connection\r\n</p>\r\n<p>\r\n	例如：　Connection: keep-alive&nbsp;&nbsp; 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接\r\n</p>\r\n<p>\r\n	例如：&nbsp; Connection: close&nbsp; 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。\r\n</p>\r\n<h2>\r\n	Location头域\r\n</h2>\r\n<p>\r\n	Location\r\n</p>\r\n<p>\r\n	作用： 用于重定向一个新的位置, 包含新的URL地址\r\n</p>\r\n<p>\r\n	&nbsp;实例请看304状态实例\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h1>\r\n	HTTP协议是无状态的和Connection: keep-alive的区别<a></a> \r\n</h1>\r\n<p>\r\n	无状态是指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。从另一方面讲，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系\r\n</p>\r\n<p>\r\n	HTTP是一个无状态的面向连接的协议，无状态不代表HTTP不能保持TCP连接，更不能代表HTTP使用的是UDP协议（无连接）\r\n</p>\r\n<div>\r\n	从HTTP/1.1起，默认都开启了Keep-Alive，保持连接特性，简单地说，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接\r\n</div>\r\n<p>\r\n	&nbsp;Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间\r\n</p>',NULL,NULL,'2014-04-17 21:05:07',0,'HTTP协议详解',0),(22,'admin',2,'<h3>\r\n	何为REST?\r\n</h3>\r\n<p style=\"text-indent:2em;\">\r\n	REST是英文Representational State Transfer的缩写，中文翻译为“表述性状态转移”，他是由Roy Thomas Fielding博士在他的论文 《Architectural Styles and the Design of Network-based Software Architectures》中提出的一个术语。Rest是设计基于命名资源而非消息的松耦合应用程序，例如：以 Uniform Resource Locators（URL）、Uniform Resource Identifiers（URI）和 Uniform Resource Names（URN）的形式 — 而非消息的松耦合 Web 应用程序的一种风格。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	REST巧妙地借助已经验证过的成功的Web基础设施 — HTTP。Web上所有的东西（页面、图像等）本质上都是资源。而 REST 正是基于命名资源而非消息的，这就限制了底层技术的曝光，从而给应用程序设计中的松耦合提供了便利条件。REST 的魅力在于任何东西都可以成为资源，且表示方法也可以不同。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	比如 http://www.nowamagic.net/librarys/veda/articles/888 ，该 URL 表示一个资源 — 文章为888的资源。请求该资源就会调用 HTTP GET 命令。注意该 URL 是基于名词的。基于动词的版本（大概类似 http://www.nowamagic.net/librarys/veda/articles?id=888）会违反 REST 原则，因为它以articles的形式嵌套了一条消息。\r\n</p>\r\n<h3>\r\n	REST优势\r\n</h3>\r\n<p style=\"text-indent:2em;\">\r\n	REST改善了用户接口跨多个平台的可移植性，并且通过简化服务器组件，改善了系统的可伸缩性。最为关键的是通过分离用户接口和数据存储这两个关注点，使得不同用户终端享受相同数据成为了可能。\r\n</p>\r\n<h4>\r\n	1. 无状态性\r\n</h4>\r\n<p style=\"text-indent:2em;\">\r\n	无状态性是在客户－服务器约束的基础上添加的又一层规范。他要求通信必须在本质上是无状态的，即从客户到服务器的每个request都必须包含理解该request所必须的所有信息。这个规范改善了系统的可见性（无状态性使得客户端和服务器端不必保存对方的详细信息，服务器只需要处理当前request，而不必了解所有的request历史），可靠性（无状态性减少了服务器从局部错误中恢复的任务量），可伸缩性（无状态性使得服务器端可以很容易的释放资源，因为服务器端不必在多个request中保存状态）。同时，这种规范的缺点也是显而易见得，由于不能将状态数据保存在服务器上的共享上下文中，因此增加了在一系列request中发送重复数据的开销，严重的降低了效率。\r\n</p>\r\n<h4>\r\n	2. 缓存\r\n</h4>\r\n<p style=\"text-indent:2em;\">\r\n	为了改善无状态性带来的网络的低效性，我们填加了缓存约束。缓存约束允许隐式或显式地标记一个response中的数据，这样就赋予了客户端缓存response数据的功能，这样就可以为以后的request共用缓存的数据，部分或全部的消除一部分交互，增加了网络的效率。但是用于客户端缓存了信息，也就同时增加了客户端与服务器数据不一致的可能，从而降低了可靠性。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	B/S架构的优点是其部署非常方便，但在用户体验方面却不是很理想。为了改善这种情况，我们引入了REST. REST在原有的架构上增加了三个新规范：统一接口，分层系统和按需代码。\r\n</p>\r\n<h4>\r\n	3. 统一接口\r\n</h4>\r\n<p style=\"text-indent:2em;\">\r\n	REST架构风格的核心特征就是强调组件之间有一个统一的接口，这表现在REST世界里，网络上所有的事物都被抽象为资源，而REST就是通过通用的链接器接口对资源进行操作。这样设计的好处是保证系统提供的服务都是解耦的，极大的简化了系统，从而改善了系统的交互性和可重用性。并且REST针对Web的常见情况做了优化，使得REST接口被设计为可以高效的转移大粒度的超媒体数据，这也就导致了REST接口对其它的架构并不是最优的。\r\n</p>\r\n<h4>\r\n	4. 分层系统\r\n</h4>\r\n<p style=\"text-indent:2em;\">\r\n	分层系统规则的加入提高了各种层次之间的独立性，为整个系统的复杂性设置了边界，通过封装遗留的服务，使新的服务器免受遗留客户端的影响，这也就提高了系统的可伸缩性。\r\n</p>\r\n<h4>\r\n	5. 按需代码\r\n</h4>\r\n<p style=\"text-indent:2em;\">\r\n	REST允许对客户端功能进行扩展。比如，通过下载并执行applet或脚本形式的代码，来扩展客户端功能。但这在改善系统可扩展性的同时，也降低了可见性。所以它只是REST的一个可选的约束。\r\n</p>\r\n<h2>\r\n	REST规范接口\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	每个资源都有对应的URI，不同的HTTP Method对应的对资源不同的操作，GET（读取资源信息）、POST（添加资源）、PUT（更新资源信息）、DELETE（删除资源）。几乎所有的计算机语言都可以通过HTTP协议同REST服务器通信。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	场景：\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<ul>\r\n		<li>\r\n			A:http://www.nowamagic.net/articles\r\n		</li>\r\n		<li>\r\n			B:http://www.nowamagic.net/articles/{id}\r\n		</li>\r\n	</ul>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	A网址：GET方法：显示全部用户信息；同时有个POST方法，用来添加用户； DELTE、PUT方法一般没提供。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	B网址：GET方法：显示当前用户信息；PUT方法：更新用户信息；DELETE方法：删除该用户信息。\r\n</p>\r\n<h4 style=\"text-indent:2em;\">\r\n	REST应用\r\n</h4>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	目前国内外流行的Web 2.0应用API接口中，很多都支持REST架构风格。例如：新浪微博开放平台、人人网API、Google OpenID、Flickr、Twitter、eBay、Facebook、Last.fm、del.icio.us、Yahoo Search、Amazon S3、Amazon EC2、Digg、Microsoft Bing、FriendFeed、PayPal、Foursquare等。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<p style=\"color:#333333;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		转载随意，但请带上本文地址：\r\n	</p>\r\n	<p style=\"color:#333333;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		<a href=\"http://www.nowamagic.net/librarys/veda/detail/885\">http://www.nowamagic.net/librarys/veda/detail/885</a>\r\n	</p>\r\n</p>',NULL,NULL,'2014-04-18 06:29:28',0,'深入浅出REST架构',0),(23,'admin',2,'<p>\r\n	构建web可访问应用编程接口很简单，但使之良好工作，而且不间断却不简单，Les Hazlewood在2013年JavaOne大会上如此说，他是Stormpath的首席技术官。Hazlewood在大会上展示了通过JAX-RS和Jersey构建美好的REST+JSON API的最佳实践。\r\n</p>\r\n<p>\r\n	“表面看来，良好的REST API很简单，即使后端很复杂，” Hazlewood在一次采访说到。一个<a href=\"http://www.searchsoa.com.cn/microsites/2013apimanagement/index.html\" target=\"_blank\">API</a>关注一系列的东西，以及如何表现个人的东西。减少API集合，搜索所有书籍和出版刊物，你会发现一个简洁的解决方案，它很直观，且不是太复杂。\r\n</p>\r\n<p>\r\n	在本文中，Hazlewood深入打探讨了API最佳实践、REST API和JSON的优缺点等等。\r\n</p>\r\n<h3>\r\n	使用<a href=\"http://www.searchsoa.com.cn/showcontent_57657.htm\" target=\"_blank\">REST API</a>时，什么是开发人员需要探索的？\r\n</h3>\r\n<p>\r\n	Les Hazlewood：REST作为架构式构建存在于HTTP的最顶层。你交换数据的方式、你创建、读取、更新和删除数据的语义都建立在HTTP规范之内。REST是用于编纂当交换跨分离机器创建读取-删除时的工作环境如何。\r\n</p>\r\n<p>\r\n	这就是REST，编纂这些跨分离机器的行为发生的方式。因为它依赖于HTTP，我可能有一台Linux机器，它可以与Windows机器时行对话，也可以与Mac机对话。它并不是平台或厂商特定的。因为HTTP无处不在，所以REST就无处不在。所有语言（Python、PHP、Java和C#）都可以与REST一起工作。\r\n</p>\r\n<p>\r\n	REST简化了所有方面。所有人都以为他们了解了HTTP。这正是你的浏览器所讲的东西。他们知道HTTP协议、知道GIT、知道POST，因为他们多年以来一直在填写web表单。所以因为REST只使用HTTP，开发人员就认为它很简单，但是现在REST服务越来越多，而不是XML，它融汇的SOAP。\r\n</p>\r\n<h3>\r\n	使用REST的难点在哪？\r\n</h3>\r\n<p>\r\n	Hazlewood:：这正是我要做的演讲原因。REST是架构样式，但是使用它的方法论还没有正式的标准和规范。用样式来解释一下。我认为它的运行方式可能会与你以为稍微有点不同。因为它不是一个机器可以复制的规范，这里掺入了人为的因素。把东西变得简单易用的漏洞往往都不简单。REST和JOSN很简单。HTTP很简单。但要确保使用两者解决问题时，要直观，而不是随处都可编码化。\r\n</p>\r\n<h3>\r\n	你推荐JSON和REST一起使用的其它原因还有什么？\r\n</h3>\r\n<p>\r\n	Hazlewood：REST和JSON提供了与人友好的数据表述方法；数据不再像XML那样拥挤；你的肉眼就可以很容易看到。这一直都是广泛采用JSON的原因。\r\n</p>\r\n<p>\r\n	JSON是语法规范。它只是定义了基本的字符串、数字、空值、非空值。它允许你以一种简单的模式表述复杂的事情，而且以最小的元数据量。它如此的篇章，可以用于许多不同的环境中。机器很容易对其进行解析。人们也很容易阅读。\r\n</p>\r\n<p>\r\n	JavaScript是世界上一个占有重要位置的编程语言。即使主要的应用是由Java、Python或C#构建的，比重也很高，如果你有一个网页，或一个可视的用户界面，那么就会涉及到一些JavaScript。JSON与JavaScript兼容。所有具备JavaScript编程经验的人都会发现他们很容易就会了解JSON。如果你已经使用了JavaScript，那就能很轻松地与API集成。如果API返回给JSON，而且你已经编写的JavaScript，那么你的编程语言就已经知道如何与返回给服务器的数据进行交互。JSON使用JavaScript进行数据交换，而不只是编写软件，这在当前已经很流行了，\r\n</p>\r\n<h3>\r\n	什么时候使用<a href=\"http://www.searchsoa.com.cn/showcontent_77646.htm\" target=\"_blank\">JSON</a>正确，什么时候错误？\r\n</h3>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	Hazlewood：显然，XML在结构化表述数据上更好。XML文档中包含更多的信息，类型在XML文档中表述会更有效。XML非常适合数据交换，但易用性方面却使用开发者犹豫了。JSON用肉眼就可以检查。XML在设计上更复杂。JSON是非常简单的语法。谈到语言设计，JSON只构建了一小部分的核心元素，而且一切都源于这一小部分元素。因为它的简单性，它很容易操作，也很容易理解。与XML相比，JSON并不是很适合机器消化信息。从这点来看，XML就会做的更好。\r\n</p>',NULL,'2014-04-18 06:44:28','2014-04-18 06:44:05',0,'如何结合REST和JSON构建API',0),(24,'admin',9,'<div>\r\n	<span style=\"font-size:14px;\"><span style=\"color:#006600;\"><strong>活动时间</strong></span><span style=\"color:#006600;\"><strong>：2014年4月19日 14:00 ～ 2014年4月19日 18:00</strong></span></span>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;color:#006600;\"><strong>活动地点：</strong></span><span style=\"font-size:14px;color:#006600;\"><strong>（北京朝阳）西大望路甲12号国家广告产业园B座7层太极馆</strong></span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	活动内容...\r\n</h2>\r\n<div>\r\n	<div>\r\n		<p>\r\n			具体地点：大望路中学路口往里走约150米即到\r\n		</p>\r\n		<p>\r\n			公交：北京东站北下车往南不到50米即到大望路中学，或八王坟南下车往南走约250米后到大望路中学\r\n		</p>\r\n		<p>\r\n			地铁：1号线大望路站B口出往南走约500米后到大望路中学\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			GreenTea JUG是中国第一个加入JCP的组织。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			日程安排：\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			14:00-15:00&nbsp;&nbsp;Wildfly8的新产品介绍，高林 &amp; 张建锋\r\n		</p>\r\n		<p>\r\n			Arun推动的的JUG活动 [1] ，主要介绍Wildfly8这个新产品，在全球已经举办了近\r\n		</p>\r\n		<p>\r\n			40场了，将是我们国内JUG参与世界活动的范例。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			15:00-16:00 最新的几个JDK公开的信息安全问题与进展，范学雷\r\n		</p>\r\n		<p>\r\n			就大家比较关心的Java安全问题做一个科普/实践介绍。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			16:00-17:00 在Oracle里做OpenJDK的感觉，范学雷 &amp; 王卫军\r\n		</p>\r\n		<p>\r\n			由Oracle的两位OpenJDK专家给大家介绍一下OpenJDK这个由Oracle主导的决定Java\r\n		</p>\r\n		<p>\r\n			发展方向的开源项目的情况。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			17:00-18:00 自由交流\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			讲师介绍：\r\n		</p>\r\n		<p>\r\n			高林\r\n		</p>\r\n		<p>\r\n			２００２年毕业于山东大学机械工程专业。从２００４年开始从事JavaEE以及相关领域开发工作，至今１０年左右时间。\r\n		</p>\r\n		<p>\r\n			一直使用JBoss作为应用软件服务器，从JBoss３，４，5到如今的AS７，及Wildfly８。\r\n		</p>\r\n		<p>\r\n			２０１０年起就职于RedHat JBoss团队，主要负责产品化的构建，产品化流程的制定，并参与社区版和EAP产品的开发工作。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			张建锋：\r\n		</p>\r\n		<p>\r\n			红帽软件高级软件工程师，JBoss应用服务器核心团队成员\r\n		</p>\r\n		<p>\r\n			具有10多年的中间件产品开发经验，2008年加入红帽软件参与开发JBossAS产品至今，经历了JBossAS的三代内核架构变化，完整 了解应用服务器产品的技术体系。\r\n		</p>\r\n		<p>\r\n			在企业级应用，高并发互联网应用，移动应用等方面有开发和架构设计经验，对于JavaEE各项规范比较熟悉，坚 信用合适的技术和架构设计来解决不同问题这个理念。\r\n		</p>\r\n		<p>\r\n			是开源技术爱好者，喜欢接触各类开源项目，学习优秀之处并加以借鉴，认为阅读好的源码就和阅读一本好书一样让人感到愉悦。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			范学雷\r\n		</p>\r\n		<p>\r\n			Graduated from Harbin Institute of Technology in 1998, and gained the\r\n		</p>\r\n		<p>\r\n			degree of Master of Business Administration in Tsinghua University in 2013.\r\n		</p>\r\n		<p>\r\n			Member of the Java security team since 2004, tech lead of Java Secure\r\n		</p>\r\n		<p>\r\n			Socket Extension (JSSE), also working on Java Cryptography Extension\r\n		</p>\r\n		<p>\r\n			(JCE), Public Key Infrastructure (PKI), Java Naming and Directory\r\n		</p>\r\n		<p>\r\n			Interface (JNDI) and other Java SE security technologies.\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			王卫军\r\n		</p>\r\n		<p>\r\n			曾就读于中国科技大学和北京大学，专业是数学。\r\n		</p>\r\n		<p>\r\n			2004年起加入Sun Microsystems的Java SE安全团队。目前负责安全工具、JAAS、JGSS、Kerberos，也参与同组的其他工作。\r\n		</p>\r\n	</div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>',NULL,NULL,'2014-04-18 07:01:50',0,'GreenTea JUG四月北京活动',0),(25,'admin',10,'<h3>\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">准备环境：</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-family:Microsoft YaHei;\"> </span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> Tomcat—下载地址</span><a href=\"http://mirrors.cnnic.cn/apache/tomcat/tomcat-6/v6.0.39/bin/apache-tomcat-6.0.39.zip\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">http://mirrors.cnnic.cn/apache/tomcat/tomcat-6/v6.0.39/bin/apache-tomcat-6.0.39.zip</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> Solr4.7—下载地址</span><a href=\"http://archive.apache.org/dist/lucene/solr/4.7.0/solr-4.7.0.zip\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">http://archive.apache.org/dist/lucene/solr/4.7.0/solr-4.7.0.zip</span></a> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	<span style=\"font-family:Microsoft YaHei;\">开始安装：</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-family:Microsoft YaHei;\"> </span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1. 先将下载的 solr4.7 解压到 </span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">E:\\water 目录下</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> </span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> </span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 2. 创建 solr 工作目录 </span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">E:\\water\\solr-tomcat 并将上一步解压后的</span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">E:\\water\\solr-4.7.0\\example\\solr 目录拷贝到当前目录下。</span><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 3. 将&nbsp;E:\\water\\solr-4.7.0\\dist\\solr-4.7.0.war 文件拷贝到tomcat webapps 目录下。<br />\r\n</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 4. 在tomcat webapps 目录下重命名solr-4.7.0.war 并手动解压到当前目录，删除<span style=\"font-family:\'Microsoft YaHei\';font-size:16px;line-height:24px;\">solr-4.7.0.war。</span></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 5. 修改web.xml 文件，将下面的配置添加进去。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> </span> \r\n</p>\r\n<pre class=\"prettyprint lang-xml\"> solr/homee:\\water\\solr-tomcat\\solrjava.lang.String</pre>\r\n<p>\r\n	<span style=\"font-size:16px;\"> </span><span style=\"font-size:16px;\"> 6. 启动tomat 在地址栏输入<a href=\"http://localhost:8983/solr/\">http://localhost:8983/solr/</a> 进入solr管理页面</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"> <img src=\"/upload/image/20140418/20140418143222_469.png\" alt=\"\" width=\"800\" height=\"373\" title=\"\" align=\"\" /></span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>',NULL,'2014-04-18 14:34:45','2014-04-18 14:32:54',0,'Solr4.7安装(Tomcat)',0),(26,'admin',11,'<span style=\"font-size:14px;background-color:#FFFFFF;color:red;font-family:Arial, Helvetica, Tahoma, sans-serif;line-height:22px;\"><span><b>Atlassian Jira isn\'t free application: </b></span></span><b>Use only for test, not recommended for commercial</b><br />\r\n<br />\r\n<b>This solutions available for:&nbsp;Atlassian Jira 5.0.x, 6.0.1, 6.0.2, 6.0.3, 6.0.4, 6.0.5, 6.0.6, 6.0.7, 6.0.8, 6.1-rc8, 6.1, 6.1.1, 6.2-m01, 6.1.2, 6.1.3, 6.1.4, 6.1.5, 6.1.6, 6.1.7, 6.2.0, 6.2.1</b><br />\r\n<b><br />\r\n</b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\"></span><b>Step 1: </b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\">Download versions of Jira at: </span><a href=\"http://url.chungkol.com/951716/banner/https://www.atlassian.com/software/jira/download-archives\" target=\"_blank\">https://www.atlassian.com/software/jira/download-archives</a><br />\r\n<b>Step 2: </b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\">Unarchiver that file.</span><br />\r\n<b>Step 3: </b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\">Edit jira.home at file jira/atlassian-jira/WEB-INF/classes/jira-application.properties</span><br />\r\n<blockquote class=\"tr_bq\" style=\"background-color:#F7F9FA;color:#78898E;font-family:\'Courier New\', monospace;font-size:14px;\">\r\n	jira.home = D:\\\\atlassian-jira-6.1.7-standalone\\\\home\r\n</blockquote>\r\n<b>Step 4:</b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\"> Replace file jira/WEB-INF/lib/atlassian-extras-2.2.2.jar and add file&nbsp;atlassian-universal-plugin-manager*.jar to&nbsp;atlassian-bundled-plugins.zip</span><br />\r\n<a name=\"more\" href=\"http://url.chungkol.com/951716/banner/\"></a><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\">Download 2 that files </span><a href=\"http://url.chungkol.com/E\" target=\"_blank\">at here</a><br />\r\n<b>Step 5:</b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\"> Start jira</span><br />\r\n<b>Step 6:</b><span style=\"color:#444444;font-family:Arial;font-size:14px;line-height:24.46875px;background-color:#FFFFFF;\"> Goto Admin/System/License and add these lines to License key fill:</span><br />\r\n<blockquote class=\"tr_bq\" style=\"background-color:#F7F9FA;color:#78898E;font-family:\'Courier New\', monospace;font-size:14px;\">\r\n	Description=JIRA: Commercial,<br />\r\nCreationDate=2013-12-15,<br />\r\njira.LicenseEdition=ENTERPRISE,<br />\r\nEvaluation=false,<br />\r\njira.LicenseTypeName=COMMERCIAL,<br />\r\njira.active=true,<br />\r\nlicenseVersion=2,<br />\r\nMaintenanceExpiryDate=2099-12-31,<br />\r\nOrganisation=joiandjoin,<br />\r\nSEN=<span style=\"color:red;\">SEN-L3378467</span>,<br />\r\nServerID=<span style=\"color:red;\">BTSR-8TUN-O31S-O9ZV</span>,<br />\r\njira.NumberOfUsers=-1,<br />\r\nLicenseID=LID-<span style=\"color:red;\">L3378467</span>,<br />\r\nLicenseExpiryDate=2099-12-31,<br />\r\nPurchaseDate=2013-12-15\r\n</blockquote>\r\n<div style=\"color:#444444;font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<b>Notes: </b>With <span style=\"color:red;\">red</span> line, exactly fill with ID of jira setup on you server.<br />\r\n	<div class=\"separator\" style=\"text-align:center;\">\r\n		<img border=\"0\" src=\"/upload/image/20140418/20140418163711_301.png\" height=\"520\" width=\"650\" title=\"\" align=\"\" alt=\"\" /> \r\n	</div>\r\n	<div class=\"separator\" style=\"text-align:justify;\">\r\n		<b>Notes: </b><span>If you have any error, please upgrade java to 1.7</span> \r\n	</div>\r\n	<div class=\"separator\" style=\"text-align:justify;\">\r\n		<span><br />\r\n</span> \r\n	</div>\r\n<b>Read more: </b><b><a href=\"http://blog.chungkol.com/2014/02/download-crack-keygen-agile-greenhopper.html\" target=\"_blank\">[Download] Crack + Keygen Agile Greenhopper On Atlassian Jira 5.0.X, 6.0.1, 6.0.2, 6.0.3, 6.0.4, 6.0.5, 6.0.6, 6.0.7, 6.0.8, 6.1-Rc8, 6.1, 6.1.1, 6.2-M01, 6.1.2, 6.1.3, 6.1.4, 6.1.5</a></b> \r\n</div>\r\n<br />',NULL,'2014-04-18 16:38:07','2014-04-18 16:35:33',0,'[Download] Crack + Keygen Atlassian Jira all versions',0),(27,'admin',11,'<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\">实例代码：</span>\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">public class Test {\r\n\r\n        /**\r\n         * @param args\r\n         * @throws IOException \r\n         */\r\n        public static void main(String[] args) throws IOException {\r\n                File f = new File(\"C:\\\\image resizer\\\\0776171_L.jpg\");\r\n                BufferedImage src = ImageIO.read(f);\r\n                \r\n                ResampleOp resampleOp = new ResampleOp (76,76);\r\n                resampleOp.setUnsharpenMask(AdvancedResizeOp.UnsharpenMask.VerySharp);\r\n                BufferedImage rescaled = resampleOp.filter(src, null);\r\n                \r\n                ImageIO.write(rescaled, \"JPG\", \r\n                                new File(\"C:\\\\image resizer\\\\0776171_L76.jpg\"));\r\n        }\r\n}</pre>\r\n<span style=\"font-size:16px;\">下载地址<a href=\"http://code.google.com/p/java-image-scaling/\" target=\"_blank\">&nbsp;</a></span><span style=\"font-size:16px;\"><a href=\"http://code.google.com/p/java-image-scaling/\" target=\"_blank\">http://code.google.com/p/java-image-scaling/</a></span>\r\n</p>',NULL,NULL,'2014-04-19 08:19:59',0,'Java实现生成高质量图片缩略图',0),(28,'admin',2,'<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">点击下载：</span><a class=\"ke-insertfile\" href=\"/upload/file/20140419/20140419132007_388.ppt\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">REST To RESTful Web Service</span></a>',NULL,NULL,'2014-04-19 13:20:31',0,'REST To RESTful Web Service分享',0),(29,'admin',9,'<img src=\"/upload/image/20140419/20140419190050_701.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190059_72.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190108_977.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190115_560.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190126_581.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190136_679.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190145_348.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190152_483.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190158_512.jpg\" alt=\"\" /><img src=\"/upload/image/20140419/20140419190205_111.jpg\" alt=\"\" />',NULL,NULL,'2014-04-19 19:02:07',0,'GreenTea JUG四月北京活动现场',0),(30,'admin',7,'<h3>\r\n	<span style=\"font-family:Microsoft YaHei;\">maven中心仓库：</span>\r\n</h3>\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';color:#003399;\">1. http://mirrors.ibiblio.org/maven2/</span><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';color:#003399;\"> 2. http://mvnrepository.com/</span><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';color:#003399;\"> 3. http://search.maven.org/</span><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';color:#003399;\"> 4. http://svn.apache.org/repos/asf/</span><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';color:#003399;\">5. http://mvnrepository.com</span><br />\r\n<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';color:#003399;\">6. http://repo1.maven.org/maven2/</span><br />',NULL,NULL,'2014-04-20 06:10:19',0,'maven中心仓库',0),(31,'admin',3,'<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	当要push代码到git时，出现提示：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	error:failed to push some refs to ...\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	Dealing with “non-fast-forward” errors<br />\r\nFrom time to time you may encounter this error while pushing:\r\n</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;border:1px solid #1E4975;background-color:#22252B;color:#C0C0C0;margin:18px 0px !important;\">\r\n	<ol>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"background-color:inherit;\">$&nbsp;git&nbsp;push&nbsp;origin&nbsp;master&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\">\r\n			<span style=\"background-color:inherit;\">To&nbsp;../remote/&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"background-color:inherit;\">&nbsp;!&nbsp;[rejected]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;master&nbsp;-&gt;&nbsp;master&nbsp;(non-fast&nbsp;forward)&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\">\r\n			<span style=\"background-color:inherit;\">error:&nbsp;failed&nbsp;to&nbsp;push&nbsp;some&nbsp;refs&nbsp;to&nbsp;\'../remote/\'&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">To prevent you from losing history, non-fast-forward updates were rejected</span><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">Merge the remote changes before pushing again. &nbsp;See the \'non-fast forward\'</span><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">section of \'git push --help\' for details.</span><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">This error can be a bit overwhelming at first, do not fear. Simply put, git cannot make the change on the remote without losing commits, so it refuses the push. Usually this is caused by another user pushing to the same branch. You can remedy this by fetching and merging the remote branch, or using pull to perform both at once.</span><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">In other cases this error is a result of destructive changes made locally by using commands like git commit --amend or git rebase. While you can override the remote by adding --force to the push command, you should only do so if you are absolutely certain this is what you want to do. Force-pushes can cause issues for other users that have fetched the remote branch, and is considered bad practice. When in doubt, don’t force-push.</span><br />\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://my.csdn.net/uploads/201204/19/1334803176_7047.png\" alt=\"\" />\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。于是你有2个选择方式：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1，强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:monospace;background-color:#F0F0F0;\">git push -f</span>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	2，先把git的东西fetch到你本地然后merge后再push\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:monospace;background-color:#F0F0F0;\">$ git fetch</span>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:monospace;background-color:#F0F0F0;\">$ git merge</span>\r\n</p>\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">这2句命令等价于</span>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;border:1px solid #1E4975;background-color:#22252B;color:#C0C0C0;margin:18px 0px !important;\">\r\n	<ol>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"background-color:inherit;\">$&nbsp;git&nbsp;pull&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	可是，这时候又出现了如下的问题：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://my.csdn.net/uploads/201204/19/1334803661_1873.png\" alt=\"\" />\r\n</p>\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">上面出现的 [branch \"master\"]是需要明确(.git/config)如下的内容</span><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">[branch \"master\"]</span><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">&nbsp; &nbsp; remote = origin</span><br />\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; merge = refs/heads/master\r\n</p>\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">这等于告诉git2件事:</span><br />\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1，当你处于master branch, 默认的remote就是origin。\r\n</p>\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">2，当你在master branch上使用git pull时，没有指定remote和branch，那么git就会采用默认的remote（也就是origin）来merge在master branch上所有的改变</span><br />\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	如果不想或者不会编辑config文件的话，可以在bush上输入如下命令行：\r\n</p>\r\n<div class=\"dp-highlighter bg_plain\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;border:1px solid #1E4975;background-color:#22252B;color:#C0C0C0;margin:18px 0px !important;\">\r\n	<ol>\r\n		<li class=\"alt\" style=\"color:inherit;\">\r\n			<span style=\"background-color:inherit;\">$&nbsp;git&nbsp;config&nbsp;branch.master.remote&nbsp;origin&nbsp;&nbsp;</span>\r\n		</li>\r\n		<li class=\"\">\r\n			<span style=\"background-color:inherit;\">$&nbsp;git&nbsp;config&nbsp;branch.master.merge&nbsp;refs/heads/master&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	之后再重新git pull下。最后git push你的代码吧。it works now~\r\n</p>',NULL,NULL,'2014-04-23 21:00:52',0,'Git错误non-fast-forward后的冲突解决',0),(32,'admin',7,'<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">插件更新站点：</span><a href=\"http://run-jetty-run.googlecode.com/svn/trunk/updatesite\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">http://run-jetty-run.googlecode.com/svn/trunk/updatesite</span></a>\r\n</p>\r\n<p>\r\n	<span id=\"__kindeditor_bookmark_start_0__\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">项目站点：</span><a href=\"https://code.google.com/p/run-jetty-run/\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">https://code.google.com/p/run-jetty-run/</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"></span><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"></span></span>\r\n</p>',NULL,NULL,'2014-04-24 09:05:45',0,'maven jetty 调试运行插件',0),(33,'admin',2,'<div id=\"cnblogs_post_body\" style=\"margin:0px 0px 20px;padding:0px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<p>\r\n		《<a href=\"http://www.cnblogs.com/artech/p/restful-web-api-01.html\">我所理解的RESTful Web API [Web标准篇]</a>》Web服务已经成为了异质系统之间的互联与集成的主要手段，在过去一段不短的时间里，Web服务几乎清一水地采用SOAP来构建。构建REST风格的Web服务是最近两三年风行的潮流，所以很多人以为REST是一个事物。而事实却是：REST自其诞生之日起到现在（2014年）已经有14年了，它为什么叫这么一个“奇怪”的名字呢？\r\n	</p>\r\n	<blockquote style=\"color:#333333;\">\r\n		<p>\r\n			目录&nbsp;<br />\r\n一、为什么叫这个“奇怪”的名字？二、采用URI标识资源&nbsp;<br />\r\n二、采用URI标识资源&nbsp;<br />\r\n三、使用“链接”关联相关的资源&nbsp;<br />\r\n四、使用统一的接口&nbsp;<br />\r\n五、使用标准的HTTP方法&nbsp;<br />\r\n六、支持多种资源表示方式&nbsp;<br />\r\n七、无状态性\r\n		</p>\r\n	</blockquote>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">一、为什么叫这个“奇怪”的名字？</span></span>\r\n	</h1>\r\n	<div id=\"scid:8747F07C-CDE8-481f-B0DF-C6CFD074BF67:6fea790a-5f4f-4a05-8619-bc84b7280be6\" class=\"wlWriterEditableSmartContent\" style=\"margin:0px;padding:0px;\">\r\n		<a href=\"http://images.cnitblog.com/blog/19327/201401/06074820-3b08e822599440c28ea3f402a7fac67e.jpg\"><img border=\"0\" src=\"http://images.cnitblog.com/blog/19327/201401/06074821-458cc97986cc44a9980d80d236992170.png\" width=\"220\" height=\"279\" /></a>\r\n	</div>\r\n	<p>\r\n		2000年，Roy Thomas Fielding博士在他那篇著名的博士论文《Architectural Styles and the Design of Network-based Software Architectures》中提出了几种软件应用的架构风格，REST作为其中的一种架构风格在这篇论文的第5章中进行了概括性的介绍。我个人建议本书的读者都能读读这篇论文，原文和中文译文都可以从网络上找到。\r\n	</p>\r\n	<p>\r\n		REST是“REpresentational State Transfer”的缩写，可以翻译成“表现状态转换”，但是在绝大多数场合中我们只说REST或者RESTful。为什么会起这么一个奇怪的名字呢？我们可以从上述这篇论文中找到答案。Fielding在论文中将REST定位为“分布式超媒体应用（Distributed Hypermedia System）”的架构风格，它在文中提到一个名为“<span style=\"color:#FF0000;\">HATEOAS（Hypermedia as the engine of application state</span>）”的概念。\r\n	</p>\r\n	<p>\r\n		我们利用一个面向最终用户的Web应用来对这个概念进行简单阐述：这里所谓的应用状态（Application State）表示Web应用的客户端的状态，简单起见可以理解为会话状态。资源在浏览器中以超媒体的形式呈现，通过点击超媒体中的链接可以获取其它相关的资源或者对当前资源进行相应的处理，获取的资源或者针对资源处理的响应同样以超媒体的形式再次呈现在浏览器上。由此可见，超媒体成为了驱动客户端会话状态的转换的引擎。\r\n	</p>\r\n	<p>\r\n		借助于超媒体这种特殊的资源呈现方式，应用状态的转换体现为浏览器中呈现资源的转换。如果将超媒体进一步抽象成一般意义上的资源呈现（Representation ）方式，那么应用状态变成了<span style=\"color:#FF0000;\">可被呈现的状态（REpresentational State）</span>。应用状态之间的转换就成了<span style=\"color:#FF0000;\">可被呈现的状态装换（REpresentational State Transfer）</span>，这就是REST。\r\n	</p>\r\n	<p>\r\n		REST在我看来是一种很笼统的概念，它代表一种架构风格。对于多个Web应用采用的架构，我们只能说其中某一个比其它的更具有REST风格，而不能简单粗暴地说：“它采用了REST架构而其它的没有”。为了将REST真正地落地，Lenoard Rechardson &amp; Sam Ruby在《RESTful Web Services》一书中提出了一种名为“面向资源的架构（ROA： Resource Oriented Architecture）”。该书中介绍了一些采用ROA架构的Web服务应该具备的基本特征，它们可以指导我们如果构架具体的RESTful Web API。\r\n	</p>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">二、采用URI标识资源</span></span>\r\n	</h1>\r\n	<p>\r\n		SOAP Web API采用RPC风格，它采用面向功能的架构，所以我们在设计SOAP Web API的时候首相考虑的是应高提供怎样的功能（或者操作）。RESTful Web API采用面向资源的架构，所以在设计之初首先需要考虑的是有哪些资源可供操作。\r\n	</p>\r\n	<p>\r\n		资源是一个很宽泛的概念，任何寄宿于Web可供操作的“事物”均可视为资源。资源可以体现为经过持久化处理保存到磁盘上的某个文件或者数据库中某个表的某条记录，也可以是Web应用接受到请求后采用某种算法计算得出的结果。资源可以体现为一个具体的物理对象，它也可以是一个抽象的流程。\r\n	</p>\r\n	<p>\r\n		一个资源必须具有一个或者多个标识，既然我们设计的Web API，那么很自然地应该采用URI来作为资源的标识。作为资源标识的URI最好具有“可读性”，因为具有可读性的URI更容易被使用，使用者一看就知道被标识的是何种资源，比如如下一些URI就具有很好的可读性。\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			http://www.artech.com/employees/c001（编号C001的员工）\r\n		</li>\r\n		<li>\r\n			http://www.artech.com/sales/2013/12/31（2013年12月31日的销售额）\r\n		</li>\r\n		<li>\r\n			http://www.artech.com/orders/2013/q4（2013年第4季度签订的订单）\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		除了必要的标志性和可选的可读性之外，标识资源的URI应该具有“可寻址性（Addressability）”。也就是说，URI不仅仅指明了被标识资源所在的位置，而且通过这个URI可以直接获取目标资源。通过前面的介绍 我们知道URI具有URL和URN两种主要的表现形式，只要前者具有可寻址性，所以我们最好采用一个URL作为资源的标识。\r\n	</p>\r\n	<p>\r\n		URI除了可以标识某个独立的资源外（比如“http://www.artech.com/employees/c001”），还可以标识一组资源的集合或者资源的容器（比如“http://www.artech.com/orders/2013/q4”）。当然，一组同类资源的集合或者存放一组同类资源的容器本身也可以视为另一种类型的复合型（Composite）资源，所以“URI总是标识某个资源”这种说法是没有问题的。\r\n	</p>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">三、使用“链接”关联相关的资源</span></span>\r\n	</h1>\r\n	<p>\r\n		在绝大多数情况下，资源并不会孤立地存在，必然与其它资源具有某种关联。既然我们推荐资源采用具有可寻址性的URL来标识，那么我们就可以利用它来将相关的资源关联起来。比如我们采用XML来表示一部电影的信息，那么我们采用如下的形式利用URL将相关的资源（导演、领衔主演、主演、编剧以及海报）关联在一起。实际上这可以视为一份<span style=\"color:#FF0000;\">超文本/超媒体</span>文档。当用户得到这样一份文档的时候，可以利用自身的内容获得某部影片基本的信息，还可以利用相关的“链接”得到其它相关内容的详细信息。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">movie</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">name</span><span style=\"color:#0000FF;\">&gt;</span>魔鬼代言人<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">name</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">genre</span><span style=\"color:#0000FF;\">&gt;</span>剧情|悬疑|惊悚<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">genre</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">directors</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span><span style=\"color:#0000FF;\">=\"http://www.artech.com/directors/taylor-hackford\"</span><span style=\"color:#0000FF;\">&gt;</span>泰勒.海克福德<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span> <span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">directors</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">starring</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum8\" style=\"color:#606060;\"> 8:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/actors/al-pacino\"</span><span style=\"color:#0000FF;\">&gt;</span>阿尔.帕西诺<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum9\" style=\"color:#606060;\"> 9:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/actors/keanu-reeves \"</span><span style=\"color:#0000FF;\">&gt;</span>基诺.李维斯<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum10\" style=\"color:#606060;\"> 10:</span> <span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">starring</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum11\" style=\"color:#606060;\"> 11:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">supportingActors</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum12\" style=\"color:#606060;\"> 12:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/actors/charlize-theron \"</span><span style=\"color:#0000FF;\">&gt;</span>查理兹.塞隆<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum13\" style=\"color:#606060;\"> 13:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/actors/jeffrey-jones \"</span><span style=\"color:#0000FF;\">&gt;</span>杰弗瑞.琼斯<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span> </pre>\r\n<pre><span id=\"lnum14\" style=\"color:#606060;\"> 14:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/actors/connie-nielsen\"</span><span style=\"color:#0000FF;\">&gt;</span>康尼.尼尔森<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span> </pre>\r\n<pre><span id=\"lnum15\" style=\"color:#606060;\"> 15:</span> <span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">supportingActors</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum16\" style=\"color:#606060;\"> 16:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">scriptWriters</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum17\" style=\"color:#606060;\"> 17:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/scriptwriters/jonathan-lemkin\"</span><span style=\"color:#0000FF;\">&gt;</span>乔纳森•莱姆金<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum19\" style=\"color:#606060;\"> 19:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">add</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/scriptwriters/tony-gilroy\"</span><span style=\"color:#0000FF;\">&gt;</span>托尼•吉尔罗伊 <span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">add</span><span style=\"color:#0000FF;\">&gt;</span> </pre>\r\n<pre><span id=\"lnum20\" style=\"color:#606060;\"> 20:</span> <span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">scriptWriters</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum21\" style=\"color:#606060;\"> 21:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">language</span><span style=\"color:#0000FF;\">&gt;</span>英语<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">language</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum22\" style=\"color:#606060;\"> 22:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">poster</span> <span style=\"color:#FF0000;\">ref</span> = <span style=\"color:#0000FF;\">\"http://www.artech.com/images/the-devil-s-advocate\"</span><span style=\"color:#0000FF;\">/&gt;</span></pre>\r\n<pre><span id=\"lnum23\" style=\"color:#606060;\"> 23:</span> <span style=\"color:#0000FF;\">&lt;</span><span style=\"color:#800000;\">story</span><span style=\"color:#0000FF;\">&gt;</span>...<span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">story</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n<pre><span id=\"lnum24\" style=\"color:#606060;\"> 24:</span> <span style=\"color:#0000FF;\">&lt;/</span><span style=\"color:#800000;\">movie</span><span style=\"color:#0000FF;\">&gt;</span></pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		Fielding在他的论文中将REST定位为“分布式超媒体应用”的架构风格，而超媒体的核心就是利用“链接”相关的信息结成一个非线性的网，所以从一点也可以看出REST和“使用链接关联相关的资源”这个特性使吻合的。\r\n	</p>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">四、使用统一的接口</span></span>\r\n	</h1>\r\n	<p>\r\n		由于REST是面向资源的，所以一个Web API旨在实现针对单一资源的操作。我们在前面已经说个，针对资源的基本操作唯CRUD而已，这是使我们可以为Web API定义标准接口成可能。所谓的标准接口就是针对不同资源的Web API定义一致性的操作来操作它们，其接口可以采用类似于下面的模式。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">class</span> ResourceService</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> {</pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span> <span style=\"color:#0000FF;\">public</span> IEnumerable&lt;Resource&gt;[] Get();</pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Create(Resource resource);</pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Update(Resource resource);</pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Delete(<span style=\"color:#0000FF;\">string</span> id);</pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span> }</pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		能否采用统一接口是RESTful Web API和采用RPC风格的SOAP Web服务又一区别。如果采用RPC风格的话，我们在设计Web API的时候首先考虑的是具体哪些功能需要被提供，所以这样的Web API是一组相关功能的集合而已。\r\n	</p>\r\n	<p>\r\n		以一个具体的场景为例。现在我们需要设计一个Web API来管理用于授权的角色，它只需要提供针对角色本身的CRUD的功能以及建立/解除与用户名之间的映射关系。如果我们将其定义成针对SOAP的Web服务，其服务接口具有类似于如下的结构。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">class</span> RoleService</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> {</pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span> <span style=\"color:#0000FF;\">public</span> IEnumerable&lt;<span style=\"color:#0000FF;\">string</span>&gt; GetAllRoles();</pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> CreateRole(<span style=\"color:#0000FF;\">string</span> roleName);</pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> DeleteRole(<span style=\"color:#0000FF;\">string</span> roleName);</pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span>&nbsp; </pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> AddRolesInUser(<span style=\"color:#0000FF;\">string</span> userName, <span style=\"color:#0000FF;\">string</span>[] roleNames);</pre>\r\n<pre><span id=\"lnum8\" style=\"color:#606060;\"> 8:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> RemoveRolesFromUser(<span style=\"color:#0000FF;\">string</span> userName, <span style=\"color:#0000FF;\">string</span>[] roleNames);</pre>\r\n<pre><span id=\"lnum9\" style=\"color:#606060;\"> 9:</span> }</pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		如下我们需要将其定义成一个纯粹的RESTful的Web API，只有前面三个方法在针对角色的CRUD操作范畴之内，但是后面两个方法却可以视为针对“<span style=\"color:#FF0000;\">角色委派（Role Assignment）”</span>对象的添加和删除操作。所以这里实际上涉及到了两种资源，即角色和角色委派。为了使Web API具有统一的接口，我们需要定义如下两个Web API。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">class</span> RolesService</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> {</pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span> <span style=\"color:#0000FF;\">public</span> IEnumerable&lt;<span style=\"color:#0000FF;\">string</span>&gt; Get();</pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Create(<span style=\"color:#0000FF;\">string</span> roleName);</pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Delete(<span style=\"color:#0000FF;\">string</span> roleName);</pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span> }</pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span>&nbsp; </pre>\r\n<pre><span id=\"lnum8\" style=\"color:#606060;\"> 8:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">class</span> RoleAssignmentsService</pre>\r\n<pre><span id=\"lnum9\" style=\"color:#606060;\"> 9:</span> {</pre>\r\n<pre><span id=\"lnum10\" style=\"color:#606060;\"> 10:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Create(RoleAssignment roleName);</pre>\r\n<pre><span id=\"lnum11\" style=\"color:#606060;\"> 11:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Delete(RoleAssignment roleName);</pre>\r\n<pre><span id=\"lnum12\" style=\"color:#606060;\"> 12:</span> }</pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">五、使用标准的HTTP方法</span></span>\r\n	</h1>\r\n	<p>\r\n		由于RESTful Web API采用了同一的接口，所以其成员体现为针对同一资源的操作。对于Web来说，针对资源的操作通过HTTP方法来体现。我们应该将两者统一起来，是Web API分别针对CRUD的操作只能接受具有对应HTTP方法的请求。\r\n	</p>\r\n	<p>\r\n		我们甚至可以直接使用HTTP方法名作为Web API接口的方法名称，那么这样的Web API接口就具有类似于如下的定义。对于ASP.NET Web API来说，由于它提供了Action方法名称和HTTP方法的自动映射，所以如果我们采用这样的命名规则，就无需再为具体的Action方法设定针对HTTP方法的约束了。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">class</span> ResourceService</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> {</pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span> <span style=\"color:#0000FF;\">public</span> IEnumerable&lt;Resource&gt;[] Get();</pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Post(Resource resource); </pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Put(Resource resource);</pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Patch (Resource resource);</pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Delete(<span style=\"color:#0000FF;\">string</span> id);</pre>\r\n<pre><span id=\"lnum8\" style=\"color:#606060;\"> 8:</span>&nbsp; </pre>\r\n<pre><span id=\"lnum9\" style=\"color:#606060;\"> 9:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Head(<span style=\"color:#0000FF;\">string</span> id);</pre>\r\n<pre><span id=\"lnum10\" style=\"color:#606060;\"> 10:</span> <span style=\"color:#0000FF;\">public</span> <span style=\"color:#0000FF;\">void</span> Options();</pre>\r\n<pre><span id=\"lnum11\" style=\"color:#606060;\"> 11:</span> }</pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		上面代码片断提供的7个方法涉及到了7个常用的HTTP方法，接下来我们针对资源操作的语义对它们作一个简单的介绍。首先GET、HEAD和OPTIONS这三个HTTP方法旨在发送请求以或者所需的信息。对于GET，相应所有人对它已经非常熟悉了，它用于获取所需的资源，服务器一般讲对应的资源置于响应的主体部分返回给客户端。\r\n	</p>\r\n	<p>\r\n		HEAD和OPTIONS相对少见。从资源操作的语义来讲，一个针对某个目标资源发送的HEAD请求一般不是为了获取目标资源本身的内容，而是得到<span style=\"color:#FF0000;\">描述目标资源的元数据信息</span>。服务器一般讲对应资源的元数据置于响应的报头集合返回给客户端，这样的响应一般不具有主体部分。OPTIONS请求旨在发送一种“探测”请求以确定针对某个目标地址的请求必须具有怎样的约束（比如应该采用怎样的HTTP方法以及自定义的请求报头），然后根据其约束发送真正的请求。比如针对“跨域资源”的预检（Preflight）请求采用的HTTP方法就是OPTIONS。\r\n	</p>\r\n	<p>\r\n		至于其它4中HTTP方法（POST、PUT、PATCH和DELETE），它们旨在针对目标资源作添加、修改和删除操作。对于DELETE，它的语义很明确，就是删除一个已经存在的资源。我们着重推荐其它三个旨在完成资源的添加和修改的HTTP方法作一个简单的介绍。\r\n	</p>\r\n	<p>\r\n		通过发送POST和PUT请求均可以添加一个新的资源，但是两者的不同之处在于：对于前者，请求着一般<span style=\"color:#FF0000;\">不能确定标识添加资源最终采用的URI</span>，即服务端最终为成功添加的资源指定URI；对于后者，最终<span style=\"color:#FF0000;\">标识添加资源的URI是可以由请求者控制的</span>。也正是因为这个原因，如果发送PUT请求，我们一般直接将标识添加资源的URI作为请求的URI；对于POST请求来说，其URI一般是标识添加资源存放容器的URI。\r\n	</p>\r\n	<p>\r\n		比如我们分别发送PUT和POST请求以添加一个员工，标识员工的URI由其员工ID来决定。如果员工ID由客户端来指定，我们可以发送PUT请求；如果员工ID由服务端生成，我们一般发送POST请求。具体的请求与下面提供的代码片断类似，可以看出它们的URI也是不一样的。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> PUT <span style=\"color:#FF0000;\">http://www.artech.com/employees/300357</span> HTTP/1.1</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> ...</pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span>&nbsp; </pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> &lt;employee&gt;</pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> <span style=\"color:#FF0000;\">&lt;id&gt;300357&lt;/id&gt;</span> </pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span> &lt;name&gt;张三&lt;/name&gt;</pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span> &lt;gender&gt;男&lt;gender&gt;</pre>\r\n<pre><span id=\"lnum8\" style=\"color:#606060;\"> 8:</span> &lt;birthdate&gt;1981-08-24&lt;/birthdate&gt;</pre>\r\n<pre><span id=\"lnum9\" style=\"color:#606060;\"> 9:</span> &lt;department&gt;3041&lt;/department&gt;</pre>\r\n<pre><span id=\"lnum10\" style=\"color:#606060;\"> 10:</span> &lt;/employee&gt;</pre>\r\n		</div>\r\n	</div>\r\n	<div style=\"margin:0px;padding:0px;\">\r\n		&nbsp;\r\n	</div>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> POST <span style=\"color:#FF0000;\">http://www.artech.com/employees</span> HTTP/1.1</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span> ...</pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span>&nbsp; </pre>\r\n<pre><span id=\"lnum4\" style=\"color:#606060;\"> 4:</span> &lt;employee&gt;</pre>\r\n<pre><span id=\"lnum5\" style=\"color:#606060;\"> 5:</span> &lt;name&gt;张三&lt;/name&gt;</pre>\r\n<pre><span id=\"lnum6\" style=\"color:#606060;\"> 6:</span> &lt;gender&gt;男&lt;gender&gt;</pre>\r\n<pre><span id=\"lnum7\" style=\"color:#606060;\"> 7:</span> &lt;birthdate&gt;1981-08-24&lt;/birthdate&gt;</pre>\r\n<pre><span id=\"lnum8\" style=\"color:#606060;\"> 8:</span> &lt;department&gt;3041&lt;/department&gt;</pre>\r\n<pre><span id=\"lnum9\" style=\"color:#606060;\"> 9:</span> &lt;/employee&gt;</pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		POST和PUT请求一般将所加资源的内容置于请求的主体。但是对于PUT请求来说，如果添加资源的内容完全可以由其URI来提供，这样的请求可以不需要主体。比如我们通过请求添加一个用于控制权限的角色，标识添加角色的URI由其角色名称来决定，并且不需要指定除角色名称的其它信息，那么我们只要发送如下一个不含主体的PUT请求即可。\r\n	</p>\r\n	<div id=\"codeSnippetWrapper\" style=\"margin:0px;padding:0px;border:1px solid silver;\">\r\n		<div id=\"codeSnippet\" style=\"margin:0px;padding:0px;font-size:8pt;font-family:\'Courier New\', courier, monospace;background-color:#F4F4F4;\">\r\n<pre><span id=\"lnum1\" style=\"color:#606060;\"> 1:</span> PUT <span style=\"color:#FF0000;\">http://www.artech.com/roles/admin</span> HTTP/1.1</pre>\r\n<pre><span id=\"lnum2\" style=\"color:#606060;\"> 2:</span>&nbsp; </pre>\r\n<pre><span id=\"lnum3\" style=\"color:#606060;\"> 3:</span> ...</pre>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		除了进行资源的添加，PUT请求还能用于资源的修改。由于请求包含提交资源的标识（可以放在URI中，也可以置于保存在主体部分的资源内容中），所以服务端能够定位到对应的资源予以修改。对于POST和PUT，也存在一种一刀切的说法：<span style=\"color:#FF0000;\">POST用于添加，PUT用于修改</span>。我个人比较认可的是：<span style=\"color:#FF0000;\">如果PUT提供的资源不存在，则做添加操作，否则做修改</span>。\r\n	</p>\r\n	<p>\r\n		对于发送PUT请求以修改某个存在的资源，服务器一般会将提供资源将原有资源整体“覆盖”掉。如果需要进行“局部”修改，我们推荐请求采用PATCH方法，因为从语义上讲“Patch”就是打补丁的意思。\r\n	</p>\r\n	<h2 style=\"font-size:16.799999237060547px;text-decoration:underline;\">\r\n		安全性与幂等性\r\n	</h2>\r\n	<p>\r\n		关于HTTP请求采用的这些个方法，具有两个基本的特性，即“安全性”和“幂等性”。对于上述7种HTTP方法，GET、HEAD和OPTIONS均被认为是安全的方法，因为它们旨在实现对数据的获取，并不具有“边界效应（Side Effect<a href=\"file://E:/????????????/ASP.NET%20Web%20API????????????/???1???%20ASP.NET%20Web%20API??????/#_ftn1_9470\" name=\"_ftnref1_9470\">[1]</a>）”。至于其它4个HTTP方法，由于它们会导致服务端资源的变化，所以被认为是不安全的方法。\r\n	</p>\r\n	<p>\r\n		幂等性（Idempotent）是一个数学上的概念，在这里表示<span style=\"color:#FF0000;\">发送一次和多次请求引起的边界效应是一致的</span>。在网速不够快的情况下，客户端发送一个请求后不能立即得到响应，由于不能确定是否请求是否被成功提交，所以它有可能会再次发送另一个相同的请求，幂等性决定了第二个请求是否有效。\r\n	</p>\r\n	<p>\r\n		上述3种安全的HTTP方法（GET、HEAD和OPTIONS）均是幂等方法。由于DELETE和PATCH请求操作的是现有的某个资源，所以它们是<span style=\"color:#FF0000;\">幂等方法</span>。对于PUT请求，只有在对应资源不存在的情况下服务器才会进行添加操作，否则只作修改操作，所以它也是<span style=\"color:#FF0000;\">幂等方法</span>。至于最后一种POST，由于它总是进行添加操作，如果服务器接收到两次相同的POST操作，将导致两个相同的资源被创建，所以这是一个非幂等的方法。\r\n	</p>\r\n	<p>\r\n		当我们在设计Web API的时候，应该尽量根据请求HTTP方法的幂等型来决定处理的逻辑。由于PUT是一个幂等方法，所以携带相同资源的PUT请求不应该引起资源的状态变化，如果我们在资源上附加一个自增长的计数器表示被修改的次数，这实际上就破坏了幂等型。\r\n	</p>\r\n	<p>\r\n		不过就我个人的观点来说，在有的场合下针对幂等型要求可以不需要那么严格。举个例子，我对于我们开发的发部分应用来说，数据表基本上都有一个名为<span style=\"color:#FF0000;\">LastUpdatedTime</span>的字段表示记录最后一次被修改的时间，因为这是为了数据安全审核（Auditing）的需要。在这种情况下，如果接收到一个基于数据修改的PUT请求，我们总是会用提交数据去覆盖现有的数据，并将当前服务端时间（客户端时间不可靠）作为字段LastUpdatedTime的值，这实际上也破坏了幂等性。\r\n	</p>\r\n	<p>\r\n		可能有人说我们可以在真正修改数据之前检查提交的数据是否与现有数据一致，但是在涉及多个表链接的时候这个“预检”操作会带来性能损失，而且针对每个字段的逐一比较也是一个很繁琐的事情，所以我们一般不作这样的预检操作。\r\n	</p>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">六、支持多种资源表示方式</span></span>\r\n	</h1>\r\n	<p>\r\n		资源和资源的表示（Representaion）是两个不同的概念，资源本身是一个抽象的概念，是看不见摸不着的，而看得见摸得着的是资源的表现。比如一个表示一个财年销售情况的资源，它既可以表示为一个列表、一个表格或者是一个图表。如果采用图表，又可以使用柱状图、K线图和饼图等，这一切都是针对同一个资源的不同表示。\r\n	</p>\r\n	<p>\r\n		我们说“调用Web API获取资源”，这句话其实是不正确的，因为我们获取的不是资源本身，仅仅是资源的某一种表示而已。对于Web来说，目前具有两种主流的数据结构，<span style=\"color:#FF0000;\">XML</span>和<span style=\"color:#FF0000;\">JSON</span>，它们也是资源的两种主要的呈现方式。在多语言环境下，还应该考虑描述资源采用的语言。\r\n	</p>\r\n	<p>\r\n		我们在设计Web API的时候，应该支持不同的资源表示，我们不能假定请求提供的资源一定表示成XML，也不能总是以JSON格式返回获取的资源，正确的做法是：<span style=\"color:#FF0000;\">根据请求携带的信息识别提交和希望返回的资源表示</span>。对于请求提交的资源，我们一般利用请求的Content-Type报头携带的媒体类型来判断其采用的表示类型。对于响应资源表示类型的识别，可以采用如下两种方式。\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			让请求URI包含资源表示类型，这种方式使用的最多的是针对多语言的资源，我们一般讲表示语言（也可以包含地区）的代码作为URI的一部分，比如“http://www.artech.com/en/orders/2013”表示将2013年的订单以英文的形式返回。\r\n		</li>\r\n		<li>\r\n			采用“内容协商（Content Negotiation）”根据请求相关报头来判断它所希望的资源表示类型，比如“Accept”和“Accept-language”报头可以体现请求可以接受的响应媒体类型和语言。\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		对于上述两种资源表示识别机制，我们很多人会喜欢后者，因为第一种不够“智能”。实际上前者具有一个后者不具有的特性：“浏览器兼容型”<a href=\"file://E:/????????????/ASP.NET%20Web%20API????????????/???1???%20ASP.NET%20Web%20API??????/#_ftn2_9470\" name=\"_ftnref2_9470\">[2]</a>。对于Web API开发来说，浏览器应该成为一种最为常用的测试工具。在不借助任何插件的情况下，我们利用浏览器访问我们在地址栏中输入的URI时对生成的请求内容不能作任何干预的，如果与资源表示相关的信息（比如语言、媒体类型）被直接包含到请求的URI中，那么所有的情况都可以利用浏览器直接测试。\r\n	</p>\r\n	<p>\r\n		有人从另一方面对“URI携带资源表示类型”作了这样的质疑：由于URI是资源的标识，那么这导致了相同的资源具有多个标识。其实这是没有问题的，URI是资源的唯一标识，但不是其“<span style=\"color:#FF0000;\">唯一的唯一标识</span>“，相同的资源可以具有多个标识。\r\n	</p>\r\n	<h1 style=\"font-size:12px;font-weight:normal;\">\r\n		<span style=\"font-size:large;\"><span style=\"font-weight:bold;\">七、无状态性</span></span>\r\n	</h1>\r\n	<p>\r\n		RESTful只要维护资源的状态，而不需要维护客户端的状态。对于它来说，每次请求都是全新的，它只需要针对本次请求作相应的操作，不需要将本次请求的相关信息记录下来以便用于后续来自相同客户端请求的处理。\r\n	</p>\r\n	<p>\r\n		对于上面我们介绍的RESTful的这些个特性，它们都是要求我们为了满足这些特征做点什么，唯有这个无状态却是要求我们不要做什么，因为HTTP本身就是无状态的。举个例子，一个网页通过调用Web API分页获取符合查询条件的记录。一般情况下，页面导航均具有“上一页”和“下一页”链接用于呈现当前页的前一页和后一页的记录。那么现在有两种实现方式返回上下页的记录。\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			Web API不仅仅会定义根据具体页码的数据查询定义相关的操作，还会针对“上一页”和“下一页”这样的请求定义单独的操作。它自身会根据客户端的Session ID对每次数据返回的页面在本地进行保存，以便能够知道上一页和下一页具体是哪一页。\r\n		</li>\r\n		<li>\r\n			Web API只会定义根据具体页码的数据查询定义相关的操作，当前返回数据的页码由客户端来维护。\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		第一种貌似很“智能”，其实就是一种画蛇添足的作法，因为它破坏了Web API的无状态性。设计无状态的Web API不仅仅使Web API自身显得简单而精炼，还因减除了针对客户端的“亲和度（Affinty）”使我们可以有效地实施负载均衡，因为只有这样集群中的每一台服务器对于每个客户端才是等效的。\r\n	</p>\r\n	<hr />\r\n	<p>\r\n		<a href=\"file://E:/????????????/ASP.NET%20Web%20API????????????/???1???%20ASP.NET%20Web%20API??????/#_ftnref1_9470\" name=\"_ftn1_9470\">[1]</a>&nbsp;大部分计算机书籍都将Side Effect翻译成“副作用”，而我们一般将“副（负）作用”理解为负面的作用，其实计算机领域Side Effect表示的作用无所谓正负，所以我们觉得还是还原其字面的含义“边界效用”。除此之外，对于GET、HEAD和OPTIONS请求来说，如果服务端需要对它们作日志、缓存甚至计数操作，严格来说这也算是一种Side Effect，但是请求的发送者不对此负责。\r\n	</p>\r\n	<p>\r\n		<a href=\"file://E:/????????????/ASP.NET%20Web%20API????????????/???1???%20ASP.NET%20Web%20API??????/#_ftnref2_9470\" name=\"_ftn2_9470\">[2]</a>&nbsp;这里的“兼容”不是指支持由浏览器发送的请求，因为通过执行JavaScript脚本可以让作为宿主的浏览器发送任何我们希望的请求，这里的兼容体现在尽可能地支持浏览器访问我们在地址栏中输入的URI默认发送的HTTP-GET请求。\r\n	</p>\r\n	<p>\r\n		参考资料：&nbsp;<br />\r\n[1] 《HTTP： The Definitive Guide》, By By David Gourley, Brian Totty, Marjorie Sayer, Anshu Aggarwal, Sailu Reddy&nbsp;<br />\r\n[2] 《RESTful Web Services》, RESTful Web Services&nbsp;<br />\r\n[3] 《A Brief Introduction to REST》，<a href=\"http://www.infoq.com/articles/rest-introduction\">http://www.infoq.com/articles/rest-introduction</a>&nbsp;<br />\r\n[4] 《TCP/IP Illustrated (Volumn 1: The Protocol)》, by W. Richard Stevens\r\n	</p>\r\n	<p>\r\n		<a href=\"http://www.cnblogs.com/artech/p/restful-web-api-01.html\">我所理解的RESTful Web API [Web标准篇]</a>&nbsp;<br />\r\n<a href=\"http://www.cnblogs.com/artech/p/restful-web-api-02.html\">我所理解的RESTful Web API [设计篇]</a>\r\n	</p>\r\n</div>\r\n<div id=\"MySignature\" style=\"margin:0px;padding:10px 10px 10px 60px;border:1px solid #E5E5E5;background-color:#FFFEFE;font-family:Verdana, Arial, Helvetica, sans-serif;\">\r\n	作者：<a href=\"http://artech.cnblogs.com/\" target=\"_blank\">Artech</a><br />\r\n出处：<a href=\"http://artech.cnblogs.com/\" target=\"_blank\">http://artech.cnblogs.com/</a><br />\r\n本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。\r\n</div>',NULL,NULL,'2014-04-24 12:31:20',0,'我所理解的RESTful Web API [设计篇]',0),(34,'admin',13,'<h3 style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">定义</span>\r\n</h3>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">大数据（Big Data），研究机构Gartner给出了这样的定义。“大数据”是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。 从数据的类别上看，“大数据”指的是无法使用传统流程或工具处理或分析的信息。 它定义了那些超出正常处理范围和大小、迫使用户采用非传统处理方法的数据集。 “大数据”这个术语最早期的引用可追溯到Apache.org的开源项目Nutch。当时，大数据用来描述为更新网络搜索索引需要同时进行批量处理或分析的大量数据集。随着谷歌MapReduce和Google File System（GFS）的发布，大数据不再仅用来描述大量的数据，还涵盖了处理数据的速度。从某种程度上说，大数据是数据分析的前沿技术。</span> \r\n</p>',NULL,'2014-04-26 08:21:46','2014-04-26 08:21:10',0,'大数据(Big data,大数据)',0),(35,'admin',11,'<p>\r\n	<a href=\"http://blog.csdn.net/hguisu\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">guisu，程序人生。</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"http://blog.csdn.net/woshiwanxin102213\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">woshiwanxin102213的专栏</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"><a href=\"http://www.toxingwang.com/\" target=\"_blank\"><span style=\"font-family:Microsoft YaHei;\">旺旺知识库</span></a></span> \r\n</p>\r\n<p>\r\n	<h2 style=\"color:#003366;font-size:32px;font-family:\'Microsoft YaHei\';\">\r\n		<a href=\"http://blog.csdn.net/lzliu1314\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">刘立洲的专栏</span></a>\r\n	</h2>\r\n</p>',NULL,'2014-04-26 09:24:51','2014-04-26 09:21:00',0,'技术博客收藏',0),(36,'admin',7,'<span style=\"font-size:18px;font-family:\'Microsoft YaHei\';color:#E53333;\">maven常用命令:</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1. mvn compile 编译源代码</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 2. mvn test-compile 编译测试代码</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 3. mvn test 运行测试</span><br />\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 5. mvn package 打包，根据pom.xml打成war或jar</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"><br />\r\n</span>\r\n</p>\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 如果pom.xml中设置 war，则此命令相当于mvn war:war</span><br />\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 如果pom.xml中设置 jar，则此命令相当于mvn jar:jar</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"><br />\r\n</span>\r\n</p>\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 6. mvn -Dtest package	打包但不测试。完整命令为：mvn -D maven.test.skip=true package</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 7. mvn install	在本地Repository中安装jar</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 8. mvn clean	清除产生的项目</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 9. mvn eclipse:eclipse 生成eclipse项目</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 10.mvn idea:idea	生成idea项目</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 11.mvn eclipse:clean	清除eclipse的一些系统设置</span><br />\r\n<br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 一般使用情况是这样，</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1、通过cvs或svn下载代码到本机</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 2、执行mvn eclipse:eclipse生成ecllipse项目文件</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 3、然后导入到eclipse就行了</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 4、修改代码后执行mvn compile或mvn test检验</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"></span>',NULL,NULL,'2014-04-26 15:29:05',0,'maven常用命令',0),(37,'admin',12,'<p>\r\n	为什么我如此热爱编程？我的意思是，我从 让程序运转良好和确保它编写清晰、组织有序中 收获了多得不思议的满足。<a href=\"http://sam-koblenski.blogspot.com/2013/04/exploring-world-of-programming-languages.html\" target=\"_blank\">我总是被编程所吸引</a>，我学得越多，我就越想学更多、越想提高更多。\r\n</p>\r\n<p>\r\n	我开心地坐在电脑前面，花费数个小时尽量描述最好的算法，只是为了解决一些乏味问题而用一个很少像人类语言的、难懂的语法，它只是像自然语言，因为它使用了一些简单的英语词汇。为什么是那样？是什么让编程如此快乐，我敢说是有趣？下面是我认为的最好的一些理由，它们组成了我认为是编程本质的东东。\r\n</p>\r\n<h4>\r\n	创造性地解决问题\r\n</h4>\r\n<p>\r\n	每一个编程问题都是堆满你大脑而需要解决的新挑战。即使你以前做过，仍然有一部分在你解决时会产生新的问题。你能在一个新的上下文实现，或者为了高吞吐量、数百万的用户或难以想象的低电力。那些问题需要创新才能克服。\r\n</p>\r\n<p>\r\n	你做的任何编程本身都是新的，至少对你是这样，因为如果不这样你将要使用你已经用过的软件。在大多数情况下，你试图解决的问题相对于多数人来说，是非常新的，<a href=\"http://sam-koblenski.blogspot.com/2013/12/oh-things-youll-learn-as-software.html\" target=\"_blank\">你也在学习</a>。你在学习问题域（Problem domain）【注1】，你在学习需求和约束，你在学习如何最好地解决眼前问题。\r\n</p>\r\n<p>\r\n	整个过程充满了如此多的创新。设计准则和代码规范是好的，但是它们从来不足以应付每种情况，或为任何更有趣的问题提供解决方案。编程首先是、且重要的是一个创新过程，你拥有的知识越多，你就越能在这些难题之间想到新颖的解决方案。\r\n</p>\r\n<h4>\r\n	想法的表达\r\n</h4>\r\n<p>\r\n	如果该解决方案是费解的，那么它有创新也不是足够的。我花了好长时间才理解，但是好的编程就像创新地解决问题一样，需要很好的写作能力。我过去常常认为，如果代码写得好，且做了它该做的事，就足够了，但是编程比这要深入许多。\r\n</p>\r\n<p>\r\n	除了只是告诉计算机如何做一些事情，好的代码有一个优雅的说法。如果这就是全部，我们应该仍然使用机器语言。不，<a href=\"http://sam-koblenski.blogspot.com/2013/07/dont-comment-your-code-write-better-code.html\" target=\"_blank\">编写良好的代码</a>可以清晰地表达解决方案的想法和意图，因此它可以马上被其他程序员理解，包括将来的你。当这做到了，还存在一个比一系列执行之类更好的层级。\r\n</p>\r\n<p>\r\n	在代码里良好地表达想法是极其困难的。这和通过写作清晰地表达想法一样困难，两者需要终其一生来掌握。如果你继续致力于此，用你的整个生命提高编程的这个方面是可能的。\r\n</p>\r\n<h4>\r\n	对他人的同理心\r\n</h4>\r\n<p>\r\n	如果你正在制作的软件将被其他人使用，同理心对于一个成功的产品是必要条件。如果你能够把自己摆在客户的位置，真正感受客户在现有状况下的痛苦和沮丧，那么你会使客户的生活更加美好。\r\n</p>\r\n<p>\r\n	<a href=\"http://sam-koblenski.blogspot.com/2013/03/tech-book-face-off-prioritizing-web.html\" target=\"_blank\">软件界面</a>可以是让人恐惧的复杂、或清爽地简洁。它们可以是令人发狂的不一致或让人愉快的深思熟虑。在你的目标群体、他们在用你的软件之前已经具备的知识、他们不得不完成工作的需求和期望上，你想象得越多，你就越能更好地设计他们喜爱的软件。\r\n</p>\r\n<p>\r\n	制作人们感激和依赖的东西是极其让人满意的。为了这个目标，你需要知道他们的动机；为了这，你需要同理心。\r\n</p>\r\n<h4>\r\n	分析思维\r\n</h4>\r\n<p>\r\n	编程的另一个基础部分就是<a href=\"http://sam-koblenski.blogspot.com/2013/12/what-can-chess-teach-us-about.html\" target=\"_blank\">分析地思考问题</a>。丢掉你的创新直觉还不够好。创新能够产生你需要找到目标的想法，但是冷酷的、艰苦的分析才是使你保持正确方向的罗盘，才是让你知道什么时候到达目的的“制造者”（maker）。\r\n</p>\r\n<p>\r\n	知道什么是重点关注的、能够采取好的措施和正确地解释结果，对于开发高性能软件是至关重要的。分析思维是关于开发好的判断，并应用到最相关的时间、地点的一切。这是一项技能，意味着 浪费数周或数月在不相关的优化上 和 快速弄清你的软件瓶颈并消除它们 之间的不同。\r\n</p>\r\n<h4>\r\n	消除枯燥感\r\n</h4>\r\n<p>\r\n	如果存在软件做得不错的地方，那就是它使单调工作自动化了。想想你最需要的软件、你每天使用的程序。把 你不得不手工做的事情 想象成 再现它们为你做的事情，你会感激软件已经从你的生活中消除了大量的、易于出错的枯燥感。\r\n</p>\r\n<p>\r\n	怀着一个 从你生活移除其它枯燥任务 的强烈愿望 将给你一种想象新软件完成那些任务的巨大能力。你甚至可以用编程消除单调的编程任务，事实上，大量被程序员开发的、为程序员创造的软件就是尽可能多地提高编程效率。当你有动机开发软件来做的时候，编程可以很好地做到，从你生活中移除各种枯燥感。\r\n</p>\r\n<p>\r\n	这些方面的任何一项------创新性地解决问题，想法的表达，同理心，分析思维和自动化------都适用于任何人类的努力，但是放在一起，它们是编程的本质。它们也包含了我热爱编程的原因。我在其它地方能够同时从事如此实际、理性和创新的工作吗？我无法想象其它工作，我宁可做我现在做的。\r\n</p>\r\n<p>\r\n	原文地址：<a href=\"http://sam-koblenski.blogspot.com/2014/04/the-essence-of-programming.html\" target=\"_blank\">http://sam-koblenski.blogspot.com/2014/04/the-essence-of-programming.html</a><br />\r\n注1：问题域（Problem domain）”指提问的范围、问题之间的内在的关系和逻辑可能性空间。软件工程：在软件工程中，问题域是指被开发系统的应用领域，即在客观世界中由该系统处理的业务范围。\r\n</p>',NULL,'2014-04-28 16:09:39','2014-04-28 16:08:20',0,'编程的本质',0),(38,'admin',10,'<h1>\r\n	1.针对多个域的一次性查询\r\n</h1>\r\n<h2>\r\n	<a></a>1.1.三种方案 &nbsp; &nbsp;\r\n</h2>\r\n<div>\r\n	&nbsp; &nbsp; 使用lucene构造搜索引擎的时候，如果要针对多个域进行一次性查询，一般来说有三种方法：\r\n</div>\r\n<div>\r\n	&nbsp; &nbsp; 第一种实现方法是创建多值的全包含域的文本进行索引，这个方案最简单。但是这个防范有个缺点：你不能直接对每个域的加权进行控制。\r\n</div>\r\n<div>\r\n	&nbsp; &nbsp; 第二种方法是使用MultiFieldQueryParser，它是QueryParser的子类，它会在后台程序中实例化一个QueryParser对象，用来针对每个域进行查询表达式的解析，然后使用BooleanQuery将查询结果合并起来。当程序向BooleanQuery添加查询子句时，默认操作符OR被用于最简单的解析方法中。为了实现更好的控制，布尔操作符可以使用BooleanClause的常量指定给每个域。如果需要指定的话可以使用BooleanClause.Occur.MUST，如果禁止指定可以使用BooleanClause.Occur.MUST_NOT，或者普通情况为BooleanClause.Occur.SHOULD。下面的程序展示的是如何创建MultiFieldQueryParser类的方法：\r\n</div>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<ol>\r\n			<li>\r\n				//&nbsp;在这四个域中检索&nbsp;&nbsp;\r\n			</li>\r\n			<li>\r\n				String[]&nbsp;fields&nbsp;=&nbsp;{&nbsp;\"phoneType\",&nbsp;\"name\",&nbsp;\"category\",&nbsp;\"price\"&nbsp;};&nbsp;&nbsp;\r\n			</li>\r\n			<li>\r\n				Query&nbsp;query&nbsp;=&nbsp;new&nbsp;MultiFieldQueryParser(Version.LUCENE_36,&nbsp;fields,&nbsp;analyzer).parse(keyword);&nbsp;&nbsp;\r\n			</li>\r\n		</ol>\r\n	</div>\r\n&nbsp; &nbsp; 第三种方法就是使用高级DisjunctionMaxQuery类，它会封装一个或者多个任意的查询，将匹配的文档进行OR操作。\r\n</div>\r\n<div>\r\n	<h2>\r\n		<a></a>1.2.方案选择\r\n	</h2>\r\n	<div>\r\n		&nbsp; &nbsp; 以上三种方案中，并不是第三种方案最好，也不是第一种方案就最差。哪种实现方式更适合你的应用程序呢？答案是“看情况”，因为这里存在一些取舍。全包含域是一个简单的解决方案——但这个方案只能对搜索结果进行简单的排序并且可能浪费磁盘空间（程序可能对同样的文本索引两次），但这个方案可能会获得最好的搜索性能。\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp;&nbsp;MultiFieldQueryParser生成的BooleanQuery会计算所有查询所匹配的文档评分的总和（DisjunctionMaxQuery则只选取最大评分），然后它能够实现针对每个域的加权。你必须对以上3中解决方案都进行测试，同时需要一起考虑搜索性能和搜索相关性，然后再找出最佳方案。\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<h1>\r\n		<a></a>2.在结果中查询\r\n	</h1>\r\n	<h2>\r\n		<a></a>2.1.两种方案\r\n	</h2>\r\n	<div>\r\n		&nbsp; &nbsp; 在检索结果中再次进行检索，是一个很常见的需求，一般有两种方案可以选择：\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; ①使用QueryFilter把第一个查询当作一个过滤器处理；\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; ②用BooleanQuery把前后两个查询结合起来，并且使用BooleanClause.Occur.MUST。\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 针对第一种方法，我需要解释一下。QueryFilter在Lucene的2.x版本中是存在的，但是在3.x中，lucene的API中这个类已经被废弃了，无法再找到。如果你的项目使用的是lucene是3.x，但是你又一定要使用QueryFilter，那么你必须自己创建一个QueryFilter类，然后将2.x中QueryFilter的源代码复制过来。你可能会说，直接在工程中同时使用lucene2.x和3.x的核心jar文件不就行了吗。但遗憾的是，一个工程下，是不能同时使用不同版本的lucene的。\r\n	</div>\r\n	<h2>\r\n		<a></a>2.2.QueryFilter方案\r\n	</h2>\r\n	<div>\r\n		上文已经说了，如果一定要使用QueryFilter，由于lucene2.x中没有QueryFilter的API，所以自己要写一个QueryFilter，QueryFilter的源代码在lucene2.x中是这样的：\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					import&nbsp;org.apache.lucene.search.CachingWrapperFilter;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					import&nbsp;org.apache.lucene.search.Query;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					import&nbsp;org.apache.lucene.search.QueryWrapperFilter;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					public&nbsp;class&nbsp;QueryFilter&nbsp;extends&nbsp;CachingWrapperFilter&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Constructs&nbsp;a&nbsp;filter&nbsp;which&nbsp;only&nbsp;matches&nbsp;documents&nbsp;matching&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&lt;code&gt;query&lt;/code&gt;.&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;QueryFilter(Query&nbsp;query)&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(new&nbsp;QueryWrapperFilter(query));&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;boolean&nbsp;equals(Object&nbsp;o)&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;super.equals((QueryFilter)&nbsp;o);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;hashCode()&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;super.hashCode()&nbsp;^&nbsp;0x923F64B9;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					}&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n<br />\r\n	</div>\r\n	<div>\r\n		第一种方案的例子程序如下：\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					//简单实现对keyword的搜索&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;public&nbsp;static&nbsp;void&nbsp;search(String&nbsp;keyword)&nbsp;throws&nbsp;IOException,&nbsp;ParseException&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryParser&nbsp;queryParser&nbsp;=&nbsp;new&nbsp;QueryParser(\"content\",new&nbsp;SimpleAnalyzer());&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query&nbsp;query&nbsp;=&nbsp;queryParser.parse(keyword.trim());&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryFilter&nbsp;filter&nbsp;=&nbsp;new&nbsp;QueryFilter(query);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//检索&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;search(query,&nbsp;filter);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;//在搜索oldKeyword的结果集中搜索newKeyword&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;public&nbsp;static&nbsp;void&nbsp;searchInResult(String&nbsp;newKeyword,&nbsp;String&nbsp;oldKeyword)&nbsp;throws&nbsp;ParseException,&nbsp;IOException&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryParser&nbsp;queryParser&nbsp;=&nbsp;new&nbsp;QueryParser(\"content\",new&nbsp;SimpleAnalyzer());&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query&nbsp;query&nbsp;=&nbsp;queryParser.parse(newKeyword.trim());&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query&nbsp;oldQuery&nbsp;=&nbsp;queryParser.parse(oldKeyword.trim());&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryFilter&nbsp;oldFilter&nbsp;=&nbsp;new&nbsp;QueryFilter(oldQuery);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CachingWrapperFilter&nbsp;filter&nbsp;=&nbsp;new&nbsp;CachingWrapperFilter(oldFilter);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//检索&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;search(query,&nbsp;filter);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;private&nbsp;static&nbsp;void&nbsp;search(Query&nbsp;query,&nbsp;Filter&nbsp;filter)&nbsp;throws&nbsp;IOException,&nbsp;ParseException&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IndexSearcher&nbsp;ins&nbsp;=&nbsp;new&nbsp;IndexSearcher(\"d:/tesindex\");&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hits&nbsp;hits&nbsp;=&nbsp;ins.search(query,&nbsp;filter);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;hits.length();&nbsp;i++)&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;hits.doc(i);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(doc.get(\"content\"));&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n		<h2>\r\n			<a></a>2.3.BooleanQuery方案\r\n		</h2>\r\n		<div>\r\n			&nbsp; &nbsp; 使用BooleanQuery来实现在结果中检索的过程是这样的，首先通过关键字keyword1正常检索，当用户需要在检索结果中再通过关键字keyword2检索的时候，通过构建BooleanQuery，来实现对在结果中检索的效果。这里要注意，这两个关键字都要使用BooleanClause.Occur.MUST。\r\n		</div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					//创建BooleanQuery&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					BooleanQuery&nbsp;booleanQuery&nbsp;=&nbsp;new&nbsp;BooleanQuery();&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					//多域检索，在这四个域中检索&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					String[]&nbsp;fields&nbsp;=&nbsp;{&nbsp;\"phoneType\",&nbsp;\"name\",&nbsp;\"category\",\"free\"&nbsp;};&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					Query&nbsp;multiFieldQuery&nbsp;=&nbsp;new&nbsp;MultiFieldQueryParser(Version.LUCENE_36,&nbsp;fields,&nbsp;analyzer).parse(keyword);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					//将multiFieldQuery添加到BooleanQuery中&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					booleanQuery.add(multiFieldQuery,&nbsp;BooleanClause.Occur.MUST);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					//如果osKeyword不为空&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					if(osKeyword&nbsp;!=&nbsp;null&nbsp;&amp;&amp;&nbsp;!osKeyword.equals(\"\")&nbsp;&amp;&amp;&nbsp;!osKeyword.equals(\"null\")){&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;TermQuery&nbsp;osQuery&nbsp;=&nbsp;new&nbsp;TermQuery(new&nbsp;Term(\"phoneType\",osKeyword));&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;//将osQuery添加到BooleanQuery中&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;booleanQuery.add(osQuery,&nbsp;BooleanClause.Occur.MUST);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					}&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n<br />\r\n		<h1>\r\n			<a></a>3.检索结果分页\r\n		</h1>\r\n	</div>\r\n	<h2>\r\n		<a></a>3.1.两种方案\r\n	</h2>\r\n	<div>\r\n		&nbsp; &nbsp; 通过关键字的检索，当lucene返回多条记录的时候，往往一个页面是无法容纳所有检索结果的，这自然而然就该分页了。我这里给出两种方案，这两种方法我都是用过。\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 第一种方法，就是讲检索结果全部封装在一个Collection中，例如List中，将这个结果传到前台，如jsp页面。然后在这个list中进行分页显示；\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 第二种方法，是使用lucene自带的分页工具public TopDocs topDocs(int start,int howMany)。\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 我认为，第一种方法不涉及二次查询，这样的话就避免了在查询上的浪费。但是当检索的结果数据量很大，这样一次性传输这么多数据到客户端，而用户检索后得到的结果往往只会查看第一页的内容，很少去查看第二页、第三页以及后面的内容，所以一次性将全部结果传到前台，这样的浪费是很大的。\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 第二种方法，虽然每次翻页都意味着一次查询，表面上浪费了资源，但是由于lucene的高效，这样的浪费对整个系统的影响是微乎其微的，但是这个方法避免了方法一中的缺陷。\r\n	</div>\r\n	<h2>\r\n		<a></a>3.2.分页实现\r\n	</h2>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					/**&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;对搜索返回的前n条结果进行分页显示&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;keyWord&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查询关键词&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;pageSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每页显示记录数&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;currentPage&nbsp;&nbsp;&nbsp;当前页&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;paginationQuery(String&nbsp;keyWord,int&nbsp;pageSize,int&nbsp;currentPage)&nbsp;throws&nbsp;ParseException,&nbsp;CorruptIndexException,&nbsp;IOException&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String[]&nbsp;fields&nbsp;=&nbsp;{\"title\",\"content\"};&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QueryParser&nbsp;queryParser&nbsp;=&nbsp;new&nbsp;MultiFieldQueryParser(Version.LUCENE_36,fields,analyzer);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query&nbsp;query&nbsp;=&nbsp;queryParser.parse(keyWord);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IndexReader&nbsp;indexReader&nbsp;&nbsp;=&nbsp;IndexReader.open(directory);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IndexSearcher&nbsp;indexSearcher&nbsp;=&nbsp;new&nbsp;IndexSearcher(indexReader);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//TopDocs&nbsp;搜索返回的结果&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TopDocs&nbsp;topDocs&nbsp;=&nbsp;indexSearcher.search(query,&nbsp;100);//只返回前100条记录&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;totalCount&nbsp;=&nbsp;topDocs.totalHits;&nbsp;//&nbsp;搜索结果总数量&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScoreDoc[]&nbsp;scoreDocs&nbsp;=&nbsp;topDocs.scoreDocs;&nbsp;//&nbsp;搜索返回的结果集合&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//查询起始记录位置&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;begin&nbsp;=&nbsp;pageSize&nbsp;*&nbsp;(currentPage&nbsp;-&nbsp;1)&nbsp;;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//查询终止记录位置&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;end&nbsp;=&nbsp;Math.min(begin&nbsp;+&nbsp;pageSize,&nbsp;scoreDocs.length);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进行分页查询&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=begin;i&lt;end;i++)&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;docID&nbsp;=&nbsp;scoreDocs[i].doc;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;indexSearcher.doc(docID);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;id&nbsp;=&nbsp;NumericUtils.prefixCodedToInt(doc.get(\"id\"));&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;title&nbsp;=&nbsp;doc.get(\"title\");&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"id&nbsp;is&nbsp;:&nbsp;\"+id);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"title&nbsp;is&nbsp;:&nbsp;\"+title);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n<br />\r\n		<h1>\r\n			<a></a>4.高亮检索结果\r\n		</h1>\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 针对检索结果的高亮实现方法，在lucene中提供了响应的工具，这里使用lucene-highlighter-3.6.2.jar来实现对检索结果的高亮显示。\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					public&nbsp;void&nbsp;search(String&nbsp;fieldName,&nbsp;String&nbsp;keyword)throws&nbsp;CorruptIndexException,&nbsp;IOException,&nbsp;ParseException&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;searcher&nbsp;=&nbsp;new&nbsp;IndexSearcher(indexPath);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;QueryParser&nbsp;queryParse&nbsp;=&nbsp;new&nbsp;QueryParser(fieldName,&nbsp;analyzer);&nbsp;//&nbsp;构造QueryParser，解析用户输入的检索关键字&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;Query&nbsp;query&nbsp;=&nbsp;queryParse.parse(keyword);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;Hits&nbsp;hits&nbsp;=&nbsp;searcher.search(query);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;hits.length();&nbsp;i++)&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;hits.doc(i);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;text&nbsp;=&nbsp;doc.get(fieldName);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SimpleHTMLFormatter&nbsp;simpleHTMLFormatter&nbsp;=&nbsp;new&nbsp;SimpleHTMLFormatter(\"&lt;font&nbsp;color=\'red\'&gt;\",&nbsp;\"&lt;/font&gt;\");&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Highlighter&nbsp;highlighter&nbsp;=&nbsp;new&nbsp;Highlighter(simpleHTMLFormatter,&nbsp;new&nbsp;QueryScorer(query));&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;highlighter.setTextFragmenter(new&nbsp;SimpleFragmenter(text.length()));&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(text&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TokenStream&nbsp;tokenStream&nbsp;=&nbsp;analyzer.tokenStream(fieldName,new&nbsp;StringReader(text));&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;highLightText&nbsp;=&nbsp;highlighter.getBestFragment(tokenStream,text);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"高亮显示第&nbsp;\"&nbsp;+&nbsp;(i&nbsp;+&nbsp;1)&nbsp;+&nbsp;\"&nbsp;条检索结果如下所示：\");&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(highLightText);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;searcher.close();&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					}&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n上文的一行判断语句很重要：if(text != null)，如果text为空，那么显示结果不但没有被高亮，而且得到的原始结果也会被过滤。可以再代码中加上，如果text==null，则让将原始检索结果赋给text，从而将结果显示出来。\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<h1>\r\n		<a></a>5.检索结果的评分\r\n	</h1>\r\n	<div>\r\n		&nbsp; &nbsp; lucene的评分是有一套自己的机制的，输入某一个关键字，lucene会对命中的记录进行评分，默认情况下，分数越高的结果会排在结果的越前面。如果在创建索引的时候，没有对某个域进行加权，那么默认分数的上限是5分，如果有对域做加权，检索结果的评分可能会出现大于5分的情况。\r\n	</div>\r\n	<div>\r\n		&nbsp; &nbsp; 我们可以使用explain()来看看lucene对检索结果的评分情况：\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[java]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					//评分&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					Explanation&nbsp;explanation&nbsp;=&nbsp;indexSearcher.explain(query,&nbsp;docID);&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					System.out.println(explanation.toString());&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n在后台打印出来的信息如下：\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					[plain]&nbsp;<a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">view plain</a><a href=\"http://blog.csdn.net/huhui_cs/article/details/9615973#\">copy</a> \r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<ol>\r\n				<li>\r\n					2.4342022&nbsp;=&nbsp;(MATCH)&nbsp;weight(name:books&nbsp;in&nbsp;71491),&nbsp;product&nbsp;of:&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.2964393&nbsp;=&nbsp;queryWeight(name:books),&nbsp;product&nbsp;of:&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8.21147&nbsp;=&nbsp;idf(docFreq=109,&nbsp;maxDocs=149037)&nbsp;&nbsp;\r\n				</li>\r\n				<li>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.036100637&nbsp;=&nbsp;queryNorm&nbsp;&nbsp;\r\n				</li>\r\n			</ol>\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n		<div>\r\n			<br />\r\n		</div>\r\n附：用lucene构建的App检索系统的截图\r\n	</div>\r\n	<div>\r\n		<img src=\"http://img.blog.csdn.net/20130729155340296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHVodWlfYmo=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\" /><br />\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n</div>',NULL,NULL,'2014-04-30 16:03:36',0,'Lucene的多域查询、结果中查询、查询结果分页、高亮查询结果和结果评分',0),(39,'admin',15,'<p>\r\n	<span style=\"font-size:14px;\">1. 去房山</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2. 看看书</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3. 写代码</span> \r\n</p>',NULL,'2014-05-01 20:46:30','2014-05-01 06:59:46',0,'又到五一了，可以休息一下',0),(40,'admin',15,'今天五一的第一天，因为电脑死机了，强制关机了，这一关就没起来，只能在家看书了。<img src=\"http://www.eleword.net/template/editor/plugins/emoticons/images/0.gif\" border=\"0\" alt=\"\" />',NULL,NULL,'2014-05-01 20:50:04',0,'五一第一天电脑坏了',0),(41,'admin',1,'<div>\r\n	<span style=\"font-size:14px;\">两步</span><br />\r\n<span style=\"font-size:14px;\"> (1)date 042612492005</span><br />\r\n<span style=\"font-size:14px;\"> (2)hwclock -w</span><br />\r\n<span style=\"font-size:14px;\"> 第一步的意思是设置时间,设置完了可以用date命令查看对不对...注意是月日时分年</span><br />\r\n<span style=\"font-size:14px;\"> 第二步的意思是写入主板的rtc芯片..</span> \r\n</div>\r\n<p>\r\n	<br />\r\n<span style=\"font-size:14px;\"> =======================================</span> \r\n</p>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:14px;\">su -c \'date -s 月/日/年\'</span><br />\r\n<span style=\"font-size:14px;\"> su -c \'date -s 时:分:秒\'</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">=======================================</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">了解Linux的时钟 </span><br />\r\n<span style=\"font-size:14px;\"> 由于Linux时钟和Windows时钟从概念的分类、使用到设置都有很大的不同，所以，搞清楚Linux时钟的工作方式与设置操作，不仅对于Linux初学者有着重大意义，而且对于使用Linux服务器的用户来说尤为重要。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> Linux时钟的分类 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> Windows时钟大家可能十分熟悉了，Linux时钟在概念上类似Windows时钟显示当前系统时间，但在时钟分类和设置上却和Windows大相径庭。和Windows不同的是，Linux将时钟分为系统时钟(System Clock)和硬件(Real Time Clock，简称RTC)时钟两种。系统时间是指当前Linux Kernel中的时钟，而硬件时钟则是主板上由电池供电的那个主板硬件时钟，这个时钟可以在BIOS的“Standard BIOS Feture”项中进行设置。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 既然Linux有两个时钟系统，那么大家所使用的Linux默认使用哪种时钟系统呢？会不回出现两种系统时钟冲突的情况呢？这些疑问和担心不无道理。首先，Linux并没有默认哪个时钟系统。当Linux启动时，硬件时钟会去读取系统时钟的设置，然后系统时钟就会独立于硬件运作。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 从Linux启动过程来看，系统时钟和硬件时钟不会发生冲突，但Linux中的所有命令(包括函数)都是采用的系统时钟设置。不仅如此，系统时钟和硬件时钟还可以采用异步方式，见图1所示，即系统时间和硬件时间可以不同。这样做的好处对于普通用户意义不大，但对于Linux网络管理员却有很大的用处。例如，要将一个很大的网络中(跨越若干时区)的服务器同步，假如位于美国纽约的Linux服务器和北京的Linux服务器，其中一台服务器无须改变硬件时钟而只需临时设置一个系统时间，如要将北京服务器上的时间设置为纽约时间，两台服务器完成文件的同步后，再与原来的时钟同步一下即可。这样系统和硬件时钟就提供了更为灵活的操作。 </span><br />\r\n<br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 设置Linux的时钟 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 在Linux中，用于时钟查看和设置的命令主要有date、hwclock和clock。其中，clock和hwclock用法相近，只不过clock命令除了支持x86硬件体系外，还支持Alpha硬件体系。由于目前绝大多数用户使用x86硬件体系，所以可以视这两个命令为一个命令来学习。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 1.在虚拟终端中使用date命令来查看和设置系统时间</span><br />\r\n<span style=\"font-size:14px;\"> 查看系统时钟的操作：</span><br />\r\n<span style=\"font-size:14px;\"> # date </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 设置系统时钟的操作：</span><br />\r\n<span style=\"font-size:14px;\"> # date 091713272003.30 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 通用的设置格式：</span><br />\r\n<span style=\"font-size:14px;\"> # date 月日时分年.秒 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 2.使用hwclock或clock命令查看和设置硬件时钟</span><br />\r\n<span style=\"font-size:14px;\"> 查看硬件时钟的操作：</span><br />\r\n<span style=\"font-size:14px;\"> # hwclock --show 或</span><br />\r\n<span style=\"font-size:14px;\"> # clock --show</span><br />\r\n<span style=\"font-size:14px;\"> 2003年09月17日 星期三 13时24分11秒 -0.482735 seconds </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 设置硬件时钟的操作：</span><br />\r\n<span style=\"font-size:14px;\"> # hwclock --set --date=\"09/17/2003 13:26:00\" </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 或者</span><br />\r\n<span style=\"font-size:14px;\"> # clock --set --date=\"09/17/2003 13:26:00\" </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 通用的设置格式：hwclock/clock --set --date=“月/日/年 时：分：秒”。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 3.同步系统时钟和硬件时钟 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> Linux系统(笔者使用的是Red Hat 8.0，其它系统没有做过实验)默认重启后，硬件时钟和系统时钟同步。如果不大方便重新启动的话(服务器通常很少重启)，使用clock或hwclock命令来同步系统时钟和硬件时钟。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 硬件时钟与系统时钟同步：</span><br />\r\n<span style=\"font-size:14px;\"> # hwclock --hctosys </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 或者</span><br />\r\n<span style=\"font-size:14px;\"> # clock --hctosys </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 上面命令中，--hctosys表示Hardware Clock to SYStem clock。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 系统时钟和硬件时钟同步：</span><br />\r\n<span style=\"font-size:14px;\"> # hwclock --systohc </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 或者</span><br />\r\n<span style=\"font-size:14px;\"> # clock --systohc </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 使用图形化系统设置工具设置时间 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 对于初学者来，笔者推荐使用图形化的时钟设置工具，如Red Hat 8.0中的日期与时间设置工具，可以在虚拟终端中键“redhat-config-time”命令，或者选择“K选单/系统设置/日期与时间”来启动日期时间设置工具。使用该工具不必考虑系统时间和硬件时间，只需从该对话框中设置日期时间，可同时设置、修改系统时钟和硬件时钟。 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> Internet同步时钟设置 </span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 在Windows XP日期与时间设置中有一项与Internet同步的功能，有了这项功能只要上网便可得到十分准确的时间。Red Hat 8.0也提供了这样的功能，在日期与时间设置工具对话框中的下部，有一个“启用网络时间协议”的选项，将该项选中就可以使用网络时间协议来同步Linux 系统时钟。选中该项后，其下面的服务器下拉列表框就变为可用状态，可从中选择一个时间服务器作为远程时间服务器。然后单击确定按钮，便可连接所设定的时间服务器，并与之同步时间。</span> \r\n	</p>\r\n</div>',NULL,'2014-05-05 07:05:30','2014-05-05 07:05:17',0,'Linux修改系统时间 ',0),(42,'admin',4,'<span style=\"color:#666666;font-family:宋体, Arial;line-height:26px;background-color:#FFFFFF;\">cronExpression配置说明</span>\r\n<table cellspacing=\"8\" style=\"color:#666666;font-family:宋体, Arial;font-size:12px;background-color:#FFFFFF;\">\r\n	<tbody>\r\n		<tr>\r\n			<th align=\"left\">\r\n				字段\r\n			</th>\r\n			<th align=\"left\">\r\n				&nbsp;\r\n			</th>\r\n			<th align=\"left\">\r\n				允许值\r\n			</th>\r\n			<th align=\"left\">\r\n				&nbsp;\r\n			</th>\r\n			<th align=\"left\">\r\n				允许的特殊字符\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>秒</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>0-59</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * /</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>分</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>0-59</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * /</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>小时</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>0-23</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * /</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>日期</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>1-31</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * ? / L W C</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>月份</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>1-12 或者 JAN-DEC</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * /</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>星期</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>1-7 或者 SUN-SAT</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * ? / L C #</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>年（可选）</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>留空, 1970-2099</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>, - * /</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table cellspacing=\"8\" style=\"color:#666666;font-family:宋体, Arial;font-size:12px;background-color:#FFFFFF;\">\r\n	<tbody>\r\n		<tr>\r\n			<th align=\"left\">\r\n				表达式\r\n			</th>\r\n			<th align=\"left\">\r\n				&nbsp;\r\n			</th>\r\n			<th align=\"left\">\r\n				意义\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 0 12 * * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每天中午12点触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 ? * *\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每天上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 * * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每天上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 * * ? *\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每天上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 * * ? 2005\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>2005年的每天上午10:15</span><span>触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 * 14 * * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>在每天下午2点到下午2:59期间的每1分钟触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 0/5 14 * * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>在每天下午2点到下午2:55期间的每5分钟触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 0/5 14,18 * * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 0-5 14 * * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>在每天下午2点到下午2:05期间的每1分钟触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 10,44 14 ? 3 WED\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每年三月的星期三的下午2:10和2:44触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 ? * MON-FRI\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>周一至周五的上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 15 * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每月15日上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 L * ?\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每月最后一日的上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 ? * 6L\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每月的最后一个星期五上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 ? * 6L 2002-2005\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>2002年至2005年的每月的最后一个星期五上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>\"0 15 10 ? * 6#3\"</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>每月的第三个星期五上午10:15触发</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table cellspacing=\"8\" style=\"color:#666666;font-family:宋体, Arial;font-size:12px;background-color:#FFFFFF;\">\r\n	<tbody>\r\n		<tr>\r\n			<th align=\"left\" width=\"20%\">\r\n				特殊字符\r\n			</th>\r\n			<th align=\"left\">\r\n				&nbsp;\r\n			</th>\r\n			<th align=\"left\">\r\n				意义\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>*</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>表示所有值；</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>?</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>表示未说明的值，即不关心它为何值；</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>-</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>表示一个指定的范围；</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>,</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>表示附加一个可能值；</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>/</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>符号前表示开始时间，符号后表示每次递增的值；</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>L(\"last\")</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>(\"last\") \"L\" 用在day-of-month字段意思是 \"这个月最后一天\"；用在 day-of-week字段, 它简单意思是 \"7\" or \"SAT\"。 如果在day-of-week字段里和数字联合使用，它的意思就是 \"这个月的最后一个星期几\" – 例如： \"6L\" means \"这个月的最后一个星期五\". 当我们用“L”时，不指明一个列表值或者范围是很重要的，不然的话，我们会得到一些意想不到的结果。</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>W(\"weekday\")</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>只能用在day-of-month字段。用来描叙最接近指定天的工作日（周一到周五）。例如：在day-of-month字段用“15W”指“最接近这个月第15天的工作日”，即如果这个月第15天是周六，那么触发器将会在这个月第14天即周五触发；如果这个月第15天是周日，那么触发器将会在这个月第16 天即周一触发；如果这个月第15天是周二，那么就在触发器这天触发。注意一点：这个用法只会在当前月计算值，不会越过当前月。“W”字符仅能在day- of-month指明一天，不能是一个范围或列表。也可以用“LW”来指定这个月的最后一个工作日。</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>#</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>只能用在day-of-week字段。用来指定这个月的第几个周几。例：在day-of-week字段用\"6#3\"指这个月第3个周五（6指周五，3指第3个）。如果指定的日期不存在，触发器就不会触发。</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td align=\"left\">\r\n				<span>C</span>\r\n			</td>\r\n			<td align=\"left\">\r\n				&nbsp;&nbsp;\r\n			</td>\r\n			<td align=\"left\">\r\n				<span>指和calendar联系后计算过的值。例：在day-of-month 字段用“5C”指在这个月第5天或之后包括calendar的第一天；在day-of-week字段用“1C”指在这周日或之后包括calendar的第一天。</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<span style=\"color:#666666;font-family:宋体, Arial;line-height:26px;background-color:#FFFFFF;\">在MONTH和Day Of Week字段里对字母大小写不敏感</span>',NULL,NULL,'2014-05-05 07:06:10',0,'cronExpression配置说明 ',0),(43,'admin',15,'<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"font-size:19px;\">互联网大势</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">1</span><span style=\"color:red;\">、《浪潮之巅》：吴军，电子工业出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	讲述历史，揭示规律：从科技工业一百多年的发展，揭示那些站在技术革命的浪尖之上的公司成功的本质原因。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">2</span><span style=\"color:red;\">、《沸腾十五年：中国互联网</span><span style=\"color:red;\">1995-2009</span><span style=\"color:red;\">》：林军，中信出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	覆雨翻云的中国网事；荡气回肠的产业传奇；虚拟世界的真实讲述；万象网络的还原走笔。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	这本关于中国互联网产业历史的书，脉络清晰、生动鲜明地把这样一大批创业者的形象和他们的动人故事呈现在读者眼前，值得一读。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">3</span><span style=\"color:red;\">、《互联网进化论》：刘锋，清华大学出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	用全面、联系的观点看云计算，物联网、移动互联网与传统互联网：一本全方位地介绍互联网的技术要点和商业模式，深入探讨互联网的未来发展趋势的书。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">4</span><span style=\"color:red;\">、《第三次工业革命：新经济模式如何改变世界》：杰里米•里夫金、张体伟、孙豫宁，中信出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	第一次工业革命使19世纪的世界发生了翻天覆地的变化；第二次工业革命为20世纪的人们开创了新世界；第三次工业革命又将如何从根本上改变21世纪人们的生活和工作？\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">5</span><span style=\"color:red;\">、《正在爆发的互联网革命》：西门柳上，机械工业出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	全球网民正亲历SNS带来的巨大变革，只有洞悉先机，才能抓住革命的机遇，30余位互联网大腕、100余家网站和媒体一致推荐，你将在这里找到SNS的答案。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">6</span><span style=\"color:red;\">、《关于投资、商业、互联网的碎片化思考：老二非死不可》：方三文，机械工业出版社，</span><span style=\"color:red;\"> 2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	互联网企业为何老二非死不可？微博对于互联网意味着什么？为什么越管理，股票越烂？电子商务只能是开网店吗？互联网为何意味着垄断？\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">7</span><span style=\"color:red;\">、《新物种起源：互联网的思想基石》：姜奇平，商务印书馆有限公司，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	两位中国互联网思想始终不渝的追寻者和思考者，试图在穿越文明史的对话中，重新审视互联网这一文明创建的伟大力量，探究源于、但不同于工业革命思想基石的达尔文主义，在新文明构建中，发生了哪些根本性的变化。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">一、用户思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">8</span><span style=\"color:red;\">、《需求：缔造伟大商业传奇的根本力量》：亚德里安•斯莱沃斯基、卡尔•韦伯、龙志勇、</span><span style=\"color:red;\">魏薇，浙江人民出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	破解全球最受顾客与雇员欢迎的企业运营奥秘，你就是下一个需求创造大师\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">9</span><span style=\"color:red;\">、《定位：有史以来对美国营销影响最大的观念》：阿尔•里斯、杰克•特劳特、谢伟山、苑爱冬，机械工业出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	阐述“定位”观念的产生，剖析“满足需求”无法赢得顾客的原因，给出如何进入顾客心智以赢得选择的定位之道。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	美国史上百本最佳商业经典第一名，美国CEO最怕被竞争对手读到的商界奇书，提出被称为“有史以来对美国营销影响最大的观念”——“定位”的书。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">10</span><span style=\"color:red;\">、《认知盈余：自由时间的力量》，克莱•舍基，胡泳，中国人民大学出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	看自由时间如何成就“有闲”世界，看克莱·舍基如何引领“有闲”经济与“有闲”商业的未来：“互联网革命最伟大的思考者”克莱•舍基继《未来是湿的》之后最新力作，一本在国内尚未正式出版，就得到包括腾讯CEO马化腾在内的社会各界关注的书。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">11</span><span style=\"color:red;\">、《长尾理论》：克里斯•安德森，蒋旭峰，冯斌，中信出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	所有的商务人士都应该仔细研读的“杰出而又及时的著作”：长尾理论是众多企业成功的不二法门，它将改变企业生产与营销的思维，带动新一波商业势力的消长。唯有善于并充分利用长尾理论的人，才能在未来呼风唤雨。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">12</span><span style=\"color:red;\">、《用户体验要素：以用户为中心的产品设计》：加瑞特、范晓燕，机械工业出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	AJAX之父的经典之作：带你系统、深入浅出地理解设计+技术+商业融合的发展趋势。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">13</span><span style=\"color:red;\">、《商业秀》：斯科特·麦克凯恩，中信出版社，</span><span style=\"color:red;\">2003</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	斯科特・麦克凯恩根据现今商业的发展特征，总结出一个真理：所有的行业都是娱乐业。精明的业主和管理者意识到，留住最好的客户和最棒的人才，关键就在于创造情感联系，抓住他们的注意力。要怎样做呢？读读《商业秀》就能找到答案。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">二、简约思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">14</span><span style=\"color:red;\">、《聚焦：决定你企业的未来》：艾·里斯，山西人民出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	只要存在竞争，就没有任何企业能够100%地赢得某个市场，所以必须聚焦。定位之父艾•里斯教你企业如何实现聚焦。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">15</span><span style=\"color:red;\">、《轻公司：互联网变革中国制造》：李黎、杜晨，中信出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	解读了在互联网和IT技术越来越充裕的环境里，传统的商业法则是如何被打破，而新的商业法则如何建立起来的过程。大量生动翔实的采访，为我们构筑了互联网和IT技术影响下的未来商业趋势。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">16</span><span style=\"color:red;\">、《专注力：化繁为简的惊人力量》：于尔根•沃尔夫、朱曼，机械工业出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	写给“被催一族”最简明的自我管理书！即刻将注意力专注于你最重要的目标！活出心底真正渴望的人生！\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">17</span><span style=\"color:red;\">、《注意力曲线：打败分心与焦虑》：露西·乔·帕拉迪诺、苗娜，中国人民大学出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	在被信息淹没的数字时代中，怎样才能恰当地控制自己的注意力，提高工作效率？怎样才能使自己摆脱过度疲劳的泥潭，享受工作和生活的平衡？照着作者给出的方法，你会找到更好的状态，享受工作和生活的乐趣。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">18</span><span style=\"color:red;\">、《简单的力量：穿越复杂正确做事的管理指南》：杰克·特劳特、史蒂夫·里夫金、谢伟山、苑爱冬，机械工业出版社，</span><span style=\"color:red;\">2010</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	一本为那些想尽快了解定位和营销原则的商业人士量身打造，供自学的《定位》实践书。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">19</span><span style=\"color:red;\">、《重来》：弗里德，汉森，李瑜偲，中信出版社，</span><span style=\"color:red;\">2010</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	不同于大多数企业管理书籍，这本书呈现的是一种更好、更简单的经商成功之道。读完这本书，你就会明白为什么计划实际上百害而无一益，为什么你不需要外界投资人，为什么将竞争视而不见反倒会发展得更好。事实是你所需要的比你想象的少得多。你不必成为工作狂，你不必大量招兵买马，你不必把时间浪费在案头工作和会议上，你甚至不必拥有一间办公室。所有这些都仅仅是借口！\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">三、极致思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">20</span><span style=\"color:red;\">、《互联网产品之美》：朱军华、柳亮</span><span style=\"color:red;\">机械工业出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	一个科学的产品经理成长体系：让你身临其境体验产品人的美妙之旅，快速找到产品创意的“杀手锏”，磨砺你的眼光，帮你挖掘产品的价值之美、设计之美、运营之美、营销之美。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">21</span><span style=\"color:red;\">、《</span><span style=\"color:red;\">IDEO</span><span style=\"color:red;\">，设计改变一切</span><span style=\"color:red;\">:</span><span style=\"color:red;\">设计思维如何变革组织和激发创新》：蒂姆•布朗，侯婷，万卷出版公司，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	享誉国际的创新设计公司IDEO总裁蒂姆·布朗最新力作，带领我们认识“设计思考”。跟随这本书，你会发现，设计思考不仅改变你我的生活，更可以改造组织、激发创新。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">22</span><span style=\"color:red;\">、《启示录</span><span style=\"color:red;\">:</span><span style=\"color:red;\">打造用户喜爱的产品》：</span><span style=\"color:red;\">Marty Cagan</span><span style=\"color:red;\">、七印部落，华中科技大学出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	从人员、流程、产品三个角度介绍现代软件（互联网）产品管理的实践经验和理念。eBay前产品副总裁 Marty Cagan 厚积薄发之作。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">23</span><span style=\"color:red;\">、《苹果的产品设计之道：创建优秀产品、服务和用户体验的七个原则》：埃德森，黄喆，机械工业出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	通过大量鲜为人知的关键事件和案例，深刻解读苹果公司产品设计的真谛与精髓，揭示苹果公司创造伟大产品所遵循的7大设计原则。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">四、迭代思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">24</span><span style=\"color:red;\">、《精益创业》</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	“快速地失败、廉价地失败”，而不要“昂贵地失败”。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	“精益创业”的方式在过去，它缔造了Facebook、Twitter等强大的崭新的科技公司；未来，它将不断影响、渗透、改变着创业者，促使他们缔造的企业更加人性化、更加智能化、更加有爱、更加成功——李开复。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">25</span><span style=\"color:red;\">、《精益创业实战》：</span><span style=\"color:red;\">Ash Maurya</span><span style=\"color:red;\">，人民邮电出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	精益思想创始人埃里克·莱斯为本书作序，各路创业高手联袂推荐。这本书讲解精益创业实战法，融合了精益创业法、客户开发、商业模式画布和敏捷/持续集成的精华。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">26</span><span style=\"color:red;\">、《丰田生产方式》：大野耐一，中国铁道出版社，</span><span style=\"color:red;\">2006</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	丰田汽车公司前副社长大野耐一最经典的作品，系统揭开了丰田公司卓越的秘密，涵盖其及时化（JIT）、自动化、看板方式、标准作业、精益化等生产管理的各种理念。它堪称是丰田核心竞争力的最权威作品，也是全球生产管理的最为重要的标杆。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">27</span><span style=\"color:red;\">、《精益思想》：詹姆斯</span><span style=\"color:red;\">P</span><span style=\"color:red;\">·沃麦克、丹尼尔</span><span style=\"color:red;\">T</span><span style=\"color:red;\">·琼，中国机械出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	1996年秋季首次出版，历经十几年，畅销十多个国家，销量达几十万册。准备跨入精益之门和进一步学习、实施精益的人最好的指南。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">五、流量思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">28</span><span style=\"color:red;\">、《免费：商业的未来》：克里斯·安德森，中信出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	《长尾理论》作者又一力作。新型的“免费”并不是一种左口袋出、右口袋进的营销策略，而是一种把货物和服务的成本压低到零的新型卓越能力。在上世纪“免费”是一种强有力的推销手段，而在21世纪它已经成为一种全新的经济模式，一种改变旧有发展模式而实现脱胎换骨的“动力机器”。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">29</span><span style=\"color:red;\">、《社交红利》：徐志斌，北京联合出版公司，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	如何从微信微博QQ空间等社交网络带走海量用户、流量与收入，本书一一解答。腾讯一线资深员工经验总结，腾讯内部社交网络教材；国内第一本，也是唯一一本系统讲透社交网络内在逻辑与玩法的干货集。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">六、社会化思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">30</span><span style=\"color:red;\">、《未来是湿的》：舍基、胡泳、沈满琳，中国人民大学出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	21世纪最有价值的未来学读本，获选《商业周刊》最佳商业书籍。不论世界是平的还是弯的，未来一定是湿的！微软、诺基亚、宝洁、BBC、乐高、美国海军最推崇的咨询顾问，“互联网革命最伟大的思考者”为你直指商业模式变革和社会发展的宏大趋势，彻底改变你看待未来的角度和视野！\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">31</span><span style=\"color:red;\">、《引爆点：如何制造流行》：马尔科姆·格拉德威尔，中信出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	《福布斯》、《财富》、《纽约时报》推荐的商业人士必读图书。它被《福布斯》评为最有影响力的20本商业图书之一，连续10个月雄踞《纽约时报》畅销书排行榜第一名。一本谈论怎样让产品发起流行潮的专门性著作。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">32</span><span style=\"color:red;\">、《世界是平的》：托马斯·弗里德曼，湖南科技出版社，</span><span style=\"color:red;\">2008</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	比尔·盖茨推荐了多次的一本书，他说：这是所有决策者和企业员工的一本必读书。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	书中，托马斯·弗里德曼描述了当代世界发生的重大变化。科技和通信领域如闪电般迅速的进步，使全世界的人们可以空前地彼此接近——在印度和中国创造爆炸式增长的财富；挑战我们中的一些人，比他们更快占领地盘。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">33</span><span style=\"color:red;\">、《众包</span><span style=\"color:red;\">2</span><span style=\"color:red;\">：群体创造的力量》，拉马斯瓦米、高哈特、王虎，中信出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	企业到底该如何借助群体的力量？“众包”之父杰夫·豪数年的考察结果，完整地呈现了众包在经济、文化、商业和政治层面的重大意义。同时将告诉你，善于运用众包模式的企业，才最有可能获得成功。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">34</span><span style=\"color:red;\">、《创客：新工业革命》：克里斯•安德森、萧潇，中信出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	如果说《第三次工业革命》一书的核心是互联网与新能源融合在一起所引发的工业变革。那么《创客：新工业革命》一书的核心则是互联网和制造业融合在一起而引发的一场制造业革命。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">35</span><span style=\"color:red;\">、《互联网营销的本质•点亮社群》：查克·布莱默，曾虎翼，东方出版社，</span><span style=\"color:red;\">2010</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	如何将你的公司从一个单纯卖产品和服务的公司转变成一个真正拥有品牌追随者的公司？本书将向你展示今天的数字连接力是如何加速我们自然进化的趋势、影响你和你的品牌的。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">七、大数据思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">37</span><span style=\"color:red;\">、《大数据时代的历史机遇》：赵国栋、易欢欢、糜万军、鄂维南，清华大学出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	最接地气的大数据时代产业发展理论与应用案例，行业分析师携手中科院院士诚意之作。一本贯通技术理解、产业认知和资本市场估值的大作，让大数据不再停留在理念和技术的层次，而是深入到商业价值与模式、产业格局与生态、数据科学与教育层面。有了此书，大数据将提前落地5年。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">38</span><span style=\"color:red;\">、《大数据时代》：迈尔·</span><span style=\"color:red;\">舍恩伯格、库克耶，浙江人民出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	迄今为止全世界最好的一本大数据专著：国外大数据系统研究的先河之作，颠覆千百年来人类的思维惯例，挑战人类的认知和与世界交流的方式。作者在本书中前瞻性地指出，大数据时代最大的转变就是，放弃对因果关系的渴求，而取而代之关注相关关系。也就是说只要知道“是什么”，而不需要知道“为什么”。。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">39</span><span style=\"color:red;\">、《爆发：大数据时代预见未来的新思维》：艾伯特•拉斯洛•巴拉巴西、马慧，中国人民大学出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	一本超越《黑天鹅》的惊世之作。如果说塔勒布认为人类行为是随机的，都是小概率事件，是不可以预测的；那么全球复杂网络权威巴拉巴西则认为，人类行为93%是可以预测的。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">八、平台思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">40</span><span style=\"color:red;\">、《失控——全人类的最终命运和结局》：凯文·</span><span style=\"color:red;\">凯利，新星出版社，</span><span style=\"color:red;\">2011</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	这是《黑客帝国》主要演员的必读物之一，这本关于机器、系统、生物和社会的“大部头”，揭示了社会进化、特别是互联网发展的“先知预言”，正在兴起的“云计算”、“物联网”等都可以在这本写于20年前的书中找到相关的影子。从这本书里，人们可以窥探到SNS的今天和未来。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">41</span><span style=\"color:red;\">、《平台战略：正在席卷全球的商业模式革命》：陈威如、余卓轩，中信出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	尽管一些互联网大佬言必称平台，但平台到底是什么？平台怎么生长起来的？如何才能打造一个富有生命力的平台？本书立足于本土，以中国本土的互联网企业作为案例研究分析的对象，为你一一道来。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">42</span><span style=\"color:red;\">、《管理的未来》：布林，陈劲，中信出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	《商业周刊》“年度10部最佳创新著作”。21世纪，当颠覆性技术、可畏的竞争、分散的市场、全能的顾客、挑剔的股东都对管理提出新的挑战之时，你的企业是否还在践行什么样的管理？“核心竞争力”概念首创者、曾一度改写现代商业进程的管理大师加里·哈默又一次站到商业世界的前沿，向我们道出振聋发聩的事实：传统管理已经过时，21世纪需要人人自发地创新。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">43</span><span style=\"color:red;\">、《管理未来》：德鲁克，李亚，机械工业出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	全球管理者必读的经典之作！深刻影响全球商界、政界高层人士的著作。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	彼得.德鲁克论述了管理的新范式如何改变和如何继续改变我们对管理实践和管理理论的基本认识。书中不乏远见卓识和超前思维，它集丰富的知识、广泛的实践经验、深邃的洞察力、精辟的分析和拨云见雾般的常识于一身，这些都是德鲁克著作的精髓和“管理学的里程碑”。——《哈佛商业评论》\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">44</span><span style=\"color:red;\">、《专业主义》：大前研一，裴立杰，中信出版社，</span><span style=\"color:red;\">2010</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	书中，“日本战略之父”大前研一为我们清晰地阐述了国际化专业人才必备的能力要求，对于现代职场人士的个人职业修炼有很强的指导意义。大前研一指出，专业不等于职业，专业知识不等于专家素质，素质培养细微的差别，便是企业及个人在21世纪成败的关键。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">45</span><span style=\"color:red;\">、《阿米巴经营》：稻盛和夫，中国大百科全书出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	日本经营大师稻盛和夫在书中全面梳理了自己的企业经营精髓，包括被誉为“京瓷经营成功的两大支柱之一”的阿米巴经营的理念及管理手法。日本已有超过300家的企业在京瓷关联公司的指导下引进了阿米巴经营模式，业绩得以大幅提升。。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">46</span><span style=\"color:red;\">、《人人时代：无组织的组织力量》：克莱•舍基，胡泳，沈满琳，中国人民大学出版社，</span><span style=\"color:red;\">2012</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	21世纪最有价值的未来学读本，《商业周刊》最佳商业书籍。“互联网革命最伟大的思考者”克莱·舍基为你直指商业模式变革和社会发展的宏大趋势，彻底改变你看待未来的角度和视野。在《人人时代》中，克莱·舍基作为一个新文化的最敏锐的观察者，对人人时代的到来给予了明晰而富有穿透力的解析，并思考了我们是谁，我们可以做什么。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<span style=\"color:#002060;\"><strong><span style=\"font-size:19px;\">九、跨界思维</span></strong></span> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">47</span><span style=\"color:red;\">、《创新者的窘境》：克莱顿•克里斯坦森，中信出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	被《福布斯》评为20世纪最具影响的20本商业图书之一，“颠覆大师”克莱顿•克里斯坦森经典力作。一家成功的公司，如何保证它的产品不会被新的技术挤出市场？如何成功利用创新取得优势？克里斯坦森根据大量企业的成败经验，提出将破坏性创新进行资本化运作的一系列规则，助你预知即将来临的变化，在险象环生的商业竞争中实现基业长青。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">48</span><span style=\"color:red;\">、《创新与企业家精神》：德鲁克，机械工业出版社，</span><span style=\"color:red;\">2009</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	启蒙中国现代管理第一人，探讨企业家精神与创新实践的最佳经典著作。德鲁克在书中，首次将实践创新与企业家精神视为所有企业和机构有组织、有目的、系统化的工作，并与我们共同探讨这些问题的答案。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">49</span><span style=\"color:red;\">、《移动浪潮：移动智能如何改变世界》：迈克尔·塞勒，中信出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	在《移动浪潮：移动智能如何改变世界》中，迈克尔·塞勒以一位历史学家的深刻，一位技术专家的精准，以及一位首席执行官的务实，展现了一个未来移动世界的全景画面。不论你是普通个人，还是商业领袖、公众人物，《移动浪潮》都能为你提供指引，帮助你移动智能浪潮来临之时如何引领新的世界。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<strong><span style=\"color:red;\">50</span><span style=\"color:red;\">、《颠覆性创新：如何改变公司，撼动行业，挑战自我？》：威廉•泰勒、南溪，中华工商联合出版社，</span><span style=\"color:red;\">2013</span><span style=\"color:red;\">年</span></strong> \r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	《颠覆性创新：如何改变公司，撼动行业，挑战自我》是一本汇聚了各种变革方法的宣言，也是指导管理者成功实现变革的指导手册。在如今这个竞争激烈的时代，企业现状不容乐观。当所有人都用同一种方法寻求成功时，你要怎样杀出重围，进行全新的突破？本书将回答各领域领导者面临的改革创新问题。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	互联网思维的企业\r\n</p>\r\n<p style=\"background-color:#FFFFFF;text-indent:28px;font-family:宋体;color:#3E3E3E;font-size:16px;\">\r\n	<br />\r\n</p>',NULL,'2014-05-06 09:32:12','2014-05-05 10:03:54',0,'深度理解互联网思维，不可不读的50本书（记录下，后面读）',0),(44,'admin',4,'<h1 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;color:#FF0000;font-size:18px;\">问题</span>\r\n</h1>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	项目要求struts2和servlet能够共存，就是struts的请求发给struts处理，servlet的请求发给servlet处理。目前web.xml文件应该是类似于如下的配置：&nbsp;\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre><span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/*<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	在请求应用时，struts2将会截获所有请求，对于servlet请求将不能够正常响应；原因是struts2把servlet当成action了，因为servlet和action都是没有后缀的。\r\n</p>\r\n<h1 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;color:#FF0000;font-size:18px;\">解决（四种方式）</span>\r\n</h1>\r\n<h2 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;font-size:16px;\">1. 修改servlet的相关配置，统一在servlet后面加上“.servlet”</span>\r\n</h2>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	1). 修改web.xml配置文件形如：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre>    <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>jqueryAjaxServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>com.clzhang.sample.struts2.servlet.jQueryAjaxServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>jqueryAjaxServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/servlet/jqueryAjax.servlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	2).修改调用servlet的地方，形如：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre>    &lt;%<span style=\"line-height:1.8;color:#000000;\"> String path </span>=<span style=\"line-height:1.8;color:#000000;\"> request.getContextPath(); </span>%&gt;<span style=\"line-height:1.8;color:#000000;\"> ......\r\n    \r\n    $.ajax({   \r\n    url:</span>\'&lt;%=path%&gt;/servlet/jqueryAjax.servlet\'<span style=\"line-height:1.8;color:#000000;\">,   \r\n    ......</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	这样就可以正常处理servlet的请求了。此种情况适合于小范围使用servlet的情况。\r\n</p>\r\n<h2 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;font-size:16px;\">2. 修改拦截页面配置，就是将struts的相关拦截配置一下</span>\r\n</h2>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	修改web.xml文件如下内容：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre>    <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>*.action<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>*.do<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>*.jsp<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/user/*<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	这样也同样可以正常处理servlet的请求。此种情况可能随着项目的扩大，而需要再次修改此配置文件。\r\n</p>\r\n<h2 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;font-size:16px;\">3. 修改struts.xml文件中的后缀映射</span>\r\n</h2>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n<pre><span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">constant </span><span style=\"line-height:1.8;color:#FF0000;\">name</span><span style=\"line-height:1.8;color:#0000FF;\">=\"struts.action.extension\"</span><span style=\"line-height:1.8;color:#FF0000;\"> value</span><span style=\"line-height:1.8;color:#0000FF;\">=\"action\"</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;&lt;/</span><span style=\"line-height:1.8;color:#800000;\">constant</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span></pre>\r\n</div>\r\n<h2 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;font-size:16px;\">4. 自定义Filter实现过滤</span>\r\n</h2>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	1).创建实现类，代码参考如下：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre><span style=\"line-height:1.8;color:#0000FF;\">package</span><span style=\"line-height:1.8;color:#000000;\"> com.clzhang.sample.struts2; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> java.io.IOException; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> java.util.ArrayList; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> java.util.Arrays; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.Filter; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.FilterChain; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.FilterConfig; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.RequestDispatcher; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.ServletException; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.ServletRequest; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.ServletResponse; </span><span style=\"line-height:1.8;color:#0000FF;\">import</span><span style=\"line-height:1.8;color:#000000;\"> javax.servlet.http.HttpServletRequest; </span><span style=\"line-height:1.8;color:#008000;\">/**</span><span style=\"line-height:1.8;color:#008000;\"> * 这是一个过滤servlet的filter；就是拦截servlet的处理请求，自行转向处理，而不是由struts处理。\r\n * 有二种过滤方式，一种是判断uri中是否包含“/servlet/”；\r\n * 另一种是所有servlet在初始化参数中指定。\r\n * 需要在web.xml中配置：\r\n    &lt;filter&gt;\r\n        &lt;filter-name&gt;redisp&lt;/filter-name&gt;\r\n        &lt;filter-class&gt;com.clzhang.sample.struts2.FilterServlet&lt;/filter-class&gt;\r\n        &lt;!--如果使用第二种方式过滤，则需要下面的代码\r\n        &lt;init-param&gt;\r\n            &lt;param-name&gt;includeServlets&lt;/param-name&gt;\r\n            &lt;param-value&gt;jqueryAjax,jsonView&lt;/param-value&gt;\r\n        &lt;/init-param&gt;\r\n        --&gt;\r\n    &lt;/filter&gt;\r\n    \r\n    &lt;filter-mapping&gt;\r\n        &lt;filter-name&gt;redisp&lt;/filter-name&gt;\r\n        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\r\n    &lt;/filter-mapping&gt;\r\n    并且此过滤器必须在struts2的过滤器上面。\r\n * </span><span style=\"line-height:1.8;color:#808080;\">@author</span><span style=\"line-height:1.8;color:#008000;\"> Administrator\r\n * </span><span style=\"line-height:1.8;color:#008000;\">*/</span> <span style=\"line-height:1.8;color:#0000FF;\">public</span> <span style=\"line-height:1.8;color:#0000FF;\">class</span> FilterServlet <span style=\"line-height:1.8;color:#0000FF;\">implements</span><span style=\"line-height:1.8;color:#000000;\"> Filter { </span><span style=\"line-height:1.8;color:#0000FF;\">public</span> <span style=\"line-height:1.8;color:#0000FF;\">void</span><span style=\"line-height:1.8;color:#000000;\"> destroy() {\r\n    } </span><span style=\"line-height:1.8;color:#0000FF;\">public</span> <span style=\"line-height:1.8;color:#0000FF;\">void</span><span style=\"line-height:1.8;color:#000000;\"> doFilter(ServletRequest req, ServletResponse resp,\r\n            FilterChain chain) </span><span style=\"line-height:1.8;color:#0000FF;\">throws</span><span style=\"line-height:1.8;color:#000000;\"> IOException, ServletException {\r\n        HttpServletRequest request </span>=<span style=\"line-height:1.8;color:#000000;\"> (HttpServletRequest) req; </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> 第一种方式（二选 一）</span> String target =<span style=\"line-height:1.8;color:#000000;\"> request.getRequestURI();\r\n        target </span>= target.lastIndexOf(\"?\") &gt; 0 ?<span style=\"line-height:1.8;color:#000000;\"> target.substring(\r\n                target.lastIndexOf(</span>\"/\") + 1<span style=\"line-height:1.8;color:#000000;\">,\r\n                target.lastIndexOf(</span>\"?\") - target.lastIndexOf(\"/\"<span style=\"line-height:1.8;color:#000000;\">)) : target\r\n                .substring(target.lastIndexOf(</span>\"/\") + 1<span style=\"line-height:1.8;color:#000000;\">); </span><span style=\"line-height:1.8;color:#0000FF;\">if</span> (request.getRequestURI().indexOf(\"/servlet/\") &gt; 0<span style=\"line-height:1.8;color:#000000;\">) { </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> request.getRequestURI()格式应该形如：/st/servlet/jqueryAjax， </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> 其中st是项目名，servlet是所有servlet都增加的前缀，用于能够判断出是servlet。 </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> if只判断请求uri是否包含/servlet/，如果包含则处理；</span> RequestDispatcher rdsp =<span style=\"line-height:1.8;color:#000000;\"> request.getRequestDispatcher(target);\r\n            rdsp.forward(req, resp);\r\n        } </span><span style=\"line-height:1.8;color:#0000FF;\">else</span><span style=\"line-height:1.8;color:#000000;\"> {\r\n            chain.doFilter(req, resp);\r\n        } </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> 第二种方式 （二选 一）</span> <span style=\"line-height:1.8;color:#008000;\">/**</span><span style=\"line-height:1.8;color:#008000;\"> if (this.includes.contains(target)) {\r\n            // target取出的值则直接是jqueryAjax，在web.xml中配置即可。\r\n            // if判断请求uri最后的那部分是否包含在配置文件中，如果包含，则处理\r\n            RequestDispatcher rdsp = request.getRequestDispatcher(target);\r\n            rdsp.forward(req, resp);\r\n        } else {\r\n            chain.doFilter(req, resp);\r\n        } </span><span style=\"line-height:1.8;color:#008000;\">*/</span><span style=\"line-height:1.8;color:#000000;\"> } </span><span style=\"line-height:1.8;color:#0000FF;\">private</span> ArrayList&lt;String&gt; includes = <span style=\"line-height:1.8;color:#0000FF;\">new</span> ArrayList&lt;String&gt;<span style=\"line-height:1.8;color:#000000;\">(); </span><span style=\"line-height:1.8;color:#0000FF;\">public</span> <span style=\"line-height:1.8;color:#0000FF;\">void</span> init(FilterConfig config) <span style=\"line-height:1.8;color:#0000FF;\">throws</span><span style=\"line-height:1.8;color:#000000;\"> ServletException { </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> 如果使用第二种方式过滤，则需要以下代码 </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> this.includes.addAll(Arrays.asList(config.getInitParameter( </span><span style=\"line-height:1.8;color:#008000;\">//</span><span style=\"line-height:1.8;color:#008000;\"> \"includeServlets\").split(\",\")));</span> <span style=\"line-height:1.8;color:#000000;\"> }\r\n}</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	2).修改web.xml，类似如下格式：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre><span style=\"line-height:1.8;color:#0000FF;\">&lt;?</span><span style=\"line-height:1.8;color:#FF00FF;\">xml version=\"1.0\" encoding=\"UTF-8\"</span><span style=\"line-height:1.8;color:#0000FF;\">?&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">web-app </span><span style=\"line-height:1.8;color:#FF0000;\">version</span><span style=\"line-height:1.8;color:#0000FF;\">=\"2.5\"</span><span style=\"line-height:1.8;color:#FF0000;\"> xmlns</span><span style=\"line-height:1.8;color:#0000FF;\">=\"http://java.sun.com/xml/ns/javaee\"</span><span style=\"line-height:1.8;color:#FF0000;\"> xmlns:xsi</span><span style=\"line-height:1.8;color:#0000FF;\">=\"http://www.w3.org/2001/XMLSchema-instance\"</span><span style=\"line-height:1.8;color:#FF0000;\"> xsi:schemaLocation</span><span style=\"line-height:1.8;color:#0000FF;\">=\"http://java.sun.com/xml/ns/javaee \r\n    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>redisp<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>com.clzhang.sample.struts2.FilterServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#008000;\">&lt;!--</span><span style=\"line-height:1.8;color:#008000;\">如何使用第二种方式过滤，则需要下面的代码\r\n        &lt;init-param&gt;\r\n            &lt;param-name&gt;includeServlets&lt;/param-name&gt;\r\n            &lt;param-value&gt;jqueryAjax,jsonView&lt;/param-value&gt;\r\n        &lt;/init-param&gt; </span><span style=\"line-height:1.8;color:#008000;\">--&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>redisp<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/*<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>struts2<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/*<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">filter-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>jqueryAjaxServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>com.clzhang.sample.struts2.servlet.jQueryAjaxServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>jqueryAjaxServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/servlet/jqueryAjax<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>jsonViewServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>com.clzhang.sample.struts2.servlet.JsonViewServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-class</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>jsonViewServlet<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-name</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>/servlet/jsonView<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">url-pattern</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">servlet-mapping</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">welcome-file-list</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">welcome-file</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>index.jsp<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">welcome-file</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;</span><span style=\"line-height:1.8;color:#800000;\">welcome-file</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span>index.html<span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">welcome-file</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">welcome-file-list</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span> <span style=\"line-height:1.8;color:#0000FF;\">&lt;/</span><span style=\"line-height:1.8;color:#800000;\">web-app</span><span style=\"line-height:1.8;color:#0000FF;\">&gt;</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	注意<span style=\"line-height:1.8;color:#0000FF;\">，&lt;filter-name&gt;redisp&lt;/filter-name&gt;</span>必须放置于<span style=\"line-height:1.8;color:#0000FF;\">&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span>之前，这样才能够保证它们能够按照正常的顺序处理，否则会出错。\r\n</p>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	3). 而在需要引用servlet的地方，正常引用即可，如在JSP页面中调用：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"margin:5px 0px;padding:5px;background-color:#F5F5F5;border:1px solid #CCCCCC;color:#333333;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<pre>    <span style=\"line-height:1.8;background-color:#FFFF00;color:#000000;\">&lt;%</span> <span style=\"line-height:1.8;color:#0000FF;\">String</span><span style=\"line-height:1.8;color:#000000;\"> path </span><span style=\"line-height:1.8;color:#000000;\">=</span><span style=\"line-height:1.8;color:#000000;\"> request.getContextPath(); </span><span style=\"line-height:1.8;background-color:#FFFF00;color:#000000;\">%&gt;</span><span style=\"line-height:1.8;color:#000000;\"> ......\r\n    \r\n    $.ajax({   \r\n    url:\'</span><span style=\"line-height:1.8;background-color:#FFFF00;color:#000000;\">&lt;%</span><span style=\"line-height:1.8;color:#000000;\">=</span><span style=\"line-height:1.8;color:#000000;\">path</span><span style=\"line-height:1.8;background-color:#FFFF00;color:#000000;\">%&gt;</span><span style=\"line-height:1.8;color:#000000;\">/servlet/jqueryAjax\',   \r\n    ......</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.8;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<h2 style=\"font-family:verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"line-height:1.8;font-size:16px;\">本文参考：</span>\r\n</h2>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<a href=\"http://www.blogjava.net/xcp/archive/2012/08/05/384824.html\">http://www.blogjava.net/xcp/archive/2012/08/05/384824.html</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<a href=\"http://zhyx5017192.blog.163.com/blog/static/309251282012111985237499/\">http://zhyx5017192.blog.163.com/blog/static/309251282012111985237499/</a>\r\n</p>',NULL,NULL,'2014-05-07 11:10:57',0,'Struts2 自带的filter与Servlet同时使用',0),(45,'admin',17,'<p>\r\n	<span style=\"font-size:14px;\">（感谢网友&nbsp;</span><a href=\"http://weibo.com/tbmujian\"><span style=\"font-size:14px;\">@Hesey小纯纯</span></a><span style=\"font-size:14px;\">&nbsp;投稿&nbsp;&nbsp;</span><a href=\"http://blog.hesey.net/\"><span style=\"font-size:14px;\">博客</span></a><span style=\"font-size:14px;\">| </span><a href=\"http://blog.hesey.net/2014/05/gc-oriented-java-programming.html\"><span style=\"font-size:14px;\">原文链接</span></a><span style=\"font-size:14px;\">）</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Java程序员在编码过程中通常不需要考虑内存问题，JVM经过高度优化的GC机制大部分情况下都能够很好地处理堆(Heap)的清理问题。以至于许多Java程序员认为，我只需要关心何时创建对象，而回收对象，就交给GC来做吧！甚至有人说，如果在编程过程中频繁考虑内存问题，是一种退化，这些事情应该交给编译器，交给虚拟机来解决。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这话其实也没有太大问题，的确，大部分场景下关心内存、GC的问题，显得有点“杞人忧天”了，高老爷说过：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">过早优化是万恶之源。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但另一方面，什么才是“过早优化”？</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">If we could do things right for the first time, why not?</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">事实上JVM的内存模型&nbsp;(</span><a href=\"http://www.cs.umd.edu/~pugh/java/memoryModel/\"><span style=\"font-size:14px;\">JMM</span></a><span style=\"font-size:14px;\">)理应是Java程序员的基础知识，处理过几次JVM线上内存问题之后就会很明显感受到，很多系统问题，都是内存问题。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">对JVM内存结构感兴趣的同学可以看下</span><a href=\"http://blog.hesey.net/2011/04/introduction-to-java-virtual-machine.html\"><span style=\"font-size:14px;\">浅析Java虚拟机结构与机制</span></a><span style=\"font-size:14px;\">这篇文章，本文就不再赘述了，本文也并不关注具体的GC算法，相关的文章汗牛充栋，随时可查。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">另外，不要指望GC优化的这些技巧，可以对应用性能有成倍的提高，特别是对I/O密集型的应用，或是实际落在YoungGC上的优化，可能效果只是帮你减少那么一点YoungGC的频率。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但我认为，优秀程序员的价值，不在于其所掌握的几招屠龙之术，而是在细节中见真著&nbsp;，就像前面说的，如果我们可以一次把事情做对，并且做好，在允许的范围内尽可能追求卓越，为什么不去做呢？</span>\r\n</p>\r\n<h4>\r\n	<span style=\"font-size:14px;\">一、GC分代的基本假设</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">大部分GC算法，都将堆内存做分代(Generation)处理，但是为什么要分代呢，又为什么不叫内存分区、分段，而要用面向时间、年龄的“代”来表示不同的内存区域？</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">GC分代的基本假设&nbsp;是：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">绝大部分对象的生命周期都非常短暂，存活时间短。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">而这些短命的对象，恰恰是GC算法需要首先关注的。所以在大部分的GC中，YoungGC（也称作MinorGC）占了绝大部分，对于负载不高的应用，可能跑了数个月都不会发生FullGC。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">基于这个前提，在编码过程中，我们应该尽可能地缩短对象的生命周期&nbsp;。在过去，分配对象是一个比较重的操作，所以有些程序员会尽可能地减少new对象的次数，尝试减小堆的分配开销，减少内存碎片。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但是，短命对象的创建在JVM中比我们想象的性能更好，所以，不要吝啬new关键字，大胆地去new吧。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当然前提是不做无谓的创建，对象创建的速率越高，那么GC也会越快被触发。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">结论：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">分配小对象的开销分享小，不要吝啬去创建。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">GC最喜欢这种小而短命的对象。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">让对象的生命周期尽可能短，例如在方法体内创建，使其能尽快地在YoungGC中被回收，不会晋升(romote)到年老代(Old Generation)。</span>\r\n	</li>\r\n</ul>\r\n<h4>\r\n	<span style=\"font-size:14px;\">二、对象分配的优化</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">基于大部分对象都是小而短命，并且不存在多线程的数据竞争。这些小对象的分配，会优先在线程私有的TLAB&nbsp;中分配，TLAB中创建的对象，不存在锁甚至是CAS的开销。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">TLAB占用的空间在Eden Generation。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当对象比较大，TLAB的空间不足以放下，而JVM又认为当前线程占用的TLAB剩余空间还足够时，就会直接在Eden Generation上分配，此时是存在并发竞争的，所以会有CAS的开销，但也还好。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当对象大到Eden Generation放不下时，JVM只能尝试去Old Generation分配，这种情况需要尽可能避免，因为一旦在Old Generation分配，这个对象就只能被Old Generation的GC或是FullGC回收了。</span>\r\n</p>\r\n<h4>\r\n	<span style=\"font-size:14px;\">三、不可变对象的好处</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">GC算法在扫描存活对象时通常需要从ROOT节点开始，扫描所有存活对象的引用，构建出对象图。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">不可变对象对GC的优化，主要体现在Old Generation中。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">可以想象一下，如果存在Old Generation的对象引用了Young Generation的对象，那么在每次YoungGC的过程中，就必须考虑到这种情况。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Hotspot JVM为了提高YoungGC的性能，避免每次YoungGC都扫描Old Generation中的对象引用，采用了卡表(Card Table)&nbsp;的方式。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">简单来说，当Old Generation中的对象发生对Young Generation中的对象产生新的引用关系或释放引用时，都会在卡表中响应的标记上标记为脏(dirty)，而YoungGC时，只需要扫描这些dirty的项就可以了。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">可变对象对其它对象的引用关系可能会频繁变化，并且有可能在运行过程中持有越来越多的引用，特别是容器。这些都会导致对应的卡表项被频繁标记为dirty。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">而不可变对象的引用关系非常稳定，在扫描卡表时就不会扫到它们对应的项了。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">注意，这里的不可变对象，不是指仅仅自身引用不可变的final对象，而是真正的Immutable Objects&nbsp;。</span>\r\n</p>\r\n<h4>\r\n	<span style=\"font-size:14px;\">四、引用置为null的传说</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">早期的很多Java资料中都会提到在方法体中将一个变量置为null能够优化GC的性能，类似下面的代码：</span>\r\n</p>\r\n<span style=\"font-size:14px;\">List&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\n// some code\r\nlist = null; // help GC</span>\r\n<p>\r\n	<span style=\"font-size:14px;\">事实上这种做法对GC的帮助微乎其微，有时候反而会导致代码混乱。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">我记得几年前 @rednaxelafx 在HLL VM小组中详细论述过这个问题，原帖我没找到，结论基本就是：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">在一个非常大的方法体内，对一个较大的对象，将其引用置为null，某种程度上可以帮助GC。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">大部分情况下，这种行为都没有任何好处。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">所以，还是早点放弃这种“优化”方式吧。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">GC比我们想象的更聪明。</span>\r\n</p>\r\n<h4>\r\n	<span style=\"font-size:14px;\">五、手动档的GC</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">在很多Java资料上都有下面两个奇技淫巧：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">通过Thread.yield()&nbsp;让出CPU资源给其它线程。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">通过System.gc()&nbsp;触发GC。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">事实上JVM从不保证这两件事，而System.gc()在JVM启动参数中如果允许显式GC，则会触发FullGC&nbsp;，对于响应敏感的应用来说，几乎等同于自杀。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">So，让我们牢记两点：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Never use Thread.yield()。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Never use System.gc()。除非你真的需要回收Native Memory。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">第二点有个Native Memory的例外，如果你在以下场景：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">使用了NIO或者NIO框架（Mina/Netty）</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">使用了DirectByteBuffer分配字节缓冲区</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">使用了MappedByteBuffer做内存映射</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">由于Native Memory只能通过FullGC（或是CMS GC）回收&nbsp;，所以除非你非常清楚这时真的有必要，否则不要轻易调用System.gc()，且行且珍惜。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">另外为了防止某些框架中的System.gc调用（例如NIO框架、Java RMI），建议在启动参数中加上-XX:+DisableExplicitGC来禁用显式GC。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这个参数有个巨大的坑，如果你禁用了System.gc()，那么上面的3种场景下的内存就无法回收，可能造成OOM，如果你使用了CMS GC，那么可以用这个参数替代：-XX:+ExplicitGCInvokesConcurrent。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">关于System.gc()，可以参考 @bluedavy 的几篇文章：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://hellojava.info/?p=56\"><span style=\"font-size:14px;\">CMS GC会不会回收Direct ByteBuffer的内存</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://hellojava.info/?p=323\"><span style=\"font-size:14px;\">说说在Java启动参数上我犯的错</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://hellojava.info/?p=319\"><span style=\"font-size:14px;\">java.lang.OutOfMemoryError:Map failed</span></a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<h4>\r\n	<span style=\"font-size:14px;\">六、指定容器初始化大小</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">Java容器的一个特点就是可以动态扩展，所以通常我们都不会去考虑初始大小的设置，不够了反正会自动扩容呗。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但是扩容不意味着没有代价，甚至是很高的代价。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">例如一些基于数组的数据结构，例如StringBuilder、StringBuffer、ArrayList、HashMap等等，在扩容的时候都需要做ArrayCopy，对于不断增长的结构来说，经过若干次扩容，会存在大量无用的老数组，而回收这些数组的压力，全都会加在GC身上。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这些容器的构造函数中通常都有一个可以指定大小的参数，如果对于某些大小可以预估的容器，建议加上这个参数。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">可是因为容器的扩容并不是等到容器满了才扩容，而是有一定的比例，例如HashMap的扩容阈值和负载因子(loadFactor)相关。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Google Guava框架对于容器的初始容量提供了非常便捷的工具方法，例如：</span>\r\n</p>\r\n<span style=\"font-size:14px;\">Lists.newArrayListWithCapacity(initialArraySize);\r\nLists.newArrayListWithExpectedSize(estimatedSize);\r\nSets.newHashSetWithExpectedSize(expectedSize);\r\nMaps.newHashMapWithExpectedSize(expectedSize);</span>\r\n<p>\r\n	<span style=\"font-size:14px;\">这样我们只要传入预估的大小即可，容量的计算就交给Guava来做吧。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">反例&nbsp;：如果采用默认无参构造函数，创建一个ArrayList，不断增加元素直到OOM，那么在此过程中会导致：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">多次数组扩容，重新分配更大空间的数组</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">多次数组拷贝</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">内存碎片</span>\r\n	</li>\r\n</ul>\r\n<h4>\r\n	<span style=\"font-size:14px;\">七、对象池</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">为了减少对象分配开销，提高性能，可能有人会采取对象池的方式来缓存对象集合，作为复用的手段。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但是对象池中的对象由于在运行期长期存活，大部分会晋升到Old Generation，因此无法通过YoungGC回收。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">并且通常……没有什么效果。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">对于对象本身：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">如果对象很小，那么分配的开销本来就小，对象池只会增加代码复杂度。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">如果对象比较大，那么晋升到Old Generation后，对GC的压力就更大了。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">从线程安全的角度考虑，通常池都是会被并发访问的，那么你就需要处理好同步的问题，这又是一个大坑，并且同步带来的开销，未必比你重新创建一个对象小&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">对于对象池，唯一合适的场景就是当池中的每个对象的创建开销很大&nbsp;时，缓存复用才有意义，例如每次new都会创建一个连接，或是依赖一次RPC。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">比如说：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">线程池</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">数据库连接池</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">TCP连接池</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">即使你真的需要实现一个对象池，也请使用成熟的开源框架，例如Apache Commons Pool。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">另外，使用JDK的ThreadPoolExecutor作为线程池，不要重复造轮子，除非当你看过AQS的源码后认为你可以写得比Doug Lea更好。</span>\r\n</p>\r\n<h4>\r\n	<span style=\"font-size:14px;\">八、对象作用域</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">尽可能缩小对象的作用域，即生命周期。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">如果可以在方法内声明的局部变量，就不要声明为实例变量。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">除非你的对象是单例的或不变的，否则尽可能少地声明static变量。</span>\r\n	</li>\r\n</ul>\r\n<h4>\r\n	<span style=\"font-size:14px;\">九、各类引用</span>\r\n</h4>\r\n<p>\r\n	<span style=\"font-size:14px;\">java.lang.ref.Reference有几个子类，用于处理和GC相关的引用。JVM的引用类型简单来说有几种：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Strong Reference，最常见的引用</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Weak Reference，当没有指向它的强引用时会被GC回收</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Soft Reference，只当临近OOM时才会被GC回收</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Phantom Reference，主要用于识别对象被GC的时机，通常用于做一些清理工作</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">当你需要实现一个缓存时，可以考虑优先使用WeakHashMap，而不是HashMap，当然，更好的选择是使用框架，例如Guava Cache。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">最后，再次提醒，以上的这些未必可以对代码有多少性能上的提升，但是熟悉这些方法，是为了帮助我们写出更卓越的代码，和GC更好地合作。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">（全文完）</span>\r\n</p>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:14px;\">（转载本站文章请注明作者和出处</span><a href=\"http://coolshell.cn/\"><span style=\"font-size:14px;\">酷 壳 – CoolShell.cn</span></a><span style=\"font-size:14px;\">，请勿用于任何商业用途）</span>\r\n	</p>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">——===访问</span><a href=\"http://coolshell.cn/404/\"><span style=\"font-size:14px;\">酷壳404页面</span></a><span style=\"font-size:14px;\">寻找遗失儿童。===——</span>\r\n</div>',NULL,NULL,'2014-05-09 23:50:14',0,'面向GC的Java编程',0),(46,'admin',15,'心情很糟糕<img src=\"http://www.eleword.net/template/editor/plugins/emoticons/images/1.gif\" border=\"0\" alt=\"\" />',NULL,NULL,'2014-05-10 00:24:00',0,'零点的烦恼',0),(47,'admin',14,'<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:large;\"><strong>Java NIO原理图文分析及代码实现</strong>&nbsp;</span><br />\r\n<strong><span style=\"font-size:medium;\">前言:</span>&nbsp;</strong><br />\r\n<span style=\"font-size:small;\">最近在分析hadoop的RPC(Remote Procedure Call Protocol ，远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。可以参考：<a href=\"http://baike.baidu.com/view/32726.htm\">http://baike.baidu.com/view/32726.htm</a>&nbsp;）机制时，发现hadoop的RPC机制的实现主要用到了两个技术：动态代理（动态代理可以参考博客：<a href=\"http://weixiaolu.iteye.com/blog/1477774\">http://weixiaolu.iteye.com/blog/1477774</a>&nbsp;）和java NIO。为了能够正确地分析hadoop的RPC源码，我觉得很有必要先研究一下java NIO的原理和具体实现。<br />\r\n这篇博客我主要从两个方向来分析java NIO<br />\r\n目录：<br />\r\n一．java NIO 和阻塞I/O的区别<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 1. 阻塞I/O通信模型<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 2. java NIO原理及通信模型<br />\r\n二．java NIO服务端和客户端代码实现</span>&nbsp;<br />\r\n<strong><span style=\"font-size:medium;\">具体分析：</span>&nbsp;</strong><br />\r\n<span style=\"font-size:small;\"><strong>一．java NIO 和阻塞I/O的区别</strong>&nbsp;<br />\r\n<strong>1. 阻塞I/O通信模型</strong>&nbsp;<br />\r\n假如现在你对阻塞I/O已有了一定了解，我们知道阻塞I/O在调用InputStream.read()方法时是阻塞的，它会一直等到数据到来时（或超时）才会返回；同样，在调用ServerSocket.accept()方法时，也会一直阻塞到有客户端连接才会返回，每个客户端连接过来后，服务端都会启动一个线程去处理该客户端的请求。阻塞I/O的通信模型示意图如下：</span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://dl.iteye.com/upload/attachment/0066/2121/3158e45b-1bb9-37a2-ba3e-3982b604eeff.jpg\" width=\"700\" alt=\"\" height=\"294\" title=\"点击查看原始大小图片\" class=\"magplus\" /> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\">如果你细细分析，一定会发现阻塞I/O存在一些缺点。根据阻塞I/O通信模型，我总结了它的两点缺点：<br />\r\n1. 当客户端多时，会创建大量的处理线程。且每个线程都要占用栈空间和一些CPU时间<br />\r\n2. 阻塞可能带来频繁的上下文切换，且大部分上下文切换可能是无意义的。<br />\r\n在这种情况下非阻塞式I/O就有了它的应用前景。<br />\r\n<strong>2.&nbsp;</strong></span><strong><span style=\"font-size:small;\">java NIO原理及通信模型</span>&nbsp;</strong><span style=\"font-size:small;\"><br />\r\nJava NIO是在jdk1.4开始使用的，它既可以说成“新I/O”，也可以说成非阻塞式I/O。下面是java NIO的工作原理：<br />\r\n1. 由一个专门的线程来处理所有的 IO 事件，并负责分发。&nbsp;<br />\r\n2. 事件驱动机制：事件到的时候触发，而不是同步的去监视事件。&nbsp;<br />\r\n3. 线程通讯：线程之间通过 wait,notify 等方式通讯。保证每次上下文切换都是有意义的。减少无谓的线程切换。&nbsp;<br />\r\n阅读过一些资料之后，下面贴出我理解的java NIO的工作原理图：</span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://dl.iteye.com/upload/attachment/0066/2123/c17e2880-a712-349f-a818-2c921303f224.jpg\" width=\"689\" alt=\"\" height=\"251\" /> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\">（注：每个线程的处理流程大概都是读取数据、解码、计算处理、编码、发送响应。）<br />\r\nJava NIO的服务端只需启动一个专门的线程来处理所有的 IO 事件，这种通信模型是怎么实现的呢？呵呵，我们一起来探究它的奥秘吧。java NIO采用了双向通道（channel）进行数据传输，而不是单向的流（stream），在通道上可以注册我们感兴趣的事件。一共有以下四种事件：</span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<table border=\"1\" style=\"color:#000000;font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;height:109px;width:432px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				事件名\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				对应值\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				服务端接收客户端连接事件\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				SelectionKey.OP_ACCEPT(16)\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				客户端连接服务端事件\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				SelectionKey.OP_CONNECT(8)\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				读事件\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				SelectionKey.OP_READ(1)\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				写事件\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				SelectionKey.OP_WRITE(4)\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<table border=\"0.5\" style=\"color:#000000;font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n			<td style=\"font-size:1em;\">\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\">服务端和客户端各自维护一个管理通道的对象，我们称之为selector，该对象能检测一个或多个通道 (channel) 上的事件。我们以服务端为例，如果服务端的selector上注册了读事件，某时刻客户端给服务端发送了一些数据，阻塞I/O这时会调用read()方法阻塞地读取数据，而NIO的服务端会在selector中添加一个读事件。服务端的处理线程会轮询地访问selector，如果访问selector时发现有感兴趣的事件到达，则处理这些事件，如果没有感兴趣的事件到达，则处理线程会一直阻塞直到感兴趣的事件到达为止。下面是我理解的java NIO的通信模型示意图：</span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://dl.iteye.com/upload/attachment/0066/3190/0184183e-286c-34f1-9742-4adaa28b7003.jpg\" width=\"700\" alt=\"\" height=\"159\" title=\"点击查看原始大小图片\" class=\"magplus\" /> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\"><strong>二．java NIO服务端和客户端代码实现</strong>&nbsp;<br />\r\n为了更好地理解java NIO,下面贴出服务端和客户端的简单代码实现。<br />\r\n<strong>服务端：</strong></span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\"><strong>Java代码：</strong></span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\"><strong> </strong></span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\"><strong>package cn.nio;\r\n\r\nimport java.io.IOException;\r\nimport java.net.InetSocketAddress;\r\nimport java.nio.ByteBuffer;\r\nimport java.nio.channels.SelectionKey;\r\nimport java.nio.channels.Selector;\r\nimport java.nio.channels.ServerSocketChannel;\r\nimport java.nio.channels.SocketChannel;\r\nimport java.util.Iterator;\r\n\r\n/**\r\n * NIO服务端\r\n * @author 小路\r\n */\r\npublic class NIOServer {\r\n	//通道管理器\r\n	private Selector selector;\r\n\r\n	/**\r\n	 * 获得一个ServerSocket通道，并对该通道做一些初始化的工作\r\n	 * @param port  绑定的端口号\r\n	 * @throws IOException\r\n	 */\r\n	public void initServer(int port) throws IOException {\r\n		// 获得一个ServerSocket通道\r\n		ServerSocketChannel serverChannel = ServerSocketChannel.open();\r\n		// 设置通道为非阻塞\r\n		serverChannel.configureBlocking(false);\r\n		// 将该通道对应的ServerSocket绑定到port端口\r\n		serverChannel.socket().bind(new InetSocketAddress(port));\r\n		// 获得一个通道管理器\r\n		this.selector = Selector.open();\r\n		//将通道管理器和该通道绑定，并为该通道注册SelectionKey.OP_ACCEPT事件,注册该事件后，\r\n		//当该事件到达时，selector.select()会返回，如果该事件没到达selector.select()会一直阻塞。\r\n		serverChannel.register(selector, SelectionKey.OP_ACCEPT);\r\n	}\r\n\r\n	/**\r\n	 * 采用轮询的方式监听selector上是否有需要处理的事件，如果有，则进行处理\r\n	 * @throws IOException\r\n	 */\r\n	@SuppressWarnings(\"unchecked\")\r\n	public void listen() throws IOException {\r\n		System.out.println(\"服务端启动成功！\");\r\n		// 轮询访问selector\r\n		while (true) {\r\n			//当注册的事件到达时，方法返回；否则,该方法会一直阻塞\r\n			selector.select();\r\n			// 获得selector中选中的项的迭代器，选中的项为注册的事件\r\n			Iterator ite = this.selector.selectedKeys().iterator();\r\n			while (ite.hasNext()) {\r\n				SelectionKey key = (SelectionKey) ite.next();\r\n				// 删除已选的key,以防重复处理\r\n				ite.remove();\r\n				// 客户端请求连接事件\r\n				if (key.isAcceptable()) {\r\n					ServerSocketChannel server = (ServerSocketChannel) key\r\n							.channel();\r\n					// 获得和客户端连接的通道\r\n					SocketChannel channel = server.accept();\r\n					// 设置成非阻塞\r\n					channel.configureBlocking(false);\r\n\r\n					//在这里可以给客户端发送信息哦\r\n					channel.write(ByteBuffer.wrap(new String(\"向客户端发送了一条信息\").getBytes()));\r\n					//在和客户端连接成功之后，为了可以接收到客户端的信息，需要给通道设置读的权限。\r\n					channel.register(this.selector, SelectionKey.OP_READ);\r\n					\r\n					// 获得了可读的事件\r\n				} else if (key.isReadable()) {\r\n						read(key);\r\n				}\r\n\r\n			}\r\n\r\n		}\r\n	}\r\n	/**\r\n	 * 处理读取客户端发来的信息 的事件\r\n	 * @param key\r\n	 * @throws IOException \r\n	 */\r\n	public void read(SelectionKey key) throws IOException{\r\n		// 服务器可读取消息:得到事件发生的Socket通道\r\n		SocketChannel channel = (SocketChannel) key.channel();\r\n		// 创建读取的缓冲区\r\n		ByteBuffer buffer = ByteBuffer.allocate(10);\r\n		channel.read(buffer);\r\n		byte[] data = buffer.array();\r\n		String msg = new String(data).trim();\r\n		System.out.println(\"服务端收到信息：\"+msg);\r\n		ByteBuffer outBuffer = ByteBuffer.wrap(msg.getBytes());\r\n		channel.write(outBuffer);// 将消息回送给客户端\r\n	}\r\n	\r\n	/**\r\n	 * 启动服务端测试\r\n	 * @throws IOException \r\n	 */\r\n	public static void main(String[] args) throws IOException {\r\n		NIOServer server = new NIOServer();\r\n		server.initServer(8000);\r\n		server.listen();\r\n	}\r\n\r\n} </strong></pre>\r\n<strong> 客户端代码：</strong> \r\n<p>\r\n	<br />\r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\"><strong>\r\n<pre class=\"prettyprint lang-java\">package cn.nio;\r\n\r\nimport java.io.IOException;\r\nimport java.net.InetSocketAddress;\r\nimport java.nio.ByteBuffer;\r\nimport java.nio.channels.SelectionKey;\r\nimport java.nio.channels.Selector;\r\nimport java.nio.channels.SocketChannel;\r\nimport java.util.Iterator;\r\n\r\n/**\r\n * NIO客户端\r\n * @author 小路\r\n */\r\npublic class NIOClient {\r\n	//通道管理器\r\n	private Selector selector;\r\n\r\n	/**\r\n	 * 获得一个Socket通道，并对该通道做一些初始化的工作\r\n	 * @param ip 连接的服务器的ip\r\n	 * @param port  连接的服务器的端口号         \r\n	 * @throws IOException\r\n	 */\r\n	public void initClient(String ip,int port) throws IOException {\r\n		// 获得一个Socket通道\r\n		SocketChannel channel = SocketChannel.open();\r\n		// 设置通道为非阻塞\r\n		channel.configureBlocking(false);\r\n		// 获得一个通道管理器\r\n		this.selector = Selector.open();\r\n		\r\n		// 客户端连接服务器,其实方法执行并没有实现连接，需要在listen（）方法中调\r\n		//用channel.finishConnect();才能完成连接\r\n		channel.connect(new InetSocketAddress(ip,port));\r\n		//将通道管理器和该通道绑定，并为该通道注册SelectionKey.OP_CONNECT事件。\r\n		channel.register(selector, SelectionKey.OP_CONNECT);\r\n	}\r\n\r\n	/**\r\n	 * 采用轮询的方式监听selector上是否有需要处理的事件，如果有，则进行处理\r\n	 * @throws IOException\r\n	 */\r\n	@SuppressWarnings(\"unchecked\")\r\n	public void listen() throws IOException {\r\n		// 轮询访问selector\r\n		while (true) {\r\n			selector.select();\r\n			// 获得selector中选中的项的迭代器\r\n			Iterator ite = this.selector.selectedKeys().iterator();\r\n			while (ite.hasNext()) {\r\n				SelectionKey key = (SelectionKey) ite.next();\r\n				// 删除已选的key,以防重复处理\r\n				ite.remove();\r\n				// 连接事件发生\r\n				if (key.isConnectable()) {\r\n					SocketChannel channel = (SocketChannel) key\r\n							.channel();\r\n					// 如果正在连接，则完成连接\r\n					if(channel.isConnectionPending()){\r\n						channel.finishConnect();\r\n						\r\n					}\r\n					// 设置成非阻塞\r\n					channel.configureBlocking(false);\r\n\r\n					//在这里可以给服务端发送信息哦\r\n					channel.write(ByteBuffer.wrap(new String(\"向服务端发送了一条信息\").getBytes()));\r\n					//在和服务端连接成功之后，为了可以接收到服务端的信息，需要给通道设置读的权限。\r\n					channel.register(this.selector, SelectionKey.OP_READ);\r\n					\r\n					// 获得了可读的事件\r\n				} else if (key.isReadable()) {\r\n						read(key);\r\n				}\r\n\r\n			}\r\n\r\n		}\r\n	}\r\n	/**\r\n	 * 处理读取服务端发来的信息 的事件\r\n	 * @param key\r\n	 * @throws IOException \r\n	 */\r\n	public void read(SelectionKey key) throws IOException{\r\n		//和服务端的read方法一样\r\n	}\r\n	\r\n	\r\n	/**\r\n	 * 启动客户端测试\r\n	 * @throws IOException \r\n	 */\r\n	public static void main(String[] args) throws IOException {\r\n		NIOClient client = new NIOClient();\r\n		client.initClient(\"localhost\",8000);\r\n		client.listen();\r\n	}\r\n\r\n}\r\n</pre>\r\n<br />\r\n</strong></span> \r\n</p>\r\n<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:small;\"><strong>\r\n	<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n		<span style=\"font-size:small;\"><span style=\"font-size:medium;\"><strong>小结：</strong>&nbsp;</span><br />\r\n终于把动态代理和java NIO分析完了，呵呵，下面就要分析hadoop的RPC机制源码了，博客地址：<a href=\"http://weixiaolu.iteye.com/blog/1504898\">http://weixiaolu.iteye.com/blog/1504898</a>&nbsp;。不过如果对java NIO的理解存在异议的，欢迎一起讨论。</span>\r\n	</p>\r\n	<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n		&nbsp;\r\n	</p>\r\n	<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n		&nbsp;\r\n	</p>\r\n	<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n		&nbsp;\r\n	</p>\r\n	<p style=\"font-family:Helvetica, Tahoma, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n		<span style=\"font-size:small;\">如需转载，请注明出处：<a href=\"http://weixiaolu.iteye.com/blog/1479656\">http://weixiaolu.iteye.com/blog/1479656</a></span>\r\n	</p>\r\n<br />\r\n</strong></span>\r\n</p>',NULL,NULL,'2014-05-10 06:03:25',0,'Java NIO原理 图文分析及代码实现',0),(48,'admin',14,'<p>\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/overview.html\" target=\"_blank\">原文链接</a>&nbsp; &nbsp; &nbsp;作者：Jakob Jenkov &nbsp; &nbsp;&nbsp;译者：airu &nbsp; &nbsp;&nbsp;校对：丁一\r\n</p>\r\n<p>\r\n	Java NIO 由以下几个核心部分组成：\r\n</p>\r\n<ul>\r\n	<li>\r\n		Channels\r\n	</li>\r\n	<li>\r\n		Buffers\r\n	</li>\r\n	<li>\r\n		Selectors\r\n	</li>\r\n</ul>\r\n<p>\r\n	虽然Java NIO 中除此之外还有很多类和组件，但在我看来，Channel，Buffer 和 Selector 构成了核心的API。其它组件，如Pipe和FileLock，只不过是与三个核心组件共同使用的工具类。因此，在概述中我将集中在这三个组件上。其它组件会在单独的章节中讲到。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	Channel 和 Buffer\r\n</h3>\r\n<p>\r\n	基本上，所有的 IO 在NIO 中都从一个Channel 开始。Channel 有点象流。 数据可以从Channel读到Buffer中，也可以从Buffer 写到Channel中。这里有个图示：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://ifeve.com/wp-content/uploads/2013/06/overview-channels-buffers1.png\" width=\"338\" height=\"231\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p>\r\n	Channel和Buffer有好几种类型。下面是JAVA NIO中的一些主要Channel的实现：\r\n</p>\r\n<ul>\r\n	<li>\r\n		FileChannel\r\n	</li>\r\n	<li>\r\n		DatagramChannel\r\n	</li>\r\n	<li>\r\n		SocketChannel\r\n	</li>\r\n	<li>\r\n		ServerSocketChannel\r\n	</li>\r\n</ul>\r\n<p>\r\n	正如你所看到的，这些通道涵盖了UDP 和 TCP 网络IO，以及文件IO。\r\n</p>\r\n<p>\r\n	与这些类一起的有一些有趣的接口，但为简单起见，我尽量在概述中不提到它们。本教程其它章节与它们相关的地方我会进行解释。\r\n</p>\r\n<p>\r\n	以下是Java NIO里关键的Buffer实现：\r\n</p>\r\n<ul>\r\n	<li>\r\n		ByteBuffer\r\n	</li>\r\n	<li>\r\n		CharBuffer\r\n	</li>\r\n	<li>\r\n		DoubleBuffer\r\n	</li>\r\n	<li>\r\n		FloatBuffer\r\n	</li>\r\n	<li>\r\n		IntBuffer\r\n	</li>\r\n	<li>\r\n		LongBuffer\r\n	</li>\r\n	<li>\r\n		ShortBuffer\r\n	</li>\r\n</ul>\r\n<p>\r\n	这些Buffer覆盖了你能通过IO发送的基本数据类型：byte, short, int, long, float, double 和 char。\r\n</p>\r\n<p>\r\n	Java NIO 还有个 Mappedyteuffer，用于表示内存映射文件， 我也不打算在概述中说明。\r\n</p>\r\n<h2>\r\n	Selector\r\n</h2>\r\n<p>\r\n	Selector允许单线程处理多个 Channel。如果你的应用打开了多个连接（通道），但每个连接的流量都很低，使用Selector就会很方便。例如，在一个聊天服务器中。\r\n</p>\r\n<p>\r\n	这是在一个单线程中使用一个Selector处理3个Channel的图示：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://ifeve.com/wp-content/uploads/2013/06/overview-selectors.png\" width=\"408\" height=\"323\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p>\r\n	要使用Selector，得向Selector注册Channel，然后调用它的select()方法。这个方法会一直阻塞到某个注册的通道有事件就绪。一旦这个方法返回，线程就可以处理这些事件，事件的例子有如新连接进来，数据接收等。\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/overview/\">Java NIO系列教程（一） Java NIO 概述</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-12 08:47:04',0,'Java NIO系列教程（一） Java NIO 概述',0),(49,'admin',14,'<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/channels.html\" target=\"_blank\">原文链接</a> <b>作者：</b>Jakob Jenkov <b>译者：</b>airu <b>校对：</b>丁一\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	Java NIO的通道类似流，但又有些不同：\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		既可以从通道中读取数据，又可以写数据到通道。但流的读写通常是单向的。\r\n	</li>\r\n	<li>\r\n		通道可以异步地读写。\r\n	</li>\r\n	<li>\r\n		通道中的数据总是要先读到一个Buffer，或者总是要从一个Buffer中写入。\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	正如上面所说，从通道读取数据到缓冲区，从缓冲区写入数据到通道。如下图所示：\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<img class=\"aligncenter size-full wp-image-5454\" alt=\"\" src=\"http://ifeve.com/wp-content/uploads/2013/06/overview-channels-buffers.png\" width=\"338\" height=\"231\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<span id=\"more-5273\"></span> \r\n</p>\r\n<h3 id=\"channel-imp\" style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	Channel的实现\r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	这些是Java NIO中最重要的通道的实现：\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		FileChannel\r\n	</li>\r\n	<li>\r\n		DatagramChannel\r\n	</li>\r\n	<li>\r\n		SocketChannel\r\n	</li>\r\n	<li>\r\n		ServerSocketChannel\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	FileChannel 从文件中读写数据。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	DatagramChannel 能通过UDP读写网络中的数据。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	SocketChannel 能通过TCP读写网络中的数据。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	ServerSocketChannel可以监听新进来的TCP连接，像Web服务器那样。对每一个新进来的连接都会创建一个SocketChannel。\r\n</p>\r\n<h3 id=\"example\" style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	基本的 Channel 示例\r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	下面是一个使用FileChannel读取数据到Buffer中的示例：\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre class=\"prettyprint lang-java\">RandomAccessFile aFile = new RandomAccessFile(\"data/nio-data.txt\", \"rw\");\r\nFileChannel inChannel = aFile.getChannel();\r\n\r\nByteBuffer buf = ByteBuffer.allocate(48);\r\n\r\nint bytesRead = inChannel.read(buf);\r\nwhile (bytesRead != -1) {\r\n\r\nSystem.out.println(\"Read \" + bytesRead);\r\nbuf.flip();\r\n\r\nwhile(buf.hasRemaining()){\r\nSystem.out.print((char) buf.get());\r\n}\r\n\r\nbuf.clear();\r\nbytesRead = inChannel.read(buf);\r\n}\r\naFile.close();</pre>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	注意 buf.flip() 的调用，首先读取数据到Buffer，然后反转Buffer,接着再从Buffer中读取数据。下一节会深入讲解Buffer的更多细节。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		<strong>原创文章转载请注明出处</strong>：<a href=\"http://ifeve.com/channels/\">Java NIO系列教程（二） Channel</a> \r\n	</li>\r\n</ul>',NULL,'2014-05-12 08:51:47','2014-05-12 08:50:07',0,'Java NIO系列教程（二） Channel',0),(50,'admin',14,'<p>\r\n	Java NIO中的Buffer用于和NIO通道进行交互。如你所知，数据是从通道读入缓冲区，从缓冲区写入到通道中的。\r\n</p>\r\n<p>\r\n	缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装成NIO Buffer对象，并提供了一组方法，用来方便的访问该块内存。\r\n</p>\r\n<p>\r\n	下面是NIO Buffer相关的话题列表：\r\n</p>\r\n<ol>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#basicusage\">Buffer的基本用法</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#cap-pos-limit\">Buffer的capacity,position和limit</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#buffertype\">Buffer的类型</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#allocate\">Buffer的分配</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#writetobuffer\">向Buffer中写数据</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#flip\">flip()方法</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#read\">从Buffer中读取数据</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#clearandcompact\">clear()与compact()方法</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#markandreset\">mark()与reset()方法</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/buffers/#equalsandcompareto\">equals()与compareTo()方法</a> \r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	Buffer的基本用法\r\n</h3>\r\n<p>\r\n	使用Buffer读写数据一般遵循以下四个步骤：\r\n</p>\r\n<ol>\r\n	<li>\r\n		写入数据到Buffer\r\n	</li>\r\n	<li>\r\n		调用flip()方法\r\n	</li>\r\n	<li>\r\n		从Buffer中读取数据\r\n	</li>\r\n	<li>\r\n		调用clear()方法或者compact()方法\r\n	</li>\r\n</ol>\r\n<p>\r\n	当向buffer写入数据时，buffer会记录下写了多少数据。一旦要读取数据，需要通过flip()方法将Buffer从写模式切换到读模式。在读模式下，可以读取之前写入到buffer的所有数据。\r\n</p>\r\n<p>\r\n	一旦读完了所有的数据，就需要清空缓冲区，让它可以再次被写入。有两种方式能清空缓冲区：调用clear()或compact()方法。clear()方法会清空整个缓冲区。compact()方法只会清除已经读过的数据。任何未读的数据都被移到缓冲区的起始处，新写入的数据将放到缓冲区未读数据的后面。\r\n</p>\r\n<p>\r\n	下面是一个使用Buffer的例子：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">RandomAccessFile aFile = new RandomAccessFile(\"data/nio-data.txt\", \"rw\");\r\nFileChannel inChannel = aFile.getChannel();\r\n\r\n//create buffer with capacity of 48 bytes\r\nByteBuffer buf = ByteBuffer.allocate(48);\r\n\r\nint bytesRead = inChannel.read(buf); //read into buffer.\r\nwhile (bytesRead != -1) {\r\n\r\n  buf.flip();  //make buffer ready for read\r\n\r\n  while(buf.hasRemaining()){\r\n      System.out.print((char) buf.get()); // read 1 byte at a time\r\n  }\r\n\r\n  buf.clear(); //make buffer ready for writing\r\n  bytesRead = inChannel.read(buf);\r\n}\r\naFile.close();</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	Buffer的capacity,position和limit\r\n</h3>\r\n<p>\r\n	缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装成NIO Buffer对象，并提供了一组方法，用来方便的访问该块内存。\r\n</p>\r\n<p>\r\n	为了理解Buffer的工作原理，需要熟悉它的三个属性：\r\n</p>\r\n<ul>\r\n	<li>\r\n		capacity\r\n	</li>\r\n	<li>\r\n		position\r\n	</li>\r\n	<li>\r\n		limit\r\n	</li>\r\n</ul>\r\n<p>\r\n	position和limit的含义取决于Buffer处在读模式还是写模式。不管Buffer处在什么模式，capacity的含义总是一样的。\r\n</p>\r\n<p>\r\n	这里有一个关于capacity，position和limit在读写模式中的说明，详细的解释在插图后面。\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://ifeve.com/wp-content/uploads/2013/06/buffers-modes.png\" width=\"506\" height=\"342\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<h4>\r\n	capacity\r\n</h4>\r\n<p>\r\n	作为一个内存块，Buffer有一个固定的大小值，也叫“capacity”.你只能往里写capacity个byte、long，char等类型。一旦Buffer满了，需要将其清空（通过读数据或者清除数据）才能继续写数据往里写数据。\r\n</p>\r\n<h4>\r\n	position\r\n</h4>\r\n<p>\r\n	当你写数据到Buffer中时，position表示当前的位置。初始的position值为0.当一个byte、long等数据写到Buffer后， position会向前移动到下一个可插入数据的Buffer单元。position最大可为capacity – 1.\r\n</p>\r\n<p>\r\n	当读取数据时，也是从某个特定位置读。当将Buffer从写模式切换到读模式，position会被重置为0. 当从Buffer的position处读取数据时，position向前移动到下一个可读的位置。\r\n</p>\r\n<h4>\r\n	limit\r\n</h4>\r\n<p>\r\n	在写模式下，Buffer的limit表示你最多能往Buffer里写多少数据。 写模式下，limit等于Buffer的capacity。\r\n</p>\r\n<p>\r\n	当切换Buffer到读模式时， limit表示你最多能读到多少数据。因此，当切换Buffer到读模式时，limit会被设置成写模式下的position值。换句话说，你能读到之前写入的所有数据（limit被设置成已写数据的数量，这个值在写模式下就是position）\r\n</p>\r\n<h3>\r\n	Buffer的类型\r\n</h3>\r\n<p>\r\n	Java NIO 有以下Buffer类型\r\n</p>\r\n<ul>\r\n	<li>\r\n		ByteBuffer\r\n	</li>\r\n	<li>\r\n		MappedByteBuffer\r\n	</li>\r\n	<li>\r\n		CharBuffer\r\n	</li>\r\n	<li>\r\n		DoubleBuffer\r\n	</li>\r\n	<li>\r\n		FloatBuffer\r\n	</li>\r\n	<li>\r\n		IntBuffer\r\n	</li>\r\n	<li>\r\n		LongBuffer\r\n	</li>\r\n	<li>\r\n		ShortBuffer\r\n	</li>\r\n</ul>\r\n<p>\r\n	p&lt;&gt;<br />\r\n如你所见，这些Buffer类型代表了不同的数据类型。换句话说，就是可以通过char，short，int，long，float 或 double类型来操作缓冲区中的字节。\r\n</p>\r\n<p>\r\n	MappedByteBuffer 有些特别，在涉及它的专门章节中再讲。\r\n</p>\r\n<h3>\r\n	Buffer的分配\r\n</h3>\r\n<p>\r\n	要想获得一个Buffer对象首先要进行分配。 每一个Buffer类都有一个allocate方法。下面是一个分配48字节capacity的ByteBuffer的例子。\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							ByteBuffer buf = ByteBuffer.allocate(48);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	这是分配一个可存储1024个字符的CharBuffer：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							CharBuffer buf = CharBuffer.allocate(1024);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<h3>\r\n	向Buffer中写数据\r\n</h3>\r\n<p>\r\n	写数据到Buffer有两种方式：\r\n</p>\r\n<ul>\r\n	<li>\r\n		从Channel写到Buffer。\r\n	</li>\r\n	<li>\r\n		通过Buffer的put()方法写到Buffer里。\r\n	</li>\r\n</ul>\r\n<p>\r\n	从Channel写到Buffer的例子\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							int&nbsp;bytesRead = inChannel.read(buf);&nbsp;//read into buffer.\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	通过put方法写Buffer的例子：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							buf.put(127);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	put方法有很多版本，允许你以不同的方式把数据写入到Buffer中。例如， 写到一个指定的位置，或者把一个字节数组写入到Buffer。 更多Buffer实现的细节参考JavaDoc。\r\n</p>\r\n<h4>\r\n	flip()方法\r\n</h4>\r\n<p>\r\n	flip方法将Buffer从写模式切换到读模式。调用flip()方法会将position设回0，并将limit设置成之前position的值。\r\n</p>\r\n<p>\r\n	换句话说，position现在用于标记读的位置，limit表示之前写进了多少个byte、char等 —— 现在能读取多少个byte、char等。\r\n</p>\r\n<h3>\r\n	从Buffer中读取数据\r\n</h3>\r\n<p>\r\n	从Buffer中读取数据有两种方式：\r\n</p>\r\n<ol>\r\n	<li>\r\n		从Buffer读取数据到Channel。\r\n	</li>\r\n	<li>\r\n		使用get()方法从Buffer中读取数据。\r\n	</li>\r\n</ol>\r\n<p>\r\n	从Buffer读取数据到Channel的例子：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							//read from buffer into channel.\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							2\r\n						</td>\r\n						<td>\r\n							int&nbsp;bytesWritten = inChannel.write(buf);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	使用get()方法从Buffer中读取数据的例子\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							byte&nbsp;aByte = buf.get();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	get方法有很多版本，允许你以不同的方式从Buffer中读取数据。例如，从指定position读取，或者从Buffer中读取数据到字节数组。更多Buffer实现的细节参考JavaDoc。\r\n</p>\r\n<h3>\r\n	rewind()方法\r\n</h3>\r\n<p>\r\n	Buffer.rewind()将position设回0，所以你可以重读Buffer中的所有数据。limit保持不变，仍然表示能从Buffer中读取多少个元素（byte、char等）。\r\n</p>\r\n<h3>\r\n	clear()与compact()方法\r\n</h3>\r\n<p>\r\n	一旦读完Buffer中的数据，需要让Buffer准备好再次被写入。可以通过clear()或compact()方法来完成。\r\n</p>\r\n<p>\r\n	如果调用的是clear()方法，position将被设回0，limit被设置成 capacity的值。换句话说，Buffer 被清空了。Buffer中的数据并未清除，只是这些标记告诉我们可以从哪里开始往Buffer里写数据。\r\n</p>\r\n<p>\r\n	如果Buffer中有一些未读的数据，调用clear()方法，数据将“被遗忘”，意味着不再有任何标记会告诉你哪些数据被读过，哪些还没有。\r\n</p>\r\n<p>\r\n	如果Buffer中仍有未读的数据，且后续还需要这些数据，但是此时想要先先写些数据，那么使用compact()方法。\r\n</p>\r\n<p>\r\n	compact()方法将所有未读的数据拷贝到Buffer起始处。然后将position设到最后一个未读元素正后面。limit属性依然像clear()方法一样，设置成capacity。现在Buffer准备好写数据了，但是不会覆盖未读的数据。\r\n</p>\r\n<h3>\r\n	mark()与reset()方法\r\n</h3>\r\n<p>\r\n	通过调用Buffer.mark()方法，可以标记Buffer中的一个特定position。之后可以通过调用Buffer.reset()方法恢复到这个position。例如：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							1\r\n						</td>\r\n						<td>\r\n							buffer.mark();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							2\r\n						</td>\r\n						<td>\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							3\r\n						</td>\r\n						<td>\r\n							//call buffer.get() a couple of times, e.g. during parsing.\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							4\r\n						</td>\r\n						<td>\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							5\r\n						</td>\r\n						<td>\r\n							buffer.reset();&nbsp;&nbsp;//set position back to mark.\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<h3>\r\n	equals()与compareTo()方法\r\n</h3>\r\n<p>\r\n	可以使用equals()和compareTo()方法两个Buffer。\r\n</p>\r\n<h4>\r\n	equals()\r\n</h4>\r\n<p>\r\n	当满足下列条件时，表示两个Buffer相等：\r\n</p>\r\n<ol>\r\n	<li>\r\n		有相同的类型（byte、char、int等）。\r\n	</li>\r\n	<li>\r\n		Buffer中剩余的byte、char等的个数相等。\r\n	</li>\r\n	<li>\r\n		Buffer中所有剩余的byte、char等都相同。\r\n	</li>\r\n</ol>\r\n<p>\r\n	如你所见，equals只是比较Buffer的一部分，不是每一个在它里面的元素都比较。实际上，它只比较Buffer中的剩余元素。\r\n</p>\r\n<h4>\r\n	compareTo()方法\r\n</h4>\r\n<p>\r\n	compareTo()方法比较两个Buffer的剩余元素(byte、char等)， 如果满足下列条件，则认为一个Buffer“小于”另一个Buffer：\r\n</p>\r\n<ol>\r\n	<li>\r\n		第一个不相等的元素小于另一个Buffer中对应的元素 。\r\n	</li>\r\n	<li>\r\n		所有元素都相等，但第一个Buffer比另一个先耗尽(第一个Buffer的元素个数比另一个少)。\r\n	</li>\r\n</ol>\r\n<p>\r\n	（译注：剩余元素是从 position到limit之间的元素）\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/buffers/\">Java NIO系列教程（三） Buffer</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-12 08:54:02',0,'Java NIO系列教程（三） Buffer',0),(51,'admin',14,'<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	原文地址：<a href=\"http://tutorials.jenkov.com/java-nio/scatter-gather.html\">http://tutorials.jenkov.com/java-nio/scatter-gather.html</a>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>作者</strong>：Jakob Jenkov &nbsp;&nbsp;<strong>译者</strong>：郭蕾 &nbsp;&nbsp;<strong><br />\r\n</strong>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	Java NIO开始支持scatter/gather，scatter/gather用于描述从Channel（译者注：Channel在中文经常翻译为通道）中读取或者写入到Channel的操作。<br />\r\n分散（scatter）从Channel中读取是指在读操作时将读取的数据写入多个buffer中。因此，Channel将从Channel中读取的数据“分散（scatter）”到多个Buffer中。<br />\r\n聚集（gather）写入Channel是指在写操作时将多个buffer的数据写入同一个Channel，因此，Channel 将多个Buffer中的数据“聚集（gather）”后发送到Channel。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	scatter / gather经常用于需要将传输的数据分开处理的场合，例如传输一个由消息头和消息体组成的消息，你可能会将消息体和消息头分散到不同的buffer中，这样你可以方便的处理消息头和消息体。<br />\r\n<span id=\"more-5251\"></span>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>Scattering Reads</strong><br />\r\nScattering Reads是指数据从一个channel读取到多个buffer中。如下图描述：\r\n</p>\r\n<div id=\"attachment_5252\" class=\"wp-caption aligncenter\" style=\"margin:15px auto;background-color:#282828;border:1px solid #444444;padding:14px 9px 1px;color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"http://ifeve.com/java-nio-scattergather/scatter/\"><img class=\"size-full wp-image-5252\" alt=\"Java NIO: Scattering Read\" src=\"http://ifeve.com/wp-content/uploads/2013/06/scatter.png\" width=\"357\" height=\"311\" style=\"height:auto;width:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"text-align:center;\">\r\n		Java NIO: Scattering Read\r\n	</p>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	代码示例如下：\r\n</p>\r\n<div id=\"highlighter_932456\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							1\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer header = ByteBuffer.allocate(128);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							2\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer body&nbsp;&nbsp; = ByteBuffer.allocate(1024);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							3\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							4\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer[] bufferArray = { header, body };\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							5\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							6\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							channel.read(bufferArray);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	注意buffer首先被插入到数组，然后再将数组作为channel.read() 的输入参数。read()方法按照buffer在数组中的顺序将从channel中读取的数据写入到buffer，当一个buffer被写满后，channel紧接着向另一个buffer中写。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	Scattering Reads在移动下一个buffer前，必须填满当前的buffer，这也意味着它不适用于动态消息(译者注：消息大小不固定)。换句话说，如果存在消息头和消息体，消息头必须完成填充（例如 128byte），Scattering Reads才能正常工作。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>Gathering Writes</strong>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	Gathering Writes是指数据从多个buffer写入到同一个channel。如下图描述：\r\n</p>\r\n<div id=\"attachment_5253\" class=\"wp-caption aligncenter\" style=\"margin:15px auto;background-color:#282828;border:1px solid #444444;padding:14px 9px 1px;color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"http://ifeve.com/java-nio-scattergather/gather/\"><img class=\"size-full wp-image-5253\" alt=\"Java NIO: Gathering Write\" src=\"http://ifeve.com/wp-content/uploads/2013/06/gather.png\" width=\"351\" height=\"301\" style=\"height:auto;width:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"text-align:center;\">\r\n		Java NIO: Gathering Write\r\n	</p>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	代码示例如下：\r\n</p>\r\n<div id=\"highlighter_825175\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							1\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer header = ByteBuffer.allocate(128);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							2\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer body&nbsp;&nbsp; = ByteBuffer.allocate(1024);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							3\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							4\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							//write data into buffers\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							5\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							6\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer[] bufferArray = { header, body };\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							7\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							8\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							channel.write(bufferArray);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	buffers数组是write()方法的入参，write()方法会按照buffer在数组中的顺序，将数据写入到channel，注意只有position和limit之间的数据才会被写入。因此，如果一个buffer的容量为128byte，但是仅仅包含58byte的数据，那么这58byte的数据将被写入到channel中。因此与Scattering Reads相反，Gathering Writes能较好的处理动态消息。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		<strong>原创文章转载请注明出处</strong>：<a href=\"http://ifeve.com/java-nio-scattergather/\">Java NIO系列教程（四） Scatter/Gather</a>\r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-13 05:07:52',0,'Java NIO系列教程（四） Scatter/Gather',0),(52,'admin',14,'<p>\r\n	原文地址：<a href=\"http://tutorials.jenkov.com/java-nio/scatter-gather.html\">http://tutorials.jenkov.com/java-nio/scatter-gather.html</a> \r\n</p>\r\n<p>\r\n	作者：Jakob Jenkov译者：郭蕾校对：周泰\r\n</p>\r\n<p>\r\n	在Java NIO中，如果两个通道中有一个是FileChannel，那你可以直接将数据从一个channel（译者注：channel中文常译作通道）传输到另外一个channel。\r\n</p>\r\n<p>\r\n	transferFrom()\r\n</p>\r\n<p>\r\n	FileChannel的transferFrom()方法可以将数据从源通道传输到FileChannel中（译者注：这个方法在<a>JDK</a>文档中的解释为将字节从给定的可读取字节通道传输到此通道的文件中）。下面是一个简单的例子：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">RandomAccessFile fromFile = new RandomAccessFile(\"fromFile.txt\", \"rw\");\r\nFileChannel      fromChannel = fromFile.getChannel();\r\n\r\nRandomAccessFile toFile = new RandomAccessFile(\"toFile.txt\", \"rw\");\r\nFileChannel      toChannel = toFile.getChannel();\r\n\r\nlong position = 0;\r\nlong count = fromChannel.size();\r\n\r\ntoChannel.transferFrom(position, count, fromChannel);</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	方法的输入参数position表示从position处开始向目标文件写入数据，count表示最多传输的字节数。如果源通道的剩余空间小于 count 个字节，则所传输的字节数要小于请求的字节数。<br />\r\n此外要注意，在SoketChannel的实现中，SocketChannel只会传输此刻准备好的数据（可能不足count字节）。因此，SocketChannel可能不会将请求的所有数据(count个字节)全部传输到FileChannel中。\r\n</p>\r\n<p>\r\n	transferTo()\r\n</p>\r\n<p>\r\n	transferTo()方法将数据从FileChannel传输到其他的channel中。下面是一个简单的例子：\r\n</p>\r\n<div>\r\n	<div>\r\n<pre class=\"prettyprint lang-java\">RandomAccessFile fromFile = new RandomAccessFile(\"fromFile.txt\", \"rw\");\r\nFileChannel      fromChannel = fromFile.getChannel();\r\n\r\nRandomAccessFile toFile = new RandomAccessFile(\"toFile.txt\", \"rw\");\r\nFileChannel      toChannel = toFile.getChannel();\r\n\r\nlong position = 0;\r\nlong count = fromChannel.size();\r\n\r\nfromChannel.transferTo(position, count, toChannel);</pre>\r\n<br />\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	是不是发现这个例子和前面那个例子特别相似？除了调用方法的FileChannel对象不一样外，其他的都一样。<br />\r\n上面所说的关于SocketChannel的问题在transferTo()方法中同样存在。SocketChannel会一直传输数据直到目标buffer被填满。\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/java-nio-channel-to-channel/\">Java NIO系列教程（五） 通道之间的数据传输</a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>',NULL,'2014-05-13 05:14:13','2014-05-13 05:10:27',0,'Java NIO系列教程（五） 通道之间的数据传输',0),(53,'admin',14,'<p>\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/selectors.html\" target=\"_blank\">原文链接</a>&nbsp;作者：Jakob Jenkov&nbsp;译者：浪迹v&nbsp;校对：丁一\r\n</p>\r\n<p>\r\n	Selector（选择器）是Java NIO中能够检测一到多个NIO通道，并能够知晓通道是否为诸如读写事件做好准备的组件。这样，一个单独的线程可以管理多个channel，从而管理多个网络连接。\r\n</p>\r\n<p>\r\n	下面是本文所涉及到的主题列表：\r\n</p>\r\n<ol>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#Why\">为什么使用Selector?</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#Creating\">Selector的创建</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#Registering\">向Selector注册通道</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#SelectionKey\">SelectionKey</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#Selecting\">通过Selector选择通道</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#wakeUp\">wakeUp()</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#close\">close()</a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ifeve.com/selectors/#Full\">完整的示例</a> \r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	为什么使用Selector?\r\n</h3>\r\n<p>\r\n	仅用单个线程来处理多个Channels的好处是，只需要更少的线程来处理通道。事实上，可以只用一个线程处理所有的通道。对于<a>操作系统</a>来说，线程之间上下文切换的开销很大，而且每个线程都要占用系统的一些资源（如内存）。因此，使用的线程越少越好。\r\n</p>\r\n<p>\r\n	但是，需要记住，现代的<a>操作系统</a>和CPU在多任务方面表现的越来越好，所以多线程的开销随着时间的推移，变得越来越小了。实际上，如果一个CPU有多个内核，不使用多任务可能是在浪费CPU能力。不管怎么说，关于那种设计的讨论应该放在另一篇不同的文章中。在这里，只要知道使用Selector能够处理多个通道就足够了。\r\n</p>\r\n<p>\r\n	下面是单线程使用一个Selector处理3个channel的示例图：\r\n</p>\r\n<h3>\r\n	Selector的创建\r\n</h3>\r\n<p>\r\n	通过调用Selector.open()方法创建一个Selector，如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">Selector selector = Selector.open();</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	向Selector注册通道\r\n</h3>\r\n<p>\r\n	为了将Channel和Selector配合使用，必须将channel注册到selector上。通过SelectableChannel.register()方法来实现，如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">channel.configureBlocking(false);\r\nSelectionKey key = channel.register(selector,\r\n	Selectionkey.OP_READ);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	与Selector一起使用时，Channel必须处于非阻塞模式下。这意味着不能将FileChannel与Selector一起使用，因为FileChannel不能切换到非阻塞模式。而套接字通道都可以。\r\n</p>\r\n<p>\r\n	注意register()方法的第二个参数。这是一个“interest集合”，意思是在通过Selector监听Channel时对什么事件感兴趣。可以监听四种不同类型的事件：\r\n</p>\r\n<ol>\r\n	<li>\r\n		Connect\r\n	</li>\r\n	<li>\r\n		Accept\r\n	</li>\r\n	<li>\r\n		Read\r\n	</li>\r\n	<li>\r\n		Write\r\n	</li>\r\n</ol>\r\n<p>\r\n	通道触发了一个事件意思是该事件已经就绪。所以，某个channel成功连接到另一个服务器称为“连接就绪”。一个server socket channel准备好接收新进入的连接称为“接收就绪”。一个有数据可读的通道可以说是“读就绪”。等待写数据的通道可以说是“写就绪”。\r\n</p>\r\n<p>\r\n	这四种事件用SelectionKey的四个常量来表示：\r\n</p>\r\n<ol>\r\n	<li>\r\n		SelectionKey.OP_CONNECT\r\n	</li>\r\n	<li>\r\n		SelectionKey.OP_ACCEPT\r\n	</li>\r\n	<li>\r\n		SelectionKey.OP_READ\r\n	</li>\r\n	<li>\r\n		SelectionKey.OP_WRITE\r\n	</li>\r\n</ol>\r\n<p>\r\n	如果你对不止一种事件感兴趣，那么可以用“位或”操作符将常量连接起来，如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">int interestSet = SelectionKey.OP_READ | SelectionKey.OP_WRITE;</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	在下面还会继续提到interest集合。\r\n</p>\r\n<h3>\r\n	SelectionKey\r\n</h3>\r\n<p>\r\n	在上一小节中，当向Selector注册Channel时，register()方法会返回一个SelectionKey对象。这个对象包含了一些你感兴趣的属性：\r\n</p>\r\n<ul>\r\n	<li>\r\n		interest集合\r\n	</li>\r\n	<li>\r\n		ready集合\r\n	</li>\r\n	<li>\r\n		Channel\r\n	</li>\r\n	<li>\r\n		Selector\r\n	</li>\r\n	<li>\r\n		附加的对象（可选）\r\n	</li>\r\n</ul>\r\n<p>\r\n	下面我会描述这些属性。\r\n</p>\r\n<h4>\r\n	interest集合\r\n</h4>\r\n<p>\r\n	就像<a href=\"http://ifeve.com/selectors/#Registering\">向Selector注册通道</a>一节中所描述的，interest集合是你所选择的感兴趣的事件集合。可以通过SelectionKey读写interest集合，像这样：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">int interestSet = selectionKey.interestOps();\r\n\r\nboolean isInterestedInAccept  = (interestSet &amp; SelectionKey.OP_ACCEPT) == SelectionKey.OP_ACCEPT；\r\nboolean isInterestedInConnect = interestSet &amp; SelectionKey.OP_CONNECT;\r\nboolean isInterestedInRead    = interestSet &amp; SelectionKey.OP_READ;\r\nboolean isInterestedInWrite   = interestSet &amp; SelectionKey.OP_WRITE;</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	可以看到，用“位与”操作interest 集合和给定的SelectionKey常量，可以确定某个确定的事件是否在interest 集合中。\r\n</p>\r\n<h4>\r\n	ready集合\r\n</h4>\r\n<p>\r\n	ready 集合是通道已经准备就绪的操作的集合。在一次选择(Selection)之后，你会首先访问这个ready set。Selection将在下一小节进行解释。可以这样访问ready集合：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">int readySet = selectionKey.readyOps();</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	可以用像检测interest集合那样的方法，来检测channel中什么事件或操作已经就绪。但是，也可以使用以下四个方法，它们都会返回一个布尔类型：\r\n</p>\r\n<h4>\r\n<pre class=\"prettyprint lang-java\">selectionKey.isAcceptable();\r\nselectionKey.isConnectable();\r\nselectionKey.isReadable();\r\nselectionKey.isWritable();</pre>\r\n<br />\r\n</h4>\r\n<h4>\r\n	Channel + Selector\r\n</h4>\r\n<p>\r\n	从SelectionKey访问Channel和Selector很简单。如下：\r\n</p>\r\n<h4>\r\n<pre class=\"prettyprint lang-java\">Channel  channel  = selectionKey.channel();\r\nSelector selector = selectionKey.selector();</pre>\r\n<br />\r\n</h4>\r\n<h4>\r\n	<br />\r\n</h4>\r\n<h4>\r\n	附加的对象\r\n</h4>\r\n<p>\r\n	可以将一个对象或者更多信息附着到SelectionKey上，这样就能方便的识别某个给定的通道。例如，可以附加 与通道一起使用的Buffer，或是包含聚集数据的某个对象。使用方法如下：\r\n</p>\r\nselectionKey.attach(theObject);\r\nObject attachedObj = selectionKey.attachment();\r\n<p>\r\n	还可以在用register()方法向Selector注册Channel的时候附加对象。如：\r\n</p>\r\n<h3>\r\n<pre class=\"prettyprint lang-java\">selectionKey.attach(theObject);\r\nObject attachedObj = selectionKey.attachment();</pre>\r\n<br />\r\n</h3>\r\n<h3>\r\n	通过Selector选择通道\r\n</h3>\r\n<p>\r\n	一旦向Selector注册了一或多个通道，就可以调用几个重载的select()方法。这些方法返回你所感兴趣的事件（如连接、接受、读或写）已经准备就绪的那些通道。换句话说，如果你对“读就绪”的通道感兴趣，select()方法会返回读事件已经就绪的那些通道。\r\n</p>\r\n<p>\r\n	下面是select()方法：\r\n</p>\r\n<ul>\r\n	<li>\r\n		int select()\r\n	</li>\r\n	<li>\r\n		int select(long timeout)\r\n	</li>\r\n	<li>\r\n		int selectNow()\r\n	</li>\r\n</ul>\r\n<p>\r\n	select()阻塞到至少有一个通道在你注册的事件上就绪了。\r\n</p>\r\n<p>\r\n	select(long timeout)和select()一样，除了最长会阻塞timeout毫秒(参数)。\r\n</p>\r\n<p>\r\n	selectNow()不会阻塞，不管什么通道就绪都立刻返回（译者注：此方法执行非阻塞的选择操作。如果自从前一次选择操作后，没有通道变成可选择的，则此方法直接返回零。）。\r\n</p>\r\n<p>\r\n	select()方法返回的int值表示有多少通道已经就绪。亦即，自上次调用select()方法后有多少通道变成就绪状态。如果调用select()方法，因为有一个通道变成就绪状态，返回了1，若再次调用select()方法，如果另一个通道就绪了，它会再次返回1。如果对第一个就绪的channel没有做任何操作，现在就有两个就绪的通道，但在每次select()方法调用之间，只有一个通道就绪了。\r\n</p>\r\n<h4>\r\n	selectedKeys()\r\n</h4>\r\n<p>\r\n	一旦调用了select()方法，并且返回值表明有一个或更多个通道就绪了，然后可以通过调用selector的selectedKeys()方法，访问“已选择键集（selected key set）”中的就绪通道。如下所示：\r\n</p>\r\nSet selectedKeys = selector.selectedKeys();\r\n<p>\r\n	当像Selector注册Channel时，Channel.register()方法会返回一个SelectionKey 对象。这个对象代表了注册到该Selector的通道。可以通过SelectionKey的selectedKeySet()方法访问这些对象。\r\n</p>\r\n<p>\r\n	可以遍历这个已选择的键集合来访问就绪的通道。如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">Set selectedKeys = selector.selectedKeys();\r\nIterator keyIterator = selectedKeys.iterator();\r\nwhile(keyIterator.hasNext()) {\r\n    SelectionKey key = keyIterator.next();\r\n    if(key.isAcceptable()) {\r\n        // a connection was accepted by a ServerSocketChannel.\r\n    } else if (key.isConnectable()) {\r\n        // a connection was established with a remote server.\r\n    } else if (key.isReadable()) {\r\n        // a channel is ready for reading\r\n    } else if (key.isWritable()) {\r\n        // a channel is ready for writing\r\n    }\r\n    keyIterator.&lt;tuihighlight class=\"tuihighlight\"&gt;&lt;a href=\"javascript:;\" style=\"display:inline;float:none;position:inherit;cursor:pointer;color:#7962D5;text-decoration:underline;\" onclick=\"return false;\"&gt;remove&lt;/a&gt;&lt;/tuihighlight&gt;();\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	这个循环遍历已选择键集中的每个键，并检测各个键所对应的通道的就绪事件。\r\n</p>\r\n<p>\r\n	注意每次迭代末尾的keyIterator.remove()调用。Selector不会自己从已选择键集中移除SelectionKey实例。必须在处理完通道时自己移除。下次该通道变成就绪时，Selector会再次将其放入已选择键集中。\r\n</p>\r\n<p>\r\n	SelectionKey.channel()方法返回的通道需要转型成你要处理的类型，如ServerSocketChannel或SocketChannel等。\r\n</p>\r\n<h3>\r\n	wakeUp()\r\n</h3>\r\n<p>\r\n	某个线程调用select()方法后阻塞了，即使没有通道已经就绪，也有办法让其从select()方法返回。只要让其它线程在第一个线程调用select()方法的那个对象上调用Selector.wakeup()方法即可。阻塞在select()方法上的线程会立马返回。\r\n</p>\r\n<p>\r\n	如果有其它线程调用了wakeup()方法，但当前没有线程阻塞在select()方法上，下个调用select()方法的线程会立即“醒来（wake up）”。\r\n</p>\r\n<h3>\r\n	close()\r\n</h3>\r\n<p>\r\n	用完Selector后调用其close()方法会关闭该Selector，且使注册到该Selector上的所有SelectionKey实例无效。通道本身并不会关闭。\r\n</p>\r\n<h3>\r\n	完整的示例\r\n</h3>\r\n<p>\r\n	这里有一个完整的示例，打开一个Selector，注册一个通道注册到这个Selector上(通道的初始化过程略去),然后持续监控这个Selector的四种事件（接受，连接，读，写）是否就绪。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">Selector selector = Selector.open();\r\nchannel.configureBlocking(false);\r\nSelectionKey key = channel.register(selector, SelectionKey.OP_READ);\r\nwhile(true) {\r\n  int readyChannels = selector.select();\r\n  if(readyChannels == 0) continue;\r\n  Set selectedKeys = selector.selectedKeys();\r\n  Iterator keyIterator = selectedKeys.iterator();\r\n  while(keyIterator.hasNext()) {\r\n    SelectionKey key = keyIterator.next();\r\n    if(key.isAcceptable()) {\r\n        // a connection was accepted by a ServerSocketChannel.\r\n    } else if (key.isConnectable()) {\r\n        // a connection was established with a remote server.\r\n    } else if (key.isReadable()) {\r\n        // a channel is ready for reading\r\n    } else if (key.isWritable()) {\r\n        // a channel is ready for writing\r\n    }\r\n    keyIterator.&lt;tuihighlight class=\"tuihighlight\"&gt;&lt;a href=\"javascript:;\" style=\"display:inline;float:none;position:inherit;cursor:pointer;color:#7962D5;text-decoration:underline;\" onclick=\"return false;\"&gt;remove&lt;/a&gt;&lt;/tuihighlight&gt;();\r\n  }\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/selectors/\">Java NIO系列教程（六） Selector</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-13 05:34:10',0,'Java NIO系列教程（六） Selector',0),(54,'admin',14,'<p>\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/file-channel.html\" target=\"_blank\">原文链接</a>&nbsp; &nbsp; &nbsp;作者：Jakob Jenkov &nbsp; &nbsp;&nbsp;译者：<a>周泰</a>&nbsp;&nbsp; &nbsp; &nbsp;校对：丁一\r\n</p>\r\n<p>\r\n	Java NIO中的FileChannel是一个连接到文件的通道。可以通过文件通道读写文件。\r\n</p>\r\n<p>\r\n	FileChannel无法设置为非阻塞模式，它总是运行在阻塞模式下。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	打开FileChannel\r\n</h3>\r\n<p>\r\n	在使用FileChannel之前，必须先打开它。但是，我们无法直接打开一个FileChannel，需要通过使用一个InputStream、OutputStream或RandomAccessFile来获取一个FileChannel实例。下面是通过RandomAccessFile打开FileChannel的示例：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">RandomAccessFile aFile = new RandomAccessFile(\"data/nio-data.txt\", \"rw\");\r\nFileChannel inChannel = aFile.getChannel();</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	从FileChannel读取数据\r\n</h3>\r\n<p>\r\n	调用多个read()方法之一从FileChannel中读取数据。如：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">ByteBuffer buf = ByteBuffer.allocate(48);\r\nint bytesRead = inChannel.read(buf);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	首先，分配一个Buffer。从FileChannel中读取的数据将被读到Buffer中。\r\n</p>\r\n<p>\r\n	然后，调用FileChannel.read()方法。该方法将数据从FileChannel读取到Buffer中。read()方法返回的int值表示了有多少字节被读到了Buffer中。如果返回-1，表示到了文件末尾。\r\n</p>\r\n<h3>\r\n	向FileChannel写数据\r\n</h3>\r\n<p>\r\n	使用FileChannel.write()方法向FileChannel写数据，该方法的参数是一个Buffer。如：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">String newData = \"New String to write to file...\" + System.currentTimeMillis();\r\n\r\nByteBuffer buf = ByteBuffer.allocate(48);\r\nbuf.clear();\r\nbuf.put(newData.getBytes());\r\n\r\nbuf.flip();\r\n\r\nwhile(buf.hasRemaining()) {\r\n	channel.write(buf);\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	注意FileChannel.write()是在while循环中调用的。因为无法保证write()方法一次能向FileChannel写入多少字节，因此需要重复调用write()方法，直到Buffer中已经没有尚未写入通道的字节。\r\n</p>\r\n<h3>\r\n	关闭FileChannel\r\n</h3>\r\n<p>\r\n	用完FileChannel后必须将其关闭。如：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">channel.close();</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	FileChannel的position方法\r\n</h3>\r\n<p>\r\n	有时可能需要在FileChannel的某个特定位置进行数据的读/写操作。可以通过调用position()方法获取FileChannel的当前位置。\r\n</p>\r\n<p>\r\n	也可以通过调用position(long pos)方法设置FileChannel的当前位置。\r\n</p>\r\n<p>\r\n	这里有两个例子:\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">long pos = channel.position();\r\nchannel.position(pos +123);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	如果将位置设置在文件结束符之后，然后试图从文件通道中读取数据，读方法将返回-1 —— 文件结束标志。\r\n</p>\r\n<p>\r\n	如果将位置设置在文件结束符之后，然后向通道中写数据，文件将撑大到当前位置并写入数据。这可能导致“文件空洞”，磁盘上物理文件中写入的数据间有空隙。\r\n</p>\r\n<h3>\r\n	FileChannel的size方法\r\n</h3>\r\n<p>\r\n	FileChannel实例的size()方法将返回该实例所关联文件的大小。如:\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">long fileSize = channel.size();</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	FileChannel的truncate方法\r\n</h3>\r\n<p>\r\n	可以使用FileChannel.truncate()方法截取一个文件。截取文件时，文件将中指定长度后面的部分将被删除。如：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">channel.truncate(1024);</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	这个例子截取文件的前1024个字节。\r\n</p>\r\n<h3>\r\n	FileChannel的force方法\r\n</h3>\r\n<p>\r\n	FileChannel.force()方法将通道里尚未写入磁盘的数据强制写到磁盘上。出于性能方面的考虑，操作系统会将数据缓存在内存中，所以无法保证写入到FileChannel里的数据一定会即时写到磁盘上。要保证这一点，需要调用force()方法。\r\n</p>\r\n<p>\r\n	force()方法有一个boolean类型的参数，指明是否同时将文件元数据（权限信息等）写到磁盘上。\r\n</p>\r\n<p>\r\n	下面的例子同时将文件数据和元数据强制写到磁盘上：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">channel.force(true);</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/file-channel/\">Java NIO系列教程（七） FileChannel</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-13 05:38:17',0,'Java NIO系列教程（七） FileChannel',0),(55,'admin',18,'<p>\r\n	<a href=\"http://code.google.com/p/guava-libraries/wiki/UsingAndAvoidingNullExplained\"><span style=\"line-height:1.5;\">原文链接</span></a> <a href=\"http://ifeve.com/?p=8785\" target=\"_blank\"><span style=\"line-height:1.5;\">译文链接</span></a><span style=\"line-height:1.5;\"> 译者:&nbsp;沈义扬</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://en.wikipedia.org/wiki/Doug_Lea\"><span style=\"line-height:1.5;\">Doug Lea</span></a><span style=\"line-height:1.5;\"> 说，“Null 真糟糕。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">当</span><a href=\"http://en.wikipedia.org/wiki/C._A._R._Hoare\"><span style=\"line-height:1.5;\">Sir C. A. R. Hoare</span></a><span style=\"line-height:1.5;\"> 使用了null引用后说，”使用它导致了十亿美金的错误。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">轻率地使用null可能会导致很多令人惊愕的问题。通过学习Google底层代码库，我们发现95%的集合类不接受null值作为元素。我们认为， 相比默默地接受null，使用快速失败操作拒绝null值对开发者更有帮助。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">此外，Null的含糊语义让人很不舒服。Null很少可以明确地表示某种语义，例如，Map.get(key)返回Null时，可能表示map中的值是null，亦或map中没有key对应的值。Null可以表示失败、成功或几乎任何情况。使用Null以外的特定值，会让你的逻辑描述变得更清晰。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">Null确实也有合适和正确的使用场景，如在性能和速度方面Null是廉价的，而且在对象数组中，出现Null也是无法避免的。但相对于底层库来说，在应用级别的代码中，Null往往是导致混乱，疑难问题和模糊语义的元凶，就如同我们举过的Map.get(key)的例子。最关键的是，Null本身没有定义它表达的意思。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">鉴于这些原因，很多Guava工具类对Null值都采用快速失败操作，除非工具类本身提供了针对Null值的因变措施。此外，</span><a><span style=\"line-height:1.5;\">Guava</span></a><span style=\"line-height:1.5;\">还提供了很多工具类，让你更方便地用特定值替换Null值。</span>\r\n</p>\r\n<p>\r\n	<strong><span style=\"line-height:1.5;\">具体案例</span></strong> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">不要在Set中使用null，或者把null作为map的键值。使用特殊值代表null会让查找操作的语义更清晰。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">如果你想把null作为map中某条目的值，更好的办法是 不把这一条目放到map中，而是单独维护一个”值为null的键集合” (null keys)。Map 中对应某个键的值是null，和map中没有对应某个键的值，是非常容易混淆的两种情况。因此，最好把值为null的键分离开，并且仔细想想，null值的键在你的项目中到底表达了什么语义。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">如果你需要在列表中使用null——并且这个列表的数据是稀疏的，使用Map</span><integer, e=\"\"><span style=\"line-height:1.5;\">可能会更高效，并且更准确地符合你的潜在需求。</span></integer,>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">此外，考虑一下使用自然的null对象——特殊值。举例来说，为某个enum类型增加特殊的枚举值表示null，比如java.math.RoundingMode就定义了一个枚举值UNNECESSARY，它表示一种不做任何舍入操作的模式，用这种模式做舍入操作会直接抛出异常。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">如果你真的需要使用null值，但是null值不能和Guava中的集合实现一起工作，你只能选择其他实现。比如，用JDK中的Collections.unmodifiableList替代Guava的ImmutableList</span>\r\n</p>\r\n<p>\r\n	<strong><span style=\"line-height:1.5;\">Optional</span></strong> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">大多数情况下，开发人员使用null表明的是某种缺失情形：可能是已经有一个默认值，或没有值，或找不到值。例如，Map.get返回null就表示找不到给定键对应的值。</span>\r\n</p>\r\n<p>\r\n	<a><span style=\"line-height:1.5;\">Guava</span></a><span style=\"line-height:1.5;\">用</span><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html\"><span style=\"line-height:1.5;\">Optional</span></a><span style=\"line-height:1.5;\">表示可能为null的T类型引用。一个Optional实例可能包含非null的引用（我们称之为引用存在），也可能什么也不包括（称之为引用缺失）。它从不说包含的是null值，而是用存在或缺失来表示。但Optional从不会包含null值引用。</span>\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">Optionalpossible = Optional.of(5);\r\n\r\npossible.isPresent(); // returns true\r\n\r\npossible.get(); // returns 5\r\n</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	<span style=\"line-height:1.5;\">Optional无意直接模拟其他编程环境中的”可选” or “可能”语义，但它们的确有相似之处。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">Optional最常用的一些操作被罗列如下：</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">创建Optional实例（以下都是静态方法）：</span>\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#of(T)\"><span style=\"line-height:1.5;\">Optional.of(T)</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">创建指定引用的Optional实例，若引用为null则快速失败</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#absent()\"><span style=\"line-height:1.5;\">Optional.absent()</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">创建引用缺失的Optional实例</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#fromNullable(T)\"><span style=\"line-height:1.5;\">Optional.fromNullable(T)</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">创建指定引用的Optional实例，若引用为null则表示缺失</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style=\"line-height:1.5;\">用Optional实例查询引用（以下都是非静态方法）：</span>\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#isPresent()\"><span style=\"line-height:1.5;\">boolean isPresent()</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">如果Optional包含非null的引用（引用存在），返回true</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#get()\"><span style=\"line-height:1.5;\">T get()</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">返回Optional所包含的引用，若引用缺失，则抛出java.lang.IllegalStateException</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#or(T)\"><span style=\"line-height:1.5;\">T or(T)</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">返回Optional所包含的引用，若引用缺失，返回指定的值</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#orNull()\"><span style=\"line-height:1.5;\">T orNull()</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">返回Optional所包含的引用，若引用缺失，返回null</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html#asSet()\"><span style=\"line-height:1.5;\">SetasSet()</span></a> \r\n			</td>\r\n			<td>\r\n				<span style=\"line-height:1.5;\">返回Optional所包含引用的单例不可变集，如果引用存在，返回一个只有单一元素的集合，如果引用缺失，返回一个空集合。</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style=\"line-height:1.5;\">使用Optional的意义在哪儿？</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">使用Optional除了赋予null语义，增加了可读性，最大的优点在于它是一种傻瓜式的防护。Optional迫使你积极思考引用缺失的情况，因为你必须显式地从Optional获取引用。直接使用null很容易让人忘掉某些情形，尽管FindBugs可以帮助查找null相关的问题，但是我们还是认为它并不能准确地定位问题根源。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">如同输入参数，方法的返回值也可能是null。和其他人一样，你绝对很可能会忘记别人写的方法method(a,b)会返回一个null，就好像当你实现method(a,b)时，也很可能忘记输入参数a可以为null。将方法的返回类型指定为Optional，也可以迫使调用者思考返回的引用缺失的情形。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">其他处理null的便利方法</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">当你需要用一个默认值来替换可能的null，请使用</span><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Objects.html#firstNonNull(T, T)\"><span style=\"line-height:1.5;\">Objects.firstNonNull(T, T)</span></a><span style=\"line-height:1.5;\"> 方法。如果两个值都是null，该方法会抛出</span><a><span style=\"line-height:1.5;\">NullPointerException</span></a><span style=\"line-height:1.5;\">。Optional也是一个比较好的替代方案，例如：Optional.of(first).or(second).</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">还有其它一些方法专门处理null或空字符串：</span><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Strings.html#emptyToNull(java.lang.String)\"><span style=\"line-height:1.5;\">emptyToNull(String)</span></a><span style=\"line-height:1.5;\">，</span><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Strings.html#nullToEmpty(java.lang.String)\"><span style=\"line-height:1.5;\">nullToEmpty(String)</span></a><span style=\"line-height:1.5;\">，</span><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Strings.html#isNullOrEmpty(java.lang.String)\"><span style=\"line-height:1.5;\">isNullOrEmpty(String)</span></a><span style=\"line-height:1.5;\">。我们想要强调的是，这些方法主要用来与混淆null/空的API进行交互。当每次你写下混淆null/空的代码时，Guava团队都泪流满面。（好的做法是积极地把null和空区分开，以表示不同的含义，在代码中把null和空同等对待是一种令人不安的坏味道。</span>\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">（全文完）如果您喜欢此文请点赞，分享，评论。</span>\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		<span style=\"line-height:1.5;\">原创文章转载请注明出处：</span><a href=\"http://ifeve.com/google-guava-using-and-avoiding-null/\"><span style=\"line-height:1.5;\">[Google Guava] 1.1-使用和避免null</span></a> \r\n	</li>\r\n</ul>',NULL,'2014-05-13 06:02:47','2014-05-13 05:41:19',0,'[Google Guava] 1.1-使用和避免null',0),(56,'admin',18,'<p>\r\n	<a href=\"http://code.google.com/p/guava-libraries/wiki/PreconditionsExplained\" target=\"_blank\">原文链接</a>&nbsp;<a href=\"http://ifeve.com/?p=8798\" target=\"_blank\">译文链接</a>&nbsp;译者:&nbsp;沈义扬\r\n</p>\r\n<p>\r\n	前置条件：让方法调用的前置条件判断更简单。\r\n</p>\r\n<p>\r\n	Guava在<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html\" target=\"_blank\">Preconditions</a>类中提供了若干前置条件判断的实用方法，我们强烈建议<a href=\"http://piotrjagielski.com/blog/working-with-static-imports-in-eclipse/\" target=\"_blank\">在Eclipse中静态导入这些方法</a>。每个方法都有三个变种：\r\n</p>\r\n<ul>\r\n	<li>\r\n		没有额外参数：抛出的异常中没有错误消息；\r\n	</li>\r\n	<li>\r\n		有一个Object对象作为额外参数：抛出的异常使用Object.toString() 作为错误消息；\r\n	</li>\r\n	<li>\r\n		有一个String对象作为额外参数，并且有一组任意数量的附加Object对象：这个变种处理异常消息的方式有点类似<a>printf</a>，但考虑GWT的兼容性和效率，只支持%s指示符。例如：\r\n	</li>\r\n</ul>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">checkArgument(i &gt;= 0, \"Argument was %s but expected nonnegative\", i);\r\ncheckArgument(i &lt; j, \"Expected i &lt; j, but %s &gt; %s\", i, j);</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				方法声明（不包括额外参数）\r\n			</td>\r\n			<td>\r\n				描述\r\n			</td>\r\n			<td>\r\n				检查失败时抛出的异常\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html#checkArgument(boolean)\">checkArgument(boolean)</a> \r\n			</td>\r\n			<td>\r\n				检查boolean是否为true，用来检查传递给方法的参数。\r\n			</td>\r\n			<td>\r\n				IllegalArgumentException\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html#checkNotNull(T)\">checkNotNull(T)</a> \r\n			</td>\r\n			<td>\r\n				检查value是否为null，该方法直接返回value，因此可以内嵌使用checkNotNull。\r\n			</td>\r\n			<td>\r\n				NullPointerException\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html#checkState(boolean)\">checkState(boolean)</a> \r\n			</td>\r\n			<td>\r\n				用来检查对象的某些状态。\r\n			</td>\r\n			<td>\r\n				IllegalStateException\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html#checkElementIndex(int, int)\">checkElementIndex(int index, int size)</a> \r\n			</td>\r\n			<td>\r\n				检查index作为索引值对某个列表、字符串或数组是否有效。index&gt;=0 &amp;&amp; index&lt;size *\r\n			</td>\r\n			<td>\r\n				IndexOutOfBoundsException\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html#checkPositionIndex(int, int)\">checkPositionIndex(int index, int size)</a> \r\n			</td>\r\n			<td>\r\n				检查index作为位置值对某个列表、字符串或数组是否有效。index&gt;=0 &amp;&amp; index&lt;=size *\r\n			</td>\r\n			<td>\r\n				IndexOutOfBoundsException\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html#checkPositionIndexes(int, int, int)\">checkPositionIndexes(int start, int end, int size)</a> \r\n			</td>\r\n			<td>\r\n				检查[start, end]表示的位置范围对某个列表、字符串或数组是否有效*\r\n			</td>\r\n			<td>\r\n				IndexOutOfBoundsException\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	译者注：\r\n</p>\r\n<p>\r\n	*索引值常用来查找列表、字符串或数组中的元素，如List.get(int), String.charAt(int)\r\n</p>\r\n<p>\r\n	*位置值和位置范围常用来截取列表、字符串或数组，如List.subList(int，int), String.substring(int)\r\n</p>\r\n<p>\r\n	相比<a>Apache</a>&nbsp;Commons提供的类似方法，我们把<a>Guava</a>中的Preconditions作为首选。Piotr Jagielski在<a href=\"http://piotrjagielski.com/blog/google-guava-vs-apache-commons-for-argument-validation/\">他的博客</a>中简要地列举了一些理由：\r\n</p>\r\n<ul>\r\n	<li>\r\n		在静态导入后，<a>Guava</a>方法非常清楚明晰。checkNotNull清楚地描述做了什么，会抛出什么异常；\r\n	</li>\r\n	<li>\r\n		checkNotNull直接返回检查的参数，让你可以在构造函数中保持字段的单行赋值风格：this.field = checkNotNull(field)\r\n	</li>\r\n	<li>\r\n		简单的、参数可变的<a>printf</a>风格异常信息。鉴于这个优点，在JDK7已经引入<a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#requireNonNull(java.lang.Object,java.lang.String)\">Objects.requireNonNull</a>的情况下，我们仍然建议你使用checkNotNull。\r\n	</li>\r\n</ul>\r\n<p>\r\n	在编码时，如果某个值有多重的前置条件，我们建议你把它们放到不同的行，这样有助于在调试时定位。此外，把每个前置条件放到不同的行，也可以帮助你编写清晰和有用的错误消息。\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/google-guava-preconditions/\">[Google Guava] 1.2-前置条件</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-13 06:21:13',0,'[Google Guava] 1.2-前置条件',0),(57,'admin',12,'<p>\r\n	<span style=\"font-size:14px;\">CPU，一般认为写C/C++的才需要了解，写高级语言的(Java/C#/pathon...)并不需要了解那么底层的东西。我一开始也是这么想的，但直到碰到LMAX的</span><a href=\"http://lmax-exchange.github.io/disruptor/\" target=\"_blank\"><span style=\"font-size:14px;\">Disruptor</span></a><span style=\"font-size:14px;\">，以及</span><a href=\"http://ifeve.com/mechanical-sympathy/\" target=\"_blank\"><span style=\"font-size:14px;\">马丁的博文</span></a><span style=\"font-size:14px;\">，才发现写Java的，更加不能忽视CPU。经过一段时间的阅读，希望总结一下自己的阅读后的感悟。本文主要谈谈CPU缓存对Java编程的影响，不涉及具体CPU缓存的机制和实现。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">现代CPU的缓存结构一般分三层，L1，L2和L3。如下图所示：</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/i/219598/201403/181102059598094.jpg\" alt=\"\" style=\"width:650px;\" />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">级别越小的缓存，越接近CPU， 意味着速度越快且容量越少。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">L1是最接近CPU的，它容量最小，速度最快，每个核上都有一个L1 Cache(准确地说每个核上有两个L1 Cache， 一个存数据 L1d Cache， 一个存指令 L1i Cache)；</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">L2 Cache 更大一些，例如256K，速度要慢一些，一般情况下每个核上都有一个独立的L2 Cache；</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">L3 Cache是三级缓存中最大的一级，例如12MB，同时也是最慢的一级，在同一个CPU插槽之间的核共享一个L3 Cache。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当CPU运作时，它首先去L1寻找它所需要的数据，然后去L2，然后去L3。如果三级缓存都没找到它需要的数据，则从内存里获取数据。寻找的路径越长，耗时越长。所以如果要非常频繁的获取某些数据，保证这些数据在L1缓存里。这样速度将非常快。下表表示了CPU到各缓存和内存之间的大概速度：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">从CPU到 &nbsp; &nbsp; 　　大约需要的CPU周期 &nbsp;大约需要的时间(单位ns)</span><br />\r\n<span style=\"font-size:14px;\"> 寄存器 &nbsp; &nbsp; &nbsp; &nbsp;　　1 cycle </span><br />\r\n<span style=\"font-size:14px;\"> L1 Cache &nbsp; 　　&nbsp;~3-4 cycles &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;~0.5-1 ns</span><br />\r\n<span style=\"font-size:14px;\"> L2 Cache	　　　~10-20 cycles	　　~3-7 ns</span><br />\r\n<span style=\"font-size:14px;\"> L3 Cache	　　　~40-45 cycles	　　~15 ns</span><br />\r\n<span style=\"font-size:14px;\"> 跨槽传输　　　　　　　　　　　　　&nbsp;~20 ns</span><br />\r\n<span style=\"font-size:14px;\"> 内存	　　　　　 &nbsp;~120-240 cycles &nbsp;~60-120ns</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">利用CPU-Z可以查看CPU缓存的信息：</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/i/219598/201403/181119578964012.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在linux下可以使用下列命令查看：</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/i/219598/201403/181123266778328.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">有了上面对CPU的大概了解，我们来看看缓存行(Cache line)。缓存，是由缓存行组成的。一般一行缓存行有64字节(由上图\"64-byte line size\"可知)。所以使用缓存时，并不是一个一个字节使用，而是一行缓存行、一行缓存行这样使用；换句话说，CPU存取缓存都是按照一行，为最小单位操作的。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这意味着，如果没有好好利用缓存行的话，程序可能会遇到性能的问题。可看下面的程序：</span>\r\n</p>\r\n<div>\r\n	<span style=\"font-size:14px;\">\r\n<pre class=\"prettyprint lang-java\">public class L1CacheMiss {\r\n    private static final int RUNS = 10;\r\n    private static final int DIMENSION_1 = 1024 * 1024;\r\n    private static final int DIMENSION_2 = 6;\r\n\r\n    private static long[][] longs;\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        Thread.sleep(10000);\r\n        longs = new long[DIMENSION_1][];\r\n        for (int i = 0; i &lt; DIMENSION_1; i++) {\r\n            longs[i] = new long[DIMENSION_2];\r\n            for (int j = 0; j &lt; DIMENSION_2; j++) {\r\n                longs[i][j] = 0L;\r\n            }\r\n        }\r\n        System.out.println(\"starting....\");\r\n\r\n        long sum = 0L;\r\n        for (int r = 0; r &lt; RUNS; r++) {\r\n\r\n            final long start = System.nanoTime();\r\n\r\n            //slow\r\n//            for (int j = 0; j &lt; DIMENSION_2; j++) {\r\n//                for (int i = 0; i &lt; DIMENSION_1; i++) {\r\n//                    sum += longs[i][j];\r\n//                }\r\n//            }\r\n\r\n            //fast\r\n            for (int i = 0; i &lt; DIMENSION_1; i++) {\r\n                for (int j = 0; j &lt; DIMENSION_2; j++) {\r\n                    sum += longs[i][j];\r\n                }\r\n            }\r\n\r\n            System.out.println((System.nanoTime() - start));\r\n        }\r\n\r\n    }\r\n}</pre>\r\n</span><br />\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">以我所使用的Xeon E3 CPU和64位操作系统和64位JVM为例，如</span><a href=\"http://zh.wikipedia.org/wiki/CPU%E7%BC%93%E5%AD%98#.E7.BC.96.E8.AF.91.E5.99.A8.E4.BC.98.E5.8C.96\" target=\"_blank\"><span style=\"font-size:14px;\">这里</span></a><span style=\"font-size:14px;\">所说，假设编译器采用行主序存储数组。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">64位系统，Java数组对象头固定占16字节（未证实），而long类型占8个字节。所以16+8*6=64字节，刚好等于一条缓存行的长度：</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/i/219598/201403/181527337562263.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如32-36行代码所示，每次开始内循环时，从内存抓取的数据块实际上覆盖了longs[i][0]到longs[i][5]的全部数据（刚好64字节）。因此，内循环时所有的数据都在L1缓存可以命中，遍历将非常快。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">假如，将32-36行代码注释而用25-29行代码代替，那么将会造成大量的缓存失效。因为每次从内存抓取的都是同行不同列的数据块（如longs[i][0]到longs[i][5]的全部数据），但循环下一个的目标，却是同列不同行（如longs[0][0]下一个是longs[1][0]，造成了longs[0][1]-longs[0][5]无法重复利用）。运行时间的差距如下图，单位是微秒(us)：</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://images.cnitblog.com/i/219598/201403/181549200374619.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">最后，我们都希望需要的数据都在L1缓存里，但事实上经常事与愿违，所以缓存失效 (Cache Miss)是常有的事，也是我们需要避免的事。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">一般来说，缓存失效有三种情况：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1. 第一次访问数据, 在cache中根本不存在这条数据, 所以cache miss, 可以通过</span><a href=\"http://zh.wikipedia.org/wiki/CPU%E7%BC%93%E5%AD%98#.E9.A2.84.E5.8F.96\" target=\"_blank\"><span style=\"font-size:14px;\">prefetch</span></a><span style=\"font-size:14px;\">解决。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2. cache冲突, 需要通过补齐来解决（伪共享的产生）。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3. cache满, 一般情况下我们需要减少操作的数据大小, 尽量按数据的物理顺序访问数据。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">参考：</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://mechanitis.blogspot.hk/2011/07/dissecting-disruptor-why-its-so-fast_22.html\" target=\"_blank\"><span style=\"font-size:14px;\">http://mechanitis.blogspot.hk/2011/07/dissecting-disruptor-why-its-so-fast_22.html</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"http://coderplay.iteye.com/blog/1485760\" target=\"_blank\"><span style=\"font-size:14px;\">http://coderplay.iteye.com/blog/1485760</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><a href=\"http://en.wikipedia.org/wiki/CPU_cache\" target=\"_blank\">http://en.wikipedia.org/wiki/CPU_cache</a></span> \r\n</p>\r\n<p>\r\n	原文链接：<a href=\"http://www.cnblogs.com/techyc/p/3607085.html\">http://www.cnblogs.com/techyc/p/3607085.html</a>\r\n</p>',NULL,NULL,'2014-05-13 09:10:28',0,'写Java也得了解CPU--CPU缓存',0),(58,'admin',17,'<span style=\"font-size:14px;\">在社会化分工、软件行业细分专业化的趋势下，会真的参与到底层系统实现的人肯定是越来越少（比例上说）。真的会参与到JVM实现的人肯定是少数。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 但如果您对JVM是如何实现的有兴趣、充满好奇，却苦于没有足够系统的知识去深入，那么这个豆列就是为您打好基础而准备的。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 如果只想用用Java用用JVM，对深入到实现细节无甚兴趣的话，这个豆列就请不必参考了，免得浪费钱浪费时间精力，呵呵 :-)&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 本豆列的脉络是：&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 1. JVM与Java语言规范&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 要了解JVM是如何实现的，首先必须要知道JVM到底是什么、不是什么，表面上应该提供怎样的功能。为此，JVM规范必读，而且应该时常放在手边参考。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 而JVM的主要服务对象是Java编程语言。虽然JVM也可以支持众多其它语言，但JVM里的“J”仍然最重要，Java的语言特性影响了JVM的原始设计，所以Java语言规范也应该阅读。特别是，JVM关于线程和同步相关的规定都是交由Java语言规范的相关章节定义的。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 2. 虚拟机概论&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 这里选取《Virtual Machines: Versatile Platforms for Systems and Processes》，帮助您了解“虚拟机”一词到底指代什么，有什么不同类型，大概有哪些实现方法，等等。读完这本书有助获得一个清晰的大局观。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 3. 为Java程序员从用户的角度介绍JVM的使用经验的几本书&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 虽然这几本并没有深入到JVM实现的非常细节的角落，但对已经习惯用Java语言编程的程序员来说，有这么几本书带领自己从熟悉的领域进入不熟悉的领域总是件好事。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 这几本书中，最深入JVM内部的是《Oracle JRockit: The Definitive Guide》；有丰富调优建议的是《Java Performance》；结合实现大概介绍JVM的抽象概念的是周志明的《深入理解Java虚拟机》。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 4. 虚拟机的入门级实现&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 先通过《Language Implementation Patterns》了解编程语言的一些入门级实现方式，把高级语言编译器与虚拟机两个概念联系起来。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 然后通过《プログラミング言語を作る》了解非常简易的、用树遍历式以及字节码式解释器实现虚拟机大概是个怎么回事。虽然这本书没有实现JVM，但它介绍的Diksam与早期JVM的实现颇有相似之处，可参考。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 接下来《深入嵌入式Java虚拟机》介绍了一种实际的JVM——KVM的实现细节。KVM是CLDC的参考实现（RI）里的JVM，结构简单，资源消耗小，适合入门阅读。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 这部分最后是《The School of Niklaus Wirth》，里面有一章介绍了HotSpot Client Compiler (C1)的原始设计思路。这是个非常简单、但相对来说性能还不错的JIT编译器，可用于对JIT编译器的基本了解。这本书本身就很赞，不为学习虚拟机也可以一读。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 需要注意的是从“简易的JVM实现”到“高性能、复杂的JVM实现”跨度非常大；前者的许多部分的实现方式与后者相当不同。先从简易的实现开始入手主要是为了对JVM里大概都有些什么组件有所了解。但如果目标是了解高性能JVM的实现，那就必须在GC、编译原理方面打下更好的基础，重新洗一次脑。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 5. C++基础书&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 下面要开始逐渐深入JVM的内部实现，如果没有良好的C或（与？）C++基础会比较吃力。虽然也有几乎完全用Java语言实现的高性能JVM，例如Maxine VM与Jikes RVM，但它们都是研究性质的；商用JVM实现仍然是C与C++的天下。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 这里我先推荐C++之父自己写的那本书来入门。虽然BS巨巨后来还出过本新书，而近来也渐渐开始有介绍C++11的入门书，但实际上现在多数JVM实现用的还是C99或非常古老的C++（连C++03都不一定用到了），所以用这本老书应该就够了。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 然后通过《深度探索C++对象模型》来学习C++对象模型的常见实现方式。这对后面理解Java对象模型的实现很有帮助。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 6. GC与编译原理的入门书&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> GC书总共就那么几本，倒也没啥可挑的。《The Garbage Collection Handbook》是绝对必读。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 编译原理的书就稍微尴尬些。现有的编译原理书大都针对静态编译器、针对像C或C++那样的偏静态、偏native的语言。我还没读到过什么编译原理书是专门介绍JIT编译器或者说动态编译器的。静态与动态编译器会有些取舍上、实现策略上的差异，不过还好其核心的原理都是一样的，所以还是可以推荐几本书。龙书用来最初入门，鲸书用来补充一些优化相关的知识，EAC第二版用来学习编译器一种比较良好的逻辑组织方式，最后学一下针对现代机器的优化。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 7. 介绍计算机体系结构的书&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 实际JVM实现里，如果有JIT编译器或者动态编译器那它们的编译目标多半是底层机器的机器码。这就涉及到计算机体系结构了。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 如果您只对Java语言和抽象的JVM有一定了解，那可以用《计算机组成及汇编语言原理》来入门。这本书比较奇葩，用JVM的字节码指令集来当作真实机器介绍体系结构的概念。我并不太喜欢这本书，但感觉它对有Java背景的初学者来说应该有点用。要注意的是千万别只读这本书来入门，请结合CSAPP来重新洗一次脑。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 如果对C或C++已经有所了解，那《深入理解计算机系统》（CSAPP）是计算机体系结构入门的最适合的书了。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 8. 进一步阅读&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 到此为止各种抽象概念应该都了解得差不多了。那么要在真实的机器上实现高性能JVM，就必须要对真实机器的指令集细节有所了解。x86/x86-64、SPARC、ARM、MIPS，要在哪个平台上做高性能实现就要学习哪个平台的指令集及指令级别优化技巧。这里就不具体推荐书了。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 操作系统层面的知识同样重要。像是说JVM要实现线程、内存分配啥的，都可能要跟系统调用或CRT对系统调用的包装打交道。这部分也需要另外找书来读。我回头再考虑下要不要加几本道这个豆列里来。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 另外，从80年代开始高级语言虚拟机的实现技术有了突飞猛进的发展，但却没有专门的书对这个领域做综述和导读。多数有用的资料其实还是在论文里。光靠读书是远远不够用的，论文这块也请关注。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 顺便广告一下：我的博客里关于虚拟机的文章也推荐给大家阅读：</span><a href=\"http://www.douban.com/link2/?url=http%3A%2F%2Frednaxelafx.iteye.com%2Fblog%2F362738&amp;link2key=532fd15c5c\" target=\"_blank\"><span style=\"font-size:14px;\">http://rednaxelafx.iteye.com/blog/362738</span></a><span style=\"font-size:14px;\">&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> =====================================&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 这个豆列没有漏掉《Inside the Java Virtual Machine, Second Edition》（</span><a href=\"http://www.douban.com/link2/?url=http%3A%2F%2Fbook.douban.com%2Fsubject%2F1788390%2F\"><span style=\"font-size:14px;\">http://book.douban.com/subject/1788390/</span></a><span style=\"font-size:14px;\">&nbsp;，中文版《深入Java虚拟机(原书第2版)》，</span><a href=\"http://www.douban.com/link2/?url=http%3A%2F%2Fbook.douban.com%2Fsubject%2F1138768%2F\"><span style=\"font-size:14px;\">http://book.douban.com/subject/1138768/</span></a><span style=\"font-size:14px;\">） ，只是我现在已经不再推荐它了。这本书刚出版的时候确实引起了一番学习Java虚拟机的热潮，但其部分内容从现在的角度看已经过时，特别是涉及JVM实现的部分。像火车算法什么的现在已经没有JVM实现使用。不过话说回来，了解了解这些过时的信息也没什么不好，前提是能自己分辨清楚哪些信息是适用于现在的JVM的，而哪些已经成为了历史。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> &nbsp;</span><br />\r\n<p>\r\n	<span style=\"font-size:14px;\"> 另外有一本清华大学出版社出的《解析Java虚拟机开发——权衡优化.高效和安全的最优方案》（</span><a href=\"http://www.douban.com/link2/?url=http%3A%2F%2Fbook.douban.com%2Fsubject%2F24757135%2F\"><span style=\"font-size:14px;\">http://book.douban.com/subject/24757135/</span></a><span style=\"font-size:14px;\"></span><span style=\"font-size:14px;\">），这本纯粹是对周志明的《深入理解Java虚拟机》一书的抄袭。然而抄袭也抄得很不给力，印刷、排版都不如原版。建议不要购买。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">原文链接：<a href=\"http://book.douban.com/doulist/2545443/\">http://book.douban.com/doulist/2545443/</a>&nbsp;</span>\r\n</p>',NULL,NULL,'2014-05-13 09:35:34',0,'从表到里学习JVM实现',0),(59,'admin',14,'<p>\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/socket-channel.html\" target=\"_blank\">原文链接</a> 作者：Jakob Jenkov &nbsp; &nbsp;&nbsp;译者：郑玉婷 &nbsp; &nbsp; &nbsp;校对：丁一\r\n</p>\r\n<p>\r\n	Java NIO中的SocketChannel是一个连接到TCP网络套接字的通道。可以通过以下2种方式创建SocketChannel：\r\n</p>\r\n<ol>\r\n	<li>\r\n		打开一个SocketChannel并连接到互联网上的某台服务器。\r\n	</li>\r\n	<li>\r\n		一个新连接到达ServerSocketChannel时，会创建一个SocketChannel。\r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	打开 SocketChannel\r\n</h3>\r\n<p>\r\n	下面是SocketChannel的打开方式：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">SocketChannel socketChannel = SocketChannel.open();\r\nsocketChannel.connect(new InetSocketAddress(\"http://jenkov.com\", 80));\r\n</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	关闭 SocketChannel\r\n</h3>\r\n<p>\r\n	当用完SocketChannel之后调用SocketChannel.close()关闭SocketChannel：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">socketChannel.close();</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	从 SocketChannel 读取数据\r\n</h3>\r\n<p>\r\n	要从SocketChannel中读取数据，调用一个read()的方法之一。以下是例子：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">ByteBuffer buf = ByteBuffer.allocate(48);\r\nint bytesRead = socketChannel.read(buf);</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	首先，分配一个Buffer。从SocketChannel读取到的数据将会放到这个Buffer中。\r\n</p>\r\n<p>\r\n	然后，调用SocketChannel.read()。该方法将数据从SocketChannel 读到Buffer中。read()方法返回的int值表示读了多少字节进Buffer里。如果返回的是-1，表示已经读到了流的末尾（连接关闭了）。\r\n</p>\r\n<h3>\r\n	写入 SocketChannel\r\n</h3>\r\n<p>\r\n	写数据到SocketChannel用的是SocketChannel.write()方法，该方法以一个Buffer作为参数。示例如下：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">String newData = \"New String to write to file...\" + System.currentTimeMillis();\r\n\r\nByteBuffer buf = ByteBuffer.allocate(48);\r\nbuf.clear();\r\nbuf.put(newData.getBytes());\r\n\r\nbuf.flip();\r\n\r\nwhile(buf.hasRemaining()) {\r\n    channel.write(buf);\r\n}\r\n\r\n</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	注意SocketChannel.write()方法的调用是在一个while循环中的。Write()方法无法保证能写多少字节到SocketChannel。所以，我们重复调用write()直到Buffer没有要写的字节为止。\r\n</p>\r\n<h3>\r\n	非阻塞模式\r\n</h3>\r\n<p>\r\n	可以设置 SocketChannel 为非阻塞模式（non-blocking mode）.设置之后，就可以在异步模式下调用connect(), read() 和write()了。\r\n</p>\r\n<h4>\r\n	connect()\r\n</h4>\r\n<p>\r\n	如果SocketChannel在非阻塞模式下，此时调用connect()，该方法可能在连接建立之前就返回了。为了确定连接是否建立，可以调用finishConnect()的方法。像这样：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">socketChannel.configureBlocking(false);\r\nsocketChannel.connect(new InetSocketAddress(\"http://jenkov.com\", 80));\r\n\r\nwhile(! socketChannel.finishConnect() ){\r\n    //wait, or do something else...\r\n}</pre>\r\n<br />\r\n</div>\r\n<h4>\r\n	write()\r\n</h4>\r\n<p>\r\n	非阻塞模式下，write()方法在尚未写出任何内容时可能就返回了。所以需要在循环中调用write()。前面已经有例子了，这里就不赘述了。\r\n</p>\r\n<h4>\r\n	read()\r\n</h4>\r\n<p>\r\n	非阻塞模式下,read()方法在尚未读取到任何数据时可能就返回了。所以需要关注它的int返回值，它会告诉你读取了多少字节。\r\n</p>\r\n<h3>\r\n	非阻塞模式与选择器\r\n</h3>\r\n<p>\r\n	非阻塞模式与选择器搭配会工作的更好，通过将一或多个SocketChannel注册到Selector，可以询问选择器哪个通道已经准备好了读取，写入等。Selector与SocketChannel的搭配使用会在后面详讲。\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/socket-channel/\">Java NIO系列教程（八） SocketChannel</a> \r\n	</li>\r\n</ul>',NULL,'2014-05-14 09:05:31','2014-05-14 09:04:30',0,'Java NIO系列教程（八） SocketChannel',0),(60,'admin',20,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">认证就是客户端要给服务器出示一些自己的身份证明，来证明自己是谁！一旦服务器知道了客户端的身份，就可以判定客户端可以访问的事务和资源了。 在HTTP中，认证通常是通过提供用户名和密码来进行认证的。我们来介绍一下常用的两种认证方式：基本认证与摘要认证！</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\"><strong>一、基本认证</strong></span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">在基本认证中，Web服务器可以拒绝一个事务，质询客户端，请用户提供有效的用户名和密码。服务器会返回401状态码来初始化认证质询，并用WWW-Authenticate响应首部指定要访问的安全域。浏览器收到质询时，会打开一个对话框，请求用户输入这个域的用户名和密码，然后将用户名和密码用Base64编码，再用Authorization请求首部回送给服务器。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">1.基本认证实例</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">1）用户请求服务器上某资源：/family/jeff.jpg。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2）服务器回送一条401 Authrization Required，对此资源进行密码质询。同时通过WWW-Authenticate首部说明如何以及在哪里认证。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">3）浏览器收到401质询，弹出认证对话框。用户输入用户名和密码后，浏览器会用一个冒号将其连接在一起，并经过Base64编码，然后将其放入Authorization首部发送给服务器。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">4）服务器对用户名和密码进行解码，验证他们的正确性，然后用一条HTTP 200 OK报文返回所请求的资源。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2.基本认证缺点</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">1）基本认证会通过网络发送用户名和密码，这些用户名和密码以Base64编码，Base64编码是一种可逆编码，非常容易破解，所以基本认证相当于以明文的方式传输用户名和密码，非常容易被第三方拦截！</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2）使用基本认证登录后，除非关闭浏览器或者清除历史记录，不然无法登出！</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">3）基本认证没有考虑到重放攻击，即使base64编码是不可逆的，攻击者也可以通过重放攻击来获得服务器的信任。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\"><strong>二、摘要认证</strong></span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">为了弥补基本认证的不足，摘要认证做了以下改进：</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">1）以密文（不可逆）形式发送密码。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2）防止重放攻击</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">1.如何加密？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">摘要认证遵循的箴言是“绝不通过网络发送密码”，客户端不会发送密码，而是会发送一个指纹或密码的“摘要”，这是密码的不可逆扰码。客户端和服务器都知道密码，因此服务器可以验证所提供的摘要是否与密码相配。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">摘要是对信息主题的浓缩。摘要是一种单向函数，主要用于将无限的输入值转换为有限的浓缩输出。常见的摘要函数MD5，会将任意长度的字节序列转换为一个128位的摘要。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2.如何防止重放攻击？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">使用单向散列函数加密密码，可以保证密码不以明文形式传送，但是仅仅隐藏密码并不能避免危险，因为即便是不知道密码，攻击者可以通过截获摘要，一遍遍的重放给服务器。在重放攻击的角度，加密和不加密没有区别。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">摘要认证中防止重放攻击的前提条件是客户端和服务器都知道密码的明文形式。服务器先发送给客户端一个随机数，客户端使用散列函数加密随机数和密码，然后发送给服务器端。这样即使第三方截获报文，利用重放攻击进行认证也无济于事，因为每次事务的随机数不一样！</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><span style=\"font-size:16px;\">原文链接：</span><a href=\"http://guolei.us/http-authentication/\"><span style=\"font-size:16px;\">http://guolei.us/http-authentication/</span></a></span> \r\n</p>',NULL,'2014-05-14 13:40:32','2014-05-14 13:39:44',0,'HTTP协议：基本认证与摘要认证',0),(61,'admin',4,'<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	在画类图的时候，理清类和类之间的关系是重点。类的关系有泛化(Generalization)、实现（Realization）、依赖(Dependency)和关联(Association)。其中关联又分为一般关联关系和聚合关系(Aggregation)，合成关系(Composition)。下面我们结合实例理解这些关系。\r\n</p>\r\n<h4 style=\"font-size:16px;font-family:宋体;\">\r\n	基本概念\r\n</h4>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	类图（Class Diagram）: 类图是面向对象系统建模中最常用和最重要的图，是定义其它图的基础。类图主要是用来显示系统中的类、接口以及它们之间的静态结构和关系的一种静态模型。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	类图的3个基本组件：类名、属性、方法。&nbsp;\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/afca0365.jpg\" width=\"246\" height=\"184\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	泛化(generalization)：表示is-a的关系，是对象之间耦合度最大的一种关系，子类继承父类的所有细节。直接使用语言中的继承表达。在类图中使用带三角箭头的实线表示，箭头从子类指向父类。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/df7a6535.jpg\" width=\"475\" height=\"298\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	实现（Realization）:在类图中就是接口和实现的关系。这个没什么好讲的。在类图中使用带三角箭头的虚线表示，箭头从实现类指向接口。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/0c834dc1.jpg\" width=\"260\" height=\"287\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	依赖(Dependency)：对象之间最弱的一种关联方式，是临时性的关联。代码中一般指由局部变量、函数参数、返回值建立的对于其他对象的调用关系。一个类调用被依赖类中的某些方法而得以完成这个类的一些职责。在类图使用带箭头的虚线表示，箭头从使用类指向被依赖的类。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/3c13e1c1.jpg\" width=\"619\" height=\"525\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	关联(Association) : 对象之间一种引用关系，比如客户类与订单类之间的关系。这种关系通常使用类的属性表达。关联又分为一般关联、聚合关联与组合关联。后两种在后面分析。在类图使用带箭头的实线表示，箭头从使用类指向被关联的类。可以是单向和双向。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/940065f4.jpg\" width=\"410\" height=\"165\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	聚合(Aggregation) : 表示has-a的关系，是一种不稳定的包含关系。较强于一般关联,有整体与局部的关系,并且没有了整体,局部也可单独存在。如公司和员工的关系，公司包含员工，但如果公司倒闭，员工依然可以换公司。在类图使用空心的菱形表示，菱形从局部指向整体。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/aafc5bec.jpg\" width=\"417\" height=\"138\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	组合(Composition) : 表示contains-a的关系，是一种强烈的包含关系。组合类负责被组合类的生命周期。是一种更强的聚合关系。部分不能脱离整体存在。如公司和部门的关系，没有了公司，部门也不能存在了；调查问卷中问题和选项的关系；订单和订单选项的关系。在类图使用实心的菱形表示，菱形从局部指向整体。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/660db5e8.jpg\" width=\"518\" height=\"311\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	多重性(Multiplicity) : 通常在关联、聚合、组合中使用。就是代表有多少个关联对象存在。使用数字..星号（数字）表示。如下图，一个割接通知可以关联0个到N个故障单。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/b72557a8.jpg\" width=\"541\" height=\"168\" />\r\n</p>\r\n<h4 style=\"font-size:16px;font-family:宋体;\">\r\n	聚合和组合的区别\r\n</h4>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	这两个比较难理解，重点说一下。聚合和组合的区别在于：聚合关系是“has-a”关系，组合关系是“contains-a”关系；聚合关系表示整体与部分的关系比较弱，而组合比较强；聚合关系中代表部分事物的对象与代表聚合事物的对象的生存期无关，一旦删除了聚合对象不一定就删除了代表部分事物的对象。组合中一旦删除了组合对象，同时也就删除了代表部分事物的对象。\r\n</p>\r\n<h4 style=\"font-size:16px;font-family:宋体;\">\r\n	实例分析\r\n</h4>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	联通客户响应OSS。系统有故障单、业务开通、资源核查、割接、业务重保、网络品质性能等功能模块。现在我们抽出部分需求做为例子讲解。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	大家可以参照着类图，好好理解。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<img src=\"http://www.uml.org.cn/oobject/images/04e78de6.jpg\" width=\"781\" height=\"555\" />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	1． 通知分为一般通知、割接通知、重保通知。这个是继承关系。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	2． NoticeService和实现类NoticeServiceImpl是实现关系。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	3． NoticeServiceImpl通过save方法的参数引用Notice,是依赖关系。同时调用了BaseDao完成功能，也是依赖关系。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	4． 割接通知和故障单之间通过中间类(通知电路)关联，是一般关联。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	5． 重保通知和预案库间是聚合关系。因为预案库可以事先录入，和重保通知没有必然联系，可以独立存在。在系统中是手工从列表中选择。删除重保通知，不影响预案。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	6． 割接通知和需求单之间是聚合关系。同理，需求单可以独立于割接通知存在。也就是说删除割接通知，不影响需求单。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	7． 通知和回复是组合关系。因为回复不能独立于通知存在。也就是说删除通知，该条通知对应的回复也要级联删除。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	经过以上的分析，相信大家对类的关系已经有比较好的理解了。大家有什么其它想法或好的见解，欢迎拍砖。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	PS：还是那句话：以上类图用Enterprise Architect 7.5所画，在此推荐一下EA,非常不错。可以替代Visio和Rose了。Visio功能不够强大，Rose太重。唯有EA比较合适。\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:12pt;font-family:宋体;\">\r\n	原文链接：<a href=\"http://www.uml.org.cn/oobject/201104212.asp\">http://www.uml.org.cn/oobject/201104212.asp</a>\r\n</p>',NULL,NULL,'2014-05-14 15:40:44',0,'UML类图与类的关系详解',0),(62,'admin',4,'<h1>\r\n	<span style=\"font-size:16px;\">一、简介</span>\r\n</h1>\r\n<p>\r\n	在UML类图中，类之间的关系可以分成：关联(association)、聚合(aggregation)、组合(composition)、依赖(dependency)、泛化(generalization)/继承(inheritance)和实现(realization)。这六种关系如下图所描绘：\r\n</p>\r\n<p>\r\n	<a href=\"http://static.oschina.net/uploads/space/2014/0420/102330_lYoU_941605.png\" target=\"_blank\"><img src=\"http://static.oschina.net/uploads/space/2014/0420/102330_lYoU_941605.png\" alt=\"\" /></a> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	上面的关系可以解读如下:\r\n</div>\r\n<ul>\r\n	<li>\r\n		(关联)Association：A类有B类有逻辑上的连接\r\n	</li>\r\n	<li>\r\n		(聚合)Aggregation :&nbsp;A类有一个B类\r\n	</li>\r\n	<li>\r\n		(组合)Composition : A类拥有一个B类\r\n	</li>\r\n	<li>\r\n		(依赖)Dependency : A类使用了B类\r\n	</li>\r\n	<li>\r\n		(继承)Inheritance : B类是一个A类 &nbsp;(或者B类扩展A类)\r\n	</li>\r\n	<li>\r\n		(实现)Realization : B类实现了接口A\r\n	</li>\r\n</ul>\r\n本篇文章主要是展示在Java中如何表示这些关系&nbsp;,以便我们可以更好地理解这些关系并且知道如何以及何时使用每一种关系。\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:16px;\">二、关联(association)</span>\r\n</h1>\r\n<div>\r\n	关联描述两个类之间行为的一般二元关系。例如，一个学生选修一门特定的课程是学生类Student和课程类Course之间的一个关联，而一个教师教授一门课程是师资类Faculty和课程类Course之间的一个关联。Java代码中，关联可以用属性和方法来实现。\r\n</div>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">public class Student {\r\n    private Course[] courses;\r\n          \r\n    public void addCourse(Course s) {\r\n        . . . . . .\r\n    }\r\n}\r\n\r\npublic class Course {\r\n    private Strudent[] students;\r\n    private Faculty faculty;\r\n\r\n    public void addStudent(Student s) {\r\n        . . . . . .\r\n    }\r\n\r\n    public void setFaculty(Faculty faculty) {\r\n        this.faculty = faculty;\r\n    }\r\n}\r\n\r\npublic class Faculty {\r\n    private Course[] courses;\r\n           \r\n    public void addCourse(Course s) {\r\n        . . . . . .\r\n    } \r\n}</pre>\r\n<br />\r\n</div>\r\n<h1>\r\n	<span style=\"font-size:16px;\">三、聚合(Aggregation)</span>\r\n</h1>\r\n<p>\r\n	聚合是一种特殊的关联(Association)形式，表示两个对象之间的所属(has-a)关系。所有者对象称为聚合对象，它的类称为聚合类；从属对象称为被聚合对象，它的类称为被聚合类。例如，一个公司有很多员工就是公司类Company和员工类Employee之间的一种聚合关系。被聚合对象和聚合对象有着各自的生命周期，即如果公司倒闭并不影响员工的存在。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public class Company {\r\n    private Listemployees;\r\n}\r\n\r\npublic class Employee {\r\n    private String name;   \r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;font-size:16px;\"><strong> 四、组合(Composition)</strong></span> \r\n</p>\r\n<p>\r\n	聚合是一种较弱形式的对象包含(一个对象包含另一个对象)关系。较强形式是组合(Composition). 在组合关系中包含对象负责被包含对象的创建以及生命周期，即当包含对象被销毁时被包含对象也会不复存在。例如一辆汽车拥有一个引擎是汽车类Car与引擎类Engine的组合关系。下面是组合的一些例子。\r\n</p>\r\n<p>\r\n	(1)通过成员变量初始化\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public class Car {\r\n    private final Engine engine = new Engine();       \r\n}\r\n\r\nclass Engine {\r\n    private String type;\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	(2)通过构造函数初始化\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public class Car {\r\n    private final Engine engine;  \r\n       \r\n    public Car(){\r\n       engine  = new Engine();\r\n    }\r\n}\r\n\r\npublic class Engine {\r\n    private String type;\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	(3)通过延迟初始化\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public class Car {\r\n    private final Engine engine;  \r\n    public Engine getEngine() {\r\n        if (null == engine) {\r\n            engine = new Engine();\r\n        }\r\n        return engine;\r\n    }     \r\n}\r\n\r\npublic class Engine {\r\n    private String type;\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<h1>\r\n	<span style=\"font-size:16px;\">五、依赖(Dependency)</span>\r\n</h1>\r\n<p>\r\n	依赖(Dependency)描述的是一个类的引用用作另一个类的方法的参数。例如，可以使用Calendar类中的setTime(Date date)方法设置日历，所以Calendar和Date之间的关系可以用依赖描述。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public abstract class Calendar implements Serializable, Cloneable, Comparable{\r\n\r\n    public final void setTime(Date date) {\r\n        setTimeInMillis(date.getTime());\r\n    }\r\n      \r\n    . . . . . .\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	在依赖关系中，类之间是松耦合的。\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:16px;\">六、继承(Inheritance)</span>\r\n</h1>\r\n<p>\r\n	继承(Inheritance)模拟两个类之间的is-a关系。强是(strong is-a)关系描述两个类之间的直接继承关系。弱是(weak is-a)关系描述一个类具有某个属性。强是关系可以用类的继承表示。例如，Spring的ApplicationEvent是一个EventObject，ApplicationEvent和EventObject间就是一种强是关系，可以用继承描述。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public abstract class ApplicationEvent extends EventObject {\r\n    . . . . . .\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:16px;\">七、实现(Realization)</span>\r\n</h1>\r\n<p>\r\n	实现(Realization)描述的是一个类实现了接口（可以是多个）。上面描述的弱是(weak is-a)关系就可以用接口表示。例如字符串是可以被序列化的，这就可以用实现来描述。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public final class String  implements java.io.Serializable, Comparable, CharSequence {\r\n    . . . . . .\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	<span style=\"font-size:16px;\">八、参考资料</span>\r\n</h1>\r\n<p>\r\n	<a href=\"http://usna86-techbits.blogspot.com/2012/11/uml-class-diagram-relationships.html\">http://usna86-techbits.blogspot.com/2012/11/uml-class-diagram-relationships.html</a> \r\n</p>\r\n<p>\r\n	<a href=\"http://javarevisited.blogspot.com/2014/02/ifference-between-association-vs-composition-vs-aggregation.html\">http://javarevisited.blogspot.com/2014/02/ifference-between-association-vs-composition-vs-aggregation.html</a> \r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	<br />\r\n</p>',NULL,'2014-05-14 15:51:52','2014-05-14 15:51:00',0,'UML类图中的六大关系：关联、聚合、组合、依赖、继承、实现',0),(63,'admin',4,'<p>\r\n	<span style=\"font-size:14px;\">&nbsp;Filter base class that guarantees to be just executed once per request,</span><span style=\"font-size:14px;\">&nbsp;on any servlet container. It provides a {@link #doFilterInternal}&nbsp;</span><span style=\"font-size:14px;\">&nbsp;method with HttpServletRequest and HttpServletResponse arguments.</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><img src=\"/upload/image/20140514/20140514161846_471.png\" alt=\"\" width=\"800\" height=\"549\" title=\"\" align=\"\" /><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>',NULL,NULL,'2014-05-14 16:19:10',0,'OncePerRequestFilter 类图',0),(64,'admin',4,'<h1 style=\"font-size:24px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\">一、简介</span><span></span> \r\n</h1>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">CRON表达式是由6个或</span><span style=\"font-family:\'Microsoft YaHei\';\">7</span><span style=\"font-family:\'Microsoft YaHei\';\">个由空格分隔的元素组成的字符串，这些元素可以包含任何允许的值，以及该元素所允许的特殊字符的不同组合。元素如下：</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';\">表</span><span style=\"font-family:\'Microsoft YaHei\';\">1-1 &nbsp;CRON</span><span style=\"font-family:\'Microsoft YaHei\';\">表达式允许的元素和值</span><span></span></i></span> \r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"padding:0px;margin:0px;font-family:微软雅黑, Verdana, sans-serif, 宋体;border:1px solid #F8F8F8;font-size:12px;color:#444444;width:643px;background-color:white;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><span style=\"font-family:\'Microsoft YaHei\';\">元素</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><span style=\"font-family:\'Microsoft YaHei\';\">是否必须</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><span style=\"font-family:\'Microsoft YaHei\';\">允许的值</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><span style=\"font-family:\'Microsoft YaHei\';\">允许的特殊字符</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">秒</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">Y</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0-59</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * /</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">分钟</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">Y</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0-59</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * /</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">小时</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">Y</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0-23</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * /</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">日期</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">Y</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1-31</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * ? / L W</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">月份</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">Y</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1-12 </span><span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">或者</span><span style=\"font-family:\'Microsoft YaHei\';\"> JAN-DEC</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * /</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">星期</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">Y</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1-7 </span><span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">或者</span><span style=\"font-family:\'Microsoft YaHei\';\"> SUN-SAT</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * ? / L #</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">年份</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">N</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">空 或者</span><span style=\"font-family:\'Microsoft YaHei\';\"> 1970-2199</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">, - * /</span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<span id=\"OSC_h1_2\" style=\"color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;line-height:23px;background-color:#FFFFFF;\"></span><span style=\"color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;line-height:23px;background-color:#FFFFFF;\"></span> \r\n<h1 style=\"font-size:24px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\">二、特殊字符说明</span> \r\n</h1>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">*：用来指定所有值。例如，如果元素分钟为“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">*</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”，那么就表示每一分钟；</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">?：用来表示无指定值。只有日期和星期这两个元素可以使用“？”。当你想要指定这两个元素中的一个元素的值时非常有用，因为</span><span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">日期和星期不能同时设值</span></i></span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">。例如，如果想在某个月特定的一天（比如</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">10</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号）触发，但是不管那一天是星期几，则可以将元素日期的值设置为“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">10</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”，元素星期的值设置为“？”；</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">-：用来指定范围内的值。例如，元素小时为“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">10-12</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”，则表示</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">10</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">点、</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">11</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">点、</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">12</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">点；</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">,： 用来分隔一个元素的多个值。例如，元素星期为</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">\"MON,WED,FRI\"</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">，则表示周一、周三和周五；</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">/：用来表示增量。例如，元素秒为“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">0/15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”，则表示第</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">0</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">, 15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒，</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">30</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒以及</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">45</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒。 元素秒为“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">5/15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">, </span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">则表示</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">第</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">5</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒，</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">20</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">,35</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒以及</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">50</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">秒</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">。 在\"/\"前指定</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">“*”</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">等价于在\"/\"前指定</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">0</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">作为起始值。对于表达式的每个元素都有数字范围，具体参见表</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">1-1</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">，\"/\"</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">只是在给定值范围内每隔</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">N</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">触发。因此请特别注意，月份为</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">\"7/6\"</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">，表示仅在</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">7</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">月份触发，并不是每</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">6</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">个月触发一次。</span><span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">斜杠前的数字表示起始值，后面的数字表示增量</span></i></span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">。</span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">L：只能用于“日期”和“星期”这两个元素。这个字符是“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">last</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”的缩写，但是对于这两个不同的元素，有着不同的含义。例如，对于日期元素，值“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">L</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”代表“这个月的最后一天”——</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">1</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">月份是</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">31</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号，闰年的二月份是</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">28</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号。如果“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">L</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”用于星期元素，则简单的表示“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">7</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”或者“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">SAT</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”；但是如果它跟在数字后面用于星期元素，则表示“这个月最后的</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">XXX</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">天”——例如“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">6L</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”或者“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">FRIL</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”都表示“这个月最后一个星期五”。你也可以从某个月的最后一天指定一个偏移量，例如“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">L-3</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”表示历月的倒数第</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">3</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">天。 注意，当使用选项“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">L</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”时，不要指定列表值或者范围值，否则结果会让你比较困惑。</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">W：用来指定离给定日期最近的工作日</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">(</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">星期一至星期五</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">)</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">，只能用于日期元素。例如，</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">15W，则表示离这个月</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号最近的工作日。如果</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号是星期六，那么触发器将会在</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">14</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号星期五触发。如果</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号是星期天，那么触发器将会在</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">16</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号星期一触发。如果</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号是星期二，那么它将在</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">15</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号星期二触发。然而如果你指定“日期”元素的值为“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">1W</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”，并且</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">1</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号是星期六，触发器将在</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">3</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">号星期一触发</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">,</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">它不会跨跃一个月的天数边界。</span><span></span><span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">只有当日期是单一的一天才能指定“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">W</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">”，而不能是一个日期范围或者列表</span></i></span><span></span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">。</span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">#：只能用于元素星期。该字符用来指定这个月第</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">N</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">个星期</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">X</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">。例如“</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">6#3</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">”，它表示这个月第三个星期五(6 =星期五，</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">\"#3\" =</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">这个月第三个</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">)</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">。再如，</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">“2#1”</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">表示这个月第一个星期一</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">,</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\"> \"4#5\"表示这个月第五个星期四。注意如果你指定\"#5\"并且这个月没有</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">5</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">个给定的星期，那么这个月将不会触发。如果使用字符</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">\'#\'</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">，元素星期只能使用一个表达式（</span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">\"3#1,6#3\" </span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">是无效的，因为有两个表达式）。</span><span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">#</span></i></span><span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">前面的数字代表星期几，后面的数字表示是第几个</span></i></span><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;background-color:#FF9900;\">。</span><span></span> \r\n</p>\r\n<span id=\"OSC_h1_3\" style=\"color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;line-height:23px;background-color:#FFFFFF;\"></span><span style=\"color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;line-height:23px;background-color:#FFFFFF;\"></span> \r\n<h1 style=\"font-size:24px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\">三、配置示例</span><span></span> \r\n</h1>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">下面是</span><span style=\"font-family:\'Microsoft YaHei\';\">CRON</span><span style=\"font-family:\'Microsoft YaHei\';\">表达式的一些配置示例：</span><span></span> \r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"padding:0px;margin:0px;font-family:微软雅黑, Verdana, sans-serif, 宋体;border:1px solid #F8F8F8;font-size:12px;color:#444444;width:703px;background-color:white;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><span style=\"font-family:\'Microsoft YaHei\';\">表达式</span><span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><span style=\"font-family:\'Microsoft YaHei\';\">含义</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 0 12 * * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天中午</span><span style=\"font-family:\'Microsoft YaHei\';\">12:00</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 ? * *</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 * * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 * * ? *</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 * * ? 2005</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2005</span><span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">年的每天上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 * 14 * * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天，从下午</span><span style=\"font-family:\'Microsoft YaHei\';\">2:00</span><span style=\"font-family:\'Microsoft YaHei\';\">到</span><span style=\"font-family:\'Microsoft YaHei\';\">2:59</span><span style=\"font-family:\'Microsoft YaHei\';\">，每分钟触发一次</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 0/5 14 * * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天，从下午</span><span style=\"font-family:\'Microsoft YaHei\';\">2:00</span><span style=\"font-family:\'Microsoft YaHei\';\">到</span><span style=\"font-family:\'Microsoft YaHei\';\">2:55</span><span style=\"font-family:\'Microsoft YaHei\';\">，每五分钟触发一次</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 0/5 14,18 * * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天，从下午</span><span style=\"font-family:\'Microsoft YaHei\';\">2:00</span><span style=\"font-family:\'Microsoft YaHei\';\">到</span><span style=\"font-family:\'Microsoft YaHei\';\">2:55</span><span style=\"font-family:\'Microsoft YaHei\';\">，每五分钟触发一次，并且从下午</span><span style=\"font-family:\'Microsoft YaHei\';\">6:00</span><span style=\"font-family:\'Microsoft YaHei\';\">到</span><span style=\"font-family:\'Microsoft YaHei\';\">6:55</span><span style=\"font-family:\'Microsoft YaHei\';\">，每五分钟触发一次</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 0-5 14 * * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每天，从下午</span><span style=\"font-family:\'Microsoft YaHei\';\">2:00</span><span style=\"font-family:\'Microsoft YaHei\';\">到</span><span style=\"font-family:\'Microsoft YaHei\';\">2:05</span><span style=\"font-family:\'Microsoft YaHei\';\">，每分钟触发一次</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 10,44 14 ? 3 WED</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">三月份的每个星期三的下午</span><span style=\"font-family:\'Microsoft YaHei\';\">2:10</span><span style=\"font-family:\'Microsoft YaHei\';\">和下午</span><span style=\"font-family:\'Microsoft YaHei\';\">2:44</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 ? * MON-FRI</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">从星期一到星期五每天上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 15 * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每个月</span><span style=\"font-family:\'Microsoft YaHei\';\">15</span><span style=\"font-family:\'Microsoft YaHei\';\">号上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 L * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每个月最后一天上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 ? * 6L</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每个月最后一个星期五上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 ? * 6L 2002-2005</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2002, 2003, 2004</span><span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">以及</span><span style=\"font-family:\'Microsoft YaHei\';\">2005</span><span style=\"font-family:\'Microsoft YaHei\';\">年的每个月最后一个星期五上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 15 10 ? * 6#3</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每个月第三个星期五的上午</span><span style=\"font-family:\'Microsoft YaHei\';\">10:15</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 0 12 1/5 * ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每个月从第一天中午</span><span style=\"font-family:\'Microsoft YaHei\';\">12:00</span><span style=\"font-family:\'Microsoft YaHei\';\">开始，每</span><span style=\"font-family:\'Microsoft YaHei\';\">5</span><span style=\"font-family:\'Microsoft YaHei\';\">天触发一次</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">0 11 11 11 11 ?</span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-family:\'\';\"><span style=\"font-family:\'Microsoft YaHei\';\">每年</span><span style=\"font-family:\'Microsoft YaHei\';\">11</span><span style=\"font-family:\'Microsoft YaHei\';\">月</span><span style=\"font-family:\'Microsoft YaHei\';\">11</span><span style=\"font-family:\'Microsoft YaHei\';\">日上午</span><span style=\"font-family:\'Microsoft YaHei\';\">11:11</span><span style=\"font-family:\'Microsoft YaHei\';\">触发</span><span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><i><span style=\"font-family:\'Microsoft YaHei\';background-color:#FF9900;\">0 0 23-7/2,8 * * ?</span></i></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"border:1px solid #F8F8F8;\">\r\n				<p style=\"font-size:12.5px;\">\r\n					<span style=\"font-weight:600;\"><i><span style=\"font-family:\'color:red;\"><span style=\"font-family:\'Microsoft YaHei\';background-color:#FF9900;\">晚上</span><span style=\"font-family:\'Microsoft YaHei\';background-color:#FF9900;\">11</span><span style=\"font-family:\'Microsoft YaHei\';background-color:#FF9900;\">点到早上</span><span style=\"font-family:\'Microsoft YaHei\';background-color:#FF9900;\">8</span><span style=\"font-family:\'Microsoft YaHei\';background-color:#FF9900;\">点之间每两个小时触发一次，早上八点触发一次</span><span></span></span></i></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\"> </span> \r\n</p>\r\n<span id=\"OSC_h1_4\" style=\"color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;line-height:23px;background-color:#FFFFFF;\"></span><span style=\"color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:13px;line-height:23px;background-color:#FFFFFF;\"></span> \r\n<h1 style=\"font-size:24px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\">四、</span><span style=\"font-family:\'Microsoft YaHei\';font-size:18px;\">注意事项</span><span></span> \r\n</h1>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">1、 本文档基于</span><span style=\"font-family:\'Microsoft YaHei\';\">Quartz 2.2.X</span><span style=\"font-family:\'Microsoft YaHei\';\">。</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">2、 支持范围溢出，即左边的值比右边的值大。例如，可以使用“</span><span style=\"font-family:\'Microsoft YaHei\';\">22-2</span><span style=\"font-family:\'Microsoft YaHei\';\">”来表示当天</span><span></span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">晚上</span><span style=\"font-family:\'Microsoft YaHei\';\">10</span><span style=\"font-family:\'Microsoft YaHei\';\">点到第二天凌晨</span><span style=\"font-family:\'Microsoft YaHei\';\">2</span><span style=\"font-family:\'Microsoft YaHei\';\">点</span><span style=\"font-family:\'Microsoft YaHei\';\">, </span><span style=\"font-family:\'Microsoft YaHei\';\">或者也可以使用“</span><span style=\"font-family:\'Microsoft YaHei\';\">NOV-FEB</span><span style=\"font-family:\'Microsoft YaHei\';\">”。过度使用范围溢出来创建范围没有任何意义。</span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\"><br />\r\n</span> \r\n</p>\r\n<p style=\"font-size:13px;color:#333333;font-family:微软雅黑, Verdana, sans-serif, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">原文链接：<a href=\"http://my.oschina.net/jackieyeah/blog/182091\">http://my.oschina.net/jackieyeah/blog/182091</a></span> \r\n</p>',NULL,'2014-05-14 16:47:49','2014-05-14 16:47:07',0,'Spring Cron Expression 学习',0),(65,'admin',14,'<p>\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/server-socket-channel.html\" target=\"_blank\">原文链接</a>&nbsp; &nbsp; &nbsp;作者：Jakob Jenkov &nbsp; &nbsp;&nbsp;译者：郑玉婷 &nbsp; &nbsp; &nbsp;校对：丁一\r\n</p>\r\n<p>\r\n	Java NIO中的 ServerSocketChannel 是一个可以监听新进来的TCP连接的通道, 就像标准IO中的ServerSocket一样。ServerSocketChannel类在 java.nio.channels包中。\r\n</p>\r\n<p>\r\n	<br />\r\n这里有个例子：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();\r\n\r\nserverSocketChannel.socket().bind(new InetSocketAddress(9999));\r\n\r\nwhile(true){\r\n    SocketChannel socketChannel =\r\n            serverSocketChannel.accept();\r\n\r\n    //do something with socketChannel...\r\n}</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	打开 ServerSocketChannel\r\n</h3>\r\n<p>\r\n	通过调用 ServerSocketChannel.open() 方法来打开ServerSocketChannel.如：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();</pre>\r\n<br />\r\n</div>\r\n<h3>\r\n	关闭 ServerSocketChannel\r\n</h3>\r\n<p>\r\n	通过调用ServerSocketChannel.close() 方法来关闭ServerSocketChannel. 如：\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">serverSocketChannel.close();</pre>\r\n</p>\r\n<h3>\r\n	监听新进来的连接\r\n</h3>\r\n<p>\r\n	通过 ServerSocketChannel.accept() 方法监听新进来的连接。当 accept()方法返回的时候,它返回一个包含新进来的连接的 SocketChannel。因此, accept()方法会一直阻塞到有新连接到达。\r\n</p>\r\n<p>\r\n	通常不会仅仅只监听一个连接,在while循环中调用 accept()方法. 如下面的例子：\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">while(true){\r\n    SocketChannel socketChannel =\r\n            serverSocketChannel.accept();\r\n\r\n    //do something with socketChannel...\r\n}</pre>\r\n</p>\r\n<p>\r\n	当然,也可以在while循环中使用除了true以外的其它退出准则。\r\n</p>\r\n<h3>\r\n	非阻塞模式\r\n</h3>\r\n<p>\r\n	ServerSocketChannel可以设置成非阻塞模式。在非阻塞模式下，accept() 方法会立刻返回，如果还没有新进来的连接,返回的将是null。 因此，需要检查返回的SocketChannel是否是null.如：\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();\r\n\r\nserverSocketChannel.socket().bind(new InetSocketAddress(9999));\r\nserverSocketChannel.configureBlocking(false);\r\n\r\nwhile(true){\r\n    SocketChannel socketChannel =\r\n            serverSocketChannel.accept();\r\n\r\n    if(socketChannel != null){\r\n        //do something with socketChannel...\r\n    }\r\n}</pre>\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/server-socket-channel/\">Java NIO系列教程（九） ServerSocketChannel</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-15 04:31:04',0,'Java NIO系列教程（九） ServerSocketChannel',0),(66,'admin',14,'<p>\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/datagram-channel.html\" target=\"_blank\">原文链接</a> 作者：Jakob Jenkov &nbsp; &nbsp;译者：郑玉婷 &nbsp; &nbsp;&nbsp;校对：丁一\r\n</p>\r\n<p>\r\n	Java NIO中的DatagramChannel是一个能收发UDP包的通道。因为UDP是无连接的网络协议，所以不能像其它通道那样读取和写入。它发送和接收的是数据包。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">打开 DatagramChannel</span> \r\n</h3>\r\n<p>\r\n	下面是 DatagramChannel 的打开方式：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">DatagramChannel channel = DatagramChannel.open();\r\nchannel.socket().bind(new InetSocketAddress(9999));</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	这个例子打开的 DatagramChannel可以在UDP端口9999上接收数据包。\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">接收数据</span> \r\n</h3>\r\n<p>\r\n	通过receive()方法从DatagramChannel接收数据，如：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">ByteBuffer buf = ByteBuffer.allocate(48);\r\nbuf.clear();\r\nchannel.receive(buf);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	receive()方法会将接收到的数据包内容复制到指定的Buffer. 如果Buffer容不下收到的数据，多出的数据将被丢弃。\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">发送数据</span> \r\n</h3>\r\n<p>\r\n	通过send()方法从DatagramChannel发送数据，如:\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">String newData = \"New String to write to file...\" + System.currentTimeMillis();\r\n\r\nByteBuffer buf = ByteBuffer.allocate(48);\r\nbuf.clear();\r\nbuf.put(newData.getBytes());\r\nbuf.flip();\r\n\r\nint bytesSent = channel.send(buf, new InetSocketAddress(\"jenkov.com\", 80));</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						8\r\n					</td>\r\n					<td>\r\n						int&nbsp;bytesSent = channel.send(buf,&nbsp;new&nbsp;InetSocketAddress(\"jenkov.com\",&nbsp;80));\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	这个例子发送一串字符到”jenkov.com”服务器的UDP端口80。 因为服务端并没有监控这个端口，所以什么也不会发生。也不会通知你发出的数据包是否已收到，因为UDP在数据传送方面没有任何保证。\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">连接到特定的地址</span> \r\n</h3>\r\n<p>\r\n	可以将DatagramChannel“连接”到网络中的特定地址的。由于UDP是无连接的，连接到特定地址并不会像TCP通道那样创建一个真正的连接。而是锁住DatagramChannel ，让其只能从特定地址收发数据。\r\n</p>\r\n<p>\r\n	这里有个例子:\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">channel.connect(new InetSocketAddress(\"jenkov.com\", 80));</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	当连接后，也可以使用read()和write()方法，就像在用传统的通道一样。只是在数据传送方面没有任何保证。这里有几个例子：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">int bytesRead = channel.read(buf);\r\nint bytesWritten = channel.write(but);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/datagram-channel/\">Java NIO系列教程（十） Java NIO DatagramChannel</a> \r\n	</li>\r\n</ul>',NULL,'2014-05-15 15:32:22','2014-05-15 15:30:54',0,'Java NIO系列教程（十） Java NIO DatagramChannel',0),(67,'admin',16,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><img src=\"/upload/image/20140515/20140515172324_758.jpg\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1623年6月19日，位于法国中部的克勒蒙菲朗的一个贵族家庭中，伴随着“哇”的一声啼哭，一个小精灵降临人世。自生下了小帕斯卡，家里增添了无限生机和欢乐。帕其卡生下时十分瘦弱，为使他长大成才，父母操尽了心。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡的父亲是位并不著名的数学家，但却是一位较有名望的税务统计师。他酷爱数学，深深地体会到数学是一门探索性很强的学科。他担心孩子学数学会劳神伤身，出于对儿子溺爱，他决心不让帕斯卡涉足数学。当然，父亲的顾虑是多余的。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">小帕斯卡天赋很高，他虽体弱多病，但从清秀的眉宇间却透露出一股灵气。他勤奋好学，兴趣广泛，平时很少外出玩耍，整天如饥似渴地看书学习，做札记。他七八岁就学完了差不多相当于小学的全部课程。他充满幻想，富有才气，尽管父亲把自己的全部数学书籍都收藏起来，只让他看语文书和儿童诗歌，连学校开设的数学课也不让他上，可是，这一切还是不能阻碍帕斯卡对数学产生浓厚的兴趣。而且父亲越是不让他学习数学，他心里萌发的探索数学奥秘的愿望越是强烈。那年，他12岁，常听到父亲与朋友们谈论“几何”，他听不懂，不知“几何”为何物，就去问老师。老师告诉他：“几何就是作出正确无误的图形，并找出它们之间的比例关系的一门科学。”他深信几何是一门十分有趣的学科，便偷偷地借来几本几何书，边读边用鹅毛笔在纸上画几何图形，兴味无穷。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1635年，帕斯卡随父亲迁居巴黎。初秋的巴黎郊外，气候宜人，景色美丽。一天，帕斯卡和父亲到郊外游玩，回到家里，准备稍作休息后一起共进晚餐。这时，帕斯卡好像自言自语，又好像是告诉父亲一件重大事情似地说：“三角形三个内角的总和是两个直角。”父亲为儿子的这一见解惊呆了，楞了半人说不出话来。儿子的见解意味着一个不平常的发现。这个发现来自一个年仅12岁的少年，做父亲的内心不知有多么激动。他抚摸着帕斯卡的头，过了好半天才喃喃地说：“是的，孩子，是的。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡的重大发现改变了父亲的做法。父亲挑选了欧几里得的《几何原本》给儿子学习，也不再阻拦他上数学课，平时还常为他解答疑难问题，并带帕斯卡参观各种科技展览，参加数学、物理的学术讨论会，鼓励他大胆地发表自己的见解。帕斯卡接触到了不少当时著名的数学家、物理学家、机械师……他领略到了数学的奥秘，眼界大开，学识上大有长进。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1639年，刚满16岁的帕斯卡对圆锥曲线等问题进行了大量的研究，掌握了圆锥曲线的共性，写出了震惊世界的论文。1640年《圆锥曲线论》一书出版，人们把他的这一伟大贡献誉为“阿波罗尼斯之后的二千年的巨大进步。”从此，帕斯卡英名传遍欧洲。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡的父亲，作为一名数学家和税务统计师，每天要解答各方面提出的疑难问题，在一旁的帕斯卡看到父亲整天苦于统计大量的数据，便产生了强烈的愿望，要造一个理想的计算工具，来解脱父亲的辛劳。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以前的计算工具和计算方法如笔算、算表、算图等速度慢，精度低，远远不能满足当时统计工作的需要。1642年，19岁的帕斯卡决心研制一种新的计算工具。帕斯卡有他的特点，一旦他对某件事发生兴趣，就会不顾一切地想方设法去完成。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡研究了机器运转的各种传动机构，又走访听取了一些著名工匠的意见，对自己设计的计算机图纸反复推敲，不断试验，不断改进，最后定样。他根据数的进位制（十进位制）想到了采用齿轮来表示各个数位上的数字，通过齿轮的比来解决进位问题。低位的齿轮每转动10圈，高位上的齿轮只转动1圈。这样采用一组水平齿轮和一组垂直齿轮相互啮合转动，解决计算和自动进位，组成了一台计算机。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡于1642年设计出了计算机的图纸，连外壳和齿轮用什么样的金属材料都作了认真的选择，同年造出了一台计算机。这是世界上第一台齿轮式计算机。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡的这台计算机可以计算到8位数字，表示数字的齿轮共16个，每个齿轮均分成10个齿，每个齿表示0～9中的一个数，并按大小排列。8个齿轮在上面组成垂直齿轮组，从左到右构成8位读数，分别表示个位数、十位数、百位数……千万位数；另外8个齿轮在下面组成水平齿轮组，从左到右可以进行8位数的加减。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡发明的钟表式齿轮计算机，是机械式计算机的初级阶段。它的外壳用黄铜制成，精致美观。但这台计算机的功能还很差，做乘法时必须用连加的方法；做除法时，也只能用连减的方法，而且这台机器需用一个小钥匙拨动一下方能计算，每次计算结束，都必须复原到零位以后，方可重新计算，很不方便。在计算过程中它又常发生故障。但是帕斯卡计算机的发明对以后计算机的发展具有深远的影响。帕斯卡一下子成了著名人物。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6年后，帕斯卡对自己发明的计算机提出了专利申请，1649年获得专利权。当他的计算机在卢森堡宫展出时，成千上万的人被吸引住了。帕斯卡自己也为这一伟大杰作而陶醉，他时常到卢森堡宫去看这件不朽的“艺术品”，深感自豪。帕斯卡计算机的发明是人类在计算工具上的新突破。它发明的意义远远超出了这台计算机本身的使用价值，它告诉人们用纯机械装置可代替人的思维和记忆。从此在欧洲兴起了“大家来造思维工具”的热潮。至今还有很多游人和学者慕名前往卢森堡宫参观这一历史上的珍品——世界上第一台齿轮式计算机。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，帕斯卡发明制造的齿轮式计算机还保留有6台。其中5台在巴黎艺术和手工艺品博物馆内，一台保存在德累斯顿的物理教学沙龙。这些计算机长约30～侧厘米，宽15厘米，高10厘米，是科学史上难得的珍品。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕斯卡一直被公认为世界上第一台齿轮式计算机的发明者，他也为自己的这一成就而感到无比自豪。但在帕斯卡发明之前，德国的数学家卡什尔已设计制造出6位数的齿轮式计算机。卡什尔是著名的东方语言学家，数学家。他对天文学也有颇深的研究。他常困于大量的数据计算，被繁杂的计算搅得精疲力尽。现实中的问题促使他创造一种新的得力的计算工具，来减轻计算上的沉重负担。1623年，他开始着手构思设计，同年造出了样机，以后又进行了一些改进。这台计算机的原理与帕斯卡的有相同之处，使用过程中也极易发生故障。从历史上来看，人们对卡什尔发明计算机了解很少，它的社会影响极小，直到1958年，人们才在有关历史资料中得知他发明齿轮式计算机的情况。因此，在谈到第一个齿轮式计算机发明时，不能不提及卡什尔。实际上，卡什尔才是齿轮式计算机的第一个发明者。（n104）</span> \r\n</p>',NULL,'2014-05-15 17:23:28','2014-05-15 17:20:56',0,'机械计算机的发明人--帕斯卡',0),(68,'admin',22,'<div>\r\n	<img src=\"http://mmbiz.qpic.cn/mmbiz/agEQQ7NdJSOBzNYJEFC1oXhMUjjLqF0n2q5f2XLr77ouGGvFbxOp4DOOib3DoKSUMN2z07G9kVziaLibaQRiay7sbA/0\" style=\"width:700px;\" /><span style=\"line-height:2;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">原题：互联网造就了什么</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">—— 写在中国互联网20周年之际</span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">真正意义上的互联网思维就在于此：人也好信息也好，互相之间是一种网状关系，而非从属关系。个体对于个体本身，是极为重要的，而不是个体所在的位置极为重要，因为个体与位置之间，不过是镶嵌罢了。</span> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">………………………………………………………</span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">文/魏武挥</span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n<span style=\"font-size:14px;line-height:2;\">从1994年4月，我国开通了64k专线信道，这个被视为中国互联网的起点，时至今日，已满20周年。中国互联网经济正蓬勃发展，先后诞生了所谓的战国七雄（腾讯、阿里、百度、新浪、搜狐、网易、盛大，后盛大被奇虎接替）以及一众互联网公司，以互联网为内核的创业公司更是前赴后继，不计其数。互联网经济的发展，更是带动了越来越多的人成为网民，网民越多，互联网经济发展也越快速，两者构成了一个良性循环。在普通人一翼，互联网正在全面接管TA的生活。</span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n<span style=\"font-size:14px;line-height:2;\">网络对整个人类的生活有益有害？它的便利性是放在那里的，比如说要搜索一些信息几乎可以说是唾手可得，完全不用巴巴地跑图书馆里上上下下地折腾翻寻资料。但也有人大声疾呼要警惕，互联网正在摧毁我们的生活。先后有多本书问世讨论这个议题，翻译成中文的，在我视野之中，就有《我们改变了互联网，还是互联网改变了我们？》、《铁笼，还是乌托邦》、《当我们变成一堆数字》、《你不是个玩意儿》、《浅薄》、《网民的狂欢》等等学术畅销风格皆具的书籍。</span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n<span style=\"font-size:14px;line-height:2;\">这在我看来，是两个时代的思维冲突。一个可以称为“工业时代思维”，一个可以称为“后工业时代思维”或者“信息时代思维”，又或者，套用时下一个极热的词：互联网思维。不过，在我眼里，今天很多讲互联网思维的，都是在讲商业问题。这未免太过狭隘。是的，商业在这个社会很重要，但确然不是全部。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">工业时代的一个核心关键词是“秩序”，流水线是一种秩序，制度是一种秩序，知识结构也是一种秩序。工业时代最不能容忍的就是失去秩序。知识这个东西，其实在前工业时代很难说有什么学科可言，印刷机出现后，伴随着书籍的普及，教育大规模发展，人们开始有规模有步骤地划分学科。一方面，人类拥有的知识正在大爆炸，一方面，从小受到的学科性教育让个体自觉不自觉地偏重某些学科。一个井然有序的知识树出现，所有的知识，必须在这个树上出现，如果不能，要么不成其为知识，要么就称之为“交叉学科”，再生一根枝桠出来便是。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">事实上，作为信息时代的基石，电脑却是工业时代末期的产物。电脑对信息的组织，很有些工业时代的痕迹：目录套目录。所有的文件，都必须有一个目录从属，所有的目录，都必须有父目录从属，直至根目录。而且，文件和目录一一对应，不会出现一个文件/目录从属于多个不同的同级目录这种事。这是多么有秩序的结构！</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">电脑催生了互联网，早期的互联网也有着这种痕迹。比如早期的所谓搜索，雅虎就先建立了一个目录树，把所有能找到的网站分门别类地放在相应目录下。不过，有一些改进的是，一个网站的确可以从属于不同的目录，但目录树结构依然存在。雅虎后来改成了门户，这个思维依然没有丢弃。直到今天，你依然可以看到门户的信息组织结构，就是一个以频道套栏目为主线的目录树，所有的信息，都在目录树之上。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">在我看来，真正将这种工业时代思维颠覆掉的，是搜索引擎——今天以谷歌为代表——至少在用户端，目录树已经不存在了。人们用关键字（或者叫标签）直达信息，而从来不需要经过什么目录树。这是信息组织上非常重要的一次革新，是对工业时代秩序的一次革命性反动——嗯，我用的的确是“革命性”这个词，因为这个反动实在是太剧烈了。信息开始呈网状态势存在，信息与信息之间，只有相关关系，并没有从属关系。在门户眼里，“平板电脑”这个目录当然是从属于“科技”这个目录，但在搜索引擎里，它们是平等的，因为压根没有目录。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">用户在消费信息的时候，是网状的，在生产信息的时候，秩序也被打破了。克莱舍基前后写了两本书来讨论信息生产的问题，前一本名《未来是湿的——无组织的组织力量》，后一本名《认知盈余——自由时间的力量》。前者探讨类似wiki这样的互联网百科字典，是怎样经由一个并非被组织起来的网民力量生产出来的，后者则探讨网民为什么在无名无利的前提下依然去生产信息。舍基这两本前后有一条思维主线：信息生产的这一端，秩序被打破了。甚至可以这么说，秩序，已经不再重要。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">互联网在门户、搜索引擎这两大杀手级应有之后，迎来了社交网络。社交网络并不像门户被搜索击败那样去击败搜索，时至今日，社交网络应该说是和搜索并重，成为互联网上的两大主流。社交网络的出现，意味着互联网上不仅有信息，还有“人”。它彻底粉碎了互联网之初纽约客那句名言：网络上，没人知道你是条狗。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">但社交网络对人的组织也是毫无秩序可言的，基本上，无论是早年非常红火的SNS还是这两年风头极尽的微博微信，都有“定制化”的味道。人们各取所需，或关注，或交友。这里不存在什么目录树，也谈不上有多大的架构。随意性很大，主观性也很大。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">社交网络本质上是弱关系，哪怕是号称以“强关系”出道的微信，使用者在经过一段时间的使用后，也会成为一个以弱关系为主的工具。弱关系的典型特征就是卷入度低，合者多说两句，不合者少说两句，实在不合了，互相拉黑了事。在弱关系中，人和人之间不存在谁一定要依附谁的关系，美国学者格兰诺维特将之称为：镶嵌。在我看来，镶嵌的成立，与工业时代那种金字塔般的钟结构慢慢崩坍有关。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">真正意义上的互联网思维就在于此：人也好信息也好，互相之间是一种网状关系，而非从属关系。个体对于个体本身，是极为重要的，而不是个体所在的位置极为重要，因为个体与位置之间，不过是镶嵌罢了。罗振宇鼓吹“u盘式生存”，也就是可以很方便地嵌入到一个团体中发挥力量，当然也可以很方便地离开。这与硬盘是对应的，谁都知道，硬盘的挪动，是相当费事的。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">在今天这个时间点，想让大多数人都u盘式生存起来会很困难，毕竟工业时代还有极多的烙印在。不过有一个征兆是：类似像我这样70后的人，想要离开一个组织会犹豫很久，通常也不会在寻找到下一个组织之前不会离开。但90后的人（包括一些80后的人），却很不以为意。他们会更随意地离开一个组织，哪怕没有下家。再次重复：个体对个体自身很重要，而不是那个位置。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">好了，现在似乎一个问题出现了：这样好吗？</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">有利有弊，但总体来说，即便用今天的价值观来判断，利大于弊。这是对人性的一种释放，而不是束缚。这一点可以作为证明：人们非常自然地接受了搜索引擎、社交网络这种没有谈不上秩序的东西，而门户，则在迅速地被抛弃。网状结构，节点是平等的，它承认节点有关系，但它拒绝承认节点有高有低。我想不出来有什么理由要抗拒这种变化。</span><br />\r\n<span style=\"font-size:14px;line-height:2;\">更深一步的是，人类的价值观其实因文明进化而定。我们看古人那些古人认为很对的行为，也会用一句：摆脱不了历史的局限。文明滚滚向前，用今天的价值观去衡量未来，又何尝不是一种“刻舟求剑”？</span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">文章来源：大家</span> \r\n	</p>\r\n</div>',NULL,'2014-05-15 19:41:36','2014-05-15 18:53:06',0,'互联网史记  |  你的思维过时了吗',0),(69,'admin',15,'<p>\r\n	<span style=\"font-size:14px;\">STAR面试法中“<strong>ST</strong><strong>AR</strong>”是SITUATION（背景）、TASK（任务）、ACTION（行动）和RESULT（结果）四个英文字母的首字母组合。在招聘面试中，仅仅通过应聘者的简历无法全面了解应聘者的知识、经验、技能的掌握程度及其工作风格、性格特点等方面的情况。而使用STAR技巧则可以对应聘者做出全面而客观的评价。</span> \r\n</p>\r\n<ol>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>了解背景（SITUATION）</strong>，通过不断提问与工作业绩有关的背景问题，可以全面了解该应聘者取得优秀业绩的前提，从而获知所取得的业绩有多少是与应聘者个人有关，多少是和市场的状况、行业的特点有关。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>了解任务（TASK）</strong>，每项任务的具体内容是什么样的。通过这些可以了解应聘者的工作经历和经验，以确定他所从事的工作与获得的经验是否适合所空缺的职位。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>了解行动（ACTION</strong>），即了解他是如何完成工作的，都采取了哪些行动，所采取的行动是如何帮助他完成工作的。通过这些，可以进一步了解他的工作方式、思维方式和行为方式。</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>关注结果（RESULT）</strong>，每项任务在采取了行动之后的结果是什么，是好还是不好，好是因为什么，不好又是因为什么。</span> \r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">通过STAR式发问的四个步骤，一步步将应聘者的陈述引向深入，一步步挖掘出应聘者潜在的信息，通过应聘者过去的经历来预测其是否胜任目标职位。所以，确保应聘者提供的事件信息真实有效，就成了追问的另一目的。要通过得到更多、更详细的信息，来保证应聘者回答的真实性，因为所得到的结果越具体，说明事件越真实，做出的评价也就越准确。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">面试其实说白了就是根据一个人之前的经历，来判断出后续这人会做得怎样，如果你之前从没做成过一件事情，凭什么让别人相信你之后能做成呢？因此无论哪里的面试都会问你之前做过的项目。需要注意的是两个平庸的项目不如做了一个好项目。针对STAR面试法设计的问题：</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ol>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>你做过最满意的项目是什么？可以是多人协助开发一个产品，也可以是自己个人做过的业余应用。</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>项目背景是什么？为什么要做这件事情？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>你在项目中处于什么样的角色，起到了什么方面的作用？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>在项目中遇到什么技术问题？具体是如何解决的？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>此项目最终达到什么效果？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>如果再做这个项目，你会在哪些方面进行改善？</strong></span> \r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">除了STAR面试外，还需要对面试者的技能及其他内容做深入了解。比如技术相关问题，探测面试者基础知识的掌握程度及技术深度和广度的了解。技术相关问题：</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ol>\r\n	<li>\r\n		<span style=\"font-size:14px;\">描述一个你遇到过的技术问题，你是如何解决的？有没有遇到过很不常见的问题？比如在网上根本搜不到解决方法的？</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">是否有设计过通用的组件？你会提供什么接口？调用过程是怎样的？可能会遇到什么细节问题？</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">你最擅长的技术是什么？你觉得你在这个技术上的水平到什么程度了？你觉得最高级别应该是怎样的？</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">在制作一个Web应用或Web站点的过程中，你是如何考虑他的UI、安全性、高性能、SEO、可维护性以及技术因素的？</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">你最熟悉哪一套版本控制系统？</span> \r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">除此之外，还需要问一些非技术相关问题：</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ol>\r\n	<li>\r\n		<span style=\"font-size:14px;color:#E53333;\"><strong>如果你参与到一个项目中，发现他们使用 Tab 来缩进代码，但是你喜欢空格，你会怎么做？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;color:#E53333;\"><strong>在之前做过的项目中，有没有什么功能或改进点是由你提出来的？是否有参与和改进其它开源项目？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;color:#E53333;\"><strong>编写代码的哪些方面能够使你兴奋或感兴趣？做什么方面的事情最让你有成就感？需求设计？规划？具体开发？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;color:#E53333;\"><strong>你在昨天/本周学到了什么？接下来半年你打算学习什么？如果今年你打算熟练掌握一项新技术，那会是什么？</strong></span> \r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;color:#E53333;\"><strong>后续想做什么？3 年后你希望自己是什么水平？</strong></span> \r\n	</li>\r\n</ol>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">以上为个人梳理的面试的一些技巧。期望多多交流。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">原文链接：http://reader.guoruei.net/archives/5563</span> \r\n</p>',NULL,'2014-05-15 19:59:48','2014-05-15 19:58:02',0,'如何面试一名程序员？',0),(70,'admin',1,'<ul>\r\n	<li>\r\n		<a href=\"http://isux.tencent.com/\" target=\"_blank\"><span style=\"font-size:14px;\">Tencent ISUX</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ecd.tencent.com/\" target=\"_blank\"><span style=\"font-size:14px;\">Tencent ecd</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://gdc.qq.com/\" target=\"_blank\"><span style=\"font-size:14px;\">Tencent GDC</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://wsd.tencent.com/\" target=\"_blank\"><span style=\"font-size:14px;\">Tencent WSD</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.alloyteam.com/\" target=\"_blank\"><span style=\"font-size:14px;\">Tencent AlloyTeam</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://ued.taobao.com/blog/\" target=\"_blank\"><span style=\"font-size:14px;\">淘宝UED</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://udc.weibo.com/\" target=\"_blank\"><span style=\"font-size:14px;\">新浪微博UDC</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://vc.changyou.com/\" target=\"_blank\"><span style=\"font-size:14px;\">畅游VC</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.uisdc.com/\" target=\"_blank\"><span style=\"font-size:14px;\">优秀网页设计联盟</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.loveui.cn/\" target=\"_blank\"><span style=\"font-size:14px;\">LOVEUI</span></a> \r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.uehtml.com/\" target=\"_blank\"><span style=\"font-size:14px;\">uehtml酷站推荐平台</span></a> \r\n	</li>\r\n</ul>',NULL,'2014-05-15 20:21:33','2014-05-15 20:21:11',0,'前端经典网站搜集',0),(71,'admin',23,'<p>\r\n	最近国内外都在流行一个词叫Full Stack，中文翻译过来叫全栈工程师，也叫全端工程师。微博上很多专业人士都在讨论全端工程师，有赞有毁的。我对全端工程师的定义是：掌握多种技能，并能利用多种技能独立完成产品的人。打个比方，全栈工程师就是一个能独立盖一幢10层小洋楼的人，而普通工程师，则是可以和一群人盖一幢摩天大楼的人。至于要掌握哪些技能，我觉得这个要跟从事的行业与技术方向有关，做互联网的和做软件的是不一样的，即使是做互联网的，后端也可以分为很多种技术流派。\r\n</p>\r\n<p>\r\n	8/2定律在哪都适用，全栈工程师就是掌握20%常用技能的人，但这20%的技能会有80%的几率被用到，剩下那80%不常用的，让我们Google吧。\r\n</p>\r\n<p>\r\n	有人说，全栈工程师在中国已经很多年了，他们叫站长。这个说话有点靠谱但又不那么靠谱，我自己也做过站长，深知作为一名站长需要掌握很多种技术。不靠谱的是，很多站长其实并没有真正写过多少代码，而是熟练利用一些建站软件来建站。\r\n</p>\r\n<h2>\r\n	全栈工程师的价值\r\n</h2>\r\n<p>\r\n	有人说了，你再牛逼，你懂五种技术，你能干五个人的活吗？全栈工程师并不是说一个人能干几个人的活，而是要从多个方面来看这个问题。\r\n</p>\r\n<h3>\r\n	全局性思维\r\n</h3>\r\n<p>\r\n	现代项目的开发，很少说只用到一两种技术的，特别是移动互联网大潮下。随便一个互联网项目中用到的技术，就会需要用到后端开发、前端开发、界面设计、产品设计、数据库、各种移动客户端、三屏兼容、restFul API设计和OAuth等等，一些比较前卫的项目，可能会用到Single Page Application、Web Socket、HTML5/CSS3这些技术，还有像第三方开发像微信公众号微博应用等等。\r\n</p>\r\n<p>\r\n	Web前端也远远不是从前的切个图用个jQuery上个AJAX兼容各种浏览器那么简单了。现代的Web前端，你需要用到模块化开发、多屏兼容、MVC，各种复杂的交互与优化，甚至你需要用到Node.js来协助前端的开发。\r\n</p>\r\n<p>\r\n	所以说一个现代化的项目，是一个非常复杂的构成，我们需要一个人来掌控全局，他不需要是各种技术的资深专家，但他需要熟悉到各种技术。对于一个团队特别是互联网企业来说，有一个全局性思维的人非常非常重要。\r\n</p>\r\n<p>\r\n	像如果是我经手的项目，我肯定会注意到网页优化，也会考虑到API来兼容各种客户端，更会考虑到三屏兼容的问题。不会说项目中完全使用AJAX而不顾SEO，也不会为了功能性而忽略访问速度，我会很好的把握这个平衡，因为我知道它们的权重与实现成本。\r\n</p>\r\n<h3>\r\n	沟通成本\r\n</h3>\r\n<p>\r\n	项目越大，沟通成本越高，做过项目管理的人都知道，项目中的人力是1+1&lt;2的，人越多效率越低。因为沟通是需要成本的，不同技术的人各说各话，前端和后端是一定会掐架的。每个人都会为自己的利益而战，毫不为已的人是不存在的。\r\n</p>\r\n<p>\r\n	而全栈工程师的沟通成本几乎为零，因为各种技术都懂，胸有成竹，一不小心自己就全做了。即使是在团队协作中，与不同技术人员的沟通也会容易得多，你让一个后端和一个前端去沟通，那完全是鸡同鸭讲，更不用说设计师与后端了。但如果有一个人懂产品懂设计懂前端懂后端，那沟通的结果显然不一样，因为他们讲的，彼此都能听得懂。\r\n</p>\r\n<h3>\r\n	创业公司\r\n</h3>\r\n<p>\r\n	对于创业公司来说，全端工程师的价值是非常大的，创业公司不可能像大公司一样，各方面的人才都有。所以我们需要一个多面手，各种活都能一肩挑，独挡多面的万金油。对于创业公司，不可能说DBA前端后端客户端各种人才全都备齐了，很多工作请人又不饱和，不请人又没法做，外包又不放心质量，所以全端工程师是省钱的一妙招。虽然说全端工程师工资会比一般的工程师会高很多，但综合下来，成本会低很多。\r\n</p>\r\n<h2>\r\n	全栈工程师的困境\r\n</h2>\r\n<p>\r\n	技术有两个发展方向，一种是纵向一种是横向的，横向的是瑞士军刀，纵向的是削铁如泥的干将莫邪。这两个方向都没有对与错，发展到一定程序都会相互溶合，就好比中国佛家禅修的南顿北渐，其实到了最后，渐悟与顿悟是一样的，顿由渐中来。\r\n</p>\r\n<p>\r\n	如果一个公司不太懂全栈工程师的价值，那么全栈工程师的地位将会很尴尬，说得不好听一点，全栈工程师就是什么都会，都么都不会。曾经有一次面试，对方问我很基础的问题，我答不上来，我能做出产品，也知道什么是怎么一回事，我也不会犯那些错误，但我就是答不上概念，要考倒我非常容易。所以在应聘面试的时候，有些时候会吃亏，你可能会不如哪些在某一方面钻得很深的人工资拿得高。\r\n</p>\r\n<p>\r\n	由于经常在各种技术穿梭，我会经常忘记代码的语法和一些API，所以我经常需要去查API甚至查语法，我觉得没有Google我几乎没法工作。这在某些人的眼里，是技术不够的表现。我记的只是一个Key，一个如何找寻答案的索引，而不是全部，人脑不是电脑，我不可能要求我能记下所有的东西。\r\n</p>\r\n<p>\r\n	有一次面试官问我一个问题，我说我不知道，但我猜大概是如此这般，对方问我，你为什么这么猜，我说凭直觉，对方笑了笑没说话。面试完后我一查，果然和我猜的差不多。没错，我就是凭直觉，但这种直觉和女人的直觉不一样，这种直觉是技术上的直觉，是你过去技术经验累积的一个反射。\r\n</p>\r\n<p>\r\n	有些用人单位会想，你这个也不专精，那个也不牛逼，到底你是做什么的，我为什么要给你这么高的工资？\r\n</p>\r\n<h2>\r\n	为什么我会成为全栈工程师\r\n</h2>\r\n<p>\r\n	我相信很多全栈型工程师会和我一样，是因为要创业才成为全栈型工程师的。我有一颗创业和做产品的心，而且我又是一个不愿意麻烦别人的人，有些人擅长整合资源，空手套白狼，但我显然不是这种人，所以我只好自己做了。\r\n</p>\r\n<p>\r\n	在经历过两次孤独的创业之后，我发现我并不是一个适合独立创业的人，所以，我成为了一个全端工程师。我热爱写代码，热爱重复发明轮子，热爱新技术，我想这也是我成为一个全栈工程师的重要原因。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	于我自己来说，我觉得全端工程师的乐趣要比一般工程师来得多，因为你知道一个产品的形态，你可以去设计一个产品，你是从全局的视野来做事情，你得到的成就感会更多一些。\r\n</p>\r\n<p>\r\n	原文链接：http://iove.net/archives/what-is-full-stack-engineer.html\r\n</p>',NULL,NULL,'2014-05-16 04:53:26',0,'全栈工程师到底有什么用',0),(72,'admin',12,'本文由 <a href=\"http://www.importnew.com/\">ImportNew</a> - <a href=\"http://www.importnew.com/author/miracle1919\">miracle1919</a> 翻译自 <a target=\"_blank\" href=\"http://stackoverflow.com/questions/763579/how-many-threads-can-a-java-vm-support\">stackoverflow</a>。欢迎加入<a href=\"http://www.jobbole.com/groups/9/\" target=\"_blank\">Java小组</a>。转载请参见文章末尾的要求。<br />\r\n<p>\r\n	McGovernTheory在StackOverflow提了这样一个问题:\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		Java虚拟机最多支持多少个线程？跟虚拟机开发商有关么？跟操作系统呢？还有其他的因素吗？\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	Eddie的回答:\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		这取决于你使用的CPU，操作系统，其他进程正在做的事情，你使用的Java的版本，还有其他的因素。我曾经见过一台Windows服务器在宕机之前有超过6500个线程。当然，大多数线程什么事情也没有做。一旦一台机器上有差不多6500个线程（Java里面），机器就会开始出问题，并变得不稳定。\r\n	</p>\r\n	<p>\r\n		以我的经验来看，JVM容纳的线程与计算机本身性能是正相关的。\r\n	</p>\r\n	<p>\r\n		当然了，你要有足够的本机内存，并且给Java分配了足够的内存，让每个线程都可以拥有栈(虚拟机栈)，可以做任何想做的事情。任何一台拥有现代CPU（AMD或者是Intel最近的几代）和1-2G内存（取决于操作系统）的机器很容易就可以支持有上千个线程的Java虚拟机。\r\n	</p>\r\n	<p>\r\n		如果你需要一个更精确的答案，最好是自己做压测。\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	Charlie Martin的回答:\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		这里有很多的参数（可以设置）。对于特定的虚拟机，都会有自己的运行时参数。（最大线程数）一定程度上由操作系统决定的：底层的操作系统要给线程提供哪些支持？施加哪些限制？虚拟机使用的是原生的操作系统的线程还是red thread或者<a href=\"http://en.wikipedia.org/wiki/Green_threads\" target=\"_blank\">green thread</a>？\r\n	</p>\r\n	<p>\r\n		操作系统提供的支持是另一个问题。如果你向下面这样写Java程序：\r\n	</p>\r\n	<div>\r\n<pre class=\"prettyprint lang-java\">class DieLikeADog {\r\n      public static void main(String[] argv){\r\n          for(;;){\r\n             new Thread(new SomeRunaable).start();\r\n          }\r\n      }\r\n }</pre>\r\n<br />\r\n	</div>\r\n	<p>\r\n		(不要抱怨语法细节，这才刚刚开始)那你当然希望能得到成百上千个运行的线程。但是，创建一个线程的成本是相对较大的，(过多线程)调度的开销会变得突出。能否让这些线程做有用的事情还不确定。\r\n	</p>\r\n	<p>\r\n		升级版\r\n	</p>\r\n	<p>\r\n		好了，迫不及待了！下面是我的一个加了点润色的小的测试程序：\r\n	</p>\r\n	<div>\r\n<pre class=\"prettyprint lang-java\">public class DieLikeADog {\r\n    private static Object s = new Object();\r\n    private static int count = 0;\r\n    public static void main(String[] argv){\r\n        for(;;){\r\n            new Thread(new Runnable(){\r\n                    public void run(){\r\n                        synchronized(s){\r\n                            count += 1;\r\n                            System.err.println(\"New thread #\"+count);\r\n                        }\r\n                        for(;;){\r\n                            try {\r\n                                Thread.sleep(1000);\r\n                            } catch (Exception e){\r\n                                System.err.println(e);\r\n                            }\r\n                        }\r\n                    }\r\n                }).start();\r\n        }\r\n    }\r\n}</pre>\r\n<br />\r\n	</div>\r\n	<p>\r\n		在Intel的OS/X 10.5.6系统上，Java 5的输出如下：\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n<pre class=\"prettyprint lang-java\">New thread #2547\r\nNew thread #2548\r\nNew thread #2549\r\nCan\'t create thread: 5\r\nNew thread #2550\r\nException in thread \"main\" java.lang.OutOfMemoryError: unable to create new native thread\r\n        at java.lang.Thread.start0(Native Method)\r\n        at java.lang.Thread.start(Thread.java:592)\r\n        at DieLikeADog.main(DieLikeADog.java:6)\r\n</pre>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<div>\r\n		<div>\r\n		</div>\r\n	</div>\r\n</blockquote>\r\n<p>\r\n	benjismith的回答:\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		读了Charlie Martin的回复以后，我很想知道堆内存的大小是否能够给创建的线程数带来不同，然后我就被结果惊呆了：在Vista Home Premium SP1系统上，使用JDK 1.6.0_11，设置堆内存的大小从2M到1024M来执行Charlie的测试程序。比如：创建2M的堆内存，我使用的虚拟机参数是：-Xms2m -Xmx2m.\r\n	</p>\r\n	<p>\r\n		下面是我的测试结果：\r\n	</p>\r\n	<div>\r\n<pre class=\"prettyprint lang-java\">2 mb --&gt; 5744 threads\r\n4 mb --&gt; 5743 threads\r\n8 mb --&gt; 5735 threads\r\n12 mb --&gt; 5724 threads\r\n16 mb --&gt; 5712 threads\r\n24 mb --&gt; 5687 threads\r\n32 mb --&gt; 5662 threads\r\n48 mb --&gt; 5610 threads\r\n64 mb --&gt; 5561 threads\r\n96 mb --&gt; 5457 threads\r\n128 mb --&gt; 5357 threads\r\n192 mb --&gt; 5190 threads\r\n256 mb --&gt; 5014 threads\r\n384 mb --&gt; 4606 threads\r\n512 mb --&gt; 4202 threads\r\n768 mb --&gt; 3388 threads\r\n1024 mb --&gt; 2583 threads</pre>\r\n<br />\r\n	</div>\r\n	<p>\r\n		所以，堆的大小确实很重要。但是，堆大小和最大线程数却是呈反比例关系。<br />\r\n这太诡异了！\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	Neil Coffey的回答:\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		绝对理论上的最大线程数是进程的用户地址空间除以线程栈的大小（现实中，如果内存全部给线程栈使用，就不会有能运行的程序了）。因此，以32位Windows系统为例，每一个进程的用户地址空间是2G，假如每个线程栈的大小是128K，最多会有16384(=2*1024*1024 / 128)个线程。实际在XP系统上，我发现大约能启动13000个线程。\r\n	</p>\r\n	<p>\r\n		然后，我认为，你的问题本质上是：(a)你是否可以在你的代码中有效的管理许多的线程，不让他们做很显然是愚蠢的事情（比如：让他们在同一个object对象上等待随后被调用notifyAll()…）,（b）操作系统是否可以有效地管理这许多线程。基本上来说，如果(a)的答案是”yes”的话，(b)的答案也是”yes”。\r\n	</p>\r\n	<p>\r\n		很巧的是，你可以在Thread的构造函数中设置线程栈的大小，但是，你不需要也不应该把这个和虚拟机参数弄混淆。\r\n	</p>\r\n	<p>\r\n		原文链接： <a target=\"_blank\" href=\"http://stackoverflow.com/questions/763579/how-many-threads-can-a-java-vm-support\">stackoverflow</a> 翻译： <a href=\"http://www.importnew.com/\">ImportNew.com </a>- <a href=\"http://www.importnew.com/author/miracle1919\">miracle1919</a><br />\r\n译文链接： <a href=\"http://www.importnew.com/10780.html\">http://www.importnew.com/10780.html</a><br />\r\n[&nbsp;转载请保留原文出处、译者和译文链接。]\r\n	</p>\r\n</blockquote>',NULL,'2014-05-16 05:11:10','2014-05-16 05:04:58',0,'JVM最多支持多少个线程？ ',0),(73,'admin',17,'<p>\r\n	作者：<a href=\"http://kenwublog.com/about\">Ken Wu</a>\r\n</p>\r\n<p>\r\n	Email: ken.wug@gmail.com\r\n</p>\r\n<p>\r\n	转载本文档请注明原文链接&nbsp;<a href=\"http://kenwublog.com/docs/java6-jvm-options-chinese-edition.htm\">http://kenwublog.com/docs/java6-jvm-options-chinese-edition.htm</a>！\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	本文是基于最新的SUN官方文档<a href=\"http://java.sun.com/javase/technologies/hotspot/vmoptions.jsp\" target=\"_blank\">Java SE 6 Hotspot VM Options</a>&nbsp;编写的译文。主要介绍JVM中的非稳态选项及其使用说明。\r\n</p>\r\n<p>\r\n	为了让读者明白每个选项的含义，作者在原文基础上补充了大量的资料。希望这份文档，对正在研究JVM参数的朋友有帮助！\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	另外，考虑到本文档是初稿，如有描述错误，敬请指正。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	非稳态选项使用说明\r\n</p>\r\n<p>\r\n	-XX:+&lt;option&gt;&nbsp;启用选项\r\n</p>\r\n<p>\r\n	-XX:-&lt;option&gt;&nbsp;不启用选项\r\n</p>\r\n<p>\r\n	-XX:&lt;option&gt;=&lt;number&gt;&nbsp;给选项设置一个数字类型值，可跟单位，例如&nbsp;32k, 1024m, 2g<br />\r\n-XX:&lt;option&gt;=&lt;string&gt;&nbsp;给选项设置一个字符串值，例如-XX:HeapDumpPath=./dump.core\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	行为选项\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					选项\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认值与限制\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					描述\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-AllowUserSignalHandlers\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限于Linux和Solaris，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					允许为java进程安装信号处理器。\r\n				</p>\r\n				<p>\r\n					<br />\r\nJava信号处理相关知识，详见&nbsp;<a href=\"http://kenwublog.com/java-asynchronous-notify-based-on-signal\">http://kenwublog.com/java-asynchronous-notify-based-on-signal</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-DisableExplicitGC\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					禁止在运行期显式地调用&nbsp;System.gc()。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					开启该选项后，GC的触发时机将由Garbage Collector全权掌控。<br />\r\n注意：你熟悉的代码里没调用System.gc()，不代表你依赖的框架工具没在使用。\r\n				</p>\r\n				<p>\r\n					例如RMI就在多数用户毫不知情的情况下，显示地调用GC来防止自身OOM。\r\n				</p>\r\n				<p>\r\n					请仔细权衡禁用带来的影响。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-RelaxAccessControlCheck\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					在Class校验器中，放松对访问控制的检查。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					作用与reflection里的setAccessible类似。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-UseConcMarkSweepGC\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用CMS低停顿垃圾收集器。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					资料详见：<a href=\"http://kenwublog.com/docs/CMS_GC.pdf\">http://kenwublog.com/docs/CMS_GC.pdf</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-UseParallelGC\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					-server时启用\r\n				</p>\r\n				<p>\r\n					其他情况下，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					策略为新生代使用并行清除，年老代使用单线程Mark-Sweep-Compact的垃圾收集器。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-UseParallelOldGC\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					策略为老年代和新生代都使用并行清除的垃圾收集器。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-UseSerialGC\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					-client时启用\r\n				</p>\r\n				<p>\r\n					其他情况下，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					使用串行垃圾收集器。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseSplitVerifier\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					java5默认不启用\r\n				</p>\r\n				<p>\r\n					java6默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					使用新的Class类型校验器&nbsp;。\r\n				</p>\r\n				<p>\r\n					<br />\r\n新Class类型校验器有什么特点？<br />\r\n新Class类型校验器，将老的校验步骤拆分成了两步：<br />\r\n1，类型推断。<br />\r\n2，类型校验。<br />\r\n新类型校验器通过在javac编译时嵌入类型信息到bytecode中，省略了类型推断这一步，从而提升了classloader的性能。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					Classload顺序（供参考）<br />\r\nload -&gt;&nbsp;verify&nbsp;-&gt; prepare -&gt; resove -&gt; init\r\n				</p>\r\n				<p>\r\n					<br />\r\n关联选项：<br />\r\n-XX:+FailOverToOldVerifier\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+FailOverToOldVerifier\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Java6新引入选项，默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					如果新的Class校验器检查失败，则使用老的校验器。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					为什么会失败？\r\n				</p>\r\n				<p>\r\n					因为JDK6最高向下兼容到JDK1.2，而JDK1.2的class info&nbsp;与JDK6的info存在较大的差异，所以新校验器可能会出现校验失败的情况。\r\n				</p>\r\n				<p>\r\n					<br />\r\n关联选项：<br />\r\n-XX:+UseSplitVerifier\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+HandlePromotionFailure&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					java5以前是默认不启用，java6默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					关闭新生代收集担保。\r\n				</p>\r\n				<p>\r\n					<br />\r\n什么是新生代收集担保？<br />\r\n在一次理想化的minor gc中，Eden和First Survivor中的活跃对象会被复制到Second Survivor。<br />\r\n然而，Second Survivor不一定能容纳下所有从E和F区copy过来的活跃对象。\r\n				</p>\r\n				<p>\r\n					为了确保minor gc能够顺利完成，GC需要在年老代中额外保留一块足以容纳所有活跃对象的内存空间。<br />\r\n这个预留操作，就被称之为新生代收集担保（New Generation&nbsp;Guarantee）。如果预留操作无法完成时，仍会触发major gc(full gc)。<br />\r\n为什么要关闭新生代收集担保？<br />\r\n因为在年老代中预留的空间大小，是无法精确计算的。\r\n				</p>\r\n				<p>\r\n					为了确保极端情况的发生，GC参考了最坏情况下的新生代内存占用，即Eden+First Survivor。\r\n				</p>\r\n				<p>\r\n					这种策略无疑是在浪费年老代内存，从时序角度看，还会提前触发Full GC。\r\n				</p>\r\n				<p>\r\n					为了避免如上情况的发生，JVM允许开发者手动关闭新生代收集担保。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					在开启本选项后，minor gc将不再提供新生代收集担保，而是在出现survior或年老代不够用时，抛出promotion failed异常。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseSpinning\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					java1.4.2和1.5需要手动启用, java6默认已启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用多线程自旋锁优化。\r\n				</p>\r\n				<p>\r\n					<br />\r\n自旋锁优化原理\r\n				</p>\r\n				<p>\r\n					大家知道，Java的多线程安全是基于Lock机制实现的，而Lock的性能往往不如人意。<br />\r\n原因是，monitorenter与monitorexit这两个控制多线程同步的bytecode原语，是JVM依赖操作系统互斥(mutex)来实现的。<br />\r\n互斥是一种会导致线程挂起，并在较短的时间内又必须重新调度回原线程的，较为消耗资源的操作。\r\n				</p>\r\n				<p>\r\n					为了避免进入OS互斥，Java6的开发者们提出了自旋锁优化。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					自旋锁优化的原理是在线程进入OS互斥前，通过CAS自旋一定的次数来检测锁的释放。\r\n				</p>\r\n				<p>\r\n					如果在自旋次数未达到预设值前锁已被释放，则当前线程会立即持有该锁。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					CAS检测锁的原理详见:&nbsp;<a href=\"http://kenwublog.com/theory-of-lightweight-locking-upon-cas\">http://kenwublog.com/theory-of-lightweight-locking-upon-cas</a>\r\n				</p>\r\n				<p>\r\n					<br />\r\n关联选项：<br />\r\n-XX:PreBlockSpin=10\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:PreBlockSpin=10\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					-XX:+UseSpinning&nbsp;必须先启用，对于java6来说已经默认启用了，这里默认自旋10次\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					控制多线程自旋锁优化的自旋次数。(什么是自旋锁优化？见&nbsp;-XX:+UseSpinning&nbsp;处的描述)\r\n				</p>\r\n				<p>\r\n					<br />\r\n关联选项：<br />\r\n-XX:+UseSpinning\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+ScavengeBeforeFullGC&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					在Full GC前触发一次Minor GC。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseGCOverheadLimit\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限制GC的运行时间。如果GC耗时过长，就抛OOM。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+<a></a><a></a>UseTLAB\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.2以前和使用-client选项时，默认不启用，其余版本默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用线程本地缓存区（Thread Local）。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseThreadPriorities\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					使用本地线程的优先级。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseAltSigs\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限于Solaris，默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					为了防止与其他发送信号的应用程序冲突，允许使用候补信号替代&nbsp;SIGUSR1和SIGUSR2。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseBoundThreads\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限于Solaris,&nbsp;默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					绑定所有的用户线程到内核线程。<br />\r\n减少线程进入饥饿状态（得不到任何cpu time）的次数。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseLWPSynchronization\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限于solaris，默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					使用轻量级进程（内核线程）替换线程同步。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+MaxFDLimit\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限于Solaris，默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					设置java进程可用文件描述符为操作系统允许的最大值。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseVMInterruptibleIO\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					限于solaris，默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					在solaris中，允许运行时中断线程 。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<hr />\r\n</div>\r\n<p>\r\n	<a></a>性能选项\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					选项与默认值\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认值与限制\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					描述\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+<a></a><a></a>AggressiveOpts\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					JDK 5 update 6后引入，但需要手动启用。\r\n				</p>\r\n				<p>\r\n					JDK6默认启用。\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用JVM开发团队最新的调优成果。例如编译优化，偏向锁，并行年老代收集等。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:CompileThreshold=10000\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1000\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					通过JIT编译器，将方法编译成机器码的触发阀值，可以理解为调用方法的次数，例如调1000次，将方法编译为机器码。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:<a></a><a></a><a></a>LargePageSizeInBytes=4m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认4m\r\n				</p>\r\n				<p>\r\n					amd64位：2m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					设置堆内存的内存页大小。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					调整内存页的方法和性能提升原理，详见&nbsp;<a href=\"http://kenwublog.com/tune-large-page-for-jvm-optimization\">http://kenwublog.com/tune-large-page-for-jvm-optimization</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:<a></a><a></a>MaxHeapFreeRatio=70\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					70\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					GC后，如果发现空闲堆内存占到整个预估上限值的70%，则收缩预估上限值。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					什么是预估上限值？\r\n				</p>\r\n				<p>\r\n					JVM在启动时，会申请最大值（-Xmx指定的数值）的地址空间，但其中绝大部分空间不会被立即分配(virtual)。\r\n				</p>\r\n				<p>\r\n					它们会一直保留着，直到运行过程中，JVM发现实际占用接近已分配上限值时，才从virtual里再分配掉一部分内存。\r\n				</p>\r\n				<p>\r\n					这里提到的已分配上限值，也可以叫做预估上限值。\r\n				</p>\r\n				<p>\r\n					<br />\r\n引入预估上限值的好处是，可以有效地控制堆的大小。堆越小，GC效率越高嘛。\r\n				</p>\r\n				<p>\r\n					注意：预估上限值的大小一定小于或等于最大值。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:MaxNewSize=size\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.3.1&nbsp;Sparc: 32m\r\n				</p>\r\n				<p>\r\n					1.3.1&nbsp;x86: 2.5m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					新生代占整个堆内存的最大值。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:MaxPermSize=64m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					5.0以后: 64 bit VMs会增大预设值的30%\r\n				</p>\r\n				<p>\r\n					1.4&nbsp;amd64: 96m\r\n				</p>\r\n				<p>\r\n					1.3.1 -client: 32m\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					其他默认&nbsp;64m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Perm（俗称方法区）占整个堆内存的最大值。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:MinHeapFreeRatio=40\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					40\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					GC后，如果发现空闲堆内存占到整个预估上限值的40%，则增大上限值。\r\n				</p>\r\n				<p>\r\n					(什么是预估上限值？见&nbsp;-XX:MaxHeapFreeRatio&nbsp;处的描述)\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					关联选项：\r\n				</p>\r\n				<p>\r\n					-XX:MaxHeapFreeRatio=70\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:NewRatio=2\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Sparc -client: 8\r\n				</p>\r\n				<p>\r\n					x86 -server: 8\r\n				</p>\r\n				<p>\r\n					x86 -client: 12\r\n				</p>\r\n				<p>\r\n					-client: 4 (1.3)\r\n				</p>\r\n				<p>\r\n					8 (1.3.1+)\r\n				</p>\r\n				<p>\r\n					x86: 12\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					其他默认&nbsp;2\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					新生代和年老代的堆内存占用比例。\r\n				</p>\r\n				<p>\r\n					例如2例如2表示新生代占年老代的1/2，占整个堆内存的1/3。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:NewSize=2.125m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					5.0以后: 64 bit Vms会增大预设值的30%\r\n				</p>\r\n				<p>\r\n					x86: 1m\r\n				</p>\r\n				<p>\r\n					x86, 5.0以后: 640k\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					其他默认&nbsp;2.125m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					新生代预估上限的默认值。(什么是预估上限值？见&nbsp;-XX:MaxHeapFreeRatio&nbsp;处的描述)\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:<a></a>ReservedCodeCacheSize=32m&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Solaris 64-bit, amd64, -server x86: 48m\r\n				</p>\r\n				<p>\r\n					1.5.0_06之前, Solaris 64-bit amd64: 1024m\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					其他默认&nbsp;32m\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					设置代码缓存的最大值，编译时用。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:SurvivorRatio=8\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Solaris amd64: 6\r\n				</p>\r\n				<p>\r\n					Sparc in 1.3.1: 25\r\n				</p>\r\n				<p>\r\n					Solaris platforms&nbsp;5.0以前: 32\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					其他默认&nbsp;8\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Eden与Survivor的占用比例。例如8表示，一个survivor区占用&nbsp;1/8&nbsp;的Eden内存，即1/10的新生代内存，为什么不是1/9？\r\n				</p>\r\n				<p>\r\n					因为我们的新生代有2个survivor，即S1和S22。所以survivor总共是占用新生代内存的 2/10，Eden与新生代的占比则为 8/10。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:<a></a><a></a>TargetSurvivorRatio=50\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					50\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					实际使用的survivor空间大小占比。默认是50%，最高90%。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:ThreadStackSize=512\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Sparc: 512\r\n				</p>\r\n				<p>\r\n					Solaris x86: 320&nbsp;(5.0以前&nbsp;256)\r\n				</p>\r\n				<p>\r\n					Sparc 64 bit: 1024\r\n				</p>\r\n				<p>\r\n					Linux amd64: 1024 (5.0&nbsp;以前&nbsp;0)\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					其他默认&nbsp;512.\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					线程堆栈大小\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseBiasedLocking\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					JDK 5 update 6后引入，但需要手动启用。\r\n				</p>\r\n				<p>\r\n					JDK6默认启用。\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用偏向锁。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					偏向锁原理详见&nbsp;<a href=\"http://kenwublog.com/theory-of-java-biased-locking\">http://kenwublog.com/theory-of-java-biased-locking</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseFastAccessorMethods\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					优化原始类型的getter方法性能。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-UseISM\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用solaris的ISM。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					详见<a href=\"http://java.sun.com/docs/hotspot/ism.html\">Intimate Shared Memory</a>.\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<a></a><a></a>-XX:+UseLargePages\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					JDK 5 update 5后引入，但需要手动启用。\r\n				</p>\r\n				<p>\r\n					JDK6默认启用。\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用大内存分页。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					调整内存页的方法和性能提升原理，详见<a href=\"http://kenwublog.com/tune-large-page-for-jvm-optimization\">http://kenwublog.com/tune-large-page-for-jvm-optimization</a>\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					关联选项\r\n				</p>\r\n				<p>\r\n					-XX:LargePageSizeInBytes=4m\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+UseMPSS\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.1&nbsp;之前:&nbsp;不启用\r\n				</p>\r\n				<p>\r\n					其余版本默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用solaris的MPSS，不能与ISM同时使用。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+StringCache\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用字符串缓存。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:<a></a><a></a><a></a>AllocatePrefetchLines=1\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					与机器码指令预读相关的一个选项，资料比较少，本文档不做解释。有兴趣的朋友请自行阅读官方doc。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:AllocatePrefetchStyle=1\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					与机器码指令预读相关的一个选项，资料比较少，本文档不做解释。有兴趣的朋友请自行阅读官方doc。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<hr />\r\n</div>\r\n<p>\r\n	调试选项\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					选项与默认值\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认值与限制\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					描述\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-CITime\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4引入。\r\n				</p>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印JIT编译器编译耗时。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:ErrorFile=./hs_err_pid&lt;pid&gt;.log\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Java 6引入。\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					如果JVM crashed，将错误日志输出到指定文件路径。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-ExtendedDTraceProbes\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Java6引入，限于solaris\r\n				</p>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					启用<a href=\"http://java.sun.com/javase/6/docs/technotes/guides/vm/dtrace.html\">dtrace</a>诊断。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:HeapDumpPath=./java_pid&lt;pid&gt;.hprof&nbsp;&nbsp;&nbsp;&nbsp;\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认是java进程启动位置，即user.dir\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					堆内存快照的存储文件路径。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					什么是堆内存快照？\r\n				</p>\r\n				<p>\r\n					当java进程因OOM或crash被OS强制终止后，会生成一个hprof（Heap PROFling）格式的堆内存快照文件。该文件用于线下调试，诊断，查找问题。\r\n				</p>\r\n				<p>\r\n					文件名一般为\r\n				</p>\r\n				<p>\r\n					java_&lt;pid&gt;_&lt;date&gt;_&lt;time&gt;_heapDump.hprof\r\n				</p>\r\n				<p>\r\n					解析快照文件，可以使用&nbsp;jhat, eclipse MAT，gdb等工具。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-HeapDumpOnOutOfMemoryError\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.2 update12&nbsp;和&nbsp;5.0 update 7&nbsp;引入。\r\n				</p>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					在OOM时，输出一个dump.core文件，记录当时的堆内存快照（什么是堆内存快照?&nbsp;见&nbsp;-XX:HeapDumpPath&nbsp;处的描述）。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:OnError=\"&lt;cmd args&gt;;&lt;cmd args&gt;\"\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.2 update 9引入\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					当java每抛出一个ERROR时，运行指定命令行指令集。指令集是与OS环境相关的，在linux下多数是bash脚本，windows下是dos批处理。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:OnOutOfMemoryError=\"&lt;cmd args&gt;;<br />\r\n&lt;cmd args&gt;\"\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.2 update 12和java6时引入\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					当第一次发生OOM时，运行指定命令行指令集。指令集是与OS环境相关的，在linux下多数是bash脚本，windows下是dos批处理。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintClassHistogram\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					在Windows下,&nbsp;按ctrl-break或Linux下是执行kill -3（发送SIGQUIT信号）时，打印class柱状图。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					Jmap&nbsp;–histo pid也实现了相同的功能。\r\n				</p>\r\n				<p>\r\n					详见&nbsp;<a href=\"http://java.sun.com/javase/6/docs/technotes/tools/share/jmap.html\">http://java.sun.com/javase/6/docs/technotes/tools/share/jmap.html</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintConcurrentLocks\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					在thread dump的同时，打印java.util.concurrent的锁状态。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					Jstack&nbsp;–l pid&nbsp;也同样实现了同样的功能。\r\n				</p>\r\n				<p>\r\n					详见&nbsp;<a href=\"http://java.sun.com/javase/6/docs/technotes/tools/share/jstack.html\">http://java.sun.com/javase/6/docs/technotes/tools/share/jstack.html</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintCommandLineFlags\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					5.0&nbsp;引入，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Java启动时，往stdout打印当前启用的非稳态jvm options。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					例如：\r\n				</p>\r\n				<p>\r\n					-XX:+UseConcMarkSweepGC -XX:+HeapDumpOnOutOfMemoryError -XX:+DoEscapeAnalysis\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintCompilation\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					往stdout打印方法被JIT编译时的信息。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					例如：\r\n				</p>\r\n				<p>\r\n					1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java.lang.String::charAt (33 bytes)\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintGC\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					开启GC日志打印。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					打印格式例如：\r\n				</p>\r\n				<p>\r\n					[Full GC 131115K-&gt;7482K(1015808K), 0.1633180 secs]\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					该选项可通过&nbsp;com.sun.management.HotSpotDiagnosticMXBean API&nbsp;和&nbsp;Jconsole&nbsp;动态启用。\r\n				</p>\r\n				<p>\r\n					详见&nbsp;<a href=\"http://java.sun.com/developer/technicalArticles/J2SE/monitoring/%23Heap_Dump\">http://java.sun.com/developer/technicalArticles/J2SE/monitoring/#Heap_Dump</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintGCDetails\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.0引入，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印GC回收的细节。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					打印格式例如：\r\n				</p>\r\n				<p>\r\n					[Full GC (System) [Tenured: 0K-&gt;2394K(466048K), 0.0624140 secs] 30822K-&gt;2394K(518464K), [Perm : 10443K-&gt;10443K(16384K)], 0.0625410 secs] [Times: user=0.05 sys=0.01, real=0.06 secs]\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					该选项可通过&nbsp;com.sun.management.HotSpotDiagnosticMXBean API&nbsp;和&nbsp;Jconsole&nbsp;动态启用。\r\n				</p>\r\n				<p>\r\n					详见&nbsp;<a href=\"http://java.sun.com/developer/technicalArticles/J2SE/monitoring/%23Heap_Dump\">http://java.sun.com/developer/technicalArticles/J2SE/monitoring/#Heap_Dump</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintGCTimeStamps\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印GC停顿耗时。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					打印格式例如：\r\n				</p>\r\n				<p>\r\n					2.744: [Full GC (System) 2.744: [Tenured: 0K-&gt;2441K(466048K), 0.0598400 secs] 31754K-&gt;2441K(518464K), [Perm : 10717K-&gt;10717K(16384K)], 0.0599570 secs] [Times: user=0.06 sys=0.00, real=0.06\r\n				</p>\r\n				<p>\r\n					secs]\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					该选项可通过&nbsp;com.sun.management.HotSpotDiagnosticMXBean API&nbsp;和&nbsp;Jconsole&nbsp;动态启用。\r\n				</p>\r\n				<p>\r\n					详见&nbsp;<a href=\"http://java.sun.com/developer/technicalArticles/J2SE/monitoring/%23Heap_Dump\">http://java.sun.com/developer/technicalArticles/J2SE/monitoring/#Heap_Dump</a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-PrintTenuringDistribution\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印对象的存活期限信息。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					打印格式例如：\r\n				</p>\r\n				<p>\r\n					[GC<br />\r\nDesired survivor size 4653056 bytes, new threshold 32 (max 32)<br />\r\n- age 1: 2330640 bytes, 2330640 total<br />\r\n- age 2: 9520 bytes, 2340160 total\r\n				</p>\r\n				<p>\r\n					204009K-&gt;21850K(515200K), 0.1563482 secs]\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					Age1 2表示在第1和2次GC后存活的对象大小。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-TraceClassLoading\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印class装载信息到stdout。记Loaded状态。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					例如：\r\n				</p>\r\n				<p>\r\n					[Loaded java.lang.Object from /opt/taobao/install/jdk1.6.0_07/jre/lib/rt.jar]\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-TraceClassLoadingPreorder\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.2引入，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					按class的引用/依赖顺序打印类装载信息到stdout。不同于&nbsp;TraceClassLoading，本选项只记&nbsp;Loading状态。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					例如：\r\n				</p>\r\n				<p>\r\n					[Loading java.lang.Object from /home/confsrv/jdk1.6.0_14/jre/lib/rt.jar]\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-TraceClassResolution\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					1.4.2引入，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印所有静态类，常量的代码引用位置。用于debug。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					例如：\r\n				</p>\r\n				<p>\r\n					RESOLVE java.util.HashMap java.util.HashMap$Entry HashMap.java:209\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					说明HashMap类的209行引用了静态类&nbsp;java.util.HashMap$Entry\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-TraceClassUnloading\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印class的卸载信息到stdout。记Unloaded状态。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:-<a></a><a></a>TraceLoaderConstraints\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					Java6&nbsp;引入，默认不启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					打印class的装载策略变化信息到stdout。\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					例如：\r\n				</p>\r\n				<p>\r\n					[Adding new constraint for name: java/lang/String, loader[0]: sun/misc/Launcher$ExtClassLoader, loader[1]: &lt;bootloader&gt; ]\r\n				</p>\r\n				<p>\r\n					[Setting class object in existing constraint for name: [Ljava/lang/Object; and loader sun/misc/Launcher$ExtClassLoader ]\r\n				</p>\r\n				<p>\r\n					[Updating constraint for name org/xml/sax/InputSource, loader &lt;bootloader&gt;, by setting class object ]\r\n				</p>\r\n				<p>\r\n					[Extending constraint for name java/lang/Object by adding loader[15]: sun/reflect/DelegatingClassLoader&nbsp;&nbsp;]\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					装载策略变化是实现classloader隔离/名称空间一致性的关键技术。\r\n				</p>\r\n				<p>\r\n					对此感兴趣的朋友，详见&nbsp;<a href=\"http://kenwublog.com/docs/Dynamic+Class+Loading+in+the+Java+Virtual+Machine.pdf\">http://kenwublog.com/docs/Dynamic+Class+Loading+in+the+Java+Virtual+Machine.pdf</a>&nbsp;中的&nbsp;contraint rules一章。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					-XX:+<a></a><a></a>PerfSaveDataToFile\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					默认启用\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					当java进程因OOM或crashed被强制终止后，生成一个堆快照文件（什么是堆内存快照?&nbsp;见&nbsp;-XX:HeapDumpPath&nbsp;处的描述）。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	作者敬告\r\n</p>\r\n<p>\r\n	完善的单元测试，功能回归测试，和性能基准测试可以减少因调整非稳态JVM选项带来的风险。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	参考资料\r\n</p>\r\n<p>\r\n	Java6性能调优白皮书\r\n</p>\r\n<p>\r\n	<a href=\"http://java.sun.com/performance/reference/whitepapers/6_performance.html\">http://java.sun.com/performance/reference/whitepapers/6_performance.html</a>\r\n</p>\r\n<p>\r\n	Java6 GC调优指南\r\n</p>\r\n<p>\r\n	<a href=\"http://java.sun.com/javase/technologies/hotspot/gc/gc_tuning_6.html\">http://java.sun.com/javase/technologies/hotspot/gc/gc_tuning_6.html</a>\r\n</p>\r\n<p>\r\n	更为全面的options列表\r\n</p>\r\n<p>\r\n	<a href=\"http://blogs.sun.com/watt/resource/jvm-options-list.html\">http://blogs.sun.com/watt/resource/jvm-options-list.html</a>\r\n</p>',NULL,NULL,'2014-05-16 09:28:45',0,'Java 6 JVM参数选项大全(中文版)',0),(74,'admin',25,'<div>\r\n	<table border=\"1\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					java.lang.OutOfMemoryError: unable to create new native thread<br />\r\nat java.lang.Thread.start0(Native Method)<br />\r\nat java.lang.Thread.start(Thread.java:597)<br />\r\nat com.caucho.util.ThreadPool$ThreadLauncher.startConnection(ThreadPool.java:607)<br />\r\nat com.caucho.util.ThreadPool$ThreadLauncher.run(ThreadPool.java:646)<br />\r\nat java.lang.Thread.run(Thread.java:619)<br />\r\n2014-05-16 10:01:50,893 [Xmemcached-Reactor-2] ERROR rubyeye.xmemcached.impl.MemcachedHandler -XMemcached network layout exception<br />\r\njava.io.IOException: 由于系统缓冲区空间不足或队列已满，不能执行套接字上的操作。<br />\r\nat sun.nio.ch.SocketDispatcher.write0(Native Method)<br />\r\nat sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:33)<br />\r\nat sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:104)<br />\r\nat sun.nio.ch.IOUtil.write(IOUtil.java:75)<br />\r\nat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)<br />\r\nat com.google.code.yanf4j.nio.impl.AbstractNioSession.doRealWrite(AbstractNioSession.java:323)<br />\r\nat com.google.code.yanf4j.nio.impl.NioTCPSession.writeToChannel(NioTCPSession.java:84)<br />\r\nat com.google.code.yanf4j.nio.impl.AbstractNioSession.onWrite(AbstractNioSession.java:112)<br />\r\nat com.google.code.yanf4j.nio.impl.AbstractNioSession.writeFromUserCode(AbstractNioSession.java:239)<br />\r\nat com.google.code.yanf4j.core.impl.AbstractSession.write(AbstractSession.java:383)<br />\r\nat net.rubyeye.xmemcached.impl.MemcachedHandler.onSessionIdle(MemcachedHandler.java:162)<br />\r\nat com.google.code.yanf4j.core.impl.AbstractSession.onIdle(AbstractSession.java:193)<br />\r\nat com.google.code.yanf4j.nio.impl.AbstractNioSession.onEvent(AbstractNioSession.java:352)<br />\r\nat com.google.code.yanf4j.nio.impl.Reactor.checkIdle(Reactor.java:473)<br />\r\nat com.google.code.yanf4j.nio.impl.Reactor.checkExpiredIdle(Reactor.java:464)<br />\r\nat com.google.code.yanf4j.nio.impl.Reactor.checkSessionTimeout(Reactor.java:364)<br />\r\nat com.google.code.yanf4j.nio.impl.Reactor.run(Reactor.java:121)<br />\r\n2014-05-16 10:02:07,230 [Xmemcached-Reactor-2] WARN &nbsp;code.yanf4j.core.impl.AbstractController -Remove a session: 10.0.150.24:12000<br />\r\n2014-05-16 10:02:09,551 [Heal-Session-Thread] WARN &nbsp;code.yanf4j.core.impl.AbstractController -Trying to connect to 10.0.150.24:12000 for 1 times<br />\r\n2014-05-16 10:02:09,556 [Xmemcached-Reactor-0] WARN &nbsp;code.yanf4j.core.impl.AbstractController -Add a session: 10.0.150.24:12000<br />\r\n<br />\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n<br />\r\n</div>\r\n<div>\r\n	<br />\r\n</div>',NULL,'2014-05-16 10:17:57','2014-05-16 10:12:01',0,'java.lang.OutOfMemoryError: unable to create new native thread',0),(75,'admin',26,'<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	<b>Flyweight模式定义:</b><br />\r\n避免大量拥有相同内容的小类的开销(如耗费内存),使大家共享一个类(元类).\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	<b>为什么使用?</b><br />\r\n面向对象语言的原则就是一切都是对象,但是如果真正使用起来,有时对象数可能显得很庞大,比如,字处理软件,如果以每个文字都作为一个对象,几千个字,对象数就是几千,无疑耗费内存,那么我们还是要\"求同存异\",找出这些对象群的共同点,设计一个元类,封装可以被共享的类,另外,还有一些特性是取决于应用(context),是不可共享的,这也Flyweight中两个重要概念内部状态intrinsic和外部状态extrinsic之分.\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	&nbsp;\r\n</p>\r\n<span style=\"font-family:微软雅黑, 宋体;font-size:14px;line-height:25px;background-color:#FAFAFA;\">说白点,就是先捏一个的原始模型,然后随着不同场合和环境,再产生各具特征的具体模型,很显然,在这里需要产生不同的新对象,所以Flyweight模式中常出现Factory模式.Flyweight的内部状态是用来共享的,Flyweight factory负责维护一个Flyweight pool(模式池)来存放内部状态的对象.</span>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	Flyweight模式是一个提高程序效率和性能的模式,会大大加快程序的运行速度.应用场合很多:比如你要从一个数据库中读取一系列字符串,这些字符串中有许多是重复的,那么我们可以将这些字符串储存在Flyweight池(pool)中.\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	<b>如何使用?</b>\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	我们先从Flyweight抽象接口开始:\r\n</p>\r\n<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n	<tbody>\r\n		<tr>\r\n			<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n				<p>\r\n					public interface Flyweight&nbsp;<br />\r\n{<br />\r\npublic void operation( ExtrinsicState state );<br />\r\n}\r\n				</p>\r\n				<p>\r\n					//用于本模式的抽象数据类型(自行设计)<br />\r\npublic interface ExtrinsicState { }\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	下面是接口的具体实现(ConcreteFlyweight) ,并为内部状态增加内存空间, ConcreteFlyweight必须是可共享的,它保存的任何状态都必须是内部(intrinsic),也就是说,ConcreteFlyweight必须和它的应用环境场合无关.\r\n</p>\r\n<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n	<tbody>\r\n		<tr>\r\n			<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n				public class ConcreteFlyweight implements Flyweight {<br />\r\nprivate IntrinsicState state;&nbsp;<br />\r\n<br />\r\npublic void operation( ExtrinsicState state )&nbsp;<br />\r\n{&nbsp;<br />\r\n//具体操作<br />\r\n}\r\n				<p>\r\n					}\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	当然,并不是所有的Flyweight具体实现子类都需要被共享的,所以还有另外一种不共享的ConcreteFlyweight:\r\n</p>\r\n<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n	<tbody>\r\n		<tr>\r\n			<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n				<p>\r\n					public class UnsharedConcreteFlyweight implements Flyweight {\r\n				</p>\r\n				<p>\r\n					public void operation( ExtrinsicState state ) { }\r\n				</p>\r\n				<p>\r\n					}\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	Flyweight factory负责维护一个Flyweight池(存放内部状态),当客户端请求一个共享Flyweight时,这个factory首先搜索池中是否已经有可适用的,如果有,factory只是简单返回送出这个对象,否则,创建一个新的对象,加入到池中,再返回送出这个对象.池\r\n</p>\r\n<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n				<p>\r\n					public class FlyweightFactory {&nbsp;<br />\r\n//Flyweight pool<br />\r\nprivate Hashtable flyweights = new Hashtable();&nbsp;<br />\r\npublic Flyweight getFlyweight( Object key ) {&nbsp;\r\n				</p>\r\n				<p>\r\n					Flyweight flyweight = (Flyweight) flyweights.get(key);&nbsp;\r\n				</p>\r\n				<p>\r\n					if( flyweight == null ) {<br />\r\n//产生新的ConcreteFlyweight<br />\r\nflyweight = new ConcreteFlyweight();&nbsp;<br />\r\nflyweights.put( key, flyweight );&nbsp;<br />\r\n}&nbsp;\r\n				</p>\r\n				<p>\r\n					return flyweight;&nbsp;<br />\r\n}&nbsp;<br />\r\n}\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	至此,Flyweight模式的基本框架已经就绪,我们看看如何调用:\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	FlyweightFactory factory = new FlyweightFactory();&nbsp;<br />\r\nFlyweight fly1 = factory.getFlyweight( \"Fred\" );&nbsp;<br />\r\nFlyweight fly2 = factory.getFlyweight( \"Wilma\" );<br />\r\n......\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	从调用上看,好象是个纯粹的Factory使用,但奥妙就在于Factory的内部设计上.\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	<b>Flyweight模式在XML等数据源中应用</b><br />\r\n我们上面已经提到,当大量从数据源中读取字符串,其中肯定有重复的,那么我们使用Flyweight模式可以提高效率,以唱片CD为例,在一个XML文件中,存放了多个CD的资料.\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	每个CD有三个字段:<br />\r\n1.出片日期(year)<br />\r\n2.歌唱者姓名等信息(artist)<br />\r\n3.唱片曲目 (title)\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	其中,歌唱者姓名有可能重复,也就是说,可能有同一个演唱者的多个不同时期 不同曲目的CD.我们将\"歌唱者姓名\"作为可共享的ConcreteFlyweight.其他两个字段作为UnsharedConcreteFlyweight.\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n		首先看看数据源XML文件的内容:\r\n	</p>\r\n	<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n					<p>\r\n						<br />\r\n&lt;?xml version=\"1.0\"?&gt;<br />\r\n&lt;collection&gt;\r\n					</p>\r\n					<p>\r\n						&lt;cd&gt;<br />\r\n&lt;title&gt;Another Green World&lt;/title&gt;<br />\r\n&lt;year&gt;1978&lt;/year&gt;<br />\r\n&lt;artist&gt;Eno, Brian&lt;/artist&gt;<br />\r\n&lt;/cd&gt;\r\n					</p>\r\n					<p>\r\n						&lt;cd&gt;<br />\r\n&lt;title&gt;Greatest Hits&lt;/title&gt;<br />\r\n&lt;year&gt;1950&lt;/year&gt;<br />\r\n&lt;artist&gt;Holiday, Billie&lt;/artist&gt;<br />\r\n&lt;/cd&gt;\r\n					</p>\r\n					<p>\r\n						&lt;cd&gt;<br />\r\n&lt;title&gt;Taking Tiger Mountain (by strategy)&lt;/title&gt;<br />\r\n&lt;year&gt;1977&lt;/year&gt;<br />\r\n&lt;artist&gt;Eno, Brian&lt;/artist&gt;<br />\r\n&lt;/cd&gt;\r\n					</p>\r\n					<p>\r\n						.......\r\n					</p>\r\n					<p>\r\n						&lt;/collection&gt;\r\n					</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n		<br />\r\n虽然上面举例CD只有3张,CD可看成是大量重复的小类,因为其中成分只有三个字段,而且有重复的(歌唱者姓名).\r\n	</p>\r\n	<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n		CD就是类似上面接口 Flyweight:\r\n	</p>\r\n	<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n					<p>\r\n						<br />\r\npublic class CD {\r\n					</p>\r\n					<p>\r\n						private String title;<br />\r\nprivate int year;<br />\r\nprivate Artist artist;<br />\r\npublic String getTitle() {　　return title;　}<br />\r\npublic int getYear() {　　　　return year;　　}<br />\r\npublic Artist getArtist() {　　　　return artist;　　}<br />\r\npublic void setTitle(String t){　　　　title = t;}<br />\r\npublic void setYear(int y){year = y;}<br />\r\npublic void setArtist(Artist a){artist = a;}<br />\r\n}\r\n					</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n		将\"歌唱者姓名\"作为可共享的ConcreteFlyweight:\r\n	</p>\r\n	<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n					<p>\r\n						public class Artist {\r\n					</p>\r\n					<p>\r\n						//内部状态<br />\r\nprivate String name;\r\n					</p>\r\n					<p>\r\n						// note that Artist is immutable.<br />\r\nString getName(){return name;}\r\n					</p>\r\n					<p>\r\n						Artist(String n){<br />\r\nname = n;<br />\r\n}&nbsp;<br />\r\n}\r\n					</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n		再看看Flyweight factory,专门用来制造上面的可共享的ConcreteFlyweight:Artist\r\n	</p>\r\n	<table width=\"80%\" border=\"0\" cellspacing=\"3\" cellpadding=\"3\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;color:#000000;\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td bgcolor=\"#CCCCCC\" style=\"font-size:13px;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\r\n					<p>\r\n						public class ArtistFactory {\r\n					</p>\r\n					<p>\r\n						Hashtable pool = new Hashtable();<br />\r\nArtist getArtist(String key){\r\n					</p>\r\n					<p>\r\n						Artist result;<br />\r\nresult = (Artist)pool.get(key);<br />\r\n////产生新的Artist<br />\r\nif(result == null) {<br />\r\nresult = new Artist(key);<br />\r\npool.put(key,result);<br />\r\n<br />\r\n}<br />\r\nreturn result;<br />\r\n}<br />\r\n}\r\n					</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n		当你有几千张甚至更多CD时,Flyweight模式将节省更多空间,共享的flyweight越多,空间节省也就越大.\r\n	</p>\r\n</p>\r\n<p style=\"font-family:微软雅黑, 宋体;font-size:14px;\">\r\n	原文链接：<a href=\"http://www.jdon.com/designpatterns/flyweight.htm\">http://www.jdon.com/designpatterns/flyweight.htm</a>\r\n</p>',NULL,NULL,'2014-05-16 17:21:42',0,'设计模式之Flyweight(享元) FlyWeight模式',0),(76,'admin',14,'<h2 style=\"font-size:1.285714286rem;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	缓冲区操作\r\n</h2>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	缓冲区以及缓冲区是如何工作，是所有I/O的基础。“输入/输出”就是把数据移进或移出缓冲区。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	进程执行I/O操作，就是向操作系统发出请求，让它要么把缓冲区的数据排干（写），要么用数据把缓冲区填满（读）。进程使用这一机制处理所有数据进出操作。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	从磁盘读数据到进程内存区：<br />\r\n<img src=\"http://coderbee.net/wp-content/uploads/2013/12/read-from-disk-into-user-process.png\" alt=\"read-from-disk-into-user-process\" />\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	进程使用&nbsp;read( )&nbsp;系统调用，要求其缓冲区被填满。内核随即向磁盘控制硬件发出命令，要求其从磁盘读取数据。磁盘控制器把数据直接写入内核内存缓冲区，这一步通过DMA完成，无需主CPU 协助。一旦磁盘控制器把缓冲区装满，内核即把数据从内核空间的临时缓冲区拷贝到进程执行&nbsp;read( )&nbsp;调用时指定的缓冲区。\r\n</p>\r\n<h4 style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	用户空间与内核空间\r\n</h4>\r\n<ul style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<li style=\"vertical-align:baseline;\">\r\n		用户空间：用户空间是常规进程所在区域，是非特权区域，比如该区域的代码不能直接访问硬件设备。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		<p style=\"vertical-align:baseline;\">\r\n			内核空间：内核空间是操作系统所在区域，有特别的权利：能与设备控制器通讯，控制用户区域进程的运行状态等等。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<strong>所有I/O都直接或间接通过内核空间，通过请求页面调度完成。</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	当进程请求I/O操作的时候，它执行一个系统调用将控制权移交给内核。内核随即采取必要步骤，找到进程所需数据，并把数据传送到用户空间内指定的缓冲区。如果数据已在内核空间，直接拷贝即可；如果不在内核空间，则进程被挂起，内核着手把数据读进内存。\r\n</p>\r\n<h4 style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	发散、汇聚\r\n</h4>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	根据发散、汇聚的概念，进程只需一个系统调用，就能把一连串缓冲区地址传递给操作系统，然后内核就溃疡顺序填充或排干多个缓冲区，读的时候把数据发散到多个用户空间缓冲区，写的时候再从多个缓冲区把数据汇聚起来。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<img src=\"http://coderbee.net/wp-content/uploads/2013/12/scatter-gather.png\" alt=\"scatter-gather\" />\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<span id=\"more-666\" style=\"vertical-align:baseline;\"></span>\r\n</p>\r\n<h2 style=\"font-size:1.285714286rem;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	虚拟内存\r\n</h2>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	虚拟内存意为使用虚假（或虚拟）地址取代物理（硬件RAM）内存地址，好处有两大类：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<li style=\"vertical-align:baseline;\">\r\n		一个以上的虚拟地址可指向同一个物理内存地址。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		虚拟内存空间可大于实际可用的硬件内存。\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	由于设备控制器不能通过DMA直接存储到用户空间，但通过把内核空间地址和用户空间的虚拟地址映射到同一个物理地址，这样，DMA硬件（只能访问物理内存地址）就可以填充对内核与用户空间进程同时可见的缓冲区。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	内存空间多重映射：<br />\r\n<img src=\"http://coderbee.net/wp-content/uploads/2013/12/memory-multi-mapping.png\" alt=\"memory-multi-mapping\" />\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	省去了内核与用户空间的来往拷贝，前提是，内核与用户缓冲区必须使用相同的页对齐，缓冲区的大小还必须是磁盘控制器块大小的倍数。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	操作系统把内存地址空间划分为页，及固定大小的字节组。内存页的大小总是磁盘块大小的倍数，通常是2次幂（可简化寻址操作）。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	内存页：<br />\r\n<img src=\"http://coderbee.net/wp-content/uploads/2013/12/memory-page.png\" alt=\"memory-page\" />\r\n</p>\r\n<h2 style=\"font-size:1.285714286rem;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	内存页面调度\r\n</h2>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	为了支持虚拟内存寻址空间大于物理内存，必须进行虚拟内存分页（一般称为交换，真正的交换是在进程层面完成，非页面层面）。对于暂时不用的内存页放到外部磁盘存储，为物理内存中的其他虚拟页腾出空间。本质上，物理内存充当了分页区的高速缓存；分页区就是从物理内存置换出来，存储在磁盘上的内存页面。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	现代CPU包含一个内存管理单元（MMU）的子系统，逻辑上位于 CPU与物理内存之间。该设备包含了虚拟地址向物理内存地址转换时所需映射信息。当CPU引用某内存地址时，MMU负责确定该地址所在页（通常通过对地址进行移位和屏蔽位操作来实现），并将虚拟页号转换为物理页号（由硬件完成，速度极快）。如果当前不存在与该虚拟页形成有效映射的物理内存页，MMU向CPU提交一个页错误。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	页错误随即产生一个陷阱（类似于系统调用），把控制权移交给内核，附带导致错误的虚拟地址信息，然后内核采取步骤验证页的有效性。内核会安排页面调入操作，把缺失的页内容读回物理内存。这往往导致别的页被移出物理内存，好给新来的页让地方。在这种情况下，如果待移出的页已经被碰过了（自创建或上次页面调入以来，内容已发生改变），还必须首先执行页面调出，把页内容拷贝到磁盘上的分页区。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	如果所要求的地址不是有效的虚拟内存地址（不属于正在执行的进程的任何一个内存段），则该页不能通过验证，段错误随即产生。于是，控制权转交给内核的另一部分，通常导致的结果就是进程被强令关闭。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	一旦出错的页通过了验证，MMU 随即更新，建立新的虚拟到物理的映射（如有必要，中断被移出页的映射），用户进程得以继续。造成页错误的用户进程对此不会有丝毫察觉，一切都在不知不觉中进行。\r\n</p>\r\n<h2 style=\"font-size:1.285714286rem;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件I/O\r\n</h2>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件系统把一连串大小一致的数据块组织到一起。有些块存储元信息，如空闲块、目录、索引等的映射，有些包含文件数据。单个文件的元信息描述了哪些块包含文件数据、数据在哪里结束、最后一次更新是什么时候，等等。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	采用分页技术的操作系统执行I/O的全过程可总结为如下步骤：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<li style=\"vertical-align:baseline;\">\r\n		确定请求的数据分布在文件系统的哪些页（磁盘扇区组）。磁盘上的文件内容和元数据可能跨越多个文件系统页，而且这些页可能也不连续。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		在内核空间分配足够数量的内存页，以容纳得到确定的文件系统页。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		在内存页与磁盘上的文件系统页之间建立映射。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		为每一个内存页产生页错误。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		虚拟内存系统俘获页错误，安排页面调入，从磁盘上读取页内容，使页有效。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		一旦页面调入操作完成，文件系统即对原始数据进行解析，取得所需文件内容或属性信息。\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件系统数据也会进行高速缓存，大多数操作系统假设进程会继续读取文件剩余部分，因而会预读额外的文件系统页。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	类似的步骤在写文件数据时也会采用。这时，文件内容的改变（通过write( )）将导致文件系统页变脏，随后通过页面调出，与磁盘上的文件内容保持同步。文件的创建方式是，先把文件映射到空闲文件系统页，在随后的写操作中，再将文件系统页刷新到磁盘。\r\n</p>\r\n<h4 style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	内存映射文件\r\n</h4>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<img src=\"http://coderbee.net/wp-content/uploads/2013/12/file-memory-mapping.png\" alt=\"file-memory-mapping\" />\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	内存映射 I/O 使用文件系统建立从用户空间直到可用文件系统页的虚拟内存映射。好处有：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<li style=\"vertical-align:baseline;\">\r\n		用户进程把文件数据当作内存，所以无需发布 read( ) 或write( ) 系统调用。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		当用户进程碰触到映射内存空间，页错误会自动产生，从而将文件数据从磁盘读进内存。如果用户修改了映射内存空间，相关页会自动标记为脏，随后刷新到磁盘，文件得到更新。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		操作系统的虚拟内存子系统会对页进行智能高速缓存，自动根据系统负载进行内存管理。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		数据总是按页对齐的，无需执行缓冲区拷贝。\r\n	</li>\r\n	<li style=\"vertical-align:baseline;\">\r\n		大型文件使用映射，无需耗费大量内存，即可进行数据拷贝。\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	如果数据缓冲区是按页对齐的，且大小是内建页大小的倍数，那么，对大多数操作系统而言，其处理效率会大幅提升。\r\n</p>\r\n<h4 style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件锁定\r\n</h4>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件锁定机制允许一个进程阻止其他进程存取某文件，或限制其存取方式。通常的用途是控制共享信息的更新方式，或用于事务隔离。在控制多个实体并行访问共同资源方面，文件锁定是必不可少的。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件锁定可以细致到单个字节。锁定与特定文件相关，开始于文件的某个特定字节地址，包含特定数量的连续字节。这对于协调多个进程互不影响地访问文件不同区域，是至关重要的。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	文件锁定有两种方式：共享的和独占的。多个共享锁可同时对同一文件区域发生作用；独占锁则不同，它要求相关区域不能有其他锁定在起作用。\r\n</p>\r\n<h2 style=\"font-size:1.285714286rem;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	流I/O\r\n</h2>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	流I/O模仿了通道，必须顺序存取。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	非块模式：多数操作系统允许把流置于非块模式，这样，进程可以查看流上是否有输入，这使得进程可以在有输入的时候进行处理，输入流闲置时执行其他功能。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	就绪性选择：就绪性选择与非块模式类似，但是把查看流是否就绪的任务交给了操作系统。操作系统受命查看一序列流，并提醒进程哪些流已经就绪。凭借操作系统返回的就绪信息，进程就可以使用相同代码和单一线程，实现多活动流的多路传输。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;color:#444444;font-family:\'Open Sans\', Helvetica, Arial, sans-serif;background-color:#FFFFFF;\">\r\n	原文链接：<a href=\"http://coderbee.net/index.php/io/20131223/666\">http://coderbee.net/index.php/io/20131223/666</a>\r\n</p>',NULL,NULL,'2014-05-19 16:41:37',0,'I/O 基础',0),(77,'admin',15,'<p>\r\n	<span style=\"font-size:14px;\">先送上亚马逊传送门：</span><a target=\"_blank\" href=\"http://www.amazon.cn/gp/product/B004WHZGZQ/ref=as_li_ss_tl?ie=UTF8&camp=536&creative=3132&creativeASIN=B004WHZGZQ&linkCode=as2&tag=cfjh-23\"><span style=\"font-size:14px;\">《黑客与画家》：硅谷创业之父 Paul Graham 文集</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">再送上一个思维导图：</span> \r\n</p>\r\n<p>\r\n	<img alt=\"如何创造财富\" src=\"http://sfault-image.b0.upaiyun.com/b8/3c/b83c93e92706785a25914bd4fcd6f0d2\" style=\"height:367px;width:300px;\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">下载大图：</span><a target=\"_blank\" href=\"http://caifujianghu.com/article/ruhe-chuangzao-caifu-kankan-guiguchuangyezhifu-ruheshuo.html\"><span style=\"font-size:14px;\">http://caifujianghu.com/article/ruhe-chuangzao-caifu-kankan-guiguchuangyezhifu-ruheshuo.html</span></a> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">最好的办法就是自己创业或者加入创业公司</span> \r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">一个命题</span> \r\n		</p>\r\n		<ol>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">命题</span> \r\n				</p>\r\n				<p>\r\n					<span style=\"font-size:14px;\">创业是一个压缩的过程，所有工作压缩成短短几年。 你不再是低强度</span><img src=\"http://blog.csdn.net/q969403688/article/digg?ArticleId=25774881\" width=\"1\" height=\"1\" alt=\"\" /><span style=\"font-size:14px;\">的工作四十年，而是以极限强度工作四年</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">举例解释</span> \r\n				</p>\r\n				<p>\r\n					<span style=\"font-size:14px;\">一个优秀的黑客去除各种障碍，工作效率可以是在公司时的36倍。</span> \r\n				</p>\r\n				<p>\r\n					<span style=\"font-size:14px;\">假设他年薪8万美元，那么一个勤奋工作，摆脱杂事干扰的聪明黑客， 他的工作相当于年薪200万美元的价值</span> \r\n				</p>\r\n				<p>\r\n					<span style=\"font-size:14px;\">这里说的是极限情况，休闲时间为0，工作强度足以危害到健康。</span> \r\n				</p>\r\n				<p>\r\n					<span style=\"font-size:14px;\">守恒定律：如果你想赚100万美元，就不得不忍受100万美元的痛苦。</span> \r\n				</p>\r\n			</li>\r\n		</ol>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">运气成分</span> \r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">比尔盖茨</span> \r\n				</p>\r\n				<ul>\r\n					<li>\r\n						<span style=\"font-size:14px;\">很聪明，有决断力，工作也很勤奋，但运气也不坏</span> \r\n					</li>\r\n					<li>\r\n						<span style=\"font-size:14px;\">微软公司碰巧是世界上最大的商业错误之一《DOS操作系统的授权协议》的</span><img src=\"http://blog.csdn.net/q969403688/article/details/25774881\" width=\"1\" height=\"1\" alt=\"\" /><span style=\"font-size:14px;\">受益者</span> \r\n					</li>\r\n					<li>\r\n						<span style=\"font-size:14px;\">如果IBM没有犯下这个错误，微软依然会是一家成功的公司，但是不会膨胀的这么快这么大</span> \r\n					</li>\r\n				</ul>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">致富的方法有很多种</span> \r\n				</p>\r\n				<ol>\r\n					<li>\r\n						<span style=\"font-size:14px;\">通过创造有价值的东西在市场上得到回报</span> \r\n						<ul>\r\n							<li>\r\n								<span style=\"font-size:14px;\">合法</span> \r\n							</li>\r\n							<li>\r\n								<span style=\"font-size:14px;\">简单：只需要做出别人需要的东西就可以了</span> \r\n							</li>\r\n						</ul>\r\n					</li>\r\n					<li>\r\n						<span style=\"font-size:14px;\">其他方法</span> \r\n						<ul>\r\n							<li>\r\n								<span style=\"font-size:14px;\">赌博、投机、婚姻、继承、偷窃、敲诈……</span> \r\n							</li>\r\n						</ul>\r\n					</li>\r\n				</ol>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">金钱不等于财富</span> \r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">什么是财富？</span> \r\n				</p>\r\n				<p>\r\n					<span style=\"font-size:14px;\">最基本的东西：衣食住行</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">财富是你的目标，金钱不是</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">金钱只是一种中介</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">大多数生意的目的是为了创造财富，创造出人们真正需要的</span><img src=\"http://blog.csdn.net/q969403688/article/details/25774881\" width=\"1\" height=\"1\" alt=\"\" /><span style=\"font-size:14px;\">东西</span> \r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">大饼谬论</span> \r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">谬论</span> \r\n				</p>\r\n				<ol>\r\n					<li>\r\n						<span style=\"font-size:14px;\">世界上的财富总额是不变的。</span> \r\n					</li>\r\n					<li>\r\n						<span style=\"font-size:14px;\">如果富人拿走了所有的钱，那么其他人就变得更穷了。</span> \r\n					</li>\r\n					<li>\r\n						<span style=\"font-size:14px;\">政治家：你无法把饼做的更大。</span> \r\n					</li>\r\n				</ol>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">解释</span> \r\n				</p>\r\n				<ul>\r\n					<li>\r\n						<p>\r\n							<span style=\"font-size:14px;\">理论</span> \r\n						</p>\r\n						<ol>\r\n							<li>\r\n								<span style=\"font-size:14px;\">金钱不是财富，而只是我们用来转移财富所有权的东西。</span> \r\n							</li>\r\n							<li>\r\n								<span style=\"font-size:14px;\">某些特定情况下，你能用来与他人交换的金钱数量是固定不变的。</span> \r\n							</li>\r\n							<li>\r\n								<span style=\"font-size:14px;\">大多数情况下，世界上可供交换的财富不是一个恒定不变的量。</span> \r\n							</li>\r\n							<li>\r\n								<span style=\"font-size:14px;\">人类历史上的财富一直在不停的净增长。</span> \r\n							</li>\r\n						</ol>\r\n					</li>\r\n					<li>\r\n						<p>\r\n							<span style=\"font-size:14px;\">举例</span> \r\n						</p>\r\n						<p>\r\n							<span style=\"font-size:14px;\">你有一辆老爷车，你可以不管它，也可以动手修葺一新。 如果这样做的话，就创造了财富。 世界上因为多了一辆新的老爷车，财富就变得更多一点儿了。</span> \r\n						</p>\r\n						<p>\r\n							<span style=\"font-size:14px;\">如果把车卖了，得到的车款就比以前更多了。 通过修理一辆老爷车，使得自己富有。同时你也没有使得任何人更贫穷。</span> \r\n						</p>\r\n					</li>\r\n					<li>\r\n						<p>\r\n							<span style=\"font-size:14px;\">孩子</span> \r\n						</p>\r\n						<p>\r\n							<span style=\"font-size:14px;\">孩子不知不觉中就懂得了这个道理，当想赠送另一个小孩一件礼物时， 但是没有钱，他就会自己动手做。</span> \r\n						</p>\r\n					</li>\r\n				</ul>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">手工艺人</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">最可能明白财富能被创造出来的人，就是那些善于制造东西的人，也就是手工艺人。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">工业化时代来临，手工艺人越来越少。目前才存在的最大的手工艺人群体就是程序员。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">程序员创造财富的速率存在巨大差异。</span> \r\n		</p>\r\n		<ol>\r\n			<li>\r\n				<span style=\"font-size:14px;\">一个优秀的程序员连续工作几个星期可能创造价值100万美元的财富。</span> \r\n			</li>\r\n			<li>\r\n				<span style=\"font-size:14px;\">平庸的程序员同样的时间不仅无法创造财富，甚至还可能较少财富（引入bug）。</span> \r\n			</li>\r\n		</ol>\r\n		<p>\r\n			<span style=\"font-size:14px;\">创造出来的财富不一定非要通过出售实现价值。</span> \r\n		</p>\r\n		<ol>\r\n			<li>\r\n				<span style=\"font-size:14px;\">科学家一直把创造的财富捐献社会（发现青霉素）。</span> \r\n			</li>\r\n			<li>\r\n				<span style=\"font-size:14px;\">黑客开发开源软件让所有人免费使用。</span> \r\n			</li>\r\n		</ol>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">工作是什么？</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">工作就是在一个组织中，与许多人共同合作，做出某种人们需要的东西。</span> \r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">更努力的工作</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">大公司会使得每个员工的贡献平均化</span> \r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">除销售员和高级管理职位以外，其他人的工作是混杂在一起的。</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">个人表现无法单独测量，公司其他人会拖累你。</span> \r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">可测量性和可放大性</span> \r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">要致富必须具备2样东西</span> \r\n				</p>\r\n				<ol>\r\n					<li>\r\n						<span style=\"font-size:14px;\">可测量性：职位产生的业绩应该是可测量的。</span> \r\n					</li>\r\n					<li>\r\n						<span style=\"font-size:14px;\">可放大性：做出的决定能够产生放大的效应</span> \r\n					</li>\r\n				</ol>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">举例</span> \r\n				</p>\r\n				<ol>\r\n					<li>\r\n						<p>\r\n							<span style=\"font-size:14px;\">血汗工厂的工人报酬是可测量的，但是缺少可放大性</span> \r\n						</p>\r\n					</li>\r\n					<li>\r\n						<p>\r\n							<span style=\"font-size:14px;\">同时具备两者的有：电影主角，CEO，基金经理，专业运动员。</span> \r\n						</p>\r\n					</li>\r\n				</ol>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">小团体 = 可测量性</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">公司越小，越能准确估计每个人的贡献。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">大团队使得任何个人的努力都被大大的平均化了。</span> \r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">高科技 = 可放大性</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">创业公司通过发明新技术性盈利，所以具备可放大性。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">技术</span> \r\n		</p>\r\n		<ol>\r\n			<li>\r\n				<span style=\"font-size:14px;\">技术就是某种手段，是做事的方式。</span> \r\n			</li>\r\n			<li>\r\n				<span style=\"font-size:14px;\">如果发明了一种做事的新方式，那么它的经济价值就取决于有多少人使用这种新方式。</span> \r\n			</li>\r\n			<li>\r\n				<span style=\"font-size:14px;\">技术是钓鱼的鱼竿，而不是那条鱼。</span> \r\n			</li>\r\n			<li>\r\n				<span style=\"font-size:14px;\">这是创业公司与餐馆、理发店的区别。</span> \r\n			</li>\r\n			<li>\r\n				<span style=\"font-size:14px;\">你解决了一个热门技术难题，别人都会使用你的解决方案，这就是可放大性。</span> \r\n			</li>\r\n		</ol>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">潜规则</span> \r\n		</p>\r\n		<ol>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">很多事情由不得你，比如你无法决定到底付出多少。 你只想更勤奋工作2到3倍，从而得到相应的回报。 但真正创业以后，你的竞争对手绝对会让你吃更多的苦。</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">付出与回报虽然总体上是成比例的，但是个体上不成比例。</span> \r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style=\"font-size:14px;\">创业公司如同蚊子：要么赢得一切，要么彻底消失。</span> \r\n				</p>\r\n			</li>\r\n		</ol>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">用户数量</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">公司有机会被收购那将是个不错的选择。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">潜在买家会尽可能拖延收购。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">买家真正在意的只是用户数量，用户是你证明自己创造了财富的唯一证据。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">创造人们需要的东西也就是在创造财富。如果你想通过创造财富使自己致富，那么你必须知道人们需要什么。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">科技行业总，一旦你的技术与使用者的需要有差距，影响会成倍放大，要么令大量客户满意，要么令大量客户不满意。</span> \r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style=\"font-size:14px;\">财富与权力</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">没有财富的激励，技术革新就会逐渐停顿，只有在巨大利益的激励下， 你才会去挑战那些困难的问题。</span> \r\n		</p>\r\n		<p>\r\n			<span style=\"font-size:14px;\">藏富于民，国家就会变的强大。</span> \r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;line-height:21px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;line-height:21px;\"><span style=\"background-color:#337FE5;\">原文链接：</span><a href=\"http://blog.csdn.net/q969403688/article/details/25774881\"><span style=\"background-color:#337FE5;\">http://blog.csdn.net/q969403688/article/details/25774881</span></a></span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>',NULL,'2014-05-19 17:13:39','2014-05-19 17:13:10',0,' 如何创造财富？硅谷创业之父 Paul Graham 《黑客与画家》思维导图',0),(78,'admin',3,'<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	每天，美团的上百名工程师都在不断改进美团的用户体验，或是加入各种新鲜的功能。作为负责展现、交互的前端工程师，我们上线的次数可达一天数十次。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	我们使用&nbsp;<a href=\"https://www.atlassian.com/software/stash\">Stash</a>&nbsp;托管项目代码。每个功能都新增一个新任务分支 (feature branch)，当开发测试完成后，推送任务分支到 Stash 上，并创建 pull request 进入代码审查，直到被通过，等待上线。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	为了保证开发速度，我们不断改进完善这个发布流程，让这个过程更简单、高效。\r\n</p>\r\n<h3 style=\"font-size:18px;color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;background-color:#FFFFFF;\">\r\n	前端工作现状\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	前端工作是连接后台实现和视觉表现交互的桥梁，前端工作有以下特点：\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<li>\r\n		往往需要和后端工程师合作开发\r\n	</li>\r\n	<li>\r\n		在测试时也需要 checkout 后端代码，并在此基础上进行开发\r\n	</li>\r\n	<li>\r\n		双方频繁 merge/rebase 分支\r\n	</li>\r\n	<li>\r\n		每个人使用 Git 的方式不太一样，我们的工作流需要较强的适应性\r\n	</li>\r\n	<li>\r\n		在开发测试完成之后，我们要求每一次上线的代码都必须经过 pull request 加代码审核\r\n	</li>\r\n</ul>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	多人合作开发的一般工作流可以参见&nbsp;<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\">A successful Git branching model</a>&nbsp;和&nbsp;<a href=\"https://www.atlassian.com/git/workflows\">Git Workflows</a>，在一般开发阶段使用 merge 或 rebase 都能够胜任。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	但在 pull request 之前我们需要把双方的提交分开，这个工作往往还不够自动化。一种常见的做法是&nbsp;git reset --soft HEAD~&nbsp;将所有改动移出暂存区 (staging area)，然后手工添加那些我们改了的文件。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	事实上，我们可以用 rebase 来帮我们提高效率，实现自动提取、合并提交。\r\n</p>\r\n<h3 style=\"font-size:18px;color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;background-color:#FFFFFF;\">\r\n	rebase 是什么？\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	首先简单介绍一下 rebase（衍合），git-scm 上有很好的<a href=\"http://git-scm.com/book/en/Git-Branching-Rebasing\">介绍</a>（<a href=\"http://git-scm.com/book/zh/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E8%A1%8D%E5%90%88\">中文翻译</a>），简单的说，git rebase A B&nbsp;会把在 A 分支里提交的改变移到 B 分支里重放一遍。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	它的原理是回到两个分支最近的共同祖先，根据 B 的历次提交对象，生成一系列文件补丁，然后以 A 为基底分支最后一个提交对象为新的出发点，逐个应用之前准备好的补丁文件，最后会生成一个新的合并提交对象，从而改写 B 的提交历史，使它成为 A 分支的直接下游。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	通过修改提交历史，我们可以更方便的准备 pull request。\r\n</p>\r\n<h3 style=\"font-size:18px;color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;background-color:#FFFFFF;\">\r\n	用 Git rebase 来提取、合并提交\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	比如说后端的 Alice 和前端的 Bob 合作开发一个功能，他们分别从 master 分支上 checkout，并开始工作。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	他们互相 merge 对方的分支的进行开发、测试。最终，这个功能开发测试完成，Bob 合并了 Alice 的分支（图中星号的位置），可以进入代码审核和上线的流程了。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://fe.meituan.com/img/improving-git-flow_squashing-commits/git-branches.svg\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这时候 Alice 和 Bob 需要提取、合并各自的提交，并分别发送 pull request 进入代码审核。我们站在 Bob 的角度来解释一下如何使用 rebase 来方便的做到这一点。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Bob 现在处在 bob/fb 上（图中星号的位置），这时候 bob/fb 实际上包含了 alice/fb 的所有提交。首先我们从 bob/fb 上新建一个分支\r\n</p>\r\n<pre>// 准备一个新的分支\r\n$ git checkout -b bob/review</pre>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://fe.meituan.com/img/improving-git-flow_squashing-commits/git-bob-before-rebase.svg\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	然后我们通过 rebase 把自己的提交排到一起\r\n</p>\r\n<pre>// 把 Alice 的提交和自己的提交分别排在一起\r\n$ git rebase alice/fb</pre>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://fe.meituan.com/img/improving-git-flow_squashing-commits/git-bob-after-rebase.svg\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	接下来我们把 bob/review 上的提交合并\r\n</p>\r\n<pre>// 用 interactive rebase 合并提交\r\n$ git rebase -i HEAD~`git rev-list --first-parent master...bob/fb --no-merges --count`</pre>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	执行上面这行命令会打开终端默认的编辑器（可通过 EDITOR 环境变量设置）。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://fe.meituan.com/img/improving-git-flow_squashing-commits/vim-rebase.png\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这些信息表示从在 bob/review 上找到了两个在 bob/fb 上的提交。每个提交都另起一行来表示，行格式如下：\r\n</p>\r\n<pre>(action) (partial SHA-1) (short commit message)</pre>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	按照下面的提示，我们可以把除了第一行外的 pick 替换成 fixup (f) 或是 squash (s) 来实现合并提交。另外，上下移动一行可以对提交进行重排序。一旦你完成对提交信息的编辑，并退出编辑器，Git 会按照你指定的顺序去应用提交，并且做出相应的操作（action），形成的新提交和提交信息会被保存起来。(<strong>备注</strong>：在 Git 1.7 之后，我们还可以使用&nbsp;--autosquash&nbsp;自动合并提交，进一步提高生产效率。)\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	合并完之后我们的分支是这样的\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://fe.meituan.com/img/improving-git-flow_squashing-commits/git-bob-squash.svg\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	然后，我们可以使用&nbsp;rebase --onto&nbsp;取出 bob/review 上有而 alice/fb 上没有的提交，并指定新的基底分支（也就是主干分支 master）\r\n</p>\r\n<pre>// 取出 Bob 的提交，并排除 alice/fb 上的提交\r\ngit rebase --onto master alice/fb bob/review</pre>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://fe.meituan.com/img/improving-git-flow_squashing-commits/git-rebase-onto.svg\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这样在 bob/review 分支上就只有 Bob 自己的提交了。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这时候就可以用&nbsp;git merge master&nbsp;或者&nbsp;git rebase master&nbsp;来更新分支，然后发送 pull request 进入代码审核环节了。\r\n</p>\r\n<h3 style=\"font-size:18px;color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;background-color:#FFFFFF;\">\r\n	小结\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	以上是我们处理代码审查之前提取、合并提交的一点思考和实践。例子中命令虽然长，但可以很方便的写成一个脚本自动进行，除非遇到冲突，否则需要人工干预的情况并不多在。在美团，我们一直努力用好现有工具，降低重复操作，让工具自动化融入工作流程之中，成为我们不断提升工作效率的重要帮手。希望我们的实践能对你有帮助。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Lucida Grande\', helvetica, arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	原文链接：http://fe.meituan.com/improving-git-flow_squashing-commits.html\r\n</p>',NULL,NULL,'2014-05-20 06:45:59',0,'改进合作 Git 工作流：自动提取、合并提交',0),(79,'admin',15,'<p>\r\n	<a href=\"http://image.woshipm.com/wp-files/2014/05/222222.jpg\"><span style=\"font-size:14px;\"></span><img src=\"http://image.woshipm.com/wp-files/2014/05/222222.jpg\" alt=\"222222\" width=\"640\" height=\"330\" /></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">导语：张小龙会要求他的产品经理人手一本《乔布斯传》，也曾有人说过，如果求职者对他说自己看完了凯文·凯利的《失控》，面试就可以结束了。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“微信之父”张小龙会要求他的产品经理人手一本《乔布斯传》，也曾有人说过，如果求职者说自己看完了凯文·凯利的《失控》，面试就可以结束了。不禁让人好奇，张小龙平日里会看哪些书?这些书又如何影响着他对“微信”的构想?</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">本文主体部分根据《壹读》“失控的微信先生”与《商业周刊中文版》“张小龙的盗梦空间”整理。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.amazon.cn/%E5%A4%B1%E6%8E%A7-%E5%85%A8%E4%BA%BA%E7%B1%BB%E7%9A%84%E6%9C%80%E7%BB%88%E5%91%BD%E8%BF%90%E5%92%8C%E7%BB%93%E5%B1%80-%E5%87%AF%E6%96%87%E2%80%A2%E5%87%AF%E5%88%A9/dp/B004FPIHG0/ref=sr_1_1?s=books&ie=UTF8&qid=1399947728&sr=1-1&keywords=%E5%A4%B1%E6%8E%A7\" target=\"_blank\"><span style=\"font-size:14px;\">1.《失控》</span></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">凯文·凯利，一位在亚洲游荡了近10年的美国人，东方激发了他对于技术的思考，最终通往哲学的终极命题。在他笔下，失控，往往意味着不确定性，容易使人感到不安，但正是不确定性和不可控性，成就了创新的源泉与进化的动因。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在广研，产品经理们人手一本《失控》，因为张小龙说过：不读《失控》的产品经理，知识结构是不完整的。在腾讯内部的演讲中，张小龙反复提及这本书启发了他的产品观：不与用户产生互动的产品，是失败的产品。产品规则越简单，才越能让群体形成自发的互动。产品上线后，就有了自己的生命，会自己与海量用户互动，最后会互动出什么结果，是产品设计者不能控制的。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">张小龙：凯文·凯利的《失控》我给很多人推荐。这本书很厚，所以很多人都没有耐心的看完它，我自己也是，可是如果我们面试一个大学生，他告诉我他看完了这本书，我肯定就录用他—— 不过他们不知道这个秘诀。如果做互联网产品的不看一下这本书，我认为知识是不全面的。他从生物学、社会学的角度描述了一种群体效应，总的来说，结论是群体的智商低于个体智商。这个观点不在那本书里，而是在另外一本书里，我不记得书名。一个人在组织里，组织的平均智商是低于个体智商的，个体的智商更高一些，群体会拉平这个智商。比如说在微博里，微博上多了你的智商会降低，大家认同吗?你没有发现这个变化，因为你每天降低一点。很简单的，你每天在微博上说的话，你会发现跟大众越来越一致，别人在说什么，你也在说什么。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.amazon.cn/%E7%A7%91%E6%8A%80%E6%83%B3%E8%A6%81%E4%BB%80%E4%B9%88-%E5%87%AF%E6%96%87%E2%80%A2%E5%87%AF%E5%88%A9/dp/B006BM844U/ref=sr_1_1?s=books&ie=UTF8&qid=1399947767&sr=1-1&keywords=%E7%A7%91%E6%8A%80%E6%83%B3%E8%A6%81%E4%BB%80%E4%B9%88\" target=\"_blank\"><span style=\"font-size:14px;\">2.《科技想要什么》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/3f0c51dc8926444d14c7fe4e6c620ce6.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">凯文·凯利向我们介绍了一种全新的科技观。他认为，作为整体，科技不是由线路和金属构成的一团乱麻，而是有生命力的自然形成的系统，它的起源完全可以回溯到生命的初始时期。张小龙对原始人的生活方式充满兴趣，花工夫研究了人类的起源，人类为什么会直立行走，他还曾在知乎上提问：原始人用什么来剪指甲?广研内部对摇一摇有个专门的称呼：撸一撸。这是人类最原始的姿势，最原始的，体验往往是最好的。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">为什么?张小龙说自己平时会非常留心观察三四岁小孩子，他发现他们很喜欢用iPhone与iPad，因为这两款电子产品很容易学，比如开机，虽然看不懂“滑动来解锁”，但因为触摸是人的天性，他们会下意识顺着箭头的方向用手指去滑动。“越简单，越原始，就越人性化”。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.amazon.cn/%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0-%E6%B2%83%E5%B0%94%E7%89%B9%E2%80%A2%E8%89%BE%E8%90%A8%E5%85%8B%E6%A3%AE/dp/B0060IDE40/ref=sr_1_1?s=books&ie=UTF8&qid=1399947791&sr=1-1&keywords=%E4%B9%94%E5%B8%83%E6%96%AF%E4%BC%A0\" target=\"_blank\"><span style=\"font-size:14px;\">3.《乔布斯传》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/eb8bcbbe5720f7fbe04fe4234f1433a8.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在腾讯公司内部，张小龙被称为继马化腾之后的第二个超级产品经理，中国的乔布斯。微信4 .0推出时张小龙更新了微博签名：越简单，但越好。这是德国工业设计大师Dieter Ram崇尚的设计理念，也是乔布斯“至繁归于至简”的精神。4.0初期的朋友圈甚至没有滤镜，因为他认为：照片真实、不加修饰地反映生活即可。微信发展早期，一些创意常被竞争对手模仿，并进化出新功能，马化腾曾问张小龙：是不是要做细化，免得别人做了那些我们没有想到的功能。张坚决否定，他说：只有做到极简，才无法被超越。一位微信团队前成员透露，微信每个版本的设计，张小龙都会鼓励大家先做加法，再做减法，“现在你正在用的一个功能，很可能就是我们砍了 300多个功能后留下的。”他说。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">微信的开机画面，起初做过许多方案，大家比较倾向于两个人站在地球前，张小龙坚持就一个人，否则无法传递这款应用的用意：人很孤独，所以需要沟通。朋友圈也是一款充满极简主义的产品，它的主色调是蓝灰色，这也是张小龙平时常穿的T恤以及广研办公室的色调。拍照片，按一下右上角相机按钮;写纯文本，长按右上角相机按钮即可，这一功能许多用户起初并不知道。“按住说话”的功能也是，说话时，其实按三秒就可以放开了。但张小龙从不说，也不担心用户不会用，“你去找，自然就能找到”。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://item.jd.com/10261798.html\" target=\"_blank\"><span style=\"font-size:14px;\">4.《女人的起源》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/9421f40f9037ee8bcacb840e2ac57ce4.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">以男性为中心的生物学家，则用人类起源于丛林并进化为以狩猎为生的肉食动物的学说，来证明女性无论在体力和智力上，都处于从属的地位。对此，《女人的起源》首次为女性在人类进化史中的平等地位据理力争。它开一代风气之先，力图解开人类，特别是女性的演化和起源之谜;而它提供的答案，则从女性的角度对人类的史前史做出了推测性的重构，极富革命性和破坏力。在张小龙的演讲里，他曾经向听众推荐这本书，他说：“如果你们对女性的心理研究不透彻的话，你就损失了一半的用户。”</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://item.jd.com/10855379.html\" target=\"_blank\"><span style=\"font-size:14px;\">5.《黑客》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/13ccfee1a551704f030eb2ac44fbd884.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Steven Levy这部经典力作的25周年版从20世纪50年代早期跨越到80年代后期，追述了计算机革命中初期黑客的丰功伟绩，他们都是最聪明和最富有个性的精英。他们勇于承担风险，勇于挑战规则，并把世界推向了一个全新的发展方向。本书更新了一些著名黑客的最新资料，包括比尔·盖茨、马克·扎克伯格、理查德· 斯托曼和史蒂夫·沃兹尼亚克，并讲述了从早期计算机研究实验室到最初的家用计算机期间一些妙趣横生的故事。在Levy的笔下，他们都是聪明而勤奋的人，他们极富想象力，他们另辟蹊径，发现了计算机工程问题的巧妙解决方案。他们都有一个共同的价值观，那就是至今仍然长盛不衰的“黑客道德”。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.amazon.cn/%E5%BC%82%E7%B1%BB-%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E6%88%90%E5%8A%9F%E5%90%AF%E7%A4%BA%E5%BD%95-%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A7%86%E2%80%A2%E6%A0%BC%E6%8B%89%E5%BE%B7%E5%A8%81%E5%B0%94/dp/B00JD436FA/ref=sr_1_3?s=books&ie=UTF8&qid=1399947929&sr=1-3&keywords=%E5%BC%82%E7%B1%BB\" target=\"_blank\"><span style=\"font-size:14px;\">6.《异类》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/e9e4417ac5d9490b5abd480ecd479445.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在《异类》一书中，作家格拉德威尔对社会中那些成功人士进行的分析，让读者看到了一连串颇感意外的统计结果：英超联赛大部分球员都在9月至11月出生;比尔·盖茨和史蒂夫·乔布斯都出生在1955年;纽约很多著名律师事务所的开创者竟然都是犹太人后裔，并且他们的祖辈大多是在纽约的服装行业谋生。那些奇才异类，他们之所以神奇，得感谢机遇的眷顾。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">不过，除了机遇之外，他们的成功还需要上辈人的文化熏陶。因此，从《异类》一书中，你能体会到机遇对成功是如此的重要。格拉德威尔为读者指出了成功之路的方向，但怎样把握这份机遇，每个人都需要仔细思考，毕竟，不同人拥有不同的机遇。在这本书中，张小龙最欣赏的则是“1万小时定律”，即一个人必须经过超过1万小时的训练才能达到一定的专业高度。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.amazon.cn/%E5%9B%BE%E7%81%B5%E6%96%B0%E7%9F%A5-%E4%BF%A1%E6%81%AF%E7%AE%80%E5%8F%B2-%E8%A9%B9%E5%A7%86%E6%96%AF%C2%B7%E6%A0%BC%E9%9B%B7%E5%85%8B/dp/B00G6CY2R8/ref=sr_1_1?s=books&ie=UTF8&qid=1399947954&sr=1-1&keywords=%E4%BF%A1%E6%81%AF%E7%AE%80%E5%8F%B2\" target=\"_blank\"><span style=\"font-size:14px;\">7.《信息简史》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/27f3395d6712b61dd46ad220693f5db9.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">现如今，信息如洪流般淹没了我们，使我们深陷信息焦虑、信息过载、信息疲劳的困扰。但回顾历史，这并不是件新鲜事，人们也总是能想出应对手段。维基百科 、Google便是我们的应对之一。无论对于信息的未来持何态度，有一点是确定无疑的，即我们人类是信息的造物。作为《混沌》、《费曼传》、《越来越快》、《牛顿传》等畅销书的作者，格雷克不仅在书中细致还原了历史细节，通俗解释了各种理论，还生动刻画了几位不为大众所知的人物：可编程计算机先驱、超越时代的查尔斯·巴贝奇，第一位程序员、诗人拜伦之女爱达·拜伦，计算机科学之父、天妒英才的阿兰·图灵，以及全书的主人公、信息论之父克劳德·香农。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.amazon.cn/%E6%95%B0%E5%AD%97%E4%B9%8C%E6%89%98%E9%82%A6-%E4%BB%8E%E5%8F%8D%E4%B8%BB%E6%B5%81%E6%96%87%E5%8C%96%E5%88%B0%E8%B5%9B%E5%8D%9A%E6%96%87%E5%8C%96-%E5%BC%97%E9%9B%B7%E5%BE%B7%E2%80%A2%E7%89%B9%E7%BA%B3/dp/B00COQ1RVE/ref=sr_1_1?s=books&ie=UTF8&qid=1399947981&sr=1-1&keywords=%E6%95%B0%E5%AD%97%E4%B9%8C%E6%89%98%E9%82%A6\" target=\"_blank\"><span style=\"font-size:14px;\">8.《数字乌托邦》</span></a> \r\n</p>\r\n<p>\r\n	<img src=\"http://image.woshipm.com/wp-files/2014/05/4be85e94afd6c74f9ad843bcf9c96ece.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">20世纪60年代早期，在美国大众眼中，计算机只是冷战中冰冷的机器，然而到了90年代互联网到来之时，计算机却呈现出一个截然不同的世界——它们模拟出了一个数字乌托邦般的协同体，而这正是曾经最反对冷战的嬉皮士们的共同愿景。本书正是探索这次非同寻常，且颇具讽刺意味的变革的第一本书。作者挖掘出那些在旧金山湾区的先驱者——斯图尔特·布兰德和他的“全球网络”鲜为人知的故事。1968年到1998年期间，通过《全球概览》、“全球电子链接(WELL)”和最终取得巨大成功的《连线》杂志，布兰德和他的伙伴们长期扮演着旧金山嬉皮士运动和新兴科技聚集区硅谷的中间人的角色。正由于他们富有远见的努力，反主流文化分子和科技人士一同重新定义了计算机的形象：计算机是解放自我的武器，计算机建筑了令人耳目一新的虚拟社区，计算机还让人们能更大胆地拓展社会的新疆界。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">文章来源：创业邦</span>\r\n</p>',NULL,'2014-05-20 09:19:28','2014-05-20 09:19:12',0,'微信之父张小龙的书单：大学生读完《失控》我肯定录用',0),(80,'admin',17,'<p>\r\n	<a href=\"http://blog.jamesdbloom.com/JavaCodeToByteCode_PartOne.html#variables\" target=\"_blank\">英文原文链接</a>，<a href=\"http://ifeve.com/javacode2bytecode/%E2%80%8E\">译文链接</a>，原文作者：James Bloom，译者：有孚\r\n</p>\r\n<p>\r\n	明白Java代码是如何编译成字节码并在JVM上运行的非常重要，这有助于理解程序运行的时候究竟发生了些什么。理解这点不仅能搞清语言特性是如何实现的，并且在做方案讨论的时候能清楚相应的副作用及权衡利弊。\r\n</p>\r\n<p>\r\n	本文介绍了Java代码是如何编译成字节码并在JVM上执行的。想了解JVM的内部结构以及字节码运行时用到的各个内存区域，可以看下我前面的<a href=\"http://blog.jamesdbloom.com/JVMInternals.html\" target=\"_blank\">一篇关于JVM内部细节的文章</a>。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	本文分为三部分，每一部分都分成几个小节。每个小节都可以单独阅读，不过由于一些概念是逐步建立起来的，如果你依次阅读完所有章节会更简单一些。每一节都会覆盖到Java代码中的不同结构，并详细介绍了它们是如何编译并执行的。\r\n</p>\r\n<p>\r\n	1. 第一部分， 基础概念\r\n</p>\r\n<h3>\r\n	变量\r\n</h3>\r\n<h5>\r\n	局部变量\r\n</h5>\r\n<p>\r\n	JVM是一个基于栈的架构。方法执行的时候（包括main方法），在栈上会分配一个新的帧，这个栈帧包含一组局部变量。这组局部变量包含了方法运行过程中用到的所有变量，包括this引用，所有的方法参数，以及其它局部定义的变量。对于类方法（也就是static方法）来说，方法参数是从第0个位置开始的，而对于实例方法来说，第0个位置上的变量是this指针。\r\n</p>\r\n<p>\r\n	局部变量可以是以下这些类型：\r\n</p>\r\n<p>\r\n	<span style=\"line-height:2;\">* char</span><br />\r\n<span style=\"line-height:2;\"> * long</span><br />\r\n<span style=\"line-height:2;\"> * short</span><br />\r\n<span style=\"line-height:2;\"> * int</span><br />\r\n<span style=\"line-height:2;\"> * float</span><br />\r\n<span style=\"line-height:2;\"> * double</span><br />\r\n<span style=\"line-height:2;\"> * 引用</span><br />\r\n<span style=\"line-height:2;\"> * 返回地址</span>\r\n</p>\r\n<p>\r\n	除了long和double类型外，每个变量都只占局部变量区中的一个变量槽(slot)，而long及double会占用两个连续的变量槽，因为这些类型是64位的。\r\n</p>\r\n<p>\r\n	当一个新的变量创建的时候，操作数栈（operand stack）会用来存储这个新变量的值。然后这个变量会存储到局部变量区中对应的位置上。如果这个变量不是基础类型的话，本地变量槽上存的就只是一个引用。这个引用指向堆的里一个对象。\r\n</p>\r\n<p>\r\n	比如：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">int i = 5;</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	编译后就成了\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">0: bipush      5\r\n2: istore_0</pre>\r\n<br />\r\n</div>\r\n<table cellpadding=\"2\" cellspacing=\"0\" border=\"1\" bordercolor=\"#000000\" style=\"width:60%;\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">bipush</span><br />\r\n			</td>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">用来将一个字节作为整型数字压入操作数栈中，在这里5就会被压入操作数栈上。</span><br />\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				istore_0\r\n			</td>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">这是istore_</span>这组指令集（译注：严格来说，这个应该叫做操作码，opcode ,指令是指操作码加上对应的操作数，oprand。不过操作码一般作为指令的助记符，这里统称为指令）中的一条，这组指令是将一个整型数字存储到本地变量中。n代表的是局部变量区中的位置，并且只能是0,1,2,3。再多的话只能用另一条指令istore了，这条指令会接受一个操作数，对应的是局部变量区中的位置信息。<br />\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	这条指令执行的时候，内存布局是这样的：\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140520/20140520150106_886.png\" alt=\"\" style=\"height:auto;width:auto;\" width=\"627\" height=\"580\" title=\"\" align=\"\" /> \r\n</p>\r\n<p>\r\n	class文件中的每一个方法都会包含一个局部变量表，如果这段代码在一个方法里面的话，你会在类文件的局部变量表中发现如下的一条记录。\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">LocalVariableTable:\r\n        Start  Length  Slot  Name   Signature\r\n          0      1      1     i         I</pre>\r\n<br />\r\n</div>\r\n<h5>\r\n	字段\r\n</h5>\r\n<p>\r\n	Java类里面的字段是作为类对象实例的一部分，存储在堆里面的（类变量对应存储在类对象里面）。关于字段的信息会添加到类文件里的field_info数组里，像下面这样：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">ClassFile {\r\n    u4 magic;\r\n    u2 minor_version;\r\n    u2 major_version;\r\n    u2 constant_pool_count;\r\n    cp_info contant_pool[constant_pool_count – 1];\r\n    u2 access_flags;\r\n    u2 this_class;\r\n    u2 super_class;\r\n    u2 interfaces_count;\r\n    u2 interfaces[interfaces_count];\r\n    u2 fields_count;\r\n    field_info fields[fields_count];\r\n    u2 methods_count;\r\n    method_info methods[methods_count];\r\n    u2 attributes_count;\r\n    attribute_info attributes[attributes_count];\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	另外，如果变量被初始化了，那么初始化的字节码会加到构造方法里。\r\n</p>\r\n<p>\r\n	下面这段代码编译了之后：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">public class SimpleClass {\r\n\r\n    public int simpleField = 100;\r\n\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	如果你用javap进行反编译，这个被添加到了field_info数组里的字段会多出一段描述信息。\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">public int simpleField;\r\n    Signature: I\r\n    flags: ACC_PUBLIC</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	初始化变量的字节码会被加到构造方法里，像下面这样：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public SimpleClass();\r\n  Signature: ()V\r\n  flags: ACC_PUBLIC\r\n  Code:\r\n    stack=2, locals=1, args_size=1\r\n       0: aload_0\r\n       1: invokespecial #1                  // Method java/lang/Object.\"&lt;init&gt;\":()V\r\n       4: aload_0\r\n       5: bipush        100\r\n       7: putfield      #2                  // Field simpleField:I\r\n      10: return</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<table cellpadding=\"2\" cellspacing=\"0\" border=\"1\" bordercolor=\"#000000\" style=\"width:70%;\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				aload_0\r\n			</td>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">从局部变量数组中加载一个对象引用到操作数栈的栈顶。尽管这段代码看起来没有构造方法，但是在编译器生成的默认的构造方法里，就会包含这段初始化的代码。第一个局部变量正好是this引用，于是aload_0把this引用压到操作数栈中。aload_0是aload_指令集中的一条，这组指令会将引用加载到操作数栈中。n对应的是局部变量数组中的位置，并且也只能是0,1,2,3。还有类似的加载指令，它们加载的并不是对象引用，比如iload_,lload_,fload_,和dload_, 这里i代表int,l代表long,f代表float,d代表double。局部变量的在数组中的位置大于3的，得通过iload,lload,fload,dload,和aload进行加载，这些指令都接受一个操作数，它代表的是要加载的局部变量的在数组中的位置。</span><br />\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				invokespecial\r\n			</td>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">这条指令可以用来调用对象实例的构造方法，私有方法和父类中的方法。它是方法调用指令集中的一条，其它的还有invokedynamic, invokeinterface, invokespecial, invokestatic, invokevirtual.这里的invokespecial指令调用的是父类也就是java.lang.Object的构造方法。</span><br />\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bipush\r\n			</td>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">它是用来把一个字节作为整型压到操作数栈中的，在这里100会被压到操作数栈里。</span><br />\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				putfield\r\n			</td>\r\n			<td>\r\n				<span style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:normal;background-color:#FFFFFF;\">它接受一个操作数，这个操作数引用的是运行时常量池里的一个字段，在这里这个字段是simpleField。赋给这个字段的值，以及包含这个字段的对象引用，在执行这条指令的时候，都 会从操作数栈顶上pop出来。前面的aload_0指令已经把包含这个字段的对象压到操作数栈上了，而后面的bipush又把100压到栈里。最后putfield指令会将这两个值从栈顶弹出。执行完的结果就是这个对象的simpleField这个字段的值更新成了100。</span><br />\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	上述代码执行的时候内存里面是这样的：\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140520/20140520150337_187.png\" alt=\"\" style=\"height:auto;width:auto;\" width=\"726\" height=\"1285\" title=\"\" align=\"\" /> \r\n</p>\r\n<p>\r\n	这里的putfield指令的操作数引用的是常量池里的第二个位置。JVM会为每个类型维护一个常量池，运行时的数据结构有点类似一个符号表，尽管它包含的信息更多。Java中的字节码操作需要对应的数据，但通常这些数据都太大了，存储在字节码里不适合，它们会被存储在常量池里面，而字节码包含一个常量池里的引用 。当类文件生成的时候，其中的一块就是常量池：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">Constant pool:\r\n   #1 = Methodref          #4.#16         //  java/lang/Object.\"&lt;init&gt;\":()V\r\n   #2 = Fieldref           #3.#17         //  SimpleClass.simpleField:I\r\n   #3 = Class              #13            //  SimpleClass\r\n   #4 = Class              #19            //  java/lang/Object\r\n   #5 = Utf8               simpleField\r\n   #6 = Utf8               I\r\n   #7 = Utf8               &lt;init&gt;\r\n   #8 = Utf8               ()V\r\n   #9 = Utf8               Code\r\n  #10 = Utf8               LineNumberTable\r\n  #11 = Utf8               LocalVariableTable\r\n  #12 = Utf8               this\r\n  #13 = Utf8               SimpleClass\r\n  #14 = Utf8               SourceFile\r\n  #15 = Utf8               SimpleClass.java\r\n  #16 = NameAndType        #7:#8          //  \"&lt;init&gt;\":()V\r\n  #17 = NameAndType        #5:#6          //  simpleField:I\r\n  #18 = Utf8               LSimpleClass;\r\n  #19 = Utf8               java/lang/Object</pre>\r\n<br />\r\n</div>\r\n<h5>\r\n	常量字段（类常量）\r\n</h5>\r\n<p>\r\n	带有final标记的常量字段在class文件里会被标记成ACC_FINAL.\r\n</p>\r\n<p>\r\n	比如\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">public class SimpleClass {\r\n\r\n    public final int simpleField = 100;\r\n\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	字段的描述信息会标记成ACC_FINAL:\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public static final int simpleField = 100;\r\n    Signature: I\r\n    flags: ACC_PUBLIC, ACC_FINAL\r\n    ConstantValue: int 100</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	对应的初始化代码并不变：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">4: aload_0\r\n5: bipush        100\r\n7: putfield      #2                  // Field simpleField:I</pre>\r\n<br />\r\n</div>\r\n<h5>\r\n	静态变量\r\n</h5>\r\n<p>\r\n	带有static修饰符的静态变量则会被标记成ACC_STATIC：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public static int simpleField;\r\n    Signature: I\r\n    flags: ACC_PUBLIC, ACC_STATIC</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	不过在实例的构造方法中却再也找不到对应的初始化代码了。因为static变量会在类的构造方法中进行初始化，并且它用的是putstatic指令而不是putfiled。\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">static {};\r\n  Signature: ()V\r\n  flags: ACC_STATIC\r\n  Code:\r\n    stack=1, locals=0, args_size=0\r\n       0: bipush         100\r\n       2: putstatic      #2                  // Field simpleField:I\r\n       5: return</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	<img src=\"http://blog.jamesdbloom.com/images_2013_11_17_17_56/java_class_variable_creation_byte_code.png\" alt=\"\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p>\r\n	未完待续。\r\n</p>\r\n<p>\r\n	本文最早发表于本人个人博客:<a href=\"http://it.deepinmind.com/jvm/2014/04/03/java-code-to-byte-code.html\" target=\"_blank\">Java译站</a> \r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/javacode2bytecode/\">Java字节码浅析（—）</a> \r\n	</li>\r\n</ul>',NULL,'2014-05-20 15:20:46','2014-05-20 15:04:41',0,'Java字节码浅析（—）',0),(81,'admin',12,'<div>\r\n	<div>\r\n		<h2>\r\n			<span style=\"font-size:14px;\">1.&nbsp;并发</span> \r\n		</h2>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">1.1. 什么是并发?</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			<a></a> \r\n		</p>\r\n		<p>\r\n			并发是一种能并行运行多个程序或并行运行一个程序中多个部分的能力。如果程序中一个耗时的任务能以异步或并行的方式运行，那么整个程序的吞吐量和可交互性将大大改善。现代的PC都有多个CPU或一个CPU中有多个核。是否能合理运用多核的能力将成为一个大规模应用程序的关键。\r\n		</p>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">1.2. 进程 vs. 线程</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			<a></a><a></a> \r\n		</p>\r\n		<p>\r\n			进程是以独立于其他进程的方式运行的，进程间是互相隔离的。一个进程无法直接访问另一个进程的数据。进程的资源诸如内存和CPU时间片都是由操作系统来分配。\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			线程又被称为轻量级进程。每个线程有它独自的调用栈， 但是在同一进程下的线程又能互相访问它们间的共享数据。每个线程都有它独自的缓存。如果一个线程读取了某些共享数据，那么它将这些数据存放在自己的缓存中以供将来再次读取。\r\n		</p>\r\n		<p>\r\n			一个JAVA应用程序默认以一个进程的形式运行着。在一个JAVA程序中，你将协同多个不同的线程一起完成并行运算或实现异步行为。\r\n		</p>\r\n	</div>\r\n</div>\r\n<div>\r\n	<div>\r\n		<h2>\r\n			<a></a><span style=\"font-size:14px;\">2.&nbsp;并发的改进与问题</span> \r\n		</h2>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">2.1.&nbsp;并发性能的上限</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			之所以并发号称能较快的完成某些任务是因为这些任务能被分组成多个子任务，并且这些子任务能被并行的执行。所以一个任务的实际运行效率将受限于该任务中能并行执行的部分。\r\n		</p>\r\n		<p>\r\n			一个程序理论上可达到的最高并发性能可通过以下一个被称为Amdahl 定律来计算出：\r\n		</p>\r\n		<p>\r\n			设F为一个程序中不能被并行执行的百分比，N是处理器的数量，那么理论上该程序能获得的最高并发性能将可能是1/ (F+ ((1-F)/n)).\r\n		</p>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">2.2.&nbsp;并发问题</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			线程有独自的调用栈，但是又能互相访问共享的数据。所以这里你会遇到两个问题，可见性和访问。\r\n		</p>\r\n		<p>\r\n			可见性问题发生于如果线程A先读取了某些共享数据，之后线程B对这些数据进行了修改，那么线程A可能看不到线程B对这数据的改动。\r\n		</p>\r\n		<p>\r\n			访问问题发生于于 多个线程同时访问修改同一个共享数据。\r\n		</p>\r\n		<p>\r\n			可见性及访问问题将导致\r\n		</p>\r\n		<div>\r\n			<ul>\r\n				<li>\r\n					活跃性失败：由于并发访问数据导致程序无任何反应。 譬如，死锁。\r\n				</li>\r\n				<li>\r\n					安全性失败：程序创建了错误的数据。\r\n				</li>\r\n			</ul>\r\n		</div>\r\n	</div>\r\n</div>\r\n<div>\r\n	<div>\r\n		<h2>\r\n			<a></a><span style=\"font-size:14px;\">3. JAVA中的并发</span> \r\n		</h2>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">3.1.&nbsp;进程与线程</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			一个JAVA程序默认以一个线程运行在自己的进程中。JAVA语言通过Thread相关代码来支持线程。JAVA程序可通过Thread这个类来创建线程。从JAVA1.5起，在java.util.concurrent中提供了改进的并发库。\r\n		</p>\r\n	</div>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<div>\r\n		<h3>\r\n			<a></a><span style=\"font-size:14px;\">3.2. 锁和线程同步</span> \r\n		</h3>\r\n	</div>\r\n	<p>\r\n		JAVA提供了“锁” 机制来保护代码片段免于被多个线程在同一时刻运行。最简单的锁住一个方法或一个类就是在该方法或类前添加synchronized关键字\r\n	</p>\r\n	<p>\r\n		在Java中synchronized关键字保证了：\r\n	</p>\r\n	<div>\r\n		<ul>\r\n			<li>\r\n				在同一时刻，只有单个线程能访问这块代码\r\n			</li>\r\n			<li>\r\n				每个进入这同步代码块的线程都将能看到之前持有相同锁进入的线程的所做的改动\r\n			</li>\r\n		</ul>\r\n	</div>\r\n	<p>\r\n		对于线程间的可靠通讯及互斥访问 来说，同步是非常必要的\r\n	</p>\r\n	<p>\r\n		你可以在定义方法时使用synchronized关键字。这个关键字保证了同一时刻只有一个线程能运行这个方法。其他同样调用了这个方法的线程将被阻塞直到第一个线程离开这个方法。\r\n	</p>\r\n	<div>\r\n<pre class=\"prettyprint lang-java\">public synchronized void critial() {\r\n  // some thread critical stuff\r\n  // here\r\n}</pre>\r\n<br />\r\n	</div>\r\n	<p>\r\n		你同样也能用synchronized关键字来保护方法中的代码块。这块代码将由一个关键对象来保护，该关键对象可以是个string或其他object。这个关键对象就被称为 lock。所有被相同lock保护的代码在同一时刻只能被单个线程执行。\r\n	</p>\r\n	<p>\r\n		举例来说，以下的数据结构将保证同时只有单个线程可以访问add和next方法\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n<pre class=\"prettyprint lang-java\">package de.vogella.pagerank.crawler;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n/*** Data structure for a web crawler. Keeps track of the visited sites and keeps \r\n  * a list of sites which needs still to be crawled. \r\n  * @author Lars Vogel \r\n  */\r\n&lt;pre&gt;public class CrawledSites {\r\n  private List&lt;String&gt; crawledSites = new ArrayList&lt;String&gt;();\r\n  private List&lt;String&gt; linkedSites = new ArrayList&lt;String&gt;();\r\n\r\n  public void add(String site) {\r\n    synchronized (this) {\r\n      if (!crawledSites.contains(site)) {\r\n        linkedSites.add(site);\r\n      }\r\n    }\r\n  }\r\n/** * Get next site to crawl. Can return null (if nothing to crawl) */\r\n  public String next() {\r\n    if (linkedSites.size() == 0) {\r\n      return null;\r\n    }\r\n    synchronized (this) {\r\n      &lt;em&gt;// Need to check again if size has changed&lt;/em&gt;\r\n      if (linkedSites.size() &gt; 0) {\r\n        String s = linkedSites.get(0);\r\n        linkedSites.remove(0);\r\n        crawledSites.add(s);\r\n        return s;\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n}</pre>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">3.3.&nbsp;Volatile</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			如果一个变量声明时使用了volatile&nbsp;关键字，那么该关键字保证了，任何读取该变量的线程都将读到最新写进该变量的值。但volatile&nbsp;关键字不会保证变量上的任何互斥访问\r\n		</p>\r\n		<p>\r\n			As of Java 5 write access to a&nbsp;volatile&nbsp;variable will also update non-volatile variables which were modified by the same thread. This can also be used to update values within a reference variable, e.g. for a&nbsp;volatile&nbsp;variable person. In this case you must use a temporary variable person and use the setter to initialize the variable and then assign the temporary variable to the final variable. This will then make the address changes of this variable and the values visible to other threads.\r\n		</p>\r\n		<p>\r\n			因为在JAVA 5中，对一个声明了volatile&nbsp;的变量进行写操作会导致该写操作所在该线程之前所有的对非volatile&nbsp;变量的修改进行同步更新。这也可用来更新引用类型变量。例如，有个volatile&nbsp;类型的变量person。你必须创建一个临时变量person，然后调用SETTER方法来初始化这变量然后将临时变量赋值给final变量。 这会使这个变量的地址发生改变并且此变量的值对于其他线程变为可见。\r\n		</p>\r\n	</div>\r\n</div>\r\n<div>\r\n	<div>\r\n		<h2>\r\n			<a></a><span style=\"font-size:14px;\">4. JAVA 内存模型</span> \r\n		</h2>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">4.1.&nbsp;概览</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			JAVA内存模型描述了线程内存与主存间的通讯关系。\r\n		</p>\r\n		<p>\r\n			JAVA内存模型定义了线程内的内存改变将怎样传递到其他线程的规则，同样也定义了线程内存与主存进行同步的场景，也描述了哪些操作属于原子操作及操作间的顺序。\r\n		</p>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">4.2. 原子操作</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			一个原子操作是指一个执行时不会被其他操作影响到的最小单位的操作。\r\n		</p>\r\n		<p>\r\n			JAVA语言规范保证了对一个变量的读和写操作都是原子的（除了LONG和DOUBLE类型的变量）。对于LONG或DOUBLE类型的变量，只有当这些变量声明时使用了volatile关键字才是原子的\r\n		</p>\r\n		<p>\r\n			假设定义了一个INT变量I，那么在java中，I++操作不是一个原子操作。同样，这对于其他数字类型的变量也都不是一个原子操作。\r\n		</p>\r\n		<p>\r\n			I++操作先从I中读取了当前值（这是个原子操作）然后再让它加上1写回（原子操作）。但是在读和写这两个操作间，I的值有可能被改变。\r\n		</p>\r\n		<p>\r\n			从JAVA1.5起，JAVA提供了原子变量，例如AtomicInteger 或 AtomicLong 都提供了类似&nbsp;getAndDecrement(),&nbsp;getAndIncrement()&nbsp;及&nbsp;getAndSet()等原子方法。\r\n		</p>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a></a><span style=\"font-size:14px;\">4.3.同步代码块的内存更新</span> \r\n			</h3>\r\n		</div>\r\n		<p>\r\n			JAVA内存模型保证了每个进入相同锁同步块的线程都能看到之前进入的其他所有线程修改的结果。\r\n		</p>\r\n	</div>\r\n</div>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/java-concurrency-cookbook/\">Java并发编程基础</a> \r\n	</li>\r\n</ul>',NULL,'2014-05-21 06:44:48','2014-05-21 06:42:04',0,'Java并发编程基础',0),(82,'admin',15,'<p>\r\n	<a href=\"http://cms.csdnimg.cn/article/201404/21/5354b014a637d.jpg\" target=\"_blank\"><img src=\"http://cms.csdnimg.cn/article/201404/21/5354b014a637d_middle.jpg?_=27813\" border=\"0\" alt=\"\" /></a> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">许多年前我刚开始学编程时，朋友曾说过一个笑话：差劲的程序员有两种，一种是开始就写main函数的；还有一种是上来就上网找各种类库源代码的。当时我并不能完全理解：编程序，不去找类库源代码，不从main函数开始，那要怎么做呢？后来才逐渐明白，上来就写main函数，或者上来就找类库找源代码，归根到底都是因为不能克制对于代码的冲动。直接写代码当然很“爽”，很有“成就感”。可是，这样做真的是好事吗？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在现实生活中，我确实看到相当多的程序员写代码的冲动相当强烈，甚至难以克制。这可能是因为任何软件都需要以代码的形式来实现，拿到一个任务，直接写代码可以为程序员带来强烈的成就感。在心里想个明白或在纸上写写画画，反而成了一种难以克制的煎熬。但有经验的人都知道，程序不等于代码，程序的含义和复杂性远远超过代码；没有明晰的需求，没有清楚的头脑，没有良好的规划，写出来的代码就成了无源之水，无本之木，写得越爽，后果可能越严重。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我曾经见过一套系统，其中充满了各种状态码的条件判断，这种情况本来很正常，不幸的是所有的状态码都是硬编码的数字，整个系统就是一本天书：一会儿判断这里是否等于2，一会儿判断那里是否大于7……究其原因是程序员觉得这些状态码无非就是“用数字代表状态”，所以随便选些数字就好了，2代表什么，7对应什么，自己记得就好了。更重要的是，硬编码的状态码“用起来方便”，敲代码的速度大大提升——不需要查找变量，也不需要输入整个变量名。这种系统的问题相信大家都猜得到，维护和修改起来无比痛苦。因此，尽管写这些程序的程序员已有一两年甚至更多年的工作经验，但很难说他们有“职业素养”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此相反，重构的人员吸取了之前的教训。虽然全部硬编码看起来不爽，用起来更不爽，人人都有立刻动手改掉它的冲动，但重构时不是首先改代码，而是先仔细阅读程序，编写了一份包含所有状态码的图表（并且打印出来供随时查阅），再根据状态码的意义和使用场景，重新设计状态码（因为各个状态之间还存在逻辑关系，所以需要以自定义类型表示状态），最后才动手编码完成重构。事实证明，这种策略是非常成功的：阅读代码、制定图表、重新设计需要三周的时间，真正的重构只用几天就顺利完成了，而且从此以后维护和修改的难度大大降低，真正达到了重构的目的。完成重构工作的程序员，工作经验并不比最初编写程序的人多，他们没有一开始就写代码，甚至没有花太多时间在代码上，更没有用到高深莫测的技术，但他们身上体现出来的，恰恰是可贵的职业素养。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">几乎所有程序员都喜欢狂敲代码的快感，但职业程序员必须要克制写代码的冲动，在写代码之前花更多时间理解需求，设计系统，制定规划，这样写出来的代码才会更加精练，更加聪明，整个程序也因此更有价值。贡献更有价值的程序才是程序员职业素养的体现。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作者余晟，非正统技术爱好者，毕业于计算机系，副修中文，《正则指引》作者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">原文链接：</span><a href=\"http://www.csdn.net/article/2014-04-21/2819413-Coding\"><span style=\"font-size:14px;\">http://www.csdn.net/article/2014-04-21/2819413-Coding</span></a>\r\n</p>',NULL,NULL,'2014-05-21 09:20:20',0,'克服敲代码之“痒”',0),(83,'admin',17,'<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	High-performance applications form the backbone of the modern web. At LinkedIn, a number of internal high-throughput services cater to thousands of user requests per second. For optimal user experience, it is very important to serve these requests with low latency.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	For example, a product our members use regularly is the Feed - a constantly updating list of professional activities and content. Examples of various feeds across LinkedIn include those in company pages, school pages, and most importantly - the homepage feed. The underlying feed data platform that indexes these updates from various entities in our economic graph (members, companies, groups, etc.) has to serve relevant updates with high throughput and low latency.\r\n</p>\r\n<p class=\"centered\" style=\"text-align:center;color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<img src=\"http://engineering.linkedin.com/sites/default/files/blog-feed.png\" alt=\"“LinkedIn\" height=\"230\" width=\"550\" /><span class=\"captioned\" style=\"font-style:italic;font-size:11px;\">Figure 1: LinkedIn Feeds</span> \r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	For taking these types of high-throughput, low-latency Java applications to production, developers have to ensure consistent performance at every stage of the application development cycle. Determining optimal Garbage Collection (GC) settings is critical to achieve these metrics.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	This blog post will walk through the steps to identify and optimize GC requirements, and is intended for a developer interested in a systematic method to tame GC to obtain high throughput and low latency. Insights in this post were gathered while building the next generation feed data platform at LinkedIn. These insights include, but are not limited to, CPU and memory overheads of <a href=\"http://www.oracle.com/technetwork/java/javase/memorymanagement-whitepaper-150215.pdf\" target=\"_blank\">Concurrent Mark Sweep (CMS)</a> and <a href=\"http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/G1GettingStarted/index.html\" target=\"_blank\">G1</a> collectors, avoiding incessant GC cycles due to long-lived objects, performance changes obtained by optimizing task assignment to GC threads, and OS settings that are needed to make GC pauses predictable.\r\n</p>\r\n<h2 style=\"font-size:16px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	When is the right time to optimize GC?\r\n</h2>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	GC behavior can vary with code-level optimizations and workloads. So it is important to tune GC on a codebase that is near completion and includes performance optimizations. But it is also necessary to perform preliminary analysis on an end-to-end basic prototype with stub computation code and synthetic workloads representative of production environments. This will help capture realistic bounds on latency and throughput based on the architecture and guide the decision on whether to scale up or scale out.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	During the prototyping phase of our next generation feed data platform, we implemented almost all of the end-to-end functionality and replayed query workload being served by the current production infrastructure. This gave us enough diversity in the workload characteristics to measure application performance and GC characteristics over a long enough period of time.\r\n</p>\r\n<h2 style=\"font-size:16px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	Steps to optimize GC\r\n</h2>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	Here are some high level steps to optimize GC for high-throughput, low-latency requirements. Also included, are the details of how this was done for the feed data platform prototype. We saw the best GC performance with ParNew/CMS, though we also experimented with the G1 garbage collector.\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	1. Understand the basics of GC\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	Understanding how GC works is important because of the large number of variables that need to be tuned. Oracle\'s <a href=\"http://www.oracle.com/technetwork/java/javase/memorymanagement-whitepaper-150215.pdf\" target=\"_blank\">whitepaper</a> on Hotspot JVM Memory Management is an excellent starting point to become familiar with GC algorithms in Hotspot JVM. To understand the theoretical aspects of the G1 collector, check out this <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.63.6386&rep=rep1&type=pdf\" target=\"_blank\">paper</a>.\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	2. Scope out GC requirements\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	There are certain characteristics of GC that you should optimize, to reduce its overhead on application performance. Like throughput and latency, these GC characteristics should be observed over a long-running test to ensure that the application can handle variance in traffic while going through multiple GC cycles.\r\n</p>\r\n<ul style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<li>\r\n		Stop-the-world collectors pause the application threads to collect garbage. The duration and frequency of these pauses should not adversely impact the application\'s ability to adhere to the SLA.\r\n	</li>\r\n	<li>\r\n		Concurrent GC algorithms contend with the application threads for CPU cycles. This overhead should not affect the application throughput.\r\n	</li>\r\n	<li>\r\n		Non-compacting GC algorithms can cause heap fragmentation, which leads to long stop-the-world pauses due to full GC. The heap fragmentation should be kept to a minimum.\r\n	</li>\r\n	<li>\r\n		Garbage collection needs memory to work. Certain GC algorithms have a higher memory footprint than others. If the application needs a large heap, make sure the GC\'s memory overhead is not large.\r\n	</li>\r\n	<li>\r\n		A clear understanding of GC logs and commonly used JVM parameters is necessary to easily tune GC behavior should the code complexity grow or workload characteristics change.\r\n	</li>\r\n</ul>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	We used Hotspot <a href=\"http://www.oracle.com/technetwork/java/javase/7u51-relnotes-2085002.html\" target=\"_blank\">Java7u51</a> on Linux OS and started the experiment with 32 GB heap, 6 GB young generation, and a&nbsp;-XX:CMSInitiatingOccupancyFraction&nbsp;value of 70 (percentage of the old generation that is filled when old GC is triggered). The large heap is required to maintain an object cache of long-lived objects. Once this cache is populated, the rate of object promotions to the old generation drops significantly.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	With the initial GC configuration, we incurred a young GC pause of 80 ms once every three seconds and 99.9th percentile application latency of 100 ms. The GC behavior that we started with is likely adequate for many applications with less stringent latency SLAs. However, our goal was to decrease the 99.9th percentile application latency as much as possible. GC optimization was essential to achieve this goal.\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	3. Understand GC metrics\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	Measurement is always a prerequisite to optimization. Understanding the <a href=\"http://engineering.linkedin.com/26/tuning-java-garbage-collection-web-services\">verbose details of GC logs</a>(with these options:&nbsp;-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime) helps with the overall understanding of the application\'s GC characteristics.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	At LinkedIn, our internal monitoring and reporting systems, <a href=\"https://engineering.linkedin.com/32/eric-intern-origin-ingraphs\">inGraphs</a> and <a href=\"https://github.com/linkedin/naarad\">Naarad</a>, generate useful visualizations for metrics such as GC stall time percentiles, max duration of a stall, and GC frequency over long durations. In addition to Naarad, there are a number of open source tools like <a href=\"https://code.google.com/p/gclogviewer/\">gclogviewer</a> that can create visualizations from GC logs.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	At this stage, it is possible to determine whether GC frequency and pause duration are impacting the application\'s ability to meet latency requirements.\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	4. Reduce GC frequency\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	In generational GC algorithms, collection frequency for a generation can be decreased by (i) reducing the object allocation/promotion rate and (ii) increasing the size of the generation.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	In Hotspot JVM, the duration of young GC pause depends on the number of objects that survive a collection and not on the young generation size itself. The impact of increasing the young generation size on the application performance has to be carefully assessed:\r\n</p>\r\n<ul style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<li>\r\n		Increasing the young generation size may lead to longer young GC pauses if more data survives and gets copied in the survivor spaces, or if more data gets promoted to the old generation in each young collection. Longer GC pauses may lead to an increased application latency and/or reduced throughput.\r\n	</li>\r\n	<li>\r\n		On the other hand, the pause duration may not increase if the number of objects that survive each collection does not increase substantially. In this case, the reduction in GC frequency may lead to a reduction in overall application latency and/or an increase in the throughput.\r\n	</li>\r\n</ul>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	For applications that mostly create short-lived objects, you will only need to control the aforementioned parameters. For applications that create long-lived objects, there is a caveat; the promoted objects may not be collected in an old generation GC cycle for a long time. If the threshold at which old generation GC is triggered (expressed as a percentage of the old generation that is filled) is low, the application can get stuck in incessant GC cycles. You can avoid this by triggering GC at a higher threshold.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	As our application maintains a large cache of long-lived objects in the heap, we increased the threshold of triggering old GC by setting:&nbsp;-XX:CMSInitiatingOccupancyFraction=92 -XX:+UseCMSInitiatingOccupancyOnly. We also tried to increase the young generation size to reduce the young collection frequency, but reverted this change as it increased the 99.9th percentile application latency.\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	5. Reduce GC pause duration\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	The young GC pause duration can be reduced by decreasing the young generation size as it may lead to less data being copied in survivor spaces or promoted per collection. However, as previously mentioned, we have to observe the impact of reduced young generation size and the resulting increase in GC frequency on the overall application throughput and latency. The young GC pause duration also depends on tenuring thresholds and the old generation size (as shown in step 6).\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	With CMS, try to minimize the heap fragmentation and the associated full GC pauses in the old generation collection. You can get this by controlling the object promotion rate and by reducing the&nbsp;-XX:CMSInitiatingOccupancyFraction&nbsp;value to trigger the old GC at a lower threshold. For a detailed understanding of all options that can be tweaked and their associated tradeoffs, check out <a href=\"http://engineering.linkedin.com/26/tuning-java-garbage-collection-web-services\">Tuning Java Garbage Collection for Web Services</a> and <a href=\"http://mechanical-sympathy.blogspot.com/2013/07/java-garbage-collection-distilled.html\" target=\"_blank\">Java Garbage Collection Distilled</a>.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	We observed that much of our Eden space was evacuated in the young collection and very few objects died in the survivor spaces over the ages three to eight. So we reduced the tenuring threshold from 8 to 2 (with option:&nbsp;-XX:MaxTenuringThreshold=2), to reduce the amount of time spent in data copying in young generation collection.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	We also noticed that the young collection pause duration increased as the old generation was filling up; this indicated that the object promotion was taking more time due to backpressure from the old generation. We addressed this problem by increasing the total heap size to 40 GB and reducing&nbsp;-XX:CMSInitiatingOccupancyFraction&nbsp;value to 80 to kick off old collection sooner. Though the&nbsp;-XX:CMSInitiatingOccupancyFraction&nbsp;value was reduced, increasing the heap size ensured that we avoided the incessant old GCs. At this stage, we observed a young collection pause of 70 ms and 99.9th percentile latency of 80 ms.\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	6. Optimize task assignment to GC worker threads\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	To reduce the young generation pause duration even further, we decided to look into options that optimized task binding with GC threads.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	The&nbsp;-XX:ParGCCardsPerStrideChunk&nbsp;option controls the granularity of tasks given to GC worker threads and helps get the best performance out of a <a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=7068625\" target=\"_blank\">patch</a> written to <a href=\"http://blog.ragozin.info/2012/03/secret-hotspot-option-improving-gc.html\" target=\"_blank\">optimize card table scan time</a>spent in young generation collection. The interesting learning here was that the young GC time increases with the increase in the size of old generation. Setting this option to a value of 32768 brought our young collection pause down to an average of 50 ms. We also achieved a 99.9th percentile application latency of 60 ms.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	There are also a couple of other interesting options that deal with mapping tasks to GC threads.&nbsp;-XX:+BindGCTaskThreadsToCPUs&nbsp;option binds GC threads to individual CPU cores if the OS permits it.-XX:+UseGCTaskAffinity&nbsp;allocates tasks to GC worker threads using an affinity parameter. However, our application did not see any benefit from these options. In fact, some investigation revealed that these options are NOPs on Linux systems [1, 2].\r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	7. Identify CPU and memory overhead of GC\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	Concurrent GC typically increases CPU usage. While we observed that the default settings of CMS behaved well, the increased CPU usage due to concurrent GC work with the G1 collector degraded our application\'s throughput and latency significantly. G1 also tends to impose a larger memory overhead on the application as compared to CMS. For low-throughput applications that are not CPU-bound, high CPU usage by GC may not be a pressing concern.\r\n</p>\r\n<p class=\"centered\" style=\"text-align:center;color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<img src=\"http://engineering.linkedin.com/sites/default/files/blog-G1-CPU.png\" alt=\"“CPU\" /><span class=\"captioned\" style=\"font-style:italic;font-size:11px;\">Figure 2: CPU usage in % with ParNew/CMS and G1: the node with relatively variable CPU usage used G1 with the option&nbsp;-XX:G1RSetUpdatingPauseTimePercent=20</span> \r\n</p>\r\n<p class=\"centered\" style=\"text-align:center;color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<img src=\"http://engineering.linkedin.com/sites/default/files/blog-g1-throughput_0.png\" alt=\"“Requests\" /><span class=\"captioned\" style=\"font-style:italic;font-size:11px;\">Figure 3: Requests served per second with ParNew/CMS and G1: the node with lower throughput used G1 with the option&nbsp;-XX:G1RSetUpdatingPauseTimePercent=20</span> \r\n</p>\r\n<h3 style=\"font-size:14px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	8. Optimize system memory and I/O management for GC\r\n</h3>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	Occasionally, it is possible to see GC pauses with (i) low user time, high system time and high real (wallclock) time or (ii) low user time, low system time and high real time. This indicates problems with the underlying process/OS settings. Case (i) might imply that the JVM pages are being stolen by Linux and case (ii) might imply that the GC threads were recruited by Linux for disk flushes and were stuck in the kernel waiting for I/O. Refer to this <a href=\"http://www.slideshare.net/cuonghuutran/gc-andpagescanattacksbylinux\" target=\"_blank\">slide deck</a> to check which settings might help in such cases.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	We used the JVM option&nbsp;-XX:+AlwaysPreTouch&nbsp;to touch and zero out a page at application startup to avoid the performance penalty at runtime. We also set&nbsp;vm.swappiness&nbsp;to zero so that the OS does not swap pages unless it is absolutely necessary.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	You could potentially use&nbsp;mlock&nbsp;to pin the JVM pages to memory so that the OS does not swap them out. However, if the system exhausts all its memory and the swap space, the OS will kill a process to reclaim memory. Typically, Linux kernel picks the process that has a high resident memory footprint but has not been running for long <a href=\"https://www.kernel.org/doc/gorman/html/understand/understand016.html\">(the workflow of killing a process in case of OOM)</a>. In our case, this process will most likely be our application. Graceful degradation is one of the nicer properties of a service and the possibility of the service\'s sudden demise does not augur well for operability — so we don\'t use&nbsp;mlock&nbsp;and rely on&nbsp;vm.swappiness&nbsp;to avoid the swap penalty as long as it is possible.\r\n</p>\r\n<h2 style=\"font-size:16px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	GC optimization for the feed data platform at LinkedIn\r\n</h2>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	For the prototype feed data platform system, we tried to optimize garbage collection using two algorithms with the Hotspot JVM:\r\n</p>\r\n<ul style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<li>\r\n		ParNew for the young generation collection, CMS for the old generation collection.\r\n	</li>\r\n	<li>\r\n		G1 for the young and old generations. G1 tries to solve the problem of having stable and predictable pause time below 0.5 seconds for heap sizes of 6GB or larger. In the course of our experiments with G1, despite tuning various parameters, we could not get the same GC performance or pause predictability as with ParNew/CMS. We also observed a bug [3] related to memory leak while using G1, but we are not sure of the root cause.\r\n	</li>\r\n</ul>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	With ParNew/CMS, we saw 40-60 ms young generation pauses once every three seconds and a CMS cycle once every hour. We used the following JVM options:\r\n</p>\r\n<div id=\"gist9924734\" class=\"gist\" style=\"margin:0px;padding:0px;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<div class=\"gist-file\" style=\"margin:0px 0px 1em;padding:0px;font-family:Consolas, \'Liberation Mono\', Courier, monospace;\">\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			<span style=\"background-color:#FFFFFF;color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;line-height:1.5;\"> </span>\r\n		</p>\r\n<pre class=\"prettyprint lang-java\">// JVM sizing options\r\n-server -Xms40g -Xmx40g -XX:MaxDirectMemorySize=4096m -XX:PermSize=256m -XX:MaxPermSize=256m   \r\n// Young generation options\r\n-XX:NewSize=6g -XX:MaxNewSize=6g -XX:+UseParNewGC -XX:MaxTenuringThreshold=2 -XX:SurvivorRatio=8 -XX:+UnlockDiagnosticVMOptions -XX:ParGCCardsPerStrideChunk=32768\r\n// Old generation  options\r\n-XX:+UseConcMarkSweepGC -XX:CMSParallelRemarkEnabled -XX:+ParallelRefProcEnabled -XX:+CMSClassUnloadingEnabled  -XX:CMSInitiatingOccupancyFraction=80 -XX:+UseCMSInitiatingOccupancyOnly   \r\n// Other options\r\n-XX:+AlwaysPreTouch -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -XX:-OmitStackTraceInFastThrow</pre>\r\n<br />\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			<span style=\"background-color:#FFFFFF;color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;line-height:1.5;\">With these options, our application\'s 99.9th percentile latency reduced to 60 ms while providing a throughput of thousands of read requests.</span> \r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n	</div>\r\n</div>\r\n<h2 style=\"font-size:16px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	Acknowledgements\r\n</h2>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	Many hands contributed to the development of the prototype application: <a href=\"http://www.linkedin.com/in/guptaankit87\" target=\"_blank\">Ankit Gupta</a>, <a href=\"http://www.linkedin.com/pub/elizabeth-bennett/23/335/812\" target=\"_blank\">Elizabeth Bennett</a>, <a href=\"http://www.linkedin.com/pub/raghu-hiremagalur/2/166/2b5\" target=\"_blank\">Raghu Hiremagalur</a>, <a href=\"http://www.linkedin.com/in/rsumbaly\" target=\"_blank\">Roshan Sumbaly</a>, <a href=\"http://www.linkedin.com/in/swapnilghike/\" target=\"_blank\">Swapnil Ghike</a>, <a href=\"http://www.linkedin.com/in/tomchiang\" target=\"_blank\">Tom Chiang</a>, and <a href=\"http://www.linkedin.com/in/viveknelamangala\" target=\"_blank\">Vivek Nelamangala</a>. Many thanks to <a href=\"http://www.linkedin.com/pub/cuong-tran/0/66/306\" target=\"_blank\">Cuong Tran</a>, <a href=\"http://www.linkedin.com/in/davidhoa\" target=\"_blank\">David Hoa</a>, and <a href=\"http://www.linkedin.com/in/stevenihde\" target=\"_blank\">Steven Ihde</a> for their help with system optimizations.\r\n</p>\r\n<h2 style=\"font-size:16px;color:#666666;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;background-color:#FFFFFF;\">\r\n	Footnotes\r\n</h2>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	[1]&nbsp;-XX:+BindGCTaskThreadsToCPUs&nbsp;seems to be a NOP on Linux systems because thedistribute_processes&nbsp;method in&nbsp;hotspot/src/os/linux/vm/os_linux.cpp&nbsp;is not implemented in JDK7 or JDK8.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	[2] The&nbsp;-XX:+UseGCTaskAffinity&nbsp;option seems to be a NOP on all platforms in JDK7 and JDK8 as the task affinity appears to be always set to&nbsp;sentinel_worker = (uint) -1. The source code is inhotspot/src/share/vm/gc_implementation/parallelScavenge/{gcTaskManager.cpp, gcTaskThread.cpp, gcTaskManager.hpp}.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	[3] There have been a few bugs related to memory leaks with G1; it is possible that Java7u51 might have missed some fixes. For example, this <a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=2212435\" target=\"_blank\">bug</a> was fixed only in Java 8.\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"color:#444444;font-family:\'Helvetica Neue\', Helvetica, \'Nimbus Sans L\', Arial, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	原文链接：<a href=\"http://engineering.linkedin.com/garbage-collection/garbage-collection-optimization-high-throughput-and-low-latency-java-applications\">http://engineering.linkedin.com/garbage-collection/garbage-collection-optimization-high-throughput-and-low-latency-java-applications</a>\r\n</p>',NULL,'2014-05-21 10:39:31','2014-05-21 10:37:30',0,'Garbage Collection Optimization for High-Throughput and Low-Latency Java Applications',0),(84,'admin',26,'<p>\r\n	<span style=\"font-size:14px;\">在设计原则中有这样一句话“我们应该针对接口编程，而不是正对实现编程”。但是我们还是在一直使用new关键字来创建一个对象，这不就是在针对实现编程么？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">针对接口编程，可以隔离掉以后系统可能发生的一大堆改变。入股代码是针对接口而写，那么可以通过多态，它可以与任何新类实现该接口。但是，当代码使用一大堆的具体类时，等于是自找麻烦，因为一旦加入新的具体类，就必须要改变代码。在这里我们希望能够调用一个简单的方法，我传递一个参数过去，就可以返回给我一个相应的具体对象，这个时候我们就可以使用简单工厂模式。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>一、基本定义</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">简单工厂模式又称之为静态工厂方法，属于创建型模式。在简单工厂模式中，可以根据传递的参数不同，返回不同类的实例。简单工厂模式定义了一个类，这个类专门用于创建其他类的实例，这些被创建的类都有一个共同的父类。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>二、模式结构</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">模式结构图如下：</span> \r\n</p>\r\n<p>\r\n	<img src=\"http://img.blog.csdn.net/20130523123220541\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">模式分析：</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Factory：工厂角色。专门用于创建实例类的工厂，提供一个方法，该方法根据传递的参数不同返回不同类的具体实例。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Product：抽象产品角色。为所有产品的父类。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">ConcreteProduct：具体的产品角色。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">简单工厂模式将对象的创建和对象本身业务处理分离了，可以降低系统的耦合度，使得两者修改起来都相对容易些。当以后实现改变时，只需要修改工厂类即可。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>三、简单工厂模式实现</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">模式场景：在一个披萨店中，要根据不同客户的口味，生产不同的披萨，如素食披萨、希腊披萨等披萨。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">该例的UML结构图如下:</span> \r\n</p>\r\n<p>\r\n	<img src=\"http://img.blog.csdn.net/20130523123330429\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">代码实现</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Pizza制造工厂：SimplyPizzaFactory.java</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n<span style=\"line-height:1.5;font-size:14px;\">/**</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">*&nbsp;专门用于创建披萨的工厂类</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">*/</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;class&nbsp;SimplePizzaFactory&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;Pizza&nbsp;createPizza(String&nbsp;type){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">Pizza&nbsp;pizza&nbsp;=&nbsp;null;</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">if(type.equals(\"cheese\")){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza&nbsp;=&nbsp;new&nbsp;CheesePizza();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">else&nbsp;if(type.equals(\"clam\")){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza&nbsp;=&nbsp;new&nbsp;ClamPizza();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">else&nbsp;if(type.equals(\"pepperoni\")){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza&nbsp;=&nbsp;new&nbsp;PepperoniPizza();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">else&nbsp;if(type.equals(\"veggie\")){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza&nbsp;=&nbsp;new&nbsp;VeggiePizze();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">return&nbsp;pizza;</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span> \r\n</div>\r\n<br />\r\n<p>\r\n	<span style=\"font-size:14px;\">抽象披萨：Pizza.java</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n<span style=\"line-height:1.5;font-size:14px;\">/**</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">*&nbsp;抽象pizza类</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">*/</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;abstract&nbsp;class&nbsp;Pizza&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;abstract&nbsp;void&nbsp;prepare();</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;abstract&nbsp;void&nbsp;bake();</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;abstract&nbsp;void&nbsp;cut();</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;abstract&nbsp;void&nbsp;box();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span> \r\n</div>\r\n<br />\r\n<p>\r\n	<span style=\"font-size:14px;\">具体披萨：CheesePizza.java</span> \r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n		</div>\r\n	</div>\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;class&nbsp;CheesePizza&nbsp;extends&nbsp;Pizza{</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">@Override</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;void&nbsp;bake()&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">System.out.println(\"bake&nbsp;CheesePizza&nbsp;...\");</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">@Override</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;void&nbsp;box()&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">System.out.println(\"box&nbsp;CheesePizza&nbsp;...\");</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">@Override</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;void&nbsp;cut()&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">System.out.println(\"cut&nbsp;CheesePizza&nbsp;...\");</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">@Override</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;void&nbsp;prepare()&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">System.out.println(\"prepare&nbsp;CheesePizza&nbsp;...\");</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span> \r\n</div>\r\n<br />\r\n<p>\r\n	<span style=\"font-size:14px;\">PizzaStore.java</span> \r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;class&nbsp;PizzaStore&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">SimplePizzaFactory&nbsp;factory;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//SimplePizzaFactory的引用</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;PizzaStore(SimplePizzaFactory&nbsp;factory){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">this.factory&nbsp;=&nbsp;factory;</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">public&nbsp;Pizza&nbsp;orderPizza(String&nbsp;type){</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">Pizza&nbsp;pizza;</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza&nbsp;=&nbsp;factory.createPizza(type);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//使用工厂对象的创建方法，而不是直接new。这里不再使用具体实例化</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza.prepare();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza.bake();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza.cut();</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">pizza.box();</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;font-size:14px;\">return&nbsp;pizza;</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span><br />\r\n<span style=\"line-height:1.5;font-size:14px;\">}</span> \r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>四、简单工厂模式的优缺点</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">优点</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1、简单工厂模式实现了对责任的分割，提供了专门的工厂类用于创建对象。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2、客户端无须知道所创建的具体产品类的类名，只需要知道具体产品类所对应的参数即可，对于一些复杂的类名，通过简单工厂模式可以减少使用者的记忆量。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3、通过引入配置文件，可以在不修改任何客户端代码的情况下更换和增加新的具体产品类，在一定程度上提高了系统的灵活性。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">缺点</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1、由于工厂类集中了所有产品创建逻辑，一旦不能正常工作，整个系统都要受到影响。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2、使用简单工厂模式将会增加系统中类的个数，在一定程序上增加了系统的复杂度和理解难度。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3、系统扩展困难，一旦添加新产品就不得不修改工厂逻辑，在产品类型较多时，有可能造成工厂逻辑过于复杂，不利于系统的扩展和维护。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">4、简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>五、简单工厂模式的使用场景</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1、&nbsp; 工厂类负责创建的对象比较少。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2、&nbsp; 客户端只知道传入工厂类的参数，对于如何创建对象不关心。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>六、总结</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1、&nbsp; 简单工厂模式的要点就在于当你需要什么，只需要传入一个正确的参数，就可以获取你所需要的对象，而无须知道其创建细节。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2、&nbsp; 简单工厂模式最大的优点在于实现对象的创建和对象的使用分离，但是如果产品过多时，会导致工厂代码非常复杂。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">原文链接：<a href=\"http://blog.csdn.net/chenssy/article/details/8964657\">http://blog.csdn.net/chenssy/article/details/8964657</a></span>\r\n</p>',NULL,'2014-05-21 10:52:32','2014-05-21 10:49:50',0,'设计模式读书笔记-----简单工厂模式',0);
INSERT INTO `article` VALUES (85,'admin',26,'<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	在工厂方法模式中，我们使用一个工厂创建一个产品，也就是说一个具体的工厂对应一个具体的产品。但是有时候我们需要一个工厂能够提供多个产品对象，而不是单一的对象，这个时候我们就需要使用抽象工厂模式。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;在讲解抽象工厂模式之前，我们需要厘清两个概念：\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>产品等级结构。</span>产品的等级结构也就是产品的继承结构。例如一个为空调的抽象类，它有海尔空调、格力空调、美的空调等一系列的子类，那么这个抽象类空调和他的子类就构成了一个产品等级结构。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;text-align:center;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>产品族。</span>产品族是在抽象工厂模式中的。在抽象工厂模式中，产品族是指由同一个工厂生产的，位于不同产品等级结构中的一组产品。比如，海尔工厂生产海尔空调。海尔冰箱，那么海尔空调则位于空调产品族中。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;产品等级结构和产品族结构示意图如下：\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<img src=\"\" /> \r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;\">\r\n	<b><span>一、基本定义</span></b>\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;抽象工厂模式提供一个接口，用于创建相关或者依赖对象的家族，而不需要明确指定具体类。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;抽象工厂允许客户端使用抽象的接口来创建一组相关的产品，而不需要关系实际产出的具体产品是什么。这样一来，客户就可以从具体的产品中被解耦。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;\">\r\n	<b><span>二、模式结构</span></b>\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;抽象工厂模式的UML结构图如下：\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<img src=\"\" /> \r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;模式结构说明。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;AbstractFactory：抽象工厂。抽象工厂定义了一个接口，所有的具体工厂都必须实现此接口，这个接口包含了一组方法用来生产产品。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ConcreteFactory：具体工厂。具体工厂是用于生产不同产品族。要创建一个产品，客户只需要使用其中一个工厂完全不需要实例化任何产品对象。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;AbstractProduct：抽象产品。这是一个产品家族，每一个具体工厂都能够生产一整组产品。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;Product：具体产品。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;\">\r\n	<b><span style=\"background-color:#FFFFFF;\">三、模式实现</span></b>\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;依然是披萨店。为了要保证每家加盟店都能够生产高质量的披萨，防止使用劣质的原料，我们打算建造一家生产原料的工厂，并将原料运送到各家加盟店。但是加盟店都位于不同的区域，比如纽约、芝加哥。纽约使用一组原料，芝加哥使用另一种原料。在这里我们可以这样理解，这些不同的区域组成了原料家族，每个区域实现了一个完整的原料家族。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<img src=\"\" /> \r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;首先创建一个原料工厂。该工厂为抽象工厂，负责创建所有的原料。\r\n</p>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;PizzaIngredientFactory.java\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span> <span><b>interface</b></span> PizzaIngredientFactory {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span>/*<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* \r\n在接口中，每个原料都有一个对应的方法创建该原料<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span><b>public</b></span> Dough createDough(); &nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp; <span><b>public</b></span> Sauce createSauce();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp; <span><b>public</b></span> Cheese createCheese();<br />\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span><b>public</b></span> Veggies[] \r\ncreateVeggies();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span><b>public</b></span> Pepperoni createPepperoni();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span><b>public</b></span> Clams \r\ncreateClams();<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;原料工厂创建完成之后，需要创建具体的原料工厂。该具体工厂只需要继承PizzaIngredientFactory，然后实现里面的方法即可。\r\n</p>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;纽约原料工厂：NYPizzaIngredientFactory.java。\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span>&nbsp;<span><b>class</b></span>&nbsp;NYPizzaIngredientFactory&nbsp;<span><b>implements</b></span>&nbsp;PizzaIngredientFactory{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;Cheese \r\ncreateCheese() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;<span><b>new</b></span>&nbsp;ReggianoCheese();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;Clams \r\ncreateClams() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;<span><b>new</b></span>&nbsp;FreshClams();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;Dough \r\ncreateDough() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;<span><b>new</b></span>&nbsp;ThinCrustDough();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;Pepperoni \r\ncreatePepperoni() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;<span><b>new</b></span>&nbsp;SlicedPepperoni();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;Sauce \r\ncreateSauce() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;<span><b>new</b></span>&nbsp;MarinaraSauce();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;Veggies[] \r\ncreateVeggies() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Veggies veggies[]&nbsp;<span>=</span>&nbsp;&nbsp;{<span><b>new</b></span>&nbsp;Garlic(),<span><b>new</b></span>&nbsp;Onion(),<span><b>new</b></span>&nbsp;Mushroom(),<span><b>new</b></span>&nbsp;RefPepper()};<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;veggies;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n}<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;重新返回到披萨。在这个披萨类里面，我们需要使用原料，其他方法保持不变，将prepare()方法声明为抽象，在这个方法中，我们需要收集披萨所需要的原料。\r\n</p>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;Pizza.java\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span>&nbsp;<span><b>abstract</b></span>&nbsp;<span><b>class</b></span>&nbsp;Pizza {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>/*<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp;* 每个披萨都持有一组在准备时会用到的原料<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; String name;<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp; Dough dough;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Sauce sauce;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Veggies veggies[];<br />\r\n&nbsp; &nbsp; \r\n&nbsp; &nbsp; Cheese cheese;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Pepperoni pepperoni;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Clams clams;<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>/*<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* \r\nprepare()方法声明为抽象方法。在这个方法中，我们需要收集披萨所需要的原料，而这些原料都是来自原料工厂<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;*/</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>abstract</b></span>&nbsp;<span><b>void</b></span>&nbsp;prepare();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>void</b></span>&nbsp;bake(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\nSystem.out.println(<span>\"Bake for 25 munites at \r\n350\"</span>);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>void</b></span>&nbsp;cut(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\nSystem.out.println(<span>\"Cutting the pizza into diagonal \r\nslices\"</span>);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>void</b></span>&nbsp;box(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\nSystem.out.println(<span>\"Place pizza in official PizzaStore \r\nbox\"</span>);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;String getName() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>return</b></span>&nbsp;name;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;<span><b>void</b></span>&nbsp;setName(String name) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>this</b></span>.name&nbsp;<span>=</span>&nbsp;name;<br />\r\n&nbsp; &nbsp; \r\n&nbsp; &nbsp; }<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;CheesePizza.java\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span>&nbsp;<span><b>class</b></span>&nbsp;CheesePizza&nbsp;<span><b>extends</b></span>&nbsp;Pizza{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; PizzaIngredientFactory \r\ningredientFactory;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>/*<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* \r\n要制作披萨必须要有制作披萨的原料，而这些原料是从原料工厂运来的<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;CheesePizza(PizzaIngredientFactory \r\ningredientFactory){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>this</b></span>.ingredientFactory&nbsp;<span>=</span>&nbsp;ingredientFactory;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; prepare();<br />\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>/**<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* \r\n实现prepare方法<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* prepare 方法一步一步地创建芝士比萨，每当需要原料时，就跟工厂要<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;*/</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>void</b></span>&nbsp;prepare() {<br />\r\n&nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(<span>\"Prepareing \"</span>&nbsp;<span>+</span>&nbsp;name);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dough&nbsp;<span>=</span>&nbsp;ingredientFactory.createDough();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\nsauce&nbsp;<span>=</span>&nbsp;ingredientFactory.createSauce();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; cheese&nbsp;<span>=</span>&nbsp;ingredientFactory.createCheese();<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp; }<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;Pizza的代码利用相关的工厂生产原料。所生产的原料依赖所使用的工厂，Pizza类根本不关心这些原料，它只需要知道如何制作披萨即可。这里，Pizza和区域原料之间被解耦。\r\n</p>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;ClamPizza.java\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span>&nbsp;<span><b>class</b></span>&nbsp;ClamPizza&nbsp;<span><b>extends</b></span>&nbsp;Pizza{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; PizzaIngredientFactory \r\ningredientFactory;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>public</b></span>&nbsp;ClamPizza(PizzaIngredientFactory \r\ningredientFactory){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>this</b></span>.ingredientFactory&nbsp;<span>=</span>&nbsp;ingredientFactory;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n@Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><b>void</b></span>&nbsp;prepare() {<br />\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(<span>\"Prepare \"</span>&nbsp;<span>+</span>&nbsp;name);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dough&nbsp;<span>=</span>&nbsp;ingredientFactory.createDough();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\nsauce&nbsp;<span>=</span>&nbsp;ingredientFactory.createSauce();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; cheese&nbsp;<span>=</span>&nbsp;ingredientFactory.createCheese();<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clams&nbsp;<span>=</span>&nbsp;ingredientFactory.createClams(); &nbsp; &nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n}<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;做完披萨后，需要关注披萨店了。\r\n</p>\r\n<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;在披萨店中，我们依然需要关注原料，当地的披萨店需要和本地的原料工厂关联起来。\r\n</p>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;PizzaStore.java\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span> <span><b>abstract</b></span> <span><b>class</b></span> PizzaStore {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span><b>public</b></span> Pizza orderPizza(String type){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp; Pizza pizza;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza <span>=</span> createPizza(type);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\npizza.prepare();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza.bake();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\npizza.cut();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza.box();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp; <span><b>return</b></span> pizza;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span>/*<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; * 创建pizza的方法交给子类去实现<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;*/</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; <span><b>abstract</b></span> Pizza \r\ncreatePizza(String type);<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n<div>\r\n	&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;纽约的披萨店：NYPizzaStore.java\r\n</div>\r\n<div>\r\n	<div style=\"border:1px solid black;font-family:\'Courier New\';padding:3px;margin-left:auto;\">\r\n		<div style=\"background-color:#F7F7F7;\">\r\n			<span><b>public</b></span> <span><b>class</b></span> NYPizzaStore <span><b>extends</b></span> PizzaStore{<br />\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp; @Override<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Pizza createPizza(String type) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Pizza \r\npizza <span>=</span> null;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span>//使用纽约的原料工厂</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PizzaIngredientFactory \r\ningredientFactory <span>=</span> <span><b>new</b></span> NYPizzaIngredientFactory(); &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp; <span><b>if</b></span>(<span>\"cheese\"</span>.equals(type)){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza <span>=</span> <span><b>new</b></span> CheesePizza(ingredientFactory);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza.setName(<span>\"New York Style Cheese Pizza\"</span>);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span><b>else</b></span> <span><b>if</b></span>(<span>\"veggie\"</span>.equals(type)){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza <span>=</span> <span><b>new</b></span> VeggiePizza(ingredientFactory);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza.setName(<span>\"New York Style Veggie Pizza\"</span>);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span><b>else</b></span> <span><b>if</b></span>(<span>\"clam\"</span>.equals(type)){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza <span>=</span> <span><b>new</b></span> ClamPizza(ingredientFactory);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza.setName(<span>\"New York Style Clam Pizza\"</span>);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span><b>else</b></span> <span><b>if</b></span>(<span>\"pepperoni\"</span>.equals(type)){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pizza <span>=</span> <span><b>new</b></span> PepperoniPizza(ingredientFactory);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\npizza.setName(<span>\"New York Style Pepperoni Pizza\"</span>);<br />\r\n&nbsp; \r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span><b>return</b></span> pizza;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; } &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n}\r\n		</div>\r\n	</div>\r\n</div>\r\n&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;<br />\r\n<div>\r\n	&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;下图是上面的UML结构图。\r\n</div>\r\n<div>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		<img src=\"\" /> \r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;其中PizzaIngredientFactory是抽象的披萨原料工厂接口，它定义了如何生产一个相关产品的家族。这个家族包含了所有制作披萨的原料。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;NYPizzaIngredientFactory和ChicagoPizzaIngredientFactory是两个具体披萨工厂类，他们负责生产相应的披萨原料。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;NYPizzaStore是抽象工厂的客户端。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp;\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;\">\r\n		<b><span>四、模式优缺点 &nbsp; \r\n&nbsp;<br />\r\n</span></b>\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;优点\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1、&nbsp; \r\n抽象工厂隔离了具体类的生成，是的客户端不需要知道什么被创建。所有的具体工厂都实现了抽象工厂中定义的公共接口，因此只需要改变具体工厂的实例，就可以在某种程度上改变整个软件系统的行为。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2、&nbsp; \r\n当一个产品族中的多个对象被设计成一起工作时，它能够保证客户端始终只使用同一个产品族中的对象。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;缺点\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;添加新的行为时比较麻烦。如果需要添加一个新产品族对象时，需要更改接口及其下所有子类，这必然会带来很大的麻烦。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		<br />\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;\">\r\n		<span><b>五、模式使用场景</b><br />\r\n</span>\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;1. \r\n&nbsp;一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节，这对于所有类型的工厂模式都是重要的。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; \r\n&nbsp;&nbsp;2.系统中有多于一个的产品族，而每次只使用其中某一产品族。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;3. \r\n属于同一个产品族的产品将在一起使用，这一约束必须在系统的设计中体现出来。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;4. \r\n系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		<br />\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;\">\r\n		<span><b>六、总结</b></span>\r\n	</p>\r\n	<p style=\"font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n		&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;1、&nbsp; \r\n抽象工厂模式中主要的优点在于具体类的隔离，是的客户端不需要知道什么被创建了。其缺点在于增加新的等级产品结构比较复杂，需要修改接口及其所有子类。\r\n	</p>\r\n</div>',NULL,NULL,'2014-05-21 11:03:21',0,'设计模式读书笔记-----抽象工厂模式',0),(86,'admin',6,'<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	VIA:&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Tutorial\">https://github.com/nathanmarz/storm/wiki/Tutorial</a>\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	教程\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	通过这个手册，你可以了解到如何去创建Storm topologies并把它们部署到一个Storm集群。主要用到了Java语言，但是为了说明Storm的多语言支持的特性也使用了Python去实现一些例子。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	准备\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这个手册中使用的例子来自于<a href=\"https://github.com/nathanmarz/storm-starter\">storm-starter</a>工程。建议你同步下来此项目，并根据例子来学习。阅读<a href=\"https://github.com/nathanmarz/storm/wiki/Setting-up-development-environment\">Setting up development environment</a>和<a href=\"https://github.com/nathanmarz/storm/wiki/Creating-a-new-Storm-project\">Creating a new Storm project</a>两篇文章去搭建你的环境。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	Storm集群组件\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	一个Sotrm集群表面上看起来和Hadoop集群很像。在Hadoop上你运行的时\"MapReduce Job\"，在Storm上运行的是\"topologies\"。\"Job\"和\"topologies\"之间还是有很大不同的 --最关键的一点是Mapreduce job最终是会完成的，而topology将会持续的执行(直到你终止它)。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm集群中有两种不同的节点:Master和Worker。Master节点启动的守护进程叫做\"Numbus\"，这点和Hadoop的\"JobTracker\"很相似。Nimbus在集群众发布指令，给其他机器分配作业，并且监控失败。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	每一个Worker启动的守护进程叫做\"Supervisor\"。Supervisor接收Nimbus分发给它的工作去启动或者停止真正的工作进程。每个工作进程执行一个topology的子集，topology是执行在多个worker进程乃至许多机器上的。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://yzprofile.me/image/2013-04-25-storm-tutorial/storm-cluster.png\" alt=\"storm-cluster\" style=\"height:auto;border:1px solid #000000;\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Nimbus和Supervisors之间是通过<a href=\"http://zookeeper.apache.org/\">Zookeeper</a>集群来协作的，Nimbus守护进程和Supervisor守护进程是fail-fast和无状态的；所有的状态都存在Zookeeper和本地磁盘中。这意味着你可以随意kill -9 Nimbus或者Supervisors，并且当它们再次启动的时候就像什么都没有发生过一样。这样的设计保证了Storm集群的稳定性。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	Topologies\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	为了在Storm上做实时计算，你需要创建一个\"topologies\"。Topology是一个计算图。Topology每个节点包含了处理逻辑，节点之间的连接表明了数据应该怎样在它们之间传输。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	启动一个topology还是非常简单的。首先，你需要把你的代码打包成一个jar文件。之后，你可以用下面的命令启动它:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"n\">$</span> <span class=\"n\">storm</span> <span class=\"n\">jar</span> <span class=\"n\">all</span><span class=\"o\" style=\"font-weight:bold;\">-</span><span class=\"n\">my</span><span class=\"o\" style=\"font-weight:bold;\">-</span><span class=\"n\">code</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">jar</span> <span class=\"n\">backtype</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">storm</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">MyTopology</span> <span class=\"n\">arg1</span> <span class=\"n\">arg2</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这条指令带着参数arg1和arg2运行了backtype.storm.MyTopology这个类。这个类的main函数定义了toplogy并且提交到Nimbus。storm jar负责连接到Nimbus并上传你的jar文件。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	因为topology只是Thrift结构的定义，并且Nimbus是一个Thrift服务，所以你可以使用任意的编程语言去创建提交topologies。之前的例子是用基于JVM的语言完成的。可以从<a href=\"https://github.com/nathanmarz/storm/wiki/Running-topologies-on-a-production-cluster\">Running topologies on a production cluster</a>来了解关于启动和停止topologies的更多信息。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	Streams\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm里最核心的概念就是\"Stream\"。Stream是一个没有边界的元组序列。Storm为了将一个stream转换为另一个新的stream提供了一些分布式的并且可靠的元语。例如你可以把tweets的信息流传送到话题的流。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm提供的流转换的基础元语是\"spouts\"和\"bolt\"。为了运行你的应用逻辑，你必须去实现Spouts和bolt的一些接口。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Spout是streams的源头。举个例子，Spout可以从<a href=\"http://github.com/nathanmarz/storm-kestrel\">Kestrel</a>读取一组数据并把它们当作stream发送出去。或者spout也能调用Twitter的API去获取tweets并将它们作为stream发送出去。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Bolt去处理输入的所有的stream，并且也能发出新的stream。在复杂的stream传输过程中，像从tweets中计算stream的话题趋势，需要多个阶段，从而存在多个bolt。Bolt可以通过执行，过滤，聚合，关联，读写数据库等操作来做任何事情。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Spouts和bolt被打包成一个\"topology\"，它是一个高度抽象的概念，你可以把它提交给Storm集群去执行。Toplogy是一个Spouts和Bolt之间传输stream的图。在这个图中的箭头表明了bolt订阅了哪些stream。当一个spout或者一个bolt发送一组数据到stream时，所有订阅这个stream的bolt都可以收到这组数据。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://yzprofile.me/image/2013-04-25-storm-tutorial/topology.png\" alt=\"topology\" style=\"height:auto;border:1px solid #000000;\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	topology中节点之间的连接表明了数据传输的流向。举个例子，如果Spout A和Bolt B相连，Spout A又和Bolt C相连，Bolt B也和Bolt C相连，每当Spout A发送数据时，它都将发送给Bolt B和BoltC，当Bolt B发送出的数据也都会发送给Bolt C。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm中的每个topology节点的执行都是并行的。在你的topology中，你可以指定你想要每个节点执行的并行数，Storm将会在集群内启动这么多的线程去执行。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Topology的执行不会退出，除非你手动kill掉它。Storm将会自动分配失败的任务。另外，即使在机器宕机消息被丢失的情况下，storm也会保证不会丢失数据。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	数据模型\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm用元组作为其数据模型。一个元组是一组命名的数值列表，一个元组可以表示任意的类型。Storm支持所有的原生类型，字符串，字节，数组都可以作为元组的值。如果你想使用其他的类型，你只需要去实现这个类型的<a href=\"https://github.com/nathanmarz/storm/wiki/Serialization\">序列化</a>的方法。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Topology中的每个节点必须声明它的输出字段。举个例子，Bolt声明它发出的两个元组分别是\"double\"和\"triple\"。\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kd\" style=\"font-weight:bold;\">class</span> <span class=\"nc\" style=\"color:#445588;font-weight:bold;\">DoubleAndTripleBolt</span> <span class=\"kd\" style=\"font-weight:bold;\">extends</span> <span class=\"n\">BaseRichBolt</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"kd\" style=\"font-weight:bold;\">private</span> <span class=\"n\">OutputCollectorBase</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"nd\">@Override</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">prepare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">Map</span> <span class=\"n\">conf</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">TopologyContext</span> <span class=\"n\">context</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">OutputCollectorBase</span> <span class=\"n\">collector</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">_collector</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"n\">collector</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"nd\">@Override</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">execute</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">Tuple</span> <span class=\"n\">input</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">int</span> <span class=\"n\">val</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"n\">input</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">getInteger</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"mi\" style=\"color:#009999;\">0</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">emit</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">input</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Values</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">val</span><span class=\"o\" style=\"font-weight:bold;\">*</span><span class=\"mi\" style=\"color:#009999;\">2</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">val</span><span class=\"o\" style=\"font-weight:bold;\">*</span><span class=\"mi\" style=\"color:#009999;\">3</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">ack</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">input</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"nd\">@Override</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">declareOutputFields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">OutputFieldsDeclarer</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">declare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Fields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"double\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"s\" style=\"color:#DD1144;\">\"triple\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	declareOutputFields函数声明了输出字段[\"double\", \"triple\"]。剩下的函数将会在下面的章节里介绍。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	一个简单的Topology\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	让我们看一眼一个简单的topology去探索一下它的定义和它的代码结构。我们先看下它的定义ExclamationTopology。这个例子来自storm-starter:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"n\">TopologyBuilder</span> <span class=\"n\">builder</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">TopologyBuilder</span><span class=\"o\" style=\"font-weight:bold;\">();</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setSpout</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"words\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">TestWordSpout</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">10</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setBolt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"exclaim1\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">ExclamationBolt</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">3</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">shuffleGrouping</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"words\"</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setBolt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"exclaim2\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">ExclamationBolt</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">2</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">shuffleGrouping</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"exclaim1\"</span><span class=\"o\" style=\"font-weight:bold;\">);</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这个Topology包含了一个spout和两个bolt。Spout发送出一个单词，每个bolt在输入的字符串后面加上\"!!!\"。这些节点连成一条线:spout发给第一个bolt，第一个bolt再发给第二个。如果spout发出的元组是[\"bob\"]和p[\"john\"]，那么第二个bolt将会输出单词[\"bob!!!!!!\"]和[\"john!!!!!!\"]。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	代码里定义节点使用方法setSpout和setBolt。这些方法用一个用户指定的id，一个处理逻辑的函数，还有一个你想启动的并发数作为参数。在这个例子里，spout给定的id是\"words\"，两个bolt给定的id分别是\"exclaim1\"和\"exclaim2\"。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这个对象的处理逻辑实现了<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/topology/IRichSpout.html\">IRichSpout</a>和<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/topology/IRichBolt.html\">IRichBolt</a>的接口。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	最后一个参数是指定你想启动多少并行的实例，这个参数是可选的。它实际上是指定在集群中需要启动多少线程。如果你忽略它，Storm将会默认分配一个线程。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	setBolt返回一个<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/topology/InputDeclarer.html\">InputDeclarer</a>对象，用来定义Bolt的输出。这里bolt\"exclami1\"声明它需要通过\"shuffle grouping的方式去获取\"spout\"words\"的所有输出，\"shuffle grouping\"意味着元组是以随机分发到各个bolt的任务上的。各个组件之间可以由很多不同的方式来分发这些数据，后面我们将详细介绍这点。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	如果你期望bolt \"exclaim2\"去读所有发自spout \"words\"和bolt \"exclaim1\"的数据，你可以这么定义\"exclaim2\":\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setBolt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"exclaim2\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">ExclamationBolt</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">5</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">shuffleGrouping</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"words\"</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">shuffleGrouping</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"exclaim1\"</span><span class=\"o\" style=\"font-weight:bold;\">);</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这里你就可以看到可以声明多一个源作为一个Bolt的输入。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	让我们深入了解下这个topology的spout和bolt的实现。Spout负责发送新的消息到topology。在这个topology中，TestWordSpout每100ms发送list[\"nathan\", \"mike\", \"jackson\", \"golda\", \"bertels\"]内随机的一个单词作为元组。TestWordSpout的nextTuple()实现就像下面这样:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">nextTuple</span><span class=\"o\" style=\"font-weight:bold;\">()</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">Utils</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">sleep</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"mi\" style=\"color:#009999;\">100</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"kd\" style=\"font-weight:bold;\">final</span> <span class=\"n\">String</span><span class=\"o\" style=\"font-weight:bold;\">[]</span> <span class=\"n\">words</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">String</span><span class=\"o\" style=\"font-weight:bold;\">[]</span> <span class=\"o\" style=\"font-weight:bold;\">{</span><span class=\"s\" style=\"color:#DD1144;\">\"nathan\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"s\" style=\"color:#DD1144;\">\"mike\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"s\" style=\"color:#DD1144;\">\"jackson\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"s\" style=\"color:#DD1144;\">\"golda\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"s\" style=\"color:#DD1144;\">\"bertels\"</span><span class=\"o\" style=\"font-weight:bold;\">};</span> <span class=\"kd\" style=\"font-weight:bold;\">final</span> <span class=\"n\">Random</span> <span class=\"n\">rand</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Random</span><span class=\"o\" style=\"font-weight:bold;\">();</span> <span class=\"kd\" style=\"font-weight:bold;\">final</span> <span class=\"n\">String</span> <span class=\"n\">word</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"n\">words</span><span class=\"o\" style=\"font-weight:bold;\">[</span><span class=\"n\">rand</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">nextInt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">words</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">length</span><span class=\"o\" style=\"font-weight:bold;\">)];</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">emit</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Values</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">word</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	你可以看到这个实现是非常的直接了当的。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	ExclamationBolt在输入字符串后添加\"!!!\"。让我们看下它的所有实现:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kd\" style=\"font-weight:bold;\">static</span> <span class=\"kd\" style=\"font-weight:bold;\">class</span> <span class=\"nc\" style=\"color:#445588;font-weight:bold;\">ExclamationBolt</span> <span class=\"kd\" style=\"font-weight:bold;\">implements</span> <span class=\"n\">IRichBolt</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">OutputCollector</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">prepare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">Map</span> <span class=\"n\">conf</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">TopologyContext</span> <span class=\"n\">context</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">OutputCollector</span> <span class=\"n\">collector</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">_collector</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"n\">collector</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">execute</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">Tuple</span> <span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">emit</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Values</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">getString</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"mi\" style=\"color:#009999;\">0</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">+</span> <span class=\"s\" style=\"color:#DD1144;\">\"!!!\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">ack</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">cleanup</span><span class=\"o\" style=\"font-weight:bold;\">()</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">declareOutputFields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">OutputFieldsDeclarer</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">declare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Fields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"word\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"n\">Map</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">getComponentConfiguration</span><span class=\"o\" style=\"font-weight:bold;\">()</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"k\" style=\"font-weight:bold;\">return</span> <span class=\"kc\" style=\"font-weight:bold;\">null</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	prepare方法给bolt提供了OutputCollector，它用来从bolt中发送元组。Bolt可以在任意时刻发送元组 -- 在prepare,&nbsp;execute, 或者cleanup方法中都可以，甚至可以在另外的线程中异步发送。这个prepare的实现仅仅简单的保存了OutputCollector的实例，为了待会儿在execute方法中使用。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	execute方法从bolt的输入中收到了一个元组。ExclamationBolt从元组中获取第一个字段，并且发送一个追加了\"!!!\"的字符串的新元组，如果你实现了一个bolt订阅了多个输入源，你可以使用Tuple#getSourceComponent方法来知道它是来自于哪个组件。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	在execute中还有几个东西需要介绍，输入的元组作为emit的第一参数被传进来，还有在最后一行会送一个ack。这是storm来保证不丢数据实现的API的一部分，后面我们将详细介绍。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	cleanup方法在Bolt被关闭的时候调用，它清理我们打开的所有资源。这里没有保证这个方法一定会在集群中被调用:举个例子，如果机器上的任务正在爆发性的增长，那么就不能调用这个方法。cleanup方法更倾向于你使用<a href=\"https://github.com/nathanmarz/storm/wiki/Local-mode\">本地模式</a>时执行,你可以执行和结束掉很多topology来避免资源的泄漏。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	declareOutputFields方法声明了ExclamationBolt会发送一个携带一个字段名为\"word\"的元组。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	getComponentConfiguration方法允许你配置组件执行的各个方面。这是一个高端的话题，在<a href=\"https://github.com/nathanmarz/storm/wiki/Configuration\">Configuration</a>你可以了解到更多。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	像cleanup和getComponentConfiguration两个方法通常时不需要在bolt中实现的。你可以通过使用基类默认的实现更加简洁的定义bolt。ExclamationBolt可以简单的继承于BaseRichBolt，就像这样:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kd\" style=\"font-weight:bold;\">static</span> <span class=\"kd\" style=\"font-weight:bold;\">class</span> <span class=\"nc\" style=\"color:#445588;font-weight:bold;\">ExclamationBolt</span> <span class=\"kd\" style=\"font-weight:bold;\">extends</span> <span class=\"n\">BaseRichBolt</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">OutputCollector</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">prepare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">Map</span> <span class=\"n\">conf</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">TopologyContext</span> <span class=\"n\">context</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">OutputCollector</span> <span class=\"n\">collector</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">_collector</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"n\">collector</span><span class=\"o\" style=\"font-weight:bold;\">;</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">execute</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">Tuple</span> <span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">emit</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Values</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">getString</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"mi\" style=\"color:#009999;\">0</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">+</span> <span class=\"s\" style=\"color:#DD1144;\">\"!!!\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"n\">_collector</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">ack</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">tuple</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">declareOutputFields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">OutputFieldsDeclarer</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">declare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Fields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"word\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> </pre>\r\n</div>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	在本地模式执行ExclamationTopology\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	让我们看看怎么在本地模式运行ExclamationTopology，观察下它时如何工作的。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm由两个工作模式:本地模式和分布式。在本地模式中，Storm的执行完全是在一个进程内，用多个线程来模拟多个节点。本地模式对于topology的测试和开发来说是非常有用的。当你照着storm-starter中的例子运行时，它就启动的是本地模式，你可以看到每个组件发出的消息。你可以从<a href=\"https://github.com/nathanmarz/storm/wiki/Local-mode\">Local mode</a>了解到更多的知识。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	在分布式模式下，Storm作为一个集群来工作。当你提交一个topology到master时，你也提交了所有topology需要的代码。Master将会分发你的代码并分配worker去执行你的topology。如果worker宕机了，Master将会重新分配它们到其他地方。你可以从<a href=\"https://github.com/nathanmarz/storm/wiki/Running-topologies-on-a-production-cluster\">Running topologies on a production cluster</a>这里了解到更多关于topology在集群环境下执行的知识。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	ExclamationTopology在本地模式执行的代码:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"n\">Config</span> <span class=\"n\">conf</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Config</span><span class=\"o\" style=\"font-weight:bold;\">();</span> <span class=\"n\">conf</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setDebug</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"kc\" style=\"font-weight:bold;\">true</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">conf</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setNumWorkers</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"mi\" style=\"color:#009999;\">2</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">LocalCluster</span> <span class=\"n\">cluster</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">LocalCluster</span><span class=\"o\" style=\"font-weight:bold;\">();</span> <span class=\"n\">cluster</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">submitTopology</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"test\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">conf</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">createTopology</span><span class=\"o\" style=\"font-weight:bold;\">());</span> <span class=\"n\">Utils</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">sleep</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"mi\" style=\"color:#009999;\">10000</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">cluster</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">killTopology</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"test\"</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">cluster</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">shutdown</span><span class=\"o\" style=\"font-weight:bold;\">();</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	首先，通过创建一个LocalCluster对象，定义了一个进程内集群。提交topology到这个虚拟的集群和提交到分布式集群的方法是一样的。它通过submitTopology提交了一个topology到LocaoCluster，它有三个参数，一个是执行的topology的名字，还有它的配置，以及topology的实例。 这个名字是用来让你kill掉topology时使用的，topology永远不会停止执行，直到你杀死它。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这个配置时用来调整topology的各个方面的。下面两个配置是经常被用到的:\r\n</p>\r\n<ol style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<li>\r\n		<p>\r\n			TOPOLOGY_WORKERS&nbsp;(使用setNumWorkers来设置) 指定集群分配多少进程来执行topology。每个组件都将会以多线程模式执行。给组件分配线程的数目可以通过setBolt和setSpout方法来配置。每个worker进程包含了多个线程，具体点来说，你可以在配置中设置300个线程，并指定使用50个worker进程。那么你的每个worker进程将会执行6个线程，它们可能会属于不同的组件。你可以调整这些数目来提高性能。\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			TOPOLOGY_DEBUG&nbsp;(使用setDebug来设置) 当被设置喂true时，意味着storm将会记录所有发送的消息。这个对本地模式调试时非常有用，但是你不应该在集群模式中使用它。\r\n		</p>\r\n	</li>\r\n</ol>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	你还可以对topology设置更多的配置，不同配置的详细信息可以从<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/Config.html\">the Javadoc for Config</a>了解到。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	你可以从这里<a href=\"https://github.com/nathanmarz/storm/wiki/Creating-a-new-Storm-project\">Creating a new Storm project</a>学习更多的关于开发环境部署以便可以让你在eclipse中执行本地模式。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	Stream分组\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	stream的分组指名了两个组件间的数据流通是以什么样的方式进行的。需要注意的一点是，spout和bolt是并行执行在整个集群上的多个任务。从任务层面我们看它们之间的关系，就像下面这样:\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	<img src=\"http://yzprofile.me/image/2013-04-25-storm-tutorial/topology-tasks.png\" alt=\"topology-tasks\" style=\"height:auto;border:1px solid #000000;\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	有一个Bolt A向Bolt B发送一个元组的任务，它应该将元组发给哪个任务？\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	stream分组描述了任务之间元组发送的方式。在我们深入了解不同stream分组前，让我们先看一下<a href=\"http://github.com/nathanmarz/storm-starter\">storm-starter</a>中的另外一个topology。<a href=\"https://github.com/nathanmarz/storm-starter/blob/master/src/jvm/storm/starter/WordCountTopology.java\">WordCountTopology</a>从spout中读取一句话，输出stream到WordCountBolt，来统计句子中单词总共出现的次数:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"n\">TopologyBuilder</span> <span class=\"n\">builder</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">TopologyBuilder</span><span class=\"o\" style=\"font-weight:bold;\">();</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setSpout</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"sentences\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">RandomSentenceSpout</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">5</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setBolt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"split\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">SplitSentence</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">8</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">shuffleGrouping</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"sentences\"</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"n\">builder</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">setBolt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"count\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">WordCount</span><span class=\"o\" style=\"font-weight:bold;\">(),</span> <span class=\"mi\" style=\"color:#009999;\">12</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">fieldsGrouping</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"split\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Fields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"word\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	SplitSentence把它收到的巨资拆分成单词发送出去，WordCount在内存中构造了一个单词和个数的对照表来统计每个单词出现的次数。每当WordCount收到一个单词，它都会去更新它的状态并发送出一个新的单词计数。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这里在stream分钟上有一点点的不同。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	最简单的分组类型被叫做\"shuffle 分组\"，它随机的分发元组到各个任务上。它被用在WordCountTopology从RandomSentenceSpout发送给SplitSentence&nbsp;bolt的过程里。它可以有效的把元组平均分发给SplitSentence任务。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	一个有趣的分组类型是\"fields分组\"。在SplitSentence&nbsp;bolt和WordCount&nbsp;bolt间使用的就是Fields分组。它让相同的字段总是发送到相同的任务上去。否则不同的任务将会看到相同的单词，它们会由于没有收到完整的信息而发送出一个错误的结果。Fields分组使用字段的子集分组stream。相同字段值将会发送给相同的任务。WordCount使用Fields分组订阅了SplitSentence的输出，并且使用了\"word\"字段。相同的单词将会总是发送到相同的任务上去出去，从而是bolt得到一个正确的输出。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Fields分组是实现Stream join和Stream aggregations的基础。Fields分组的机制是给予mod hash的。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	你还可以在<a href=\"https://github.com/nathanmarz/storm/wiki/Concepts\">Concepts</a>这里找到其他stream分组的介绍。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	使用其他语言定义Bolt\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Bolt可以使用任意语言来定义，使用其他语言写的Bolt将作为子进程执行，Storm通过标准输入输出使用JSON格式的消息和它们进行通讯。通信协议只需要100行左右的适配器库，并且storm已经提供了ruby,python和fancy三种语言的库。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这个是WordCountTopology的SplitSentence的定义:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kd\" style=\"font-weight:bold;\">static</span> <span class=\"kd\" style=\"font-weight:bold;\">class</span> <span class=\"nc\" style=\"color:#445588;font-weight:bold;\">SplitSentence</span> <span class=\"kd\" style=\"font-weight:bold;\">extends</span> <span class=\"n\">ShellBolt</span> <span class=\"kd\" style=\"font-weight:bold;\">implements</span> <span class=\"n\">IRichBolt</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">SplitSentence</span><span class=\"o\" style=\"font-weight:bold;\">()</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"kd\" style=\"font-weight:bold;\">super</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"python\"</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"s\" style=\"color:#DD1144;\">\"splitsentence.py\"</span><span class=\"o\" style=\"font-weight:bold;\">);</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"kd\" style=\"font-weight:bold;\">public</span> <span class=\"kt\" style=\"color:#445588;font-weight:bold;\">void</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">declareOutputFields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">OutputFieldsDeclarer</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"o\" style=\"font-weight:bold;\">{</span> <span class=\"n\">declarer</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">declare</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"k\" style=\"font-weight:bold;\">new</span> <span class=\"n\">Fields</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\"word\"</span><span class=\"o\" style=\"font-weight:bold;\">));</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> <span class=\"o\" style=\"font-weight:bold;\">}</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	SplitSentence重写了ShellBolt方法,还声明了它是用python执行splitsentence.py的。下面是splitsentence.py的实现:\r\n</p>\r\n<div class=\"highlight\" style=\"background-color:#FFFFFF;color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;\">\r\n<pre><span class=\"kn\">import</span> <span class=\"nn\" style=\"color:#555555;\">storm</span> <span class=\"kd\" style=\"font-weight:bold;\">class</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">SplitSentenceBolt</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">storm</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">BasicBolt</span><span class=\"o\" style=\"font-weight:bold;\">):</span> <span class=\"n\">def</span> <span class=\"nf\" style=\"color:#990000;font-weight:bold;\">process</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"n\">self</span><span class=\"o\" style=\"font-weight:bold;\">,</span> <span class=\"n\">tup</span><span class=\"o\" style=\"font-weight:bold;\">):</span> <span class=\"n\">words</span> <span class=\"o\" style=\"font-weight:bold;\">=</span> <span class=\"n\">tup</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">values</span><span class=\"o\" style=\"font-weight:bold;\">[</span><span class=\"mi\" style=\"color:#009999;\">0</span><span class=\"o\" style=\"font-weight:bold;\">].</span><span class=\"na\" style=\"color:#008080;\">split</span><span class=\"o\" style=\"font-weight:bold;\">(</span><span class=\"s\" style=\"color:#DD1144;\">\" \"</span><span class=\"o\" style=\"font-weight:bold;\">)</span> <span class=\"k\" style=\"font-weight:bold;\">for</span> <span class=\"n\">word</span> <span class=\"n\">in</span> <span class=\"nl\">words:</span> <span class=\"n\">storm</span><span class=\"o\" style=\"font-weight:bold;\">.</span><span class=\"na\" style=\"color:#008080;\">emit</span><span class=\"o\" style=\"font-weight:bold;\">([</span><span class=\"n\">word</span><span class=\"o\" style=\"font-weight:bold;\">])</span> <span class=\"n\">SplitSentenceBolt</span><span class=\"o\" style=\"font-weight:bold;\">().</span><span class=\"na\" style=\"color:#008080;\">run</span><span class=\"o\" style=\"font-weight:bold;\">()</span> </pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	你可以从<a href=\"https://github.com/nathanmarz/storm/wiki/Using-non-JVM-languages-with-Storm\">Using non-JVM languages with Storm</a>了解到更多关于使用其他语言实现spout和bolt的相关信息。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	可靠的消息处理\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	文章的开头我们跳过了关于发送元组的部分内容。你可以从<a href=\"https://github.com/nathanmarz/storm/wiki/Guaranteeing-message-processing\">Guaranteeing message processing</a>这里了解到Storm是怎么去保证每条消息都会被处理的，以及作为用户应该怎样利用Storm的高可靠性。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	Topology事务\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	Storm保证了每个消息至少会在topology内传输一次。我们可能会问：\"如果在Storm上做计数，你怎么去保证它不会重复统计呢?\"。Storm有事务性的topology，它可以保证准确的一次消息通知。从<a href=\"https://github.com/nathanmarz/storm/wiki/Transactional-topologies\">这儿</a>可以了解更多。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	分布式RPC\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	这片手册讲解了Storm基础的流式处理。基于Storm还可以做更多的事情。RPC就是其中一个最有意思的应用。点击<a href=\"https://github.com/nathanmarz/storm/wiki/Distributed-RPC\">这儿</a>可以了解更多关于RPC的知识。\r\n</p>\r\n<h1 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:38.5px;color:#333333;background-color:#FFFFFF;\">\r\n	结束\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:14px;background-color:#FFFFFF;\">\r\n	手册给出了一个关于开发，测试，部署storm topology的概览。剩下的文档将会带你去更深入的了解Storm使用中的各个方面。\r\n</p>',NULL,NULL,'2014-05-21 11:05:12',0,'Storm 入门手册',0),(87,'admin',6,'<p>\r\n	<span style=\"font-size:14px;\"><strong>1.1&nbsp;&nbsp; 实时流计算</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">互联网从诞生的第一时间起，对世界的最大的改变就是让信息能够实时交互，从而大大加速了各个环节的效率。正因为大家对信息实时响应、实时交互的需求，软件行业除了个人操作系统之外，数据库（更精确的说是关系型数据库）应该是软件行业发展最快、收益最为丰厚的产品了。记得十年前，很多银行别说实时转账，连实时查询都做不到，但是数据库和高速网络改变了这个情况。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">随着互联网的更进一步发展，从Portal信息浏览型到Search信息搜索型到SNS关系交互传递型，以及电子商务、互联网旅游生活产品等将生活中的流通环节在线化。对效率的要求让大家对于实时性的要求进一步提升，而信息的交互和沟通正在从点对点往信息链甚至信息网的方向发展，这样必然带来数据在各个维度的交叉关联，数据爆炸已不可避免。因此流式处理加NoSQL产品应运而生，分别解决实时框架和数据大规模存储计算的问题。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">早在7、8年前诸如UC伯克利、斯坦福等大学就开始了对流式数据处理的研究，但是由于更多的关注于金融行业的业务场景或者互联网流量监控的业务场景，以及当时互联网数据场景的限制，造成了研究多是基于对传统数据库处理的流式化，对流式框架本身的研究偏少。目前这样的研究逐渐没有了声音，工业界更多的精力转向了实时数据库。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2010年Yahoo！对S4的开源，2011年twitter对Storm的开源，改变了这个情况。以前互联网的开发人员在做一个实时应用的时候，除了要关注应用逻辑计算处理本身，还要为了数据的实时流转、交互、分布大伤脑筋。但是现在情况却大为不同，以Storm为例，开发人员可以快速的搭建一套健壮、易用的实时流处理框架，配合SQL产品或者NoSQL产品或者MapReduce计算平台，就可以低成本的做出很多以前很难想象的实时产品：比如一淘数据部的量子恒道品牌旗下的多个产品就是构建在实时流处理平台上的。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">本教程是一本对storm的基础介绍手册，但是我们也希望它不仅仅是一本storm的使用手册，我们会在其中加入更多我们在实际数据生产过程的经验和应用的架构，最后的目的是帮助所有愿意使用实时流处理框架的技术同仁，同时也默默的改变这个世界。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>1.2&nbsp;&nbsp; Storm特点</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Storm是一个开源的分布式实时计算系统，可以简单、可靠的处理大量的数据流。Storm有很多使用场景：如实时分析，在线机器学习，持续计算，分布式RPC，ETL等等。Storm支持水平扩展，具有高容错性，保证每个消息都会得到处理，而且处理速度很快（在一个小集群中，每个结点每秒可以处理数以百万计的消息）。Storm的部署和运维都很便捷，而且更为重要的是可以使用任意编程语言来开发应用。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Storm有如下特点：</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>编程模型简单</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">在大数据处理方面相信大家对hadoop已经耳熟能详，基于Google Map/Reduce来实现的Hadoop为开发者提供了map、reduce原语，使并行批处理程序变得非常地简单和优美。同样，Storm也为大数据的实时计算提供了一些简单优美的原语，这大大降低了开发并行实时处理的任务的复杂性，帮助你快速、高效的开发应用。</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>可扩展</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">在Storm集群中真正运行topology的主要有三个实体：工作进程、线程和任务。Storm集群中的每台机器上都可以运行多个工作进程，每个工作进程又可创建多个线程，每个线程可以执行多个任务，任务是真正进行数据处理的实体，我们开发的spout、bolt就是作为一个或者多个任务的方式执行的。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">因此，计算任务在多个线程、进程和服务器之间并行进行，支持灵活的水平扩展。</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>高可靠性</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">Storm可以保证spout发出的每条消息都能被“完全处理”，这也是直接区别于其他实时系统的地方，如S4。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">请注意，spout发出的消息后续可能会触发产生成千上万条消息，可以形象的理解为一棵消息树，其中spout发出的消息为树根，Storm会跟踪这棵消息树的处理情况，只有当这棵消息树中的所有消息都被处理了，Storm才会认为spout发出的这个消息已经被“完全处理”。如果这棵消息树中的任何一个消息处理失败了，或者整棵消息树在限定的时间内没有“完全处理”，那么spout发出的消息就会重发。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">考虑到尽可能减少对内存的消耗，Storm并不会跟踪消息树中的每个消息，而是采用了一些特殊的策略，它把消息树当作一个整体来跟踪，对消息树中所有消息的唯一id进行异或计算，通过是否为零来判定spout发出的消息是否被“完全处理”，这极大的节约了内存和简化了判定逻辑，后面会对这种机制进行详细介绍。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这种模式，每发送一个消息，都会同步发送一个ack/fail，对于网络的带宽会有一定的消耗，如果对于可靠性要求不高，可通过使用不同的emit接口关闭该模式。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">上面所说的，Storm保证了每个消息至少被处理一次，但是对于有些计算场合，会严格要求每个消息只被处理一次，幸而Storm的0.7.0引入了事务性拓扑，解决了这个问题，后面会有详述。</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong> 高容错性</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果在消息处理过程中出了一些异常，Storm会重新安排这个出问题的处理单元。Storm保证一个处理单元永远运行（除非你显式杀掉这个处理单元）。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当然，如果处理单元中存储了中间状态，那么当处理单元重新被Storm启动的时候，需要应用自己处理中间状态的恢复。</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>支持多种编程语言</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">除了用java实现spout和bolt，你还可以使用任何你熟悉的编程语言来完成这项工作，这一切得益于Storm所谓的多语言协议。多语言协议是Storm内部的一种特殊协议，允许spout或者bolt使用标准输入和标准输出来进行消息传递，传递的消息为单行文本或者是json编码的多行。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Storm支持多语言编程主要是通过ShellBolt, ShellSpout和ShellProcess这些类来实现的，这些类都实现了IBolt 和 ISpout接口，以及让shell通过java的ProcessBuilder类来执行脚本或者程序的协议。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">可以看到，采用这种方式，每个tuple在处理的时候都需要进行json的编解码，因此在吞吐量上会有较大影响。</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>支持本地模式</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">Storm有一种“本地模式”，也就是在进程中模拟一个Storm集群的所有功能，以本地模式运行topology跟在集群上运行topology类似，这对于我们开发和测试来说非常有用。</span> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\"><strong>高效</strong></span> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">用ZeroMQ作为底层消息队列, 保证消息能快速被处理</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">作者：张中，澄苍</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;line-height:21px;\">原文链接：<a href=\"http://blog.linezing.com/?p=1847\">http://blog.linezing.com/?p=1847</a></span> \r\n</p>',NULL,'2014-05-21 16:28:15','2014-05-21 16:27:31',0,'storm入门教程 第一章 前言',0),(88,'admin',6,'<h1 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:24px;color:#333333;background-color:#FFFFFF;\">\r\n	<strong><span style=\"font-size:16px;\">2.1 Storm</span></strong><strong><span style=\"font-size:16px;\">基本概念</span></strong> \r\n</h1>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">在运行一个Storm任务之前，需要了解一些概念：</span> \r\n</p>\r\n<ol style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<span style=\"color:#000000;\">Topologies</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Streams</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Spouts</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Bolts</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Stream groupings</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Reliability</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Tasks</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Workers</span> \r\n	</li>\r\n	<li>\r\n		<span style=\"color:#000000;\">Configuration</span> \r\n	</li>\r\n</ol>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span id=\"more-1853\"></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Storm集群和Hadoop集群表面上看很类似。但是Hadoop上运行的是MapReduce jobs，而在Storm上运行的是拓扑（topology），这两者之间是非常不一样的。一个关键的区别是： 一个MapReduce job最终会结束， 而一个topology永远会运行（除非你手动kill掉）。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">在Storm的集群里面有两种节点： 控制节点（master node）和工作节点（worker node）。控制节点上面运行一个叫Nimbus后台程序，它的作用类似Hadoop里面的JobTracker。Nimbus负责在集群里面分发代码，分配计算任务给机器， 并且监控状态。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">每一个工作节点上面运行一个叫做Supervisor的节点。Supervisor会监听分配给它那台机器的工作，根据需要启动/关闭工作进程。每一个工作进程执行一个topology的一个子集；一个运行的topology由运行在很多机器上的很多工作进程组成。<br />\r\n</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;text-align:center;\">\r\n	<span style=\"color:#000000;\"><a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/2.jpg.png\"><span style=\"color:#000000;\"><img class=\"size-full wp-image-1855 aligncenter\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/2.jpg.png\" alt=\"\" width=\"320\" height=\"259\" /></span></a></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Nimbus和Supervisor之间的所有协调工作都是通过Zookeeper集群完成。另外，Nimbus进程和Supervisor进程都是快速失败（fail-fast)和无状态的。所有的状态要么在zookeeper里面， 要么在本地磁盘上。这也就意味着你可以用kill -9来杀死Nimbus和Supervisor进程， 然后再重启它们，就好像什么都没有发生过。这个设计使得Storm异常的稳定。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.1 Topologies</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">一个topology是spouts和bolts组成的图， 通过stream groupings将图中的spouts和bolts连接起来，如下图：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;text-align:center;\">\r\n	<span style=\"color:#000000;\"><a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/3.JPG.png\"><span style=\"color:#000000;\"><img class=\"aligncenter wp-image-1856\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/3.JPG.png\" alt=\"\" width=\"761\" height=\"671\" /></span></a></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">一个topology会一直运行直到你手动kill掉，Storm自动重新分配执行失败的任务， 并且Storm可以保证你不会有数据丢失（如果开启了高可靠性的话）。如果一些机器意外停机它上面的所有任务会被转移到其他机器上。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">运行一个topology很简单。首先，把你所有的代码以及所依赖的jar打进一个jar包。然后运行类似下面的这个命令：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;text-align:center;\">\r\n	<span style=\"color:#000000;\"> <em>storm jar all<strong>-</strong>my<strong>-</strong>code.jar backtype.storm.MyTopology arg1 arg2</em></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">这个命令会运行主类:<em> backtype.strom.MyTopology</em>, 参数是<em>arg1</em>, <em>arg2</em>。这个类的main函数定义这个topology并且把它提交给Nimbus。<em>storm jar</em>负责连接到Nimbus并且上传jar包。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Topology的定义是一个Thrift结构，并且Nimbus就是一个Thrift服务， 你可以提交由任何语言创建的topology。上面的方面是用JVM-based语言提交的最简单的方法。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.2 Streams</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">消息流stream是storm里的关键抽象。一个消息流是一个没有边界的tuple序列， 而这些tuple序列会以一种分布式的方式并行地创建和处理。通过对stream中tuple序列中每个字段命名来定义stream。在默认的情况下，tuple的字段类型可以是：integer，long，short， byte，string，double，float，boolean和byte array。你也可以自定义类型（只要实现相应的序列化器）。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">每个消息流在定义的时候会被分配给一个id，因为单向消息流使用的相当普遍， OutputFieldsDeclarer定义了一些方法让你可以定义一个stream而不用指定这个id。在这种情况下这个stream会分配个值为‘default’默认的id 。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Storm提供的最基本的处理stream的原语是spout和bolt。你可以实现spout和bolt提供的接口来处理你的业务逻辑。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.3 &nbsp;Spouts</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">消息源spout是Storm里面一个topology里面的消息生产者。一般来说消息源会从一个外部源读取数据并且向topology里面发出消息：tuple。Spout可以是可靠的也可以是不可靠的。如果这个tuple没有被storm成功处理，可靠的消息源spouts可以重新发射一个tuple， 但是不可靠的消息源spouts一旦发出一个tuple就不能重发了。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">消息源可以发射多条消息流stream。使用OutputFieldsDeclarer.declareStream来定义多个stream，然后使用SpoutOutputCollector来发射指定的stream。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Spout类里面最重要的方法是nextTuple。要么发射一个新的tuple到topology里面或者简单的返回如果已经没有新的tuple。要注意的是nextTuple方法不能阻塞，因为storm在同一个线程上面调用所有消息源spout的方法。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">另外两个比较重要的spout方法是ack和fail。storm在检测到一个tuple被整个topology成功处理的时候调用ack，否则调用fail。storm只对可靠的spout调用ack和fail。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.4 &nbsp;Bolts</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">所有的消息处理逻辑被封装在bolts里面。Bolts可以做很多事情：过滤，聚合，查询数据库等等。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Bolts可以简单的做消息流的传递。复杂的消息流处理往往需要很多步骤，从而也就需要经过很多bolts。比如算出一堆图片里面被转发最多的图片就至少需要两步：第一步算出每个图片的转发数量。第二步找出转发最多的前10个图片。（如果要把这个过程做得更具有扩展性那么可能需要更多的步骤）。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Bolts可以发射多条消息流， 使用OutputFieldsDeclarer.declareStream定义stream，使用OutputCollector.emit来选择要发射的stream。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Bolts的主要方法是execute, 它以一个tuple作为输入，bolts使用OutputCollector来发射tuple，bolts必须要为它处理的每一个tuple调用OutputCollector的ack方法，以通知Storm这个tuple被处理完成了，从而通知这个tuple的发射者spouts。 一般的流程是： bolts处理一个输入tuple, &nbsp;发射0个或者多个tuple, 然后调用ack通知storm自己已经处理过这个tuple了。storm提供了一个IBasicBolt会自动调用ack。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.5 &nbsp;Stream groupings</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">定义一个topology的其中一步是定义每个bolt接收什么样的流作为输入。stream grouping就是用来定义一个stream应该如果分配数据给bolts上面的多个tasks。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Storm里面有7种类型的stream grouping</span> \r\n</p>\r\n<ol style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		Shuffle Grouping: 随机分组， 随机派发stream里面的tuple，保证每个bolt接收到的tuple数目大致相同。\r\n	</li>\r\n	<li>\r\n		Fields Grouping：按字段分组， 比如按userid来分组， 具有同样userid的tuple会被分到相同的Bolts里的一个task， 而不同的userid则会被分配到不同的bolts里的task。\r\n	</li>\r\n	<li>\r\n		All Grouping：广播发送，对于每一个tuple，所有的bolts都会收到。\r\n	</li>\r\n	<li>\r\n		Global Grouping：全局分组， 这个tuple被分配到storm中的一个bolt的其中一个task。再具体一点就是分配给id值最低的那个task。\r\n	</li>\r\n	<li>\r\n		Non Grouping：不分组，这个分组的意思是说stream不关心到底谁会收到它的tuple。目前这种分组和Shuffle grouping是一样的效果， 有一点不同的是storm会把这个bolt放到这个bolt的订阅者同一个线程里面去执行。\r\n	</li>\r\n	<li>\r\n		Direct Grouping： 直接分组，&nbsp;这是一种比较特别的分组方法，用这种分组意味着消息的发送者指定由消息接收者的哪个task处理这个消息。 只有被声明为Direct Stream的消息流可以声明这种分组方法。而且这种消息tuple必须使用emitDirect方法来发射。消息处理者可以通过TopologyContext来获取处理它的消息的task的id&nbsp;（OutputCollector.emit方法也会返回task的id）。\r\n	</li>\r\n	<li>\r\n		Local or shuffle grouping：如果目标bolt有一个或者多个task在同一个工作进程中，tuple将会被随机发生给这些tasks。否则，和普通的Shuffle Grouping行为一致。\r\n	</li>\r\n</ol>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.6 &nbsp;Reliability</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Storm保证每个tuple会被topology完整的执行。Storm会追踪由每个spout tuple所产生的tuple树（一个bolt处理一个tuple之后可能会发射别的tuple从而形成树状结构），并且跟踪这棵tuple树什么时候成功处理完。每个topology都有一个消息超时的设置，如果storm在这个超时的时间内检测不到某个tuple树到底有没有执行成功， 那么topology会把这个tuple标记为执行失败，并且过一会儿重新发射这个tuple。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">为了利用Storm的可靠性特性，在你发出一个新的tuple以及你完成处理一个tuple的时候你必须要通知storm。这一切是由OutputCollector来完成的。通过emit方法来通知一个新的tuple产生了，通过ack方法通知一个tuple处理完成了。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm的可靠性我们在第四章会深入介绍。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.7 &nbsp;Tasks</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">每一个spout和bolt会被当作很多task在整个集群里执行。每一个executor对应到一个线程，在这个线程上运行多个task，而stream grouping则是定义怎么从一堆task发射tuple到另外一堆task。你可以调用TopologyBuilder类的setSpout和setBolt来设置并行度（也就是有多少个task）。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.8 &nbsp;Workers</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">一个topology可能会在一个或者多个worker（工作进程）里面执行，每个worker是一个物理JVM并且执行整个topology的一部分。比如，对于并行度是300的topology来说，如果我们使用50个工作进程来执行，那么每个工作进程会处理其中的6个tasks。Storm会尽量均匀的工作分配给所有的worker。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.1.9 Configuration</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Storm里面有一堆参数可以配置来调整Nimbus, Supervisor以及正在运行的topology的行为，一些配置是系统级别的，一些配置是topology级别的。default.yaml里面有所有的默认配置。你可以通过定义个storm.yaml在你的classpath里来覆盖这些默认配置。并且你也可以在代码里面设置一些topology相关的配置信息（使用StormSubmitter）。</span> \r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2.2 &nbsp;构建Topology</span> \r\n</h2>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">1. 实现的目标：</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">我们将设计一个topology，来实现对一个句子里面的单词出现的频率进行统计。这是一个简单的例子，目的是让大家对于topology快速上手，有一个初步的理解。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2. 设计Topology结构：</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">在开始开发Storm项目的第一步，就是要设计topology。确定好你的数据处理逻辑，我们今天将的这个简单的例子，topology也非常简单。整个topology如下：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"><a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/4.jpg\"><span style=\"color:#000000;\"><img class=\"aligncenter size-full wp-image-1862\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/4.jpg\" alt=\"\" width=\"677\" height=\"71\" /></span></a></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">整个topology分为三个部分：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">KestrelSpout:数据源，负责发送sentence</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Splitsentence:负责将sentence切分</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Wordcount:负责对单词的频率进行累加</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">3. 设计数据流</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">这个topology从kestrel queue读取句子,并把句子划分成单词,然后汇总每个单词出现的次数,一个tuple负责读取句子,每一个tuple分别对应计算每一个单词出现的次数,大概样子如下所示：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"><a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/234.jpg\"><span style=\"color:#000000;\"><img class=\"aligncenter size-full wp-image-1863\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/234.jpg\" alt=\"\" width=\"564\" height=\"364\" /></span></a></span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">4. 代码实现：</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">1) 构建maven环境：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">为了开发storm topology, 你需要把storm相关的jar包添加到classpath里面去： 要么手动添加所有相关的jar包， 要么使用maven来管理所有的依赖。storm的jar包发布在Clojars(一个maven库), 如果你使用maven的话，把下面的配置添加在你项目的pom.xml里面。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"></span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> clojars.org</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> http://clojars.org/repo</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"></span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"></span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> storm</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> storm</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> 0.5.3</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> test</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2) 定义topology：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">TopologyBuilder&nbsp;builder&nbsp;=&nbsp;new&nbsp;TopologyBuilder();</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">builder.setSpout(1,&nbsp;new&nbsp;KestrelSpout(“kestrel.backtype.com”,</span>22133,\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> ”sentence_queue”,</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> new&nbsp;StringScheme()));</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">builder.setBolt(2,&nbsp;new&nbsp;SplitSentence(),&nbsp;10)</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> .shuffleGrouping(1);</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">builder.setBolt(3,&nbsp;new&nbsp;WordCount(),&nbsp;20)</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> .fieldsGrouping(2,&nbsp;new&nbsp;Fields(“word”));</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">这种topology的spout从句子队列中读取句子，在kestrel.backtype.com位于一个Kestrel的服务器端口22133。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">Spout用setSpout方法插入一个独特的id到topology。&nbsp;Topology中的每个节点必须给予一个id，id是由其他bolts用于订阅该节点的输出流。&nbsp;KestrelSpout在topology中id为1。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"><em>setBolt</em>是用于在Topology中插入bolts。&nbsp;在topology中定义的第<em>一</em>个bolts&nbsp;是切割句子的bolts。&nbsp;这个bolts&nbsp;将句子流转成成单词流。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">让我们看看<em>SplitSentence</em>实施：</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">public class SplitSentence implements IBasicBolt{</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public&nbsp;void&nbsp;prepare(Map&nbsp;conf,&nbsp;TopologyContext&nbsp;context)&nbsp;{</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public&nbsp;void&nbsp;execute(Tuple&nbsp;tuple,&nbsp;BasicOutputCollector&nbsp;collector)&nbsp;{</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> String&nbsp;sentence&nbsp;=&nbsp;tuple.getString(0);</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> for(String&nbsp;word:&nbsp;sentence.split(“&nbsp;”))&nbsp;{</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> collector.emit(new&nbsp;Values(word));</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public&nbsp;void&nbsp;cleanup()&nbsp;{</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public&nbsp;void&nbsp;declareOutputFields(OutputFieldsDeclarer&nbsp;declarer)&nbsp;{</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> declarer.declare(new&nbsp;Fields(“word”));</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<div style=\"margin:0px;padding:0px;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<p align=\"left\">\r\n		<span style=\"color:#000000;\"> }</span> \r\n	</p>\r\n</div>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">关键的方法<em>是</em> execute方法。&nbsp;正如你可以看到，它将句子拆分成单词，并发出每个单词作为一个新的元组。&nbsp;另一个重要的方法是<em>declareOutputFields</em><em>，</em>其中宣布bolts输出元组的架构。&nbsp;在这里宣布，它发出一个域为word的元组</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"><em>setBolt</em>的最后一个参数是你想为bolts的并行量。 <em>SplitSentence </em>bolts&nbsp;是10个并发，这将导致在storm集群中有十个线程并行执行。&nbsp;你所要做的的是增加bolts的并行量在遇到topology的瓶颈时。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<em> setBolt</em>方法返回一个对象，用来定义bolts的输入。&nbsp;例如<em>，</em><em>SplitSentence</em>螺栓订阅组件“1”使用随机分组的输出流。&nbsp;“1”是指已经定义<em>KestrelSpout</em><em>。</em> 我将解释在某一时刻的随机分组的一部分。&nbsp;到目前为止，最要紧的是<em>，</em><em>SplitSentence</em> bolts会消耗<em>KestrelSpout</em>发出的每一个元组。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">下面在让我们看看wordcount的实现：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">public class WordCount implements IBasicBolt {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> private Map<string, integer=\"\"> _counts = new HashMap<string, integer=\"\">();</string,></string,></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public void prepare(Map conf, TopologyContext context) {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public void execute(Tuple tuple, BasicOutputCollector collector) {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> String word = tuple.getString(0);</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> int count;</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> if(_counts.containsKey(word)) {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> count = _counts.get(word);</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> } else {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> count = 0;</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	}\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> count++;</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> _counts.put(word, count);</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> collector.emit(new Values(word, count));</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public void cleanup() {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> public void declareOutputFields(OutputFieldsDeclarer declarer) {</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> declarer.declare(new Fields(“word”, “count”));</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> }</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">}</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">SplitSentence对于句子里面的每个单词发射一个新的tuple, WordCount在内存里面维护一个单词-&gt;次数的mapping， WordCount每收到一个单词， 它就更新内存里面的统计状态。</span> \r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">5. 运行Topology</span> \r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">storm的运行有两种模式: 本地模式和分布式模式.</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">1) 本地模式：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">storm用一个进程里面的线程来模拟所有的spout和bolt. 本地模式对开发和测试来说比较有用。 你运行storm-starter里面的topology的时候它们就是以本地模式运行的， 你可以看到topology里面的每一个组件在发射什么消息。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">2) 分布式模式：</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">storm由一堆机器组成。当你提交topology给master的时候， 你同时也把topology的代码提交了。master负责分发你的代码并且负责给你的topolgoy分配工作进程。如果一个工作进程挂掉了， master节点会把认为重新分配到其它节点。</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">3) 下面是以本地模式运行的代码:</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> Config conf = new Config();</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> conf.setDebug(true);</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> conf.setNumWorkers(2);</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> LocalCluster cluster = new LocalCluster();</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> cluster.submitTopology(“test”, conf, builder.createTopology());</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> Utils.sleep(10000);</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> cluster.killTopology(“test”);</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> cluster.shutdown();</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">首先， 这个代码定义通过定义一个LocalCluster对象来定义一个进程内的集群。提交topology给这个虚拟的集群和提交topology给分布式集群是一样的。通过调用submitTopology方法来提交topology， 它接受三个参数：要运行的topology的名字，一个配置对象以及要运行的topology本身。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">topology的名字是用来唯一区别一个topology的，这样你然后可以用这个名字来杀死这个topology的。前面已经说过了， 你必须显式的杀掉一个topology， 否则它会一直运行。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Conf对象可以配置很多东西， 下面两个是最常见的：\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"> TOPOLOGY_WORKERS(setNumWorkers) 定义你希望集群分配多少个工作进程给你来执行这个topology. topology里面的每个组件会被需要线程来执行。每个组件到底用多少个线程是通过setBolt和setSpout来指定的。这些线程都运行在工作进程里面. 每一个工作进程包含一些节点的一些工作线程。比如， 如果你指定300个线程，60个进程， 那么每个工作进程里面要执行6个线程， 而这6个线程可能属于不同的组件(Spout, Bolt)。你可以通过调整每个组件的并行度以及这些线程所在的进程数量来调整topology的性能。</span> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	TOPOLOGY_DEBUG(setDebug), 当它被设置成true的话， storm会记录下每个组件所发射的每条消息。这在本地环境调试topology很有用， 但是在线上这么做的话会影响性能的。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">结论：</span> \r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\">本章从storm的基本对象的定义，到广泛的介绍了storm的开发环境，从一个简单的例子讲解了topology的构建和定义。希望大家可以从本章的内容对storm有一个基本的理解和概念，并且已经可以构建一个简单的topology！！</span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"><em>作者：毅山,宋智</em></span> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"color:#000000;\"><em>原文链接：<a href=\"http://blog.linezing.com/?p=1853\">http://blog.linezing.com/?p=1853</a></em></span> \r\n</p>',NULL,'2014-05-21 16:30:49','2014-05-21 16:30:11',0,'Storm入门教程 第二章 构建Topology',0),(89,'admin',6,'<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	本文以Twitter Storm<a href=\"https://github.com/nathanmarz/storm/wiki\">官方Wiki</a>为基础，详细描述如何快速搭建一个Storm集群，其中，项目实践中遇到的问题及经验总结，在相应章节以“注意事项”的形式给出。<span id=\"more-1892\"></span>\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	3.1 Storm集群组件\r\n</h2>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm集群中包含两类节点：主控节点（Master Node）和工作节点（Work Node）。其分别对应的角色如下：\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 主控节点（Master Node）上运行一个被称为Nimbus的后台程序，它负责在Storm集群内分发代码，分配任务给工作机器，并且负责监控集群运行状态。Nimbus的作用类似于Hadoop中JobTracker的角色。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 每个工作节点（Work Node）上运行一个被称为Supervisor的后台程序。Supervisor负责监听从Nimbus分配给它执行的任务，据此启动或停止执行任务的工作进程。每一个工作进程执行一个Topology的子集；一个运行中的Topology由分布在不同工作节点上的多个工作进程组成。\r\n</p>\r\n<p align=\"center\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/Storm%E9%9B%86%E7%BE%A4%E7%BB%84%E4%BB%B6.png\"><img class=\"alignnone wp-image-1900\" alt=\"\" src=\"/upload/image/20140521/20140521163307_51.png\" width=\"324\" height=\"263\" /></a>\r\n</p>\r\n<p align=\"center\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong>Storm</strong><strong>集群组件</strong><strong></strong>\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Nimbus和Supervisor节点之间所有的协调工作是通过Zookeeper集群来实现的。此外，Nimbus和Supervisor进程都是快速失败（fail-fast)和无状态（stateless）的；Storm集群所有的状态要么在Zookeeper集群中，要么存储在本地磁盘上。这意味着你可以用kill -9来杀死Nimbus和Supervisor进程，它们在重启后可以继续工作。这个设计使得Storm集群拥有不可思议的稳定性。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2 安装Storm集群\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	这一章节将详细描述如何搭建一个Storm集群。下面是接下来需要依次完成的安装步骤：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 搭建Zookeeper集群；\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 安装Storm依赖库；\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	3. 下载并解压Storm发布版本；\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	4. 修改storm.yaml配置文件；\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	5. 启动Storm各个后台进程。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.1 搭建Zookeeper集群\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm使用Zookeeper协调集群，由于Zookeeper并不用于消息传递，所以Storm给Zookeeper带来的压力相当低。大多数情况下，单个节点的Zookeeper集群足够胜任，不过为了确保故障恢复或者部署大规模Storm集群，可能需要更大规模节点的Zookeeper集群（对于Zookeeper集群的话，官方推荐的最小节点数为3个）。在Zookeeper集群的每台机器上完成以下安装部署步骤：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 下载安装Java JDK，官方下载链接为<a href=\"http://java.sun.com/javase/downloads/index.jsp\">http://java.sun.com/javase/downloads/index.jsp</a>，JDK版本为JDK 6或以上。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 根据Zookeeper集群的负载情况，合理设置Java堆大小，尽可能避免发生swap，导致Zookeeper性能下降。保守起见，4GB内存的机器可以为Zookeeper分配3GB最大堆空间。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	3. 下载后解压安装Zookeeper包，官方下载链接为<a href=\"http://hadoop.apache.org/zookeeper/releases.html\">http://hadoop.apache.org/zookeeper/releases.html</a>。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	4. 根据Zookeeper集群节点情况，在conf目录下创建Zookeeper配置文件zoo.cfg：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				tickTime=2000<br />\r\ndataDir=/var/zookeeper/<br />\r\nclientPort=2181<br />\r\ninitLimit=5<br />\r\nsyncLimit=2<br />\r\nserver.1=zoo1:2888:3888<br />\r\nserver.2=zoo2:2888:3888<br />\r\nserver.3=zoo3:2888:3888\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	其中，dataDir指定Zookeeper的数据文件目录；其中server.id=host:port:port，id是为每个Zookeeper节点的编号，保存在dataDir目录下的myid文件中，zoo1~zoo3表示各个Zookeeper节点的hostname，第一个port是用于连接leader的端口，第二个port是用于leader选举的端口。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	5. 在dataDir目录下创建myid文件，文件中只包含一行，且内容为该节点对应的server.id中的id编号。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	6. 启动Zookeeper服务：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				java -cp zookeeper.jar:lib/log4j-1.2.15.jar:conf \\ org.apache.zookeeper.server.quorum.QuorumPeerMain zoo.cfg\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	或者\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				bin/zkServer.sh start<em></em>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	7. 通过Zookeeper客户端测试服务是否可用：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				java -cp zookeeper.jar:src/java/lib/log4j-1.2.15.jar:conf:src/java/lib/jline-0.9.94.jar \\ org.apache.zookeeper.ZooKeeperMain -server 127.0.0.1:2181\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	或者\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				bin/zkCli.sh -server 127.0.0.1:2181\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong><span style=\"color:#FF0000;\">注意事项：</span></strong>\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				<ol>\r\n					<li>\r\n						由于Zookeeper是快速失败（fail-fast)的，且遇到任何错误情况，进程均会退出，因此，最好能通过监控程序将Zookeeper管理起来，保证Zookeeper退出后能被自动重启。详情参考<a href=\"http://zookeeper.apache.org/doc/r3.3.3/zookeeperAdmin.html#sc_supervision\">这里</a>。\r\n					</li>\r\n					<li>\r\n						Zookeeper运行过程中会在dataDir目录下生成很多日志和快照文件，而Zookeeper运行进程并不负责定期清理合并这些文件，导致占用大量磁盘空间，因此，需要通过cron等方式定期清除没用的日志和快照文件。详情参考<a href=\"http://zookeeper.apache.org/doc/r3.3.3/zookeeperAdmin.html#sc_maintenance\">这里</a>。具体命令格式如下：java -cp zookeeper.jar:log4j.jar:conf org.apache.zookeeper.server.PurgeTxnLog &lt;dataDir&gt; &lt;snapDir&gt; -n &lt;count&gt;\r\n					</li>\r\n				</ol>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.2 安装Storm依赖库\r\n</h3>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	接下来，需要在Nimbus和Supervisor机器上安装Storm的依赖库，具体如下：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1.<a href=\"http://www.zeromq.org/area:download\">&nbsp;ZeroMQ 2.1.7</a>&nbsp;– 请勿使用2.1.10版本，因为该版本的一些严重bug会导致Storm集群运行时出现奇怪的问题。少数用户在2.1.7版本会遇到”IllegalArgumentException”的异常，此时降为2.1.4版本可修复这一问题。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2.&nbsp;<a href=\"http://github.com/nathanmarz/jzmq\">JZMQ</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	3. Java 6\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	4. Python 2.6.6\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	5. unzip\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	以上依赖库的版本是经过Storm测试的，Storm并不能保证在其他版本的Java或Python库下可运行。\r\n</p>\r\n<h4 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:14px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.2.1 安装ZMQ 2.1.7\r\n</h4>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下载后编译安装ZMQ：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n<pre>wget http://download.zeromq.org/zeromq-2.1.7.tar.gz\r\ntar -xzf zeromq-2.1.7.tar.gz\r\ncd zeromq-2.1.7\r\n./configure\r\nmake\r\nsudo make install</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong><span style=\"color:#FF0000;\">注意事项：</span></strong>\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n<pre>如果安装过程报错uuid找不到，则通过如下的包安装uuid库：\r\nsudo yum install e2fsprogsl\r\nsudo yum install e2fsprogs-devel</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h4 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:14px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.2.2 安装JZMQ\r\n</h4>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下载后编译安装JZMQ：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n<pre>git clone https://github.com/nathanmarz/jzmq.git\r\ncd jzmq\r\n./autogen.sh\r\n./configure\r\nmake\r\nsudo make install</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	为了保证JZMQ正常工作，可能需要完成以下配置：\r\n</p>\r\n<ol style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		正确设置 JAVA_HOME环境变量\r\n	</li>\r\n	<li>\r\n		安装Java开发包\r\n	</li>\r\n	<li>\r\n		升级autoconf\r\n	</li>\r\n	<li>\r\n		如果你是Mac OSX，参考<a href=\"http://blog.pmorelli.com/getting-zeromq-and-jzmq-running-on-mac-os-x\">这里</a>\r\n	</li>\r\n</ol>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong><span style=\"color:#FF0000;\">注意事项：</span></strong>\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				<ol>\r\n					<li>\r\n						如果运行 ./configure 命令出现问题，参考<a href=\"http://stackoverflow.com/questions/3522248/how-do-i-compile-jzmq-for-zeromq-on-osx\">这里</a>。\r\n					</li>\r\n				</ol>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h4 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:14px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.2.3 安装Java 6\r\n</h4>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 下载并安装JDK 6，参考<a href=\"http://www.oracle.com/technetwork/java/javase/index-137561.html#linux\">这里</a>；\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 配置JAVA_HOME环境变量；\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	3. 运行java、javac命令，测试java正常安装。\r\n</p>\r\n<h4 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:14px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.2.4 安装Python2.6.6\r\n</h4>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 下载Python2.6.6：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				wget http://www.python.org/ftp/python/2.6.6/Python-2.6.6.tar.bz2\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 编译安装Python2.6.6：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				tar –jxvf Python-2.6.6.tar.bz2<br />\r\ncd Python-2.6.6<br />\r\n./configure<br />\r\nmake<br />\r\nmake install\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	3. 测试Python2.6.6：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				python -V<br />\r\nPython 2.6.6\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h4 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:14px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.2.5 安装unzip\r\n</h4>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 如果使用RedHat系列Linux系统，执行以下命令安装unzip：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				yum install unzip\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 如果使用Debian系列Linux系统，执行以下命令安装unzip：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				apt-get install unzip\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.3 下载并解压Storm发布版本\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下一步，需要在Nimbus和Supervisor机器上安装Storm发行版本。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 下载Storm发行版本，推荐使用Storm0.8.1：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				wget https://github.com/downloads/nathanmarz/storm/storm-0.8.1.zip\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 解压到安装目录下：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				unzip storm-0.8.1.zip\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.4 修改storm.yaml配置文件\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm发行版本解压目录下有一个conf/storm.yaml文件，用于配置Storm。默认配置在<a href=\"https://github.com/nathanmarz/storm/blob/master/conf/defaults.yaml\">这里</a>可以查看。conf/storm.yaml中的配置选项将覆盖defaults.yaml中的默认配置。以下配置选项是必须在conf/storm.yaml中进行配置的：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1)&nbsp;<strong>storm.zookeeper.servers</strong>: Storm集群使用的Zookeeper集群地址，其格式如下：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				storm.zookeeper.servers:<br />\r\n- “111.222.333.444″<br />\r\n- “555.666.777.888″\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如果Zookeeper集群使用的不是默认端口，那么还需要<strong>storm.zookeeper.port</strong><strong>选项</strong>。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2)&nbsp;<strong>storm.local.dir</strong>: Nimbus和Supervisor进程用于存储少量状态，如jars、confs等的本地磁盘目录，需要提前创建该目录并给以足够的访问权限。然后在storm.yaml中配置该目录，如：\r\n</p>\r\n<table width=\"540\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n<pre>storm.local.dir: \"/home/admin/storm/workdir\"</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	3)&nbsp;<strong>java.library.path</strong>: Storm使用的本地库（ZMQ和JZMQ）加载路径，默认为”/usr/local/lib:/opt/local/lib:/usr/lib”，一般来说ZMQ和JZMQ默认安装在/usr/local/lib 下，因此不需要配置即可。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	4)&nbsp;<strong>nimbus.host</strong>: Storm集群Nimbus机器地址，各个Supervisor工作节点需要知道哪个机器是Nimbus，以便下载Topologies的jars、confs等文件，如：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n<pre>nimbus.host: \"111.222.333.444\"</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	5)&nbsp;<strong>supervisor.slots.ports</strong>: 对于每个Supervisor工作节点，需要配置该工作节点可以运行的worker数量。每个worker占用一个单独的端口用于接收消息，该配置选项即用于定义哪些端口是可被worker使用的。默认情况下，每个节点上可运行4个workers，分别在6700、6701、6702和6703端口，如：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n<pre>supervisor.slots.ports:\r\n&nbsp;&nbsp;&nbsp; - 6700\r\n&nbsp;&nbsp;&nbsp; - 6701\r\n&nbsp;&nbsp;&nbsp; - 6702\r\n&nbsp;&nbsp;&nbsp; - 6703</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	3.2.5 启动Storm各个后台进程\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	最后一步，启动Storm的所有后台进程。和Zookeeper一样，Storm也是快速失败（fail-fast)的系统，这样Storm才能在任意时刻被停止，并且当进程重启后被正确地恢复执行。这也是为什么Storm不在进程内保存状态的原因，即使Nimbus或Supervisors被重启，运行中的Topologies不会受到影响。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	以下是启动Storm各个后台进程的方式：\r\n</p>\r\n<ol style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Nimbus</strong>: 在Storm主控节点上运行”bin/storm nimbus &gt;/dev/null 2&gt;&amp;1 &amp;”启动Nimbus后台程序，并放到后台执行；\r\n	</li>\r\n	<li>\r\n		<strong>Supervisor</strong>: 在Storm各个工作节点上运行”bin/storm supervisor &gt;/dev/null 2&gt;&amp;1 &amp;”启动Supervisor后台程序，并放到后台执行；\r\n	</li>\r\n	<li>\r\n		<strong>UI</strong>: 在Storm主控节点上运行”bin/storm ui &gt;/dev/null 2&gt;&amp;1 &amp;”启动UI后台程序，并放到后台执行，启动后可以通过http://{nimbus host}:8080观察集群的worker资源使用情况、Topologies的运行状态等信息。\r\n	</li>\r\n</ol>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong><span style=\"color:#FF0000;\">注意事项：</span></strong>\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				<ol>\r\n					<li>\r\n						启动Storm后台进程时，需要对conf/storm.yaml配置文件中设置的storm.local.dir目录具有写权限。\r\n					</li>\r\n					<li>\r\n						Storm后台进程被启动后，将在Storm安装部署目录下的logs/子目录下生成各个进程的日志文件。\r\n					</li>\r\n					<li>\r\n						经测试，Storm UI必须和Storm Nimbus部署在同一台机器上，否则UI无法正常工作，因为UI进程会检查本机是否存在Nimbus链接。\r\n					</li>\r\n					<li>\r\n						为了方便使用，可以将bin/storm加入到系统环境变量中。\r\n					</li>\r\n				</ol>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	至此，Storm集群已经部署、配置完毕，可以向集群提交拓扑运行了。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	3.3 向集群提交任务\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1. 启动Storm Topology：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				storm jar allmycode.jar org.me.MyTopology arg1 arg2 arg3\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	其中，allmycode.jar是包含Topology实现代码的jar包，org.me.MyTopology的main方法是Topology的入口，arg1、arg2和arg3为org.me.MyTopology执行时需要传入的参数。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2. 停止Storm Topology：\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:5px 0px 10px;padding:0px;background-color:#FFFFFF;border:2px solid #CCCCCC;color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;font-size:12px;\">\r\n	<tbody>\r\n		<tr>\r\n			<td valign=\"top\" width=\"540\" style=\"border:1px solid #CCCCCC;vertical-align:top;\">\r\n				storm kill {toponame}\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	其中，{toponame}为Topology提交到Storm集群时指定的Topology任务名称。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	3.4 参考资料\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	1.&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Tutorial\">https://github.com/nathanmarz/storm/wiki/Tutorial</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	2.&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Setting-up-a-Storm-cluster\">https://github.com/nathanmarz/storm/wiki/Setting-up-a-Storm-cluster</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<em>作者：九翎</em>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<em>原文链接：<a href=\"http://blog.linezing.com/?p=1892\">http://blog.linezing.com/?p=1892</a></em>\r\n</p>',NULL,NULL,'2014-05-21 16:33:32',0,'Storm入门教程 第三章 Storm安装部署步骤',0),(90,'admin',6,'<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.1 简介\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	storm可以确保spout发送出来的每个消息都会被完整的处理。本章将会描述storm体系是如何达到这个目标的，并将会详述开发者应该如何使用storm的这些机制来实现数据的可靠处理。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span id=\"more-1898\"></span> \r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.2 理解消息被完整处理\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	一个消息(tuple)从spout发送出来，可能会导致成百上千的消息基于此消息被创建。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	我们来思考一下流式的“单词统计”的例子：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	storm任务从数据源（Kestrel queue）每次读取一个完整的英文句子；将这个句子分解为独立的单词，最后，实时的输出每个单词以及它出现过的次数。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	本例中，每个从spout发送出来的消息（每个英文句子）都会触发很多的消息被创建，那些从句子中分隔出来的单词就是被创建出来的新消息。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	这些消息构成一个树状结构，我们称之为“tuple tree”，看起来如图1所示：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x1.png\"><img class=\"size-full wp-image-1916 aligncenter\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x1.png\" alt=\"\" width=\"518\" height=\"354\" /></a> \r\n</p>\r\n<p align=\"center\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	图1 示例tuple tree\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	在什么条件下，Storm才会认为一个从spout发送出来的消息被完整处理呢？答案就是下面的条件同时被满足：\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		tuple tree不再生长\r\n	</li>\r\n</ul>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		树中的任何消息被标识为“已处理”\r\n	</li>\r\n</ul>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如果在指定的时间内，一个消息衍生出来的tuple tree未被完全处理成功，则认为此消息未被完整处理。这个超时值可以通过任务级参数<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/Config.html#TOPOLOGY_MESSAGE_TIMEOUT_SECS\">Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS</a> 进行配置，默认超时值为30秒。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.3 消息的生命周期\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如果消息被完整处理或者未被完整处理，Storm会如何进行接下来的操作呢？为了弄清这个问题，我们来研究一下从spout发出来的消息的生命周期。这里列出了spout应该实现的接口：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x11.png\"><img class=\"alignnone size-full wp-image-1919\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x11.png\" alt=\"\" width=\"558\" height=\"127\" /></a> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	首先， Storm使用spout实例的nextTuple()方法从spout请求一个消息（tuple）。 收到请求以后，spout使用open方法中提供的SpoutOutputCollector向它的输出流发送一个或多个消息。每发送一个消息，Spout会给这个消息提供一个message ID，它将会被用来标识这个消息。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	假设我们从kestrel队列中读取消息，Spout会将kestrel 队列为这个消息设置的ID作为此消息的message ID。 向SpoutOutputCollector中发送消息格式如下：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x12.png\"><img class=\"alignnone size-full wp-image-1920\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x12.png\" alt=\"\" width=\"535\" height=\"39\" /></a> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	接来下，这些消息会被发送到后续业务处理的bolts， 并且Storm会跟踪由此消息产生出来的新消息。当检测到一个消息衍生出来的tuple tree被完整处理后，Storm会调用Spout中的ack方法，并将此消息的messageID作为参数传入。同理，如果某消息处理超时，则此消息对应的Spout的fail方法会被调用，调用时此消息的messageID会被作为参数传入。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	注意：一个消息只会由发送它的那个spout任务来调用ack或fail。如果系统中某个spout由多个任务运行，消息也只会由创建它的spout任务来应答（ack或fail），决不会由其他的spout任务来应答。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	我们继续使用从kestrel队列中读取消息的例子来阐述高可靠性下spout需要做些什么(假设这个spout的名字是KestrelSpout)。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	我们先简述一下kestrel消息队列：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	当KestrelSpout从kestrel队列中读取一个消息，表示它“打开”了队列中某个消息。这意味着，此消息并未从队列中真正的删除，而是将此消息设置为“pending”状态，它等待来自客户端的应答，被应答以后，此消息才会被真正的从队列中删除。处于“pending”状态的消息不会被其他的客户端看到。另外，如果一个客户端意外的断开连接，则由此客户端“打开”的所有消息都会被重新加入到队列中。当消息被“打开”的时候，kestrel队列同时会为这个消息提供一个唯一的标识。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	KestrelSpout就是使用这个唯一的标识作为这个tuple的messageID的。稍后当ack或fail被调用的时候，KestrelSpout会把ack或者fail连同messageID一起发送给kestrel队列，kestrel会将消息从队列中真正删除或者将它重新放回队列中。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.4 可靠相关的API\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	为了使用Storm提供的可靠处理特性，我们需要做两件事情：\r\n</p>\r\n<ol style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		无论何时在tuple tree中创建了一个新的节点，我们需要明确的通知Storm；\r\n	</li>\r\n	<li>\r\n		当处理完一个单独的消息时，我们需要告诉Storm 这棵tuple tree的变化状态。\r\n	</li>\r\n</ol>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	通过上面的两步，storm就可以检测到一个tuple tree何时被完全处理了，并且会调用相关的ack或fail方法。Storm提供了简单明了的方法来完成上述两步。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	为tuple tree中指定的节点增加一个新的节点，我们称之为锚定（anchoring）。锚定是在我们发送消息的同时进行的。为了更容易说明问题，我们使用下面代码作为例子。本示例的bolt将包含整句话的消息分解为一系列的子消息，每个子消息包含一个单词。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x13.png\"><img class=\"alignnone size-full wp-image-1921\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x13.png\" alt=\"\" width=\"557\" height=\"233\" /></a> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	每个消息都通过这种方式被锚定：把输入消息作为emit方法的第一个参数。因为word消息被锚定在了输入消息上，这个输入消息是spout发送过来的tuple tree的根节点，如果任意一个word消息处理失败，派生这个tuple tree那个spout 消息将会被重新发送。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	与此相反，我们来看看使用下面的方式emit消息时，Storm会如何处理：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x14.png\"><img class=\"alignnone size-full wp-image-1922\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x14.png\" alt=\"\" width=\"473\" height=\"39\" /></a> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如果以这种方式发送消息，将会导致这个消息不会被锚定。如果此tuple tree中的消息处理失败，派生此tuple tree的根消息不会被重新发送。根据任务的容错级别，有时候很适合发送一个非锚定的消息。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	一个输出消息可以被锚定在一个或者多个输入消息上，这在做join或聚合的时候是很有用的。一个被多重锚定的消息处理失败，会导致与之关联的多个spout消息被重新发送。多重锚定通过在emit方法中指定多个输入消息来实现：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x16.png\"><img class=\"alignnone size-full wp-image-1925\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x16.png\" alt=\"\" width=\"558\" height=\"125\" /></a> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	多重锚定会将被锚定的消息加到多棵tuple tree上。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	注意：多重绑定可能会破坏传统的树形结构，从而构成一个DAGs（有向无环图），如图2所示：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x17.png\"><img class=\"wp-image-1926 aligncenter\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x17.png\" alt=\"\" width=\"321\" height=\"223\" /></a> \r\n</p>\r\n<p align=\"center\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	图2 多重锚定构成的钻石型结构\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm的实现可以像处理树那样来处理DAGs。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	锚定表明了如何将一个消息加入到指定的tuple tree中，高可靠处理API的接下来部分将向您描述当处理完tuple tree中一个单独的消息时我们该做些什么。这些是通过OutputCollector 的ack和fail方法来实现的。回头看一下例子SplitSentence，可以发现当所有的word消息被发送完成后，输入的表示句子的消息会被应答（acked）。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	每个被处理的消息必须表明成功或失败（acked 或者failed）。Storm是使用内存来跟踪每个消息的处理情况的，如果被处理的消息没有应答的话，迟早内存会被耗尽！&gt;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	很多bolt遵循特定的处理流程： 读取一个消息、发送它派生出来的子消息、在execute结尾处应答此消息。一般的过滤器（filter）或者是简单的处理功能都是这类的应用。Storm有一个BasicBolt接口封装了上述的流程。示例SplitSentence可以使用BasicBolt来重写：\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x18.png\"><img class=\"alignnone size-full wp-image-1927\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x18.png\" alt=\"\" width=\"558\" height=\"244\" /></a> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	使用这种方式，代码比之前稍微简单了一些，但是实现的功能是一样的。发送到BasicOutputCollector的消息会被自动的锚定到输入消息，并且，当execute执行完毕的时候，会自动的应答输入消息。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	很多情况下，一个消息需要延迟应答，例如聚合或者是join。只有根据一组输入消息得到一个结果之后，才会应答之前所有的输入消息。并且聚合和join大部分时候对输出消息都是多重锚定。然而，这些特性不是IBasicBolt所能处理的。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.5 高效的实现tuple tree\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm 系统中有一组叫做“acker”的特殊的任务，它们负责跟踪DAG（有向无环图）中的每个消息。每当发现一个DAG被完全处理，它就向创建这个根消息的spout任务发送一个信号。拓扑中acker任务的并行度可以通过配置参数<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/Config.html#TOPOLOGY_ACKERS\">Config.TOPOLOGY_ACKERS</a>来设置。默认的acker任务并行度为1，当系统中有大量的消息时，应该适当提高acker任务的并发度。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	为了理解Storm可靠性处理机制，我们从研究一个消息的生命周期和tuple tree的管理入手。当一个消息被创建的时候（无论是在spout还是bolt中），系统都为该消息分配一个64bit的随机值作为id。这些随机的id是acker用来跟踪由spout消息派生出来的tuple tree的。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	每个消息都知道它所在的tuple tree对应的根消息的id。每当bolt新生成一个消息，对应tuple tree中的根消息的messageId就拷贝到这个消息中。当这个消息被应答的时候，它就把关于tuple tree变化的信息发送给跟踪这棵树的acker。例如，他会告诉acker：本消息已经处理完毕，但是我派生出了一些新的消息，帮忙跟踪一下吧。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	举个例子，假设消息D和E是由消息C派生出来的，这里演示了消息C被应答时，tuple tree是如何变化的。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/x19.png\"><img class=\"alignnone size-full wp-image-1928\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/x19.png\" alt=\"\" width=\"558\" height=\"176\" /></a> \r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	因为在C被从树中移除的同时D和E会被加入到tuple tree中，因此tuple tree不会被过早的认为已完全处理。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	关于Storm如何跟踪tuple tree，我们再深入的探讨一下。前面说过系统中可以有任意个数的acker，那么，每当一个消息被创建或应答的时候，它怎么知道应该通知哪个acker呢？\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	系统使用一种哈希算法来根据spout消息的messageId确定由哪个acker跟踪此消息派生出来的tuple tree。因为每个消息都知道与之对应的根消息的messageId，因此它知道应该与哪个acker通信。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	当spout发送一个消息的时候，它就通知对应的acker一个新的根消息产生了，这时acker就会创建一个新的tuple tree。当acker发现这棵树被完全处理之后，他就会通知对应的spout任务。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	tuple是如何被跟踪的呢？系统中有成千上万的消息，如果为每个spout发送的消息都构建一棵树的话，很快内存就会耗尽。所以，必须采用不同的策略来跟踪每个消息。由于使用了新的跟踪算法，Storm只需要固定的内存（大约20字节）就可以跟踪一棵树。这个算法是storm正确运行的核心，也是storm最大的突破。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	acker任务保存了spout消息id到一对值的映射。第一个值就是spout的任务id，通过这个id，acker就知道消息处理完成时该通知哪个spout任务。第二个值是一个64bit的数字，我们称之为“ack val”， 它是树中所有消息的随机id的异或结果。ack val表示了整棵树的的状态，无论这棵树多大，只需要这个固定大小的数字就可以跟踪整棵树。当消息被创建和被应答的时候都会有相同的消息id发送过来做异或。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	每当acker发现一棵树的ack val值为0的时候，它就知道这棵树已经被完全处理了。因为消息的随机ID是一个64bit的值，因此ack val在树处理完之前被置为0的概率非常小。假设你每秒钟发送一万个消息，从概率上说，至少需要50,000,000年才会有机会发生一次错误。即使如此，也只有在这个消息确实处理失败的情况下才会有数据的丢失！\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.6 选择合适的可靠性级别\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Acker任务是轻量级的，所以在拓扑中并不需要太多的acker存在。可以通过Storm UI来观察acker任务的吞吐量，如果看上去吞吐量不够的话，说明需要添加额外的acker。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如果你并不要求每个消息必须被处理（你允许在处理过程中丢失一些信息），那么可以关闭消息的可靠处理机制，从而可以获取较好的性能。关闭消息的可靠处理机制意味着系统中的消息数会减半（每个消息不需要应答了）。另外，关闭消息的可靠处理可以减少消息的大小（不需要每个tuple记录它的根id了），从而节省带宽。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	有三种方法可以关系消息的可靠处理机制：\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		将参数Config.TOPOLOGY_ACKERS设置为0，通过此方法，当Spout发送一个消息的时候，它的ack方法将立刻被调用；\r\n	</li>\r\n	<li>\r\n		第二个方法是Spout发送一个消息时，不指定此消息的messageID。当需要关闭特定消息可靠性的时候，可以使用此方法；\r\n	</li>\r\n	<li>\r\n		最后，如果你不在意某个消息派生出来的子孙消息的可靠性，则此消息派生出来的子消息在发送时不要做锚定，即在emit方法中不指定输入消息。因为这些子孙消息没有被锚定在任何tuple tree中，因此他们的失败不会引起任何spout重新发送消息。\r\n	</li>\r\n</ul>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.7 集群的各级容错\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	到现在为止，大家已经理解了Storm的可靠性机制，并且知道了如何选择不同的可靠性级别来满足需求。接下来我们研究一下Storm如何保证在各种情况下确保数据不丢失。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	3.7.1 任务级失败\r\n</h3>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		因为bolt任务crash引起的消息未被应答。此时，acker中所有与此bolt任务关联的消息都会因为超时而失败，对应spout的fail方法将被调用。\r\n	</li>\r\n	<li>\r\n		acker任务失败。如果acker任务本身失败了，它在失败之前持有的所有消息都将会因为超时而失败。Spout的fail方法将被调用。\r\n	</li>\r\n	<li>\r\n		Spout任务失败。这种情况下，Spout任务对接的外部设备（如MQ）负责消息的完整性。例如当客户端异常的情况下，kestrel队列会将处于pending状态的所有的消息重新放回到队列中。\r\n	</li>\r\n</ul>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	4.7.2&nbsp; 任务槽(slot) 故障\r\n</h3>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		worker失败。每个worker中包含数个bolt（或spout）任务。supervisor负责监控这些任务，当worker失败后，supervisor会尝试在本机重启它。\r\n	</li>\r\n	<li>\r\n		supervisor失败。supervisor是无状态的，因此supervisor的失败不会影响当前正在运行的任务，只要及时的将它重新启动即可。supervisor不是自举的，需要外部监控来及时重启。\r\n	</li>\r\n	<li>\r\n		nimbus失败。nimbus是无状态的，因此nimbus的失败不会影响当前正在运行的任务（nimbus失败时，无法提交新的任务），只要及时的将它重新启动即可。nimbus不是自举的，需要外部监控来及时重启。\r\n	</li>\r\n</ul>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	4.7.3.&nbsp; 集群节点（机器）故障\r\n</h3>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		storm集群中的节点故障。此时nimbus会将此机器上所有正在运行的任务转移到其他可用的机器上运行。\r\n	</li>\r\n	<li>\r\n		zookeeper集群中的节点故障。zookeeper保证少于半数的机器宕机仍可正常运行，及时修复故障机器即可。\r\n	</li>\r\n</ul>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	4.8 小结\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	本章介绍了storm集群如何实现数据的可靠处理。借助于创新性的tuple tree跟踪技术，storm高效的通过数据的应答机制来保证数据不丢失。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	storm集群中除nimbus外，没有单点存在，任何节点都可以出故障而保证数据不会丢失。nimbus被设计为无状态的，只要可以及时重启，就不会影响正在运行的任务。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong>作者：</strong> \r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	太奇\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	原文链接：<a href=\"http://blog.linezing.com/?p=1898\">http://blog.linezing.com/?p=1898</a> \r\n</p>',NULL,'2014-05-22 00:02:33','2014-05-21 16:35:06',0,'Storm入门教程 第四章 消息的可靠处理',0),(91,'admin',6,'<h1 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:24px;color:#333333;background-color:#FFFFFF;\">\r\n	第五章 一致性事务\r\n</h1>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm是一个分布式的流处理系统，利用anchor和ack机制保证所有tuple都被成功处理。如果tuple出错，则可以被重传，但是如何保证出错的tuple只被处理一次呢？Storm提供了一套事务性组件Transaction Topology，用来解决这个问题。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<span id=\"more-1976\"></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Transactional Topology目前已经不再维护，由Trident来实现事务性topology，但是原理相同。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	5.1一致性事务的设计\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm如何实现即对tuple并行处理，又保证事务性。本节从简单的事务性实现方法入手，逐步引出Transactional Topology的原理。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	5.1.1 简单设计一：强顺序流\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	保证tuple只被处理一次，最简单的方法就是将tuple流变成强顺序的，并且每次只处理一个tuple。从1开始，给每个tuple都顺序加上一个id。在处理tuple的时候，将处理成功的tuple id和计算结果存在数据库中。下一个tuple到来的时候，将其id与数据库中的id做比较。如果相同，则说明这个tuple已经被成功处理过了，忽略它；如果不同，根据强顺序性，说明这个tuple没有被处理过，将它的id及计算结果更新到数据库中。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	以统计消息总数为例。每来一个tuple，如果数据库中存储的id 与当前tuple id不同，则数据库中的消息总数加1，同时更新数据库中的当前tuple id值。如图：\r\n</p>\r\n<p align=\"center\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/image0021.png\"><img src=\"http://blog.linezing.com/wp-content/uploads/2013/01/image0021.png\" alt=\"强顺序流\" width=\"335\" height=\"150\" /></a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 但是这种机制使得系统一次只能处理一个tuple，无法实现分布式计算。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	5.1.2 简单设计二：强顺序batch流\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	为了实现分布式，我们可以每次处理一批tuple，称为一个batch。一个batch中的tuple可以被并行处理。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	我们要保证一个batch只被处理一次，机制和上一节类似。只不过数据库中存储的是batch id。batch的中间计算结果先存在局部变量中，当一个batch中的所有tuple都被处理完之后，判断batch id，如果跟数据库中的id不同，则将中间计算结果更新到数据库中。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如何确保一个batch里面的所有tuple都被处理完了呢？可以利用Storm提供的CoordinateBolt。如图：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/image0041.png\"><img class=\"aligncenter size-full wp-image-1983\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/image0041.png\" alt=\"顺序batches\" width=\"553\" height=\"121\" /></a><a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/image0021.png\"><br />\r\n</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	但是强顺序batch流也有局限，每次只能处理一个batch，batch之间无法并行。要想实现真正的分布式事务处理，可以使用storm提供的Transactional Topology。在此之前，我们先详细介绍一下CoordinateBolt的原理。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	5.1.3 CoordinateBolt原理\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	CoordinateBolt具体原理如下：\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		真正执行计算的bolt外面封装了一个CoordinateBolt。真正执行任务的bolt我们称为real bolt。\r\n	</li>\r\n	<li>\r\n		每个CoordinateBolt记录两个值：有哪些task给我发送了tuple（根据topology的grouping信息）；我要给哪些tuple发送信息（同样根据groping信息）\r\n	</li>\r\n	<li>\r\n		&nbsp;Real bolt发出一个tuple后，其外层的CoordinateBolt会记录下这个tuple发送给哪个task了。\r\n	</li>\r\n	<li>\r\n		等所有的tuple都发送完了之后，CoordinateBolt通过另外一个特殊的stream以emitDirect的方式告诉所有它发送过tuple的task，它发送了多少tuple给这个task。下游task会将这个数字和自己已经接收到的tuple数量做对比，如果相等，则说明处理完了所有的tuple。\r\n	</li>\r\n	<li>\r\n		下游CoordinateBolt会重复上面的步骤，通知其下游。\r\n	</li>\r\n</ul>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	整个过程如图所示：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/image006.png\"><img class=\"aligncenter size-full wp-image-1984\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/image006.png\" alt=\"coordinateBolt\" width=\"554\" height=\"139\" /></a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	CoordinateBolt主要用于两个场景：\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		DRPC\r\n	</li>\r\n	<li>\r\n		Transactional Topology\r\n	</li>\r\n</ul>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	CoordinatedBolt对于业务是有侵入的，要使用CoordinatedBolt提供的功能，你必须要保证你的每个bolt发送的每个tuple的第一个field是request-id。 所谓的“我已经处理完我的上游”的意思是说当前这个bolt对于当前这个request-id所需要做的工作做完了。这个request-id在DRPC里面代表一个DRPC请求；在Transactional Topology里面代表一个batch。\r\n</p>\r\n<h3 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:16px;color:#333333;background-color:#FFFFFF;\">\r\n	5.1.4 Trasactional Topology\r\n</h3>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm提供的Transactional Topology将batch计算分为process和commit两个阶段。Process阶段可以同时处理多个batch，不用保证顺序性；commit阶段保证batch的强顺序性，并且一次只能处理一个batch，第1个batch成功提交之前，第2个batch不能被提交。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	还是以统计消息总数为例，以下代码来自storm-starter里面的TransactionalGlobalCount。\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	MemoryTransactionalSpout spout = new MemoryTransactionalSpout(<strong>DATA</strong>,new Fields(“<strong>word</strong>“),&nbsp;<strong>PARTITION_TAKE_PER_BATCH</strong>);\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	TransactionalTopologyBuilder builder =&nbsp;<strong>new&nbsp;</strong>TransactionalTopologyBuilder(“<strong>global-count</strong>“, “<strong>spout</strong>“, spout, 3);\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	builder.setBolt(“<strong>partial-count</strong>“,&nbsp;<strong>new</strong>&nbsp;BatchCount(), 5).noneGrouping(“<strong>spout</strong>“);\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	builder.setBolt(“<strong>sum</strong>“,&nbsp;<strong>new</strong>&nbsp;UpdateGlobalCount()).globalGrouping(“<strong>partial-count</strong>“);\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	TransactionalTopologyBuilder共接收四个参数。\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		这个Transactional Topology的id。Id用来在Zookeeper中保存当前topology的进度，如果这个topology重启，可以继续之前的进度执行。\r\n	</li>\r\n	<li>\r\n		&nbsp;Spout在这个topology中的id\r\n	</li>\r\n	<li>\r\n		一个TransactionalSpout。一个Trasactional Topology中只能有一个TrasactionalSpout.在本例中是一个MemoryTransactionalSpout，从一个内存变量（DATA）中读取数据。\r\n	</li>\r\n	<li>\r\n		TransactionalSpout的并行度（可选）。\r\n	</li>\r\n</ul>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下面是BatchCount的定义:\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong>public</strong>&nbsp;<strong>static</strong>&nbsp;<strong>class</strong>&nbsp;BatchCount&nbsp;<strong>extends</strong>&nbsp;BaseBatchBolt {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Object _id;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BatchOutputCollector _collector;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>int</strong>&nbsp;_count = 0;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;@Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;prepare(Map conf, TopologyContext context,\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BatchOutputCollector collector, Object id) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _collector = collector;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _id = id;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;@Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;execute(Tuple tuple) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _count++;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;finishBatch() {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _collector.emit(<strong>new</strong>&nbsp;Values(_id, _count));\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;declareOutputFields(OutputFieldsDeclarer declarer) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; declarer.declare(<strong>new</strong>&nbsp;Fields(“<strong>id</strong>“, “<strong>count</strong>“));\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	}\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;BatchCount的prepare方法的最后一个参数是batch id，在Transactional Tolpoloyg里面这id是一个TransactionAttempt对象。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Transactional Topology里发送的tuple都必须以TransactionAttempt作为第一个field，storm根据这个field来判断tuple属于哪一个batch。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	TransactionAttempt包含两个值：一个transaction id，一个attempt id。transaction id的作用就是我们上面介绍的对于每个batch中的tuple是唯一的，而且不管这个batch replay多少次都是一样的。attempt id是对于每个batch唯一的一个id， 但是对于同一个batch，它replay之后的attempt id跟replay之前就不一样了， 我们可以把attempt id理解成replay-times， storm利用这个id来区别一个batch发射的tuple的不同版本。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	execute方法会为batch里面的每个tuple执行一次，你应该把这个batch里面的计算状态保持在一个本地变量里面。对于这个例子来说， 它在execute方法里面递增tuple的个数。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	最后， 当这个bolt接收到某个batch的所有的tuple之后， finishBatch方法会被调用。这个例子里面的BatchCount类会在这个时候发射它的局部数量到它的输出流里面去。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下面是UpdateGlobalCount类的定义：\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong>public</strong>&nbsp;<strong>static</strong>&nbsp;<strong>class</strong>&nbsp;UpdateGlobalCount&nbsp;<strong>extends</strong>&nbsp;BaseTransactionalBolt\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<strong>implements</strong>&nbsp;ICommitter {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TransactionAttempt _attempt;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BatchOutputCollector _collector;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>int</strong>&nbsp;_sum = 0;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;@Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;prepare(<span style=\"text-decoration:underline;\">Map</span>&nbsp;conf, TopologyContext context,\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	BatchOutputCollector collector, TransactionAttempt attempt) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _collector = collector;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _attempt = attempt;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;execute(Tuple tuple) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _sum+=tuple.getInteger(1);\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;@Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;finishBatch() {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value val =&nbsp;<em>DATABASE</em>.get(<em>GLOBAL_COUNT_KEY</em>);\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value newval;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>if</strong>(val ==&nbsp;<strong>null</strong>&nbsp;|| !val.txid.equals(_attempt.getTransactionId())) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newval =&nbsp;<strong>new</strong>&nbsp;Value();\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newval.txid = _attempt.getTransactionId();\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>if</strong>(val==<strong>null</strong>) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newval.count = _sum;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;<strong>else</strong>&nbsp;{\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newval.count = _sum + val.count;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong><em>DATABASE</em></strong>.put(<em>GLOBAL_COUNT_KEY</em>, newval);\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;<strong>else</strong>&nbsp;{\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newval = val;\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _collector.emit(<strong>new</strong>&nbsp;Values(_attempt, newval.count));\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;@Override\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>public</strong>&nbsp;<strong>void</strong>&nbsp;declareOutputFields(OutputFieldsDeclarer declarer) {\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; declarer.declare(<strong>new</strong>&nbsp;Fields(“<strong>id</strong>“, “<strong>sum</strong>“));\r\n</p>\r\n<p align=\"left\" style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	}\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	UpdateGlobalCount实现了ICommitter接口，所以storm只会在commit阶段执行finishBatch方法。而execute方法可以在任何阶段完成。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	在UpdateGlobalCount的finishBatch方法中，将当前的transaction id与数据库中存储的id做比较。如果相同，则忽略这个batch；如果不同，则把这个batch的计算结果加到总结果中，并更新数据库。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Transactional Topolgy运行示意图如下：\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2013/01/image008.png\"><img class=\"aligncenter size-full wp-image-1985\" src=\"http://blog.linezing.com/wp-content/uploads/2013/01/image008.png\" alt=\"transactional topology\" width=\"554\" height=\"220\" /></a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下面总结一下Transactional Topology的一些特性\r\n</p>\r\n<ul style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		&nbsp;Transactional Topology将事务性机制都封装好了，其内部使用CoordinateBolt来保证一个batch中的tuple被处理完。\r\n	</li>\r\n	<li>\r\n		&nbsp;TransactionalSpout只能有一个，它将所有tuple分为一个一个的batch，而且保证同一个batch的transaction id始终一样。\r\n	</li>\r\n	<li>\r\n		&nbsp;BatchBolt处理batch在一起的tuples。对于每一个tuple调用execute方法，而在整个batch处理完成的时候调用finishBatch方法。\r\n	</li>\r\n	<li>\r\n		&nbsp;如果BatchBolt被标记成Committer，则只能在commit阶段调用finishBolt方法。一个batch的commit阶段由storm保证只在前一个batch成功提交之后才会执行。并且它会重试直到topology里面的所有bolt在commit完成提交。\r\n	</li>\r\n	<li>\r\n		&nbsp;Transactional Topology隐藏了anchor/ack框架，它提供一个不同的机制来fail一个batch，从而使得这个batch被replay。\r\n	</li>\r\n</ul>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', Georgia, \'Times New Roman\', Times, serif;font-size:20px;color:#333333;background-color:#FFFFFF;\">\r\n	5.2 Trident介绍\r\n</h2>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Trident是Storm之上的高级抽象，提供了joins，grouping，aggregations，fuctions和filters等接口。如果你使用过Pig或Cascading，对这些接口就不会陌生。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Trident将stream中的tuples分成batches进行处理，API封装了对这些batches的处理过程，保证tuple只被处理一次。处理batches中间结果存储在TridentState对象中。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Trident事务性原理这里不详细介绍，有兴趣的读者请自行查阅资料。\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	参考：<a href=\"http://xumingming.sinaapp.com/736/twitter-storm-transactional-topolgoy/\">http://xumingming.sinaapp.com/736/twitter-storm-transactional-topolgoy/</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<a href=\"http://xumingming.sinaapp.com/811/twitter-storm-code-analysis-coordinated-bolt/\">http://xumingming.sinaapp.com/811/twitter-storm-code-analysis-coordinated-bolt/</a>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	https://github.com/nathanmarz/storm/wiki/Trident-tutorial\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<em>作者：木晗</em>\r\n</p>\r\n<p style=\"color:#333333;font-family:\'Microsoft Yahei\', Tahoma, Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<i>原文链接：<a href=\"http://blog.linezing.com/?p=1976\">http://blog.linezing.com/?p=1976</a></i>\r\n</p>',NULL,NULL,'2014-05-21 16:36:01',0,'Storm入门教程 第五章 一致性事务',0),(92,'admin',6,'<p>\r\n	Hadoop（大数据分析领域无可争辩的王者）专注于批处理。这种模型对许多情形（比如为网页建立索引）已经足够，但还存在其他一些使用模型，它们需要来自高度动态的来源的实时信息。为了解决这个问题，就得借助 Nathan Marz 推出的 Storm（现在在 Twitter 中称为 BackType）。Storm 不处理静态数据，但它处理预计会连续的流数据。考虑到 Twitter 用户每天生成 1.4 亿条推文 (tweet)，那么就很容易看到此技术的巨大用途。\r\n</p>\r\n<p>\r\n	但 Storm 不只是一个传统的大数据分析系统：它是复杂事件处理 (CEP) 系统的一个示例。CEP 系统通常分类为计算和面向检测，其中每个系统都可通过用户定义的算法在 Storm 中实现。举例而言，CEP 可用于识别事件洪流中有意义的事件，然后实时地处理这些事件。\r\n</p>\r\n<p>\r\n	Nathan Marz 提供了在 Twitter 中使用 Storm 的大量示例。一个最有趣的示例是生成趋势信息。Twitter 从海量的推文中提取所浮现的趋势，并在本地和国家级别维护它们。这意味着当一个案例开始浮现时，Twitter 的趋势主题算法就会实时识别该主题。这种实时算法在 Storm 中实现为 Twitter 数据的一种连续分析。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	Storm 与传统的大数据\r\n</h2>\r\n<p>\r\n	Storm 与其他大数据解决方案的不同之处在于它的处理方式。Hadoop 在本质上是一个批处理系统。数据被引入 Hadoop 文件系统 (HDFS) 并分发到各个节点进行处理。当处理完成时，结果数据返回到 HDFS 供始发者使用。Storm 支持创建拓扑结构来转换没有终点的数据流。不同于 Hadoop 作业，这些转换从不停止，它们会持续处理到达的数据。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	大数据实现\r\n</h2>\r\n<p>\r\n	Hadoop 的核心是使用 Java™ 语言编写的，但支持使用各种语言编写的数据分析应用程序。最新的应用程序的实现采用了更加深奥的路线，以充分利用现代语言和它们的特性。例如，位于伯克利的加利福尼亚大学 (UC) 的 Spark 是使用 Scala 语言实现的，而 Twitter Storm 是使用 Clojure（发音同&nbsp;closure）语言实现的。\r\n</p>\r\n<p>\r\n	Clojure 是 Lisp 语言的一种现代方言。类似于 Lisp，Clojure 支持一种功能性编程风格，但 Clojure 还引入了一些特性来简化多线程编程（一种对创建 Storm 很有用的特性）。Clojure 是一种基于虚拟机 (VM) 的语言，在 Java 虚拟机上运行。但是，尽管 Storm 是使用 Clojure 语言开发的，您仍然可以在 Storm 中使用几乎任何语言编写应用程序。所需的只是一个连接到 Storm 的架构的适配器。已存在针对 Scala、JRuby、Perl 和 PHP 的适配器，但是还有支持流式传输到 Storm 拓扑结构中的结构化查询语言适配器。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	Storm 的关键属性\r\n</h2>\r\n<p>\r\n	Storm 实现的一些特征决定了它的性能和可靠性的。Storm 使用 ZeroMQ 传送消息，这就消除了中间的排队过程，使得消息能够直接在任务自身之间流动。在消息的背后，是一种用于序列化和反序列化 Storm 的原语类型的自动化且高效的机制。\r\n</p>\r\n<p>\r\n	Storm 的一个最有趣的地方是它注重容错和管理。Storm 实现了有保障的消息处理，所以每个元组都会通过该拓扑结构进行全面处理；如果发现一个元组还未处理，它会自动从喷嘴处重放。Storm 还实现了任务级的故障检测，在一个任务发生故障时，消息会自动重新分配以快速重新开始处理。Storm 包含比 Hadoop 更智能的处理管理，流程会由监管员来进行管理，以确保资源得到充分使用。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	Storm 模型\r\n</h2>\r\n<p>\r\n	Storm 实现了一种数据流模型，其中数据持续地流经一个转换实体网络（参见 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#fig1\">图 1</a>）。一个数据流的抽象称为一个流，这是一个无限的元组序列。元组就像一种使用一些附加的序列化代码来表示标准数据类型（比如整数、浮点和字节数组）或用户定义类型的结构。每个流由一个惟一 ID 定义，这个 ID 可用于构建数据源和接收器 (sink) 的拓扑结构。流起源于喷嘴，喷嘴将数据从外部来源流入 Storm 拓扑结构中。\r\n</p>\r\n<h5>\r\n	图 1. 一个普通的 Storm 拓扑结构的概念性架构\r\n</h5>\r\n<img alt=\"一个普通的 Storm 拓扑结构的概念性架构图\" src=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/figure1.gif\" width=\"340\" /> \r\n<p>\r\n	接收器（或提供转换的实体）称为螺栓。螺栓实现了一个流上的单一转换和一个 Storm 拓扑结构中的所有处理。螺栓既可实现 MapReduce 之类的传统功能，也可实现更复杂的操作（单步功能），比如过滤、聚合或与数据库等外部实体通信。典型的 Storm 拓扑结构会实现多个转换，因此需要多个具有独立元组流的螺栓。喷嘴和螺栓都实现为 Linux&reg; 系统中的一个或多个任务。\r\n</p>\r\n<p>\r\n	可使用 Storm 为词频轻松地实现 MapReduce 功能。如 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#fig2\">图 2</a> 中所示，喷嘴生成文本数据流，螺栓实现 Map 功能（令牌化一个流的各个单词）。来自 “map” 螺栓的流然后流入一个实现 Reduce 功能的螺栓中（以将单词聚合到总数中）。\r\n</p>\r\n<h5>\r\n	图 2. MapReduce 功能的简单 Storm 拓扑结构\r\n</h5>\r\n<img alt=\"MapReduce 功能的简单 Storm 拓扑结构图\" src=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/figure2.gif\" width=\"369\" /> \r\n<p>\r\n	请注意，螺栓可将数据传输到多个螺栓，也可接受来自多个来源的数据。Storm 拥有流分组&nbsp;的概念，流分组实现了混排 (shuffling)（随机但均等地将元组分发到螺栓）或字段分组（根据流的字段进行流分区）。还存在其他流分组，包括生成者使用自己的内部逻辑路由元组的能力。\r\n</p>\r\n<p>\r\n	但是，Storm 架构中一个最有趣的特性是有保障的消息处理。Storm 可保证一个喷嘴发射出的每个元组都会处理；如果它在超时时间内没有处理，Storm 会从该喷嘴重放该元组。此功能需要一些聪明的技巧来在拓扑结构中跟踪元素，也是 Storm 的重要的附加价值之一。\r\n</p>\r\n<p>\r\n	除了支持可靠的消息传送外，Storm 还使用 ZeroMQ 最大化消息传送性能（删除中间排队，实现消息在任务间的直接传送）。ZeroMQ 合并了拥塞检测并调整了它的通信，以优化可用的带宽。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	Storm 示例演示\r\n</h2>\r\n<p>\r\n	现在让我们通过实现一个简单的 MapReduce 拓扑结构的代码（参见 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#list1\">清单 1</a>），看一下 Storm 示例。这个示例使用了来自 Nathan 的 Storm 入门工具包（可从 GitHub 获取）（参见 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#resources\">参考资料</a> 获取链接）的巧妙设计的字数示例。此示例演示了 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#fig2\">图 2</a> 中所示的拓扑结构，它实现了一个包含一个螺栓的 map 转换和包含一个螺栓的 reduce 转换。\r\n</p>\r\n<h5>\r\n	清单 1. 为图 2 中的 Storm 构建一个拓扑结构\r\n</h5>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">01  TopologyBuilder builder = new TopologyBuilder();\r\n02          \r\n03  builder.setSpout(\"spout\", new RandomSentenceSpout(), 5);\r\n04          \r\n05  builder.setBolt(\"map\", new SplitSentence(), 4)\r\n06           .shuffleGrouping(\"spout\");\r\n07  \r\n08  builder.setBolt(\"reduce\", new WordCount(), 8)\r\n09           .fieldsGrouping(\"map\", new Fields(\"word\"));\r\n10  \r\n11  Config conf = new Config();\r\n12  conf.setDebug(true);\r\n13  \r\n14  LocalCluster cluster = new LocalCluster();\r\n15  cluster.submitTopology(\"word-count\", conf, builder.createTopology());\r\n16  \r\n17  Thread.sleep(10000);\r\n18  \r\n19  cluster.shutdown();</pre>\r\n</p>\r\n<p>\r\n	<a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#list1\">清单 1</a>（添加了行号以供引用）首先使用&nbsp;TopologyBuilder&nbsp;声明一个新拓扑结构。接下来在第 3 行，定义了一个喷嘴（名为&nbsp;spout），该喷嘴包含一个&nbsp;RandomSentenceSpout。RandomSentenceSpout&nbsp;类（也就是&nbsp;nextTuple&nbsp;方法）发出 5 个随机句子的其中一个作为它的数据。setSpout&nbsp;方法末尾的&nbsp;5&nbsp;参数是一个并行性提示（或要为此活动创建的任务数）。\r\n</p>\r\n<p>\r\n	在第 5 和 6 行。我定义了第一个螺栓（或算法转换实体），在本例中为 map（或 split）螺栓。这个螺栓使用&nbsp;SplitSentence&nbsp;令牌化输入流并将其作为输出的各个单词发出。请注意，第 6 行使用了&nbsp;shuffleGrouping，它定义了对此螺栓（在本例中为 “spout”）的输入订阅，还将流分组定义为混排。这种混排分组意味着来自喷嘴的输入将混排&nbsp;或随机分发给此螺栓中的任务（该螺栓已提示具有 4 任务并行性）。\r\n</p>\r\n<p>\r\n	在第 8 和 9 行，我定义了最后一个螺栓，这个螺栓实际上用于 reduce 元素，使用该元素的输入作为 map 螺栓。WordCount&nbsp;方法实现了必要的字数统计行为（将相似的单词分组到一起，以维护总数），但不是混排的，所以它的输出是一致的。如果有多个任务在实现 reduce 行为，那么您最终会得到分段的计数，而不是总数。\r\n</p>\r\n<p>\r\n	第 11 和 12 行创建和定义了一个配置对象并启用了 Debug 模式。Config&nbsp;类包含大量配置可能性（参见 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#resources\">参考资料</a>，获取有关 Storm 类树的更多信息的链接）。\r\n</p>\r\n<p>\r\n	第 14 和 15 行创建了本地集群（在本例中，用于定义本地模式的用途）。我定义了我的本地集群、配置对象和拓扑结构的名称（可通过builder&nbsp;类的&nbsp;createTopology&nbsp;元素获取）。\r\n</p>\r\n<p>\r\n	最后，在第 17 行，Storm 休眠一段时间，然后在第 19 行关闭集群。请记住，Storm 是一个持续运行的操作系统，所以任务可存在相当长时间，不断处理它们订阅的流上的新元组。\r\n</p>\r\n<p>\r\n	您可在 Storm 入门工具包中了解这个非常简单的实现的更多信息，包括喷嘴和螺栓的细节。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#ibm-pcon\">回页首</a> \r\n</p>\r\n<h2>\r\n	使用 Storm\r\n</h2>\r\n<p>\r\n	Nathan Marz 编写了一组简单易懂的文档，详细介绍了如何安装 Storm 来执行集群模式和本地模式的操作。本地模式无需一个庞大的节点集群，即可使用 Storm。如果需要在一个集群中使用 Storm 但缺乏节点，也可在 Amazon Elastic Compute Cloud (EC2) 中实现一个 Storm 集群。请参见 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#resources\">参考资料</a> 获取每个 Storm 模式（本地、集群和 Amazon EC2）的参考信息。\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	其他开源的大数据解决方案\r\n</h2>\r\n<p>\r\n	自 Google 在 2004 年推出 MapReduce 范式以来，已诞生了多个使用原始 MapReduce 范式（或拥有该范式的质量）的解决方案。Google 对 MapReduce 的最初应用是建立万维网的索引。尽管此应用程序仍然很流行，但这个简单模型解决的问题也正在增多。\r\n</p>\r\n<p>\r\n	<a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#table1\">表 1</a> 提供了一个可用开源大数据解决方案的列表，包括传统的批处理和流式处理应用程序。在将 Storm 引入开源之前将近一年的时间里，Yahoo! 的 S4 分布式流计算平台已向 Apache 开源。S4 于 2010 年 10 月发布，它提供了一个高性能计算 (HPC) 平台，向应用程序开发人员隐藏了并行处理的复杂性。S4 实现了一个可扩展的、分散化的集群架构，并纳入了部分容错功能。\r\n</p>\r\n<h5>\r\n	表 1. 开源大数据解决方案\r\n</h5>\r\n<table border=\"0\" class=\"ke-zeroborder\">\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				解决方案\r\n			</th>\r\n			<th>\r\n				开发商\r\n			</th>\r\n			<th>\r\n				类型\r\n			</th>\r\n			<th>\r\n				描述\r\n			</th>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				Storm\r\n			</td>\r\n			<td>\r\n				Twitter\r\n			</td>\r\n			<td>\r\n				流式处理\r\n			</td>\r\n			<td>\r\n				Twitter 的新流式大数据分析解决方案\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				S4\r\n			</td>\r\n			<td>\r\n				Yahoo!\r\n			</td>\r\n			<td>\r\n				流式处理\r\n			</td>\r\n			<td>\r\n				来自 Yahoo! 的分布式流计算平台\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				Hadoop\r\n			</td>\r\n			<td>\r\n				Apache\r\n			</td>\r\n			<td>\r\n				批处理\r\n			</td>\r\n			<td>\r\n				MapReduce 范式的第一个开源实现\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				Spark\r\n			</td>\r\n			<td>\r\n				UC Berkeley AMPLab\r\n			</td>\r\n			<td>\r\n				批处理\r\n			</td>\r\n			<td>\r\n				支持内存中数据集和恢复能力的最新分析平台\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				Disco\r\n			</td>\r\n			<td>\r\n				Nokia\r\n			</td>\r\n			<td>\r\n				批处理\r\n			</td>\r\n			<td>\r\n				Nokia 的分布式 MapReduce 框架\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				HPCC\r\n			</td>\r\n			<td>\r\n				LexisNexis\r\n			</td>\r\n			<td>\r\n				批处理\r\n			</td>\r\n			<td>\r\n				HPC 大数据集群\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<div>\r\n</div>\r\n<p>\r\n	<a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#ibm-pcon\">回页首</a> \r\n</p>\r\n<h2>\r\n	更多信息\r\n</h2>\r\n<p>\r\n	尽管 Hadoop 仍然是宣传最多的大数据分析解决方案，但仍可能存在许多其他的解决方案，每种解决方案都具有不同的特征。我在过去的文章中探讨了 Spark，它纳入了数据集的内存中处理功能（能够重新构建丢失的数据）。但 Hadoop 和 Spark 都专注于大数据集的批处理。Storm 提供了一个新的大数据分析模型，而且因为它最近被开源，所以也引起广泛的关注。\r\n</p>\r\n<p>\r\n	与 Hadoop 不同，Storm 是一个计算系统，它没有包括任何存储概念。这就使得 Storm 能够用在各种各样的上下文中，无论数据是从一个非传统来源动态传入，还是存储在数据库等存储系统中（或者由一个控制器用于对其他一些设备（比如一个交易系统）进行实时操作）都是如此。\r\n</p>\r\n<p>\r\n	请参见 <a href=\"https://www.ibm.com/developerworks/cn/opensource/os-twitterstorm/#resources\">参考资料</a> 获取有关 Storm 的更多信息的链接，了解如何让一个集群正常运行，以及其他大数据分析解决方案（包括批处理和流式处理）。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	参考资料\r\n</h2>\r\n<h3>\r\n	学习\r\n</h3>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://en.wikipedia.org/wiki/Complex_event_processing\">复杂事件处理</a> 是 Storm 以及其他许多解决方案（比如 Yahoo! 的 S4）实现的模式。Storm 与 S4 之间的一个重要区别在于，Storm 在面对故障时提供了有保障的消息处理，而 S4 可能丢失消息。\r\n	</li>\r\n	<li>\r\n		Nathan Marz（Storm 背后的重要开发人员）为他的新产品编写了多篇有趣且实用的介绍文章。对 Storm 的最早介绍来自 2011 年 5 月的 <a href=\"http://www.memonic.com/user/pneff/folder/queue/id/1qSgf\">Storm 预览：能够实时处理的 Hadoop - BackType Technology</a>，随后是 8 月推出的 <a href=\"http://engineering.twitter.com/2011/08/storm-is-coming-more-details-and-plans.html\">A Storm is coming: more details and plans for release</a>。\r\n	</li>\r\n	<li>\r\n		<a href=\"https://github.com/nathanmarz/storm/wiki\">Storm 维基</a> 提供了有关 Storm、它的理论基础的大量优秀文档，以及有关获取 Storm 和设置新项目的各种教程。您还将找到一些有关 Storm 的许多方面的实用文档，包括 Storm 在本地模式、集群模式和在 Amazon 上的使用。\r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.ibm.com/developerworks/cn/opensource/os-spark/\">Spark，一种快速数据分析替代方案</a>（M. Tim Jones，developerWorks，2011 年 11 月）介绍了 UC Berkeley 的内存中弹性数据分析平台。\r\n	</li>\r\n	<li>\r\n		<a href=\"http://www.ibm.com/developerworks/cn/linux/l-virtual-machine-architectures/\">应用程序虚拟化的过去与未来</a>（M. Tim Jones，developerWorks，2011 年 5 月）详细介绍了虚拟化在语言抽象方面的使用。Storm 使用基于虚拟机的语言 Clojure 来实现，还使用 Java 技术和许多其他语言来构建它的内部（螺栓）应用程序。\r\n	</li>\r\n	<li>\r\n		GitHub 上提供了 Storm 的一个 <a href=\"http://nathanmarz.github.com/storm/doc/index.html\">thorough class tree exists</a>，详细介绍了 Storm 的类和接口。\r\n	</li>\r\n	<li>\r\n		Hadoop 已开始解决简单批处理以外的模型。例如，通过调度，Hadoop 可调整其处理数据的方式，以便更多地关注交互性，而不是批量数据处理。在 <a href=\"http://www.ibm.com/developerworks/cn/opensource/os-hadoop-scheduling/\">Hadoop 中的调度</a>（M. Tim Jones，developerWorks，2011 年 12 月）中了解有关 Hadoop 调度的更多信息。\r\n	</li>\r\n	<li>\r\n		观看 <a href=\"http://www.ibm.com/developerworks/cn/offers/lp/demos/index.html\">developerWorks 演示中心</a>，包括面向初学者的产品安装和设置演示，以及为经验丰富的开发人员提供的高级功能。\r\n	</li>\r\n	<li>\r\n		随时关注 developerWorks <a href=\"http://www.ibm.com/developerworks/cn/offers/techbriefings/\">技术活动</a>和<a href=\"http://www.ibm.com/developerworks/cn/swi/\">网络广播</a>。\r\n	</li>\r\n	<li>\r\n		访问 developerWorks <a href=\"http://www.ibm.com/developerworks/cn/opensource/\">Open source 专区</a>获得丰富的 how-to 信息、工具和项目更新以及<a href=\"http://www.ibm.com/developerworks/cn/opensource/best2009/index.html\">最受欢迎的文章和教程</a>，帮助您用开放源码技术进行开发，并将它们与 IBM 产品结合使用。\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>',NULL,'2014-05-22 06:50:52','2014-05-22 00:09:43',0,'使用 Twitter Storm 处理实时的大数据',0),(93,'admin',6,'<p>\r\n	<span style=\"font-size:14px;\">虫洞系统是吸星大法项目衍生出来实时计算的基础平台。</span>\r\n</p>\r\n<div>\r\n	<span style=\"font-size:14px;\">它以storm实时流处理引擎为基础，提供了计算力、数据源整合、数据交换、监控几大功能模块。任务的权限控制正在筹划中。</span>\r\n	<div>\r\n		<span style=\"font-size:14px;\">这几个功能模块是此实时计算平台提供稳定运行的基础，虫洞系统承载的业务包括：月光宝盒、一淘首页个性化（实时用户个性化指标的计算）、吸星大法实时日志接入（数据源整合）。</span>\r\n	</div>\r\n</div>\r\n<div>\r\n</div>\r\n<div>\r\n	<a href=\"http://blog.linezing.com/wp-content/uploads/2012/12/chongdong3.png\"><img src=\"http://blog.linezing.com/wp-content/uploads/2012/12/chongdong3.png\" alt=\"\" width=\"702\" height=\"352\" /></a> \r\n</div>\r\n<div>\r\n</div>\r\n<div>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:14px;\">计算能力</span><br />\r\n<span style=\"font-size:14px;\"> 基于storm的流式处理任务可以直接运行在虫洞系统上，避免了搭建、维护集群的成本，极大的节约了业务的成本、提高了开发的效率和系统的稳定性</span>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<div>\r\n</div>\r\n<div>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:14px;\">数据源整合</span><br />\r\n<span style=\"font-size:14px;\"> 目前虫洞系统整合了多个实时数据源，这些数据源组合起来，可以实现完整的业务分析。 吸星大法实时数据接入将数据源接入、归一化，为使用方提供格式一致的数据，简化了日志使用的成本和难度。目前接入的主要数据源有：</span>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">– 全网Aplus日志</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">– 订单</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">– 支付宝交易</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">– 站外B2C</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">– 实时购物车、收藏夹等</span>\r\n</div>\r\n<div>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:14px;\">&nbsp; 数据交换</span><br />\r\n<span style=\"font-size:14px;\"> 基础日志经过归一化之后，根据业务场景需求，可以有两种方式来使用：</span>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">1) Hbase， 如果需要回溯历史数据，可以使用Hbase接口来访问</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">2）虫洞（动态端口）， 高效、便捷的数据交换形式，支持日志的横向和纵向任意裁剪，支持客户端的动态负载均衡；高容错性等很多特性</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">上述两种方式都提供了客户端sdk供使用</span>\r\n</div>\r\n<div>\r\n</div>\r\n<div>\r\n	<ul>\r\n		<li>\r\n			<span style=\"font-size:14px;\">监控系统</span><br />\r\n<span style=\"font-size:14px;\"> 监控系统是虫洞系统稳定运行的基础。它有两个主要功能： 1） storm task级状态的汇总 2）异常状态的报警，目前支持短信、旺旺报警</span>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">storm task级监控室为storm量身定做的监控系统，使得集群中不同机器间的状态统一监控，监控指标丰富、并且可自定义，是任务开发、调试、运维的利器。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">原文链接：http://blog.linezing.com/?p=1813</span>\r\n</p>',NULL,NULL,'2014-05-22 07:09:43',0,'基于storm引擎的虫洞系统',0),(94,'admin',6,'<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<h1 style=\"font-family:inherit;font-size:20px;font-style:inherit;vertical-align:baseline;\">\r\n		诞 生<br />\r\n	</h1>\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	在2011年Storm开源之前，由于Hadoop的火红，整个业界都在喋喋不休地谈论大数据。Hadoop的高吞吐，海量数据处理的能力使得人们可以方便地处理海量数据。但是，Hadoop的缺点也和它的优点同样鲜明——延迟大，响应缓慢，运维复杂。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	有需求也就有创造，在Hadoop基本奠定了大数据霸主地位的时候，很多的开源项目都是以弥补Hadoop的实时性为目标而被创造出来。而在这个节骨眼上Storm横空出世了。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	Storm带着流式计算的标签华丽丽滴出场了，看看它的一些卖点：\r\n</p>\r\n<ul style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<strong>分布式系统</strong>：可横向拓展,现在的项目不带个分布式特性都不好意思开源。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<strong>运维简单</strong>：Storm的部署的确简单。虽然没有Mongodb的解压即用那么简单，但是它也就是多安装两个依赖库而已。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<strong>高度容错</strong>：模块都是无状态的，随时宕机重启。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<strong>无数据丢失</strong>：Storm创新性提出的ack消息追踪框架和复杂的事务性处理,能够满足很多级别的数据处理需求。不过，越高的数据处理需求，性能下降越严重。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			<strong>多语言</strong>：实际上，Storm的多语言更像是临时添加上去似的。因为，你的提交部分还是要使用Java实现。\r\n		</p>\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			下面，我们简单地认识一下Storm这个产品。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<h1 style=\"font-family:inherit;font-size:20px;font-style:inherit;vertical-align:baseline;\">\r\n		认 识<br />\r\n	</h1>\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	Storm是一个免费开源、分布式、高容错的实时计算系统。Storm令持续不断的流计算变得容易，弥补了Hadoop批处理所不能满足的实时要求。Storm经常用于在实时分析、在线机器学习、持续计算、分布式远程调用和ETL等领域。Storm的部署管理非常简单，而且，在同类的流式计算工具，Storm的性能也是非常出众的。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	Storm主要分为两种组件Nimbus和Supervisor。这两种组件都是快速失败的，没有状态。任务状态和心跳信息等都保存在Zookeeper上的，提交的代码资源都在本地机器的硬盘上。\r\n</p>\r\n<ul style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Nimbus负责在集群里面发送代码，分配工作给机器，并且监控状态。全局只有一个。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Supervisor会监听分配给它那台机器的工作，根据需要启动/关闭工作进程Worker。每一个要运行Storm的机器上都要部署一个，并且，按照机器的配置设定上面分配的槽位数。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Zookeeper是Storm重点依赖的外部资源。Nimbus和Supervisor甚至实际运行的Worker都是把心跳保存在Zookeeper上的。Nimbus也是根据Zookeerper上的心跳和任务运行状况，进行调度和任务分配的。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Storm提交运行的程序称为Topology。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Topology处理的最小的消息单位是一个Tuple，也就是一个任意对象的数组。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Topology由Spout和Bolt构成。Spout是发出Tuple的结点。Bolt可以随意订阅某个Spout或者Bolt发出的Tuple。Spout和Bolt都统称为component。\r\n	</li>\r\n</ul>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<span id=\"more-2159\" style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;line-height:inherit;vertical-align:baseline;\"></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	下图是一个Topology设计的逻辑图的例子。\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<img src=\"http://tech.uc.cn/wp-content/uploads/2013/09/topology%E4%BE%8B%E5%AD%902.jpg\" alt=\"topology例子2\" width=\"390\" height=\"234\" class=\"alignnone size-full wp-image-2203\" border=\"1\" />\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	下图是Topology的提交流程图。\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<img src=\"http://tech.uc.cn/wp-content/uploads/2013/09/%E6%8F%90%E4%BA%A42.jpg\" alt=\"提交2\" width=\"520\" height=\"330\" class=\"alignnone size-full wp-image-2191\" border=\"1\" /> \r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	下图是Storm的数据交互图。可以看出两个模块Nimbus和Supervisor之间没有直接交互。状态都是保存在Zookeeper上。Worker之间通过ZeroMQ传送数据。\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<img src=\"http://tech.uc.cn/wp-content/uploads/2013/09/%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.png\" alt=\"数据流图\" width=\"520\" height=\"198\" class=\"alignnone size-large wp-image-2164\" border=\"1\" />\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	&nbsp;&nbsp;虽然，有些地方做得还是不太好，例如，底层使用的ZeroMQ不能控制内存使用(下个release版本，引入了新的消息机制使用netty代替ZeroMQ），多语言支持更多是噱头，Nimbus还不支持HA。但是，就像当年的Hadoop那样，很多公司选择它是因为它是唯一的选择。而这些先期使用者，反过来促进了Storm的发展。\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<h1 style=\"font-family:inherit;font-size:20px;font-style:inherit;vertical-align:baseline;\">\r\n		发 展<br />\r\n	</h1>\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	Storm已经发展到0.8.2版本了，看一下两年多来，它取得的成就：\r\n</p>\r\n<ul style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		有50个大大小小的公司在使用Storm，相信更多的不留名的公司也在使用。这些公司中不乏淘宝，百度，Twitter，Groupon，雅虎等重量级公司。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			从开源时候的0.5.0版本，到现在的0.8.0+，和即将到来的0.9.0+。先后添加了以下重大的新特性：\r\n		</p>\r\n		<ul style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n				使用kryo作为Tuple序列化的框架（0.6.0）\r\n			</li>\r\n			<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n				添加了Transactional topologies（事务性拓扑）的支持（0.7.0）\r\n			</li>\r\n			<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n				添加了Trident的支持（0.8.0）\r\n			</li>\r\n			<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n				引入netty作为底层消息机制（0.9.0）\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ul>\r\n<blockquote style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;font-style:italic;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		Transactional topologies和Trident都是针对实际应用中遇到的重复计数问题和应用性问题的解决方案。可以看出，实际的商用给予了Storm很多良好的反馈。\r\n	</p>\r\n</blockquote>\r\n<ul style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			在GitHub上超过4000个项目负责人。Storm集成了许多库，支持包括Kestrel、Kafka、JMS、Cassandra、Memcached以及更多系统。随着支持的库越来越多，Storm更容易与现有的系统协作。\r\n		</p>\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			Storm的拥有一个活跃的社区和一群热心的贡献者。过去两年，Storm的发展是成功的。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<h1 style=\"font-family:inherit;font-size:20px;font-style:inherit;vertical-align:baseline;\">\r\n		当 前<br />\r\n	</h1>\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	Storm被广泛应用于实时分析，在线机器学习，持续计算、分布式远程调用等领域。来看一些实际的应用:\r\n</p>\r\n<ul style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		一淘-<a href=\"http://www.searchtb.com/2012/11/pora.html\">实时分析系统pora</a>：实时分析用户的属性，并反馈给搜索引擎。最初，用户属性分析是通过每天在云梯上定时运行的MR job来完成的。为了满足实时性的要求，希望能够实时分析用户的行为日志，将最新的用户属性反馈给搜索引擎，能够为用户展现最贴近其当前需求的结果。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			携程-<a href=\"http://www.admin5.com/article/20130117/484692.shtml\">网站性能监控</a>：实时分析系统监控携程网的网站性能。利用HTML5提供的performance标准获得可用的指标，并记录日志。Storm集群实时分析日志和入库。使用DRPC聚合成报表，通过历史数据对比等判断规则，触发预警事件。\r\n		</p>\r\n		<blockquote style=\"font-family:inherit;font-style:italic;font-weight:inherit;vertical-align:baseline;\">\r\n			<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n				如果，业务场景中需要低延迟的响应，希望在秒级或者毫秒级完成分析、并得到响应，而且希望能够随着数据量的增大而拓展。那就可以考虑下，使用Storm了。\r\n			</p>\r\n		</blockquote>\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			试想下，如果，一个游戏新版本上线，有一个实时分析系统，收集游戏中的数据，运营或者开发者可以在上线后几秒钟得到持续不断更新的游戏监控报告和分析结果，然后马上针对游戏的参数和平衡性进行调整。这样就能够大大缩短游戏迭代周期，加强游戏的生命力（实际上，zynga就是这么干的！虽然使用的不是Storm……<a href=\"http://www.csdn.net/article/2011-08-26/303631\">Zynga研发之道探秘：用数据说话</a>）。\r\n		</p>\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			除了低延迟，Storm的Topology灵活的<strong>编程方式</strong>和<strong>分布式协调</strong>也会给我们带来方便。用户属性分析的项目，需要处理大量的数据。使用传统的MapReduce处理是个不错的选择。但是，处理过程中有个步骤需要根据分析结果，采集网页上的数据进行下一步的处理。这对于MapReduce来说就不太适用了。但是，Storm的Topology就能完美解决这个问题。基于这个问题，我们可以画出这样一个Storm的Topology的处理图。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<img src=\"http://tech.uc.cn/wp-content/uploads/2013/09/%E7%94%A8%E6%88%B7%E5%88%86%E8%AF%8D.jpg\" alt=\"用户分词\" width=\"411\" height=\"251\" class=\"alignnone size-full wp-image-2162\" border=\"1\" />\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	我们只需要实现每个分析的过程，而Storm帮我们把消息的传送和接受都完成了。更加激动人心的是，你只需要增加某个Bolt的并行度就能够解决掉某个结点上的性能瓶颈。\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<h1 style=\"font-family:inherit;font-size:20px;font-style:inherit;vertical-align:baseline;\">\r\n		未 来<br />\r\n	</h1>\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	在流式处理领域里，Storm的直接对手是S4。不过，S4冷淡的社区、半成品的代码，在实际商用方面输给Storm不止一条街。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	如果把范围扩大到实时处理，Storm就一点都不寂寞了。\r\n</p>\r\n<ul style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<strong>Puma</strong>：Facebook使用puma和Hbase相结合来处理实时数据,使批处理 计算平台具备一定实时能力。 不过这不算是一个开源的产品。只是内部使用。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<strong>HStreaming</strong>：尝试为Hadoop环境添加一个实时的组件HStreaming能让一个Hadoop平台在几天内转为一个实时系统。分商业版和免费版。也许HStreaming可以借Hadoop的东风，撼动Storm。\r\n	</li>\r\n	<li style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			<strong>Spark Streaming</strong>：作为UC Berkeley云计算software stack的一部分，Spark Streaming是建立在Spark上的应用框架，利用Spark的底层框架作为其执行基础，并在其上构建了DStream的行为抽象。利用DStream所提供的api，用户可以在数据流上实时进行count，join，aggregate等操作。\r\n		</p>\r\n		<p style=\"font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;vertical-align:baseline;\">\r\n			当然，Storm也有<strong>Yarn-Storm</strong>项目，能让Storm运行在Hadoop2.0的Yarn框架上，可以让Hadoop的MapReduce和Storm共享资源。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;text-align:center;\">\r\n	<h1 style=\"font-family:inherit;font-size:20px;font-style:inherit;vertical-align:baseline;\">\r\n		总 结<br />\r\n	</h1>\r\n</div>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	知乎上有一个挺好的问答： 问：实时处理系统（类似s4, storm）对比直接用MQ来做好处在哪里？&nbsp; 答：好处是它帮你做了： 1) 集群控制。2) 任务分配。3) 任务分发 4) 监控 等等。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	需要知道Storm不是一个完整的解决方案。使用Storm你需要加入消息队列做数据入口，考虑如何在流中保存状态，考虑怎样将大问题用分布式去解决。解决这些问题的成本可能比增加一个服务器的成本还高。但是，一旦下定决定使用了Storm并解决了那些恼人的细节，你就能享受到Storm给你带来的简单，可拓展等优势了。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	技术的发展日新月异，数据处理领域越来越多优秀的开源产品。Storm的过去是成功的，将来会如何发展，我们拭目以待吧。\r\n</p>\r\n<h3 style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:17px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	后记\r\n</h3>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	本文的重点是描述Storm的应用场景和未来的发展前景，让大家对Storm有一个初步的印象。如果，要落地使用的朋友，在网上可以找到很多优秀的Storm的技术文章。例如：Storm的核心贡献者<a href=\"http://xumingming.sinaapp.com/\">徐明明</a>的博客和淘宝关于storm的文章。\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, \'Lucida Grande\', sans-serif;font-size:13px;vertical-align:baseline;color:#555555;background-color:#FFFFFF;\">\r\n	原文链接：http://tech.uc.cn/?p=2159\r\n</p>',NULL,NULL,'2014-05-22 07:11:12',0,'Storm：最火的流式处理框架',0),(95,'admin',6,'<p>\r\n	本文首先介绍了Storm的基本概念和数据流模型，然后结合一个典型应用场景来说明Storm支持Topology之间数据流订阅的必要性，最后对比了Storm与另一个流处理系统在数据流模型上的区别之处。\r\n</p>\r\n<h1>\r\n	Storm基本概念\r\n</h1>\r\n<p>\r\n	Storm是一个开源的实时计算系统，它提供了一系列的基本元素用于进行计算：Topology、Stream、Spout、Bolt等等。\r\n</p>\r\n<p>\r\n	在Storm中，一个实时应用的计算任务被打包作为Topology发布，这同Hadoop的MapReduce任务相似。但是有一点不同的是：在Hadoop中，MapReduce任务最终会执行完成后结束；而在Storm中，Topology任务一旦提交后永远不会结束，除非你显示去停止任务。\r\n</p>\r\n<p>\r\n	计算任务Topology是由不同的Spouts和Bolts，通过数据流（Stream）连接起来的图。下面是一个Topology的结构示意图：\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915484075.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	其中包含有：\r\n</p>\r\n<p>\r\n	Spout：Storm中的消息源，用于为Topology生产消息（数据），一般是从外部数据源（如Message Queue、RDBMS、NoSQL、Realtime Log）不间断地读取数据并发送给Topology消息（tuple元组）。\r\n</p>\r\n<p>\r\n	Bolt：Storm中的消息处理者，用于为Topology进行消息的处理，Bolt可以执行过滤， 聚合， 查询数据库等操作，而且可以一级一级的进行处理。\r\n</p>\r\n<p>\r\n	最终，Topology会被提交到storm集群中运行；也可以通过命令停止Topology的运行，将Topology占用的计算资源归还给Storm集群。\r\n</p>\r\n<h1>\r\n	Storm数据流模型\r\n</h1>\r\n<p>\r\n	数据流（Stream）是Storm中对数据进行的抽象，它是时间上无界的tuple元组序列。在Topology中，Spout是Stream的源头，负责为Topology从特定数据源发射Stream；Bolt可以接收任意多个Stream作为输入，然后进行数据的加工处理过程，如果需要，Bolt还可以发射出新的Stream给下级Bolt进行处理。\r\n</p>\r\n<p>\r\n	下面是一个Topology内部Spout和Bolt之间的数据流关系：\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915492423.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	Topology中每一个计算组件（Spout和Bolt）都有一个并行执行度，在创建Topology时可以进行指定，Storm会在集群内分配对应并行度个数的线程来同时执行这一组件。\r\n</p>\r\n<p>\r\n	那么，有一个问题：既然对于一个Spout或Bolt，都会有多个task线程来运行，那么如何在两个组件（Spout和Bolt）之间发送tuple元组呢？\r\n</p>\r\n<p>\r\n	Storm提供了若干种数据流分发（Stream Grouping）策略用来解决这一问题。在Topology定义时，需要为每个Bolt指定接收什么样的Stream作为其输入（注：Spout并不需要接收Stream，只会发射Stream）。\r\n</p>\r\n<p>\r\n	目前Storm中提供了以下7种Stream Grouping策略：Shuffle Grouping、Fields Grouping、All Grouping、Global Grouping、Non Grouping、Direct Grouping、Local or shuffle grouping，具体策略可以参考<a href=\"https://github.com/nathanmarz/storm/wiki/Concepts\">这里</a>。\r\n</p>\r\n<h1>\r\n	一种Storm不能支持的场景\r\n</h1>\r\n<p>\r\n	以上介绍了一些Storm中的基本概念，可以看出，Storm中Stream的概念是Topology内唯一的，只能在Topology内按照“发布-订阅”方式在不同的计算组件（Spout和Bolt）之间进行数据的流动，而Stream在Topology之间是无法流动的。\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915521248.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	这一点限制了Storm在一些场景下的应用，下面通过一个简单的实例来说明。\r\n</p>\r\n<p>\r\n	假设现在有一个Topology1的结构如下：通过Spout产生数据流后，依次需要经过Filter Bolt，Join Bolt，Business1 Bolt。其中，Filter Bolt用于对数据进行过滤，Join Bolt用于数据流的聚合，Business1 Bolt用于进行一个实际业务的计算逻辑。\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915533193.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	目前这个Topology1已经被提交到Storm集群运行，而现在我们又有了新的需求，需要计算一个新的业务逻辑，而这个Topology的特点是和Topology1公用同样的数据源，而且前期的预处理过程完全一样（依次经历Filter Bolt和Join Bolt），那么这时候Storm怎么来满足这一需求？据个人了解，有以下几种“曲折”的实现方式：\r\n</p>\r\n<p>\r\n	1）&nbsp; 第一种方式：首先kill掉已经在集群中运行的Topology1计算任务，然后实现Business2 Bolt的计算逻辑，并重新打包形成一个新的Topology计算任务jar包后，提交到Storm集群中重新运行，这时候Storm内的整体Topology结构如下：\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915555198.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	这种方式的缺点在于：由于要重启Topology，所以如果Spout或Bolt有状态则会丢失掉；同时由于Topology结构发生了变化，因此重新运行Topology前需要对程序的稳定性、正确性进行验证；另外Topology结构的变化也会带来额外的运维开销。\r\n</p>\r\n<p>\r\n	2）&nbsp;&nbsp;第二种方式：完全开发部署一套新的Topology，其中前面的公共部分的Spout和Bolt可以直接复用，只需要重新开发新的计算逻辑Business2 Bolt来替换原有的Business1 Bolt即可。然后重新提交新的Topology运行。这时候Storm内的整体Topology结构如下：\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915575412.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	这种方式的缺点在于：由于两个Topology都会从External Data Source读取同一份数据，无疑增加了External Data Source的负载压力；而且会导致同样的数据在Storm集群内被传输相同的两份，被同样的计算单元Bolt进行处理，浪费了Storm的计算资源和网络传输带宽。假设现在不止有两个这样的Topology计算任务，而是有N个，那么对Storm的计算Slot的浪费很严重。\r\n</p>\r\n<p>\r\n	注意：上述两种方式还有一个公共的缺点——系统可扩展性不好，这意味着不管哪种方式，只要以后有这种新增业务逻辑的需求，都需要进行复杂的人工操作或线性的资源浪费现象。\r\n</p>\r\n<p>\r\n	3） 第三种方式：OK，看了以上两种方式后，也许你会提出下面的解决方案：通过Kafka这样的消息中间件，实现不同Topology的Spout共享数据源，而且这样可以做到消息可靠传输、消息rewind回传等，好处是对于Storm来说，已经有了<a href=\"https://github.com/nathanmarz/storm-contrib/tree/master/storm-kafka\">storm-kafka</a>插件的支持。这时候Storm内的整体Topology结构如下：\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012072915593195.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	这种实现方式可以通过引入一层消息中间件减少对External Data Source的重复访问的压力，而且可以通过消息中间件层，屏蔽掉External Data Source的细节，如果需要扩展新的业务逻辑，只需要重新部署运行新的Topology，应该说是现有<a href=\"https://github.com/nathanmarz/storm/tree/0.8.0\">Storm版本</a>下很好的实现方式了。不过消息中间件的引入，无疑将给系统带来了一定的复杂性，这对于Storm上的应用开发来说提高了门槛。\r\n</p>\r\n<p>\r\n	值得注意的是，方案三中仍遗留有一点问题没有解决：对于Storm集群来说，这种方式还是没有能够从根本上避免数据在Storm不同Topology内的重复发送与处理。这是由于Storm的数据流模型上的限制所导致的，如果Storm实现了不同Topology之间Stream的共享，那么这一问题也就迎刃而解了。\r\n</p>\r\n<h1>\r\n	一个流处理系统的数据流模型\r\n</h1>\r\n<p>\r\n	个人工作中有幸参与过一个流处理框架的开发与应用。下面我们来简单看看其中所采用的数据流模型：\r\n</p>\r\n<p>\r\n	<img src=\"http://pic002.cnblogs.com/images/2012/79962/2012073010184159.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	其中：\r\n</p>\r\n<p>\r\n	1）数据流（data stream）：时间分布和数量上无限的一系列数据记录的集合体；\r\n</p>\r\n<p>\r\n	2）数据记录（data record）：数据流的最小组成单元，每条数据记录包括 3 类数据：所属数据流名称（stream name）、用于路由的数据（keys）和具体数据处理逻辑所需的数据（value）；\r\n</p>\r\n<p>\r\n	3）数据处理任务定义（task definition）：定义一个数据处理任务的基本属性，无法直接被执行，必须特化为具体的任务实例。其基本属性包括：\r\n</p>\r\n<ul>\r\n	<li>\r\n		（可选）输入流（input stream）：描述该任务依赖哪些数据流作为输入，是一个数据流名称列表；数据流产生源不会依赖其他数据流，可忽略该配置；\r\n	</li>\r\n	<li>\r\n		数据处理逻辑（process logic）：描述该任务具体的处理逻辑，例如由独立进程进行的外部处理逻辑；\r\n	</li>\r\n	<li>\r\n		（可选）输出流（output stream）：描述该任务产生哪个数据流，是一个数据流名称；数据流处理链末级任务不会产生新的数据流，可忽略该配置；\r\n	</li>\r\n</ul>\r\n<p>\r\n	4）数据处理任务实例（task instance）：对一个数据处理任务定义进行具体约束后，可推送到某个处理结点上运行的逻辑实体。附加下列属性：\r\n</p>\r\n<ul>\r\n	<li>\r\n		数据处理任务定义：指向该任务实例对应的数据处理任务定义实体；\r\n	</li>\r\n	<li>\r\n		输入流过滤条件（input filting condition）：一个 boolean 表达式列表，描述每个输入流中符合什么条件的数据记录可以作为有效数据交给处理逻辑；若某个输入流中所有数据记录都是有效数据，则可直接用 true 表示；\r\n	</li>\r\n	<li>\r\n		（可选）强制输出周期（output interval）：描述以什么频率强制该任务实例产生输出流记录，可以用输入流记录个数或间隔时间作为周期；忽略该配置时，输出流记录产生周期完全由处理逻辑自身决定，不受框架约束；\r\n	</li>\r\n</ul>\r\n<p>\r\n	5）数据处理结点（node）：可容纳多个数据处理任务实例运行的实体机器，每个数据处理结点的IPv4地址必须保证唯一。\r\n</p>\r\n<p>\r\n	该分布式流处理系统由多个数据处理结点（node）组成；每个数据处理结点（node）上运行有多个数据任务实例（task instance）；每个数据任务实例（task instance）属于一个数据任务定义（task definition），任务实例是在任务定义的基础上，添加了输入流过滤条件和强制输出周期属性后，可实际推送到数据处理结点（node）上运行的逻辑实体；数据任务定义（task definition）包含输入数据流、数据处理逻辑以及输出数据流属性。\r\n</p>\r\n<p>\r\n	该系统中，通过分布式应用程序协调服务ZooKeeper集群存储以上数据流模型中的所有配置信息；不同的数据处理节点统一通过ZooKeeper集群获取数据流的配置信息后进行任务实例的运行与停止、数据流的流入和流出。\r\n</p>\r\n<p>\r\n	同时，每个数据处理任务可以接受流系统中已存在的任意数据流（data stream）作为输入，并产出新的任意名称的数据流（data stream），被其他结点上运行的任务实例订阅。不同结点之间对于各个数据流（data stream）的订阅关系，通过ZooKeeper集群来动态感知并负责通知流系统做出变化。\r\n</p>\r\n<h1>\r\n	二者在数据流模型上的不同之处\r\n</h1>\r\n<p>\r\n	至于两个系统的实现细节，我们先不去做具体比较，下面仅列出二者在数据流模型上的一些不同之处（这里并不是为了全面对比二者的不同之处，只是列出其中的关键部分）：\r\n</p>\r\n<p>\r\n	1）&nbsp; 在Storm中，数据流Stream是在Topology内进行定义，并在Topology内进行传输的；而在上面提到的流处理系统中，数据流Stream是在整个系统内全局唯一的，可以在整个集群内被订阅。\r\n</p>\r\n<p>\r\n	2）&nbsp; 在Storm中，数据流Stream的发布和订阅都是静态的，所谓静态是指数据流的发布与订阅关系在向Storm集群提交Topology计算任务时，被一次性生成的，这一关系在Topology的运行过程中是不能被改变的；而在上面提到的流处理系统中，数据流Stream的发布和订阅都是动态的，即数据处理任务task可以动态的发布Stream，也可以动态的订阅系统内已经生成的任意Stream，数据流的订阅关于通过分布式应用程序协调服务ZooKeeper集群的动态节点来维护管理。\r\n</p>\r\n<p>\r\n	有了以上的对比，我们不难发现，对于本文所举的应用场景实例，Storm的数据流模式尚不能很方便的支持，而在这里提到的这个流处理系统的全局数据流模型下，这一应用场景的需求可以很方便的满足。\r\n</p>\r\n<h1>\r\n	总结的话\r\n</h1>\r\n<p>\r\n	个人觉得，Storm有必要实现不同Topology之间Stream的共享，这个至少可以在不损失Storm现有功能的前提下，使得Storm在处理实际生产环境下的一些应用场景时更加从容应对。\r\n</p>\r\n<p>\r\n	至于如何在现有Storm的基础上实现这一需求，可能的方式很多。一种简单的方式是通过Zookeeper来集中存储、动态感知Topology之间Stream的“发布-订阅”关系，同时在Storm的消息分发过程中对这种情况加以处理。\r\n</p>\r\n<p>\r\n	以上观点，如果不对之处，欢迎大家指出。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	原文链接：<a href=\"http://www.cnblogs.com/panfeng412/archive/2012/07/29/storm-stream-model-analysis-and-discussion.html\">http://www.cnblogs.com/panfeng412/archive/2012/07/29/storm-stream-model-analysis-and-discussion.html</a>\r\n</p>',NULL,NULL,'2014-05-22 08:47:51',0,'Storm数据流模型的分析及讨论',0),(96,'admin',6,'<p align=\"left\" style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	流聚合（stream join）是指将具有共同元组（tuple）字段的数据流（两个或者多个）聚合形成一个新的数据流的过程。\r\n</p>\r\n<p align=\"left\" style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	从定义上看，流聚合和SQL中表的聚合（table join）很像，但是二者有明显的区别：table join的输入是有限的，并且join的语义是非常明确的；而流聚合的语义是不明确的并且输入流是无限的。\r\n</p>\r\n<p align=\"left\" style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	数据流的聚合类型跟具体的应用有关。一些应用把两个流发出的所有的tuple都聚合起来——不管多长时间；而另外一些应用则只会聚合一些特定的tuple。而另外一些应用的聚合逻辑又可能完全不一样。而这些聚合类型里面最常见的类型是把所有的输入流进行一样的划分，这个在storm里面用fields grouping在<strong>相同字段</strong>上进行grouping就可以实现。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	下面是对storm-starter（代码见：<a href=\"https://github.com/nathanmarz/storm-starter\">https://github.com/nathanmarz/storm-starter</a>）中有关两个流的聚合的示例代码剖析：\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	先看一下入口类<strong>SingleJoinExample</strong>。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	（1）这里首先创建了两个发射源spout，分别是genderSpout和ageSpout：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n<pre>        FeederSpout genderSpout = <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> FeederSpout(<span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> Fields(\"id\", \"gender\"<span style=\"line-height:1.5 !important;\">));\r\n        FeederSpout ageSpout </span>= <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> FeederSpout(<span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> Fields(\"id\", \"age\"<span style=\"line-height:1.5 !important;\">));\r\n        \r\n        TopologyBuilder builder </span>= <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span><span style=\"line-height:1.5 !important;\"> TopologyBuilder();\r\n        builder.setSpout(</span>\"gender\"<span style=\"line-height:1.5 !important;\">, genderSpout);\r\n        builder.setSpout(</span>\"age\", ageSpout);</pre>\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	其中genderSpout包含两个tuple字段：id和gender，ageSpout包含两个tuple字段：id和age（这里流聚合就是通过将相同id的tuple进行聚合，得到一个新的输出流，包含id、gender和age字段）。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	（2）为了不同的数据流中的同一个id的tuple能够落到同一个task中进行处理，这里使用了storm中的fileds grouping在id字段上进行分组划分：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n<pre>        builder.setBolt(\"join\", <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> SingleJoinBolt(<span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> Fields(\"gender\", \"age\"<span style=\"line-height:1.5 !important;\">)))\r\n                .fieldsGrouping(</span>\"gender\", <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> Fields(\"id\"<span style=\"line-height:1.5 !important;\">))\r\n                .fieldsGrouping(</span>\"age\", <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> Fields(\"id\"));</pre>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	从中可以看到，<strong>SingleJoinBolt</strong>就是真正进行流聚合的地方。下面我们来看看：\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	（1）SingleJoinBolt构造时接收一个Fileds对象，其中传进的是聚合后将要被输出的字段（这里就是gender和age字段），保存到变量_outFileds中。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	（2）接下来看看完成SingleJoinBolt的构造后，SingleJoinBolt在真正开始接收处理tuple之前所做的准备工作（代码见prepare方法）：\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	a）首先，将保存OutputCollector对象，创建TimeCacheMap对象，设置超时回调接口，用于tuple处理失败时fail消息；紧接着记录数据源的个数：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n<pre>        _collector =<span style=\"line-height:1.5 !important;\"> collector; </span><span style=\"color:#0000FF;line-height:1.5 !important;\">int</span> timeout =<span style=\"line-height:1.5 !important;\"> ((Number) conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)).intValue();\r\n        _pending </span>= <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> TimeCacheMap<list, map<globalstreamid,=\"\" tuple=\"\">&gt;(timeout, <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span><span style=\"line-height:1.5 !important;\"> ExpireCallback());\r\n        _numSources </span>= context.getThisSources().size();</list,></pre>\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	b）遍历TopologyContext中不同数据源，得到所有数据源（这里就是genderSpout和ageSpout）中公共的Filed字段，保存到变量_idFields中（例子中就是id字段），同时将_outFileds中字段所在数据源记录下来，保存到一张HashMap中_fieldLocations，以便聚合后获取对应的字段值。\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n<pre>        SetidFields = <span style=\"color:#0000FF;line-height:1.5 !important;\">null</span><span style=\"line-height:1.5 !important;\">; </span><span style=\"color:#0000FF;line-height:1.5 !important;\">for</span><span style=\"line-height:1.5 !important;\">(GlobalStreamId source: context.getThisSources().keySet()) {\r\n            Fields fields </span>=<span style=\"line-height:1.5 !important;\"> context.getComponentOutputFields(source.get_componentId(), source.get_streamId());\r\n            Set</span>setFields = <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> HashSet<span style=\"line-height:1.5 !important;\">(fields.toList()); </span><span style=\"color:#0000FF;line-height:1.5 !important;\">if</span>(idFields==<span style=\"color:#0000FF;line-height:1.5 !important;\">null</span>) idFields =<span style=\"line-height:1.5 !important;\"> setFields; </span><span style=\"color:#0000FF;line-height:1.5 !important;\">else</span><span style=\"line-height:1.5 !important;\"> idFields.retainAll(setFields); </span><span style=\"color:#0000FF;line-height:1.5 !important;\">for</span><span style=\"line-height:1.5 !important;\">(String outfield: _outFields) { </span><span style=\"color:#0000FF;line-height:1.5 !important;\">for</span><span style=\"line-height:1.5 !important;\">(String sourcefield: fields) { </span><span style=\"color:#0000FF;line-height:1.5 !important;\">if</span><span style=\"line-height:1.5 !important;\">(outfield.equals(sourcefield)) {\r\n                        _fieldLocations.put(outfield, source);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _idFields </span>= <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> Fields(<span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> ArrayList<span style=\"line-height:1.5 !important;\">(idFields)); </span><span style=\"color:#0000FF;line-height:1.5 !important;\">if</span>(_fieldLocations.size()!=<span style=\"line-height:1.5 !important;\">_outFields.size()) { </span><span style=\"color:#0000FF;line-height:1.5 !important;\">throw</span> <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> RuntimeException(\"Cannot find all outfields among sources\"<span style=\"line-height:1.5 !important;\">);\r\n        }</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	（3）好了，下面开始两个spout流的聚合过程了（代码见execute方法）：\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	首先，从tuple中获取_idFields字段，如果不存在于等待被处理的队列_pending中，则加入一行，其中key是获取到的_idFields字段，value是一个空的HashMap<globalstreamid, tuple=\"\">对象，记录GlobalStreamId到Tuple的映射。</globalstreamid,>\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n<pre>        Listid =<span style=\"line-height:1.5 !important;\"> tuple.select(_idFields);\r\n        GlobalStreamId streamId </span>= <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span><span style=\"line-height:1.5 !important;\"> GlobalStreamId(tuple.getSourceComponent(), tuple.getSourceStreamId()); </span><span style=\"color:#0000FF;line-height:1.5 !important;\">if</span>(!<span style=\"line-height:1.5 !important;\">_pending.containsKey(id)) {\r\n            _pending.put(id, </span><span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> HashMap<globalstreamid, tuple=\"\"><span style=\"line-height:1.5 !important;\">());            \r\n        }</span></globalstreamid,></pre>\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	从_pending队列中，获取当前GlobalStreamId streamId对应的HashMap对象parts中：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n<pre>        Map<globalstreamid, tuple=\"\"> parts = _pending.get(id);</globalstreamid,></pre>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	如果streamId已经包含其中，则抛出异常，接收到同一个spout中的两条一样id的tuple，否则将该streamid加入parts中：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n<pre>        <span style=\"color:#0000FF;line-height:1.5 !important;\">if</span>(parts.containsKey(streamId)) <span style=\"color:#0000FF;line-height:1.5 !important;\">throw</span> <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> RuntimeException(\"Received same side of single join twice\"<span style=\"line-height:1.5 !important;\">);\r\n        parts.put(streamId, tuple);</span></pre>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	如果parts已经包含了聚合数据源的个数_numSources时，从_pending队列中移除这条记录，然后开始构造聚合后的结果字段：依次遍历_outFields中各个字段，从_fieldLocations中取到这些outFiled字段对应的GlobalStreamId，紧接着从parts中取出GlobalStreamId对应的outFiled，放入聚合后的结果中。\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n<pre>        <span style=\"color:#0000FF;line-height:1.5 !important;\">if</span>(parts.size()==<span style=\"line-height:1.5 !important;\">_numSources) {\r\n            _pending.remove(id);\r\n            List</span>joinResult = <span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> ArrayList<span style=\"line-height:1.5 !important;\">(); </span><span style=\"color:#0000FF;line-height:1.5 !important;\">for</span><span style=\"line-height:1.5 !important;\">(String outField: _outFields) {\r\n                GlobalStreamId loc </span>=<span style=\"line-height:1.5 !important;\"> _fieldLocations.get(outField);\r\n                joinResult.add(parts.get(loc).getValueByField(outField));\r\n            }</span></pre>\r\n	<div class=\"cnblogs_code_toolbar\">\r\n		<span class=\"cnblogs_code_copy\" style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span> \r\n	</div>\r\n</div>\r\n<p align=\"left\" style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	最后通过_collector将parts中存放的tuple和聚合后的输出结果发射出去，并ack这些tuple已经处理成功。\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n<pre>            _collector.emit(<span style=\"color:#0000FF;line-height:1.5 !important;\">new</span> ArrayList<span style=\"line-height:1.5 !important;\">(parts.values()), joinResult); </span><span style=\"color:#0000FF;line-height:1.5 !important;\">for</span><span style=\"line-height:1.5 !important;\">(Tuple part: parts.values()) {\r\n                _collector.ack(part);\r\n            }\r\n　　　　} </span></pre>\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	否则，继续等待两个spout流中这个streamid都到齐后再进行聚合处理。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	（4）最后，声明一下输出字段（代码见declareOutputFields方法）：\r\n</p>\r\n<div class=\"cnblogs_code\" style=\"background-color:#F5F5F5;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:\'Courier New\' !important;\">\r\n<pre>　　　　declarer.declare(_outFields);</pre>\r\n</div>\r\n原文链接：http://www.cnblogs.com/panfeng412/archive/2012/06/04/storm-common-patterns-of-stream-join.html',NULL,'2014-05-22 08:50:03','2014-05-22 08:49:04',0,'Storm常见模式——流聚合',0),(97,'admin',6,'<p>\r\n	<span style=\"font-size:14px;\">作者:&nbsp;</span><a href=\"http://xumingming.sinaapp.com/\"><span style=\"font-size:14px;\">xumingming</span></a><span style=\"font-size:14px;\">&nbsp;| 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明</span><br />\r\n	<p>\r\n		<span style=\"font-size:14px;\"> 网址:&nbsp;</span><span style=\"font-size:14px;\"><a href=\"http://xumingming.sinaapp.com/1007/storm-new-messaging-merchanism/\">http://xumingming.sinaapp.com/1007/storm-new-messaging-merchanism/</a></span>\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Storm 0.9 里面引入了新的消息传输机制，在这之前消息传输机制是写死的用的 ZeroMQ, 而在 Storm 发展的过程中发现 ZeroMQ(JZMQ) 存在一些问题，比如 ZeroMQ 本身是 C 实现的，所使用的内存不受 Java 的控制，是的我们没有办法通过-Xmx 参数来调节 Storm 的内存使用；ZeroMQ 对于 Storm 来说有点黑盒的感觉，因此 Storm 想要获得的一些信息比如有多少消息被 buffer 了没有发送出去是获得不了的；而也因为 ZeroMQ 是非 Java 实现的，使得 Storm 的安装过程复杂了一些。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">新引入的消息传输机制使得消息传输机制是可以被配置替换的，这意味着我们不必被捆绑于某种具体的传输机制比如 ZeroMQ，来自 Yahoo 的 Andy Feng 实现了一个基于 Netty 的纯 Java 的消息传输机制。虽然说消息传输机制是可以被替换的，但是要实现一个可用的消息传输层还是需要满足一些条件的，以满足 Storm 的语意：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">消息发送方可以在连接建立之前发送消息，而不需要等连接建立起来，因为这时候消息接收方可能还没有运行起来。因此这就需要在消息传输的 Client 端有个 buffer，在连接没有建立之前把要发送的消息 buffer 起来。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">在消息传输层，消息『最多只能发送一次』，因为在 Storm 层面有 ACK 机制来保证没有被发送成功的消息会被重发，如果传输层面自己再重发，会导致消息被发多次。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">新的消息传输机制由两个接口来定义 backtype.storm.messaging.IContext 和 backtype.storm.messaging.IConnection。IContext 负责客户端和服务器端连接的建立，主要定义了四个方法:</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">prepare(Map stormConf) — &nbsp;遵从 Storm 的风格定义的 prepare 方法，可以把 storm 的配置接收进来</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">term() — term 是 terminate 的意思，这个方法会在 worker 卸载这个消息传输插件的时候调用，我们实现的时候可以在这里释放占用的资源、链接之类的。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">bind(String topologyId, int port) — 建立一个服务器端的连接</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">connect(String stormId, String host, int port) — 建立一个客户端的连接</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">IConnection 则定义了在其上发送、接受数据的接口:</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">recv(int flag) — 接收消息</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">send(int taskId, byte[] payload) — &nbsp;发送消息</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">close() — 该连接关闭的时候调用以释放资源之类的</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">因为消息传输插件是可插拔的，不是核心代码的一部分，因此 使用 netty 实现的传输插件被放在了一个单独目录里面，Storm 整个的源代码结构也从原来的单一项目变成了多项目(你可以在 Storm 源码里面找到多个 project.clj)。因为是基于 netty 的，绝大部分关于消息传输的事情 netty 已经都搞定了，因此 &nbsp;storm-netty 的实现非常的简单，有兴趣的可以打开源码研究一下。</span>\r\n</p>',NULL,NULL,'2014-05-22 13:02:28',0,'Storm 的新消息传输机制',0),(98,'admin',6,'<div>\r\n	<span style=\"font-size:14px;\">作者:&nbsp;</span><a href=\"http://xumingming.sinaapp.com/\"><span style=\"font-size:14px;\">xumingming</span></a><span style=\"font-size:14px;\">&nbsp;| 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明</span><br />\r\n<span style=\"font-size:14px;\"> 网址:&nbsp;</span><a href=\"http://xumingming.sinaapp.com/109/twitter-storm%E7%AE%80%E4%BB%8B/\"><span style=\"font-size:14px;\">http://xumingming.sinaapp.com/109/twitter-storm简介/</span></a> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 本文翻译自storm官方wiki: &nbsp;</span><a href=\"https://github.com/nathanmarz/storm/wiki/Rationale\"><span style=\"font-size:14px;\">https://github.com/nathanmarz/storm/wiki/Rationale</span></a> \r\n</p>\r\n<h2>\r\n	<span style=\"font-size:14px;\">背景</span>\r\n</h2>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:14px;\">过去的十年是数据处理变革的十年， MapReduce, Hadoop以及一些相关的技术使得我们能处理的数据量比以前要大得多得多。但是这些数据处理技术都不是实时的系统 — 它们设计的目的也不是为了实时计算。没有什么办法可以简单地把hadoop变成一个实时计算系统。实时数据处理系统和批量数据处理系统在需求上有着本质的差别。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">然而大规模的实时数据处理已经越来越成为一种业务需求了， 而缺少一个“实时版本的hadoop”已经成为数据处理整个生态系统的一个巨大缺失。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">Storm填补了这个缺失。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">Storm出现之前，你可能需要自己手动维护一个由消息队列和消息处理者所组成的实时处理网络， 消息处理者从消息队列取出一个消息进行处理， 更新数据库，发送消息给其它队列， 等等等等。不幸的是，这种方式有以下几个缺陷：</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">1.&nbsp;单调乏味： 你花费了绝大部分开发时间去配置把消息发送到哪里， 部署消息处理者，部署中间消息节点 — 你的大部分时间花在设计， 配置这个数据处理框架上， 而你真正关心的消息处理逻辑在你的代码里面占的比例很少。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">2.&nbsp;脆弱： 不够健壮， 你要自己写代码保证所有的消息处理者和消息队列正常运行。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">3.&nbsp;伸缩性差： 当一个消息处理者的消息量达到阀值，你需要对这些数据进行分流， 你需要配置这些新的处理者以让他们处理分流的消息。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">虽然对于一个大量消息处理系统来说，分解到最后就是消息队列和消息处理者的组合，而消息处理无疑是实时计算的基础。那么现在问题就是：怎样去做才能不丢失数据，可以很好的扩展到更大的消息量并且非常容易操作呢？</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">Storm满足你的需求。</span>\r\n	</p>\r\n	<h2>\r\n		<span style=\"font-size:14px;\">为什么我们说Storm很重要呢？</span>\r\n	</h2>\r\n	<p>\r\n		<span style=\"font-size:14px;\">Storm定义了一批实时计算的原语。如同hadoop大大简化了并行批量数据处理，storm的这些原语大大简化了并行实时数据处理。storm的一些关键特性如下：</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">1.&nbsp;适用场景广泛： storm可以用来处理消息和更新数据库(消息流处理), &nbsp;对一个数据量进行持续的查询并返回客户端（持续计算）， 对一个耗资源的查询作实时并行化的处理(分布式方法调用）， storm的这些基础原语可以满足大量的场景。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">2.&nbsp;可伸缩性高: &nbsp;Storm的可伸缩性可以让storm每秒可以处理的消息量达到很高。为了扩展一个实时计算任务，你所需要做的就是加机器并且提高这个计算任务的并行度设置(parallelism setting)。作为Storm可伸缩性的一个例证， 一个Storm应用在一个10个节点的集群上每秒处理1000000个消息 — 包括每秒一百多次的数据库调用。Storm使用ZooKeeper来协调集群内的各种配置使得Storm的集群可以很容易的扩展很大。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">3.&nbsp;保证无数据丢失： 实时系统必须保证所有的数据被成功的处理。 那些会丢失数据的系统的适用场景非常窄， 而storm保证每一条消息都会被处理， 这一点和S4相比有巨大的反差。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">4.&nbsp;异常健壮： 不像Hadoop — 出了名的难管理， storm集群非常容易管理。容易管理是storm的设计目标之一。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">5.&nbsp;容错性好：如果在消息处理过程中出了一些异常， storm会重新安排这个出问题的处理逻辑。 storm保证一个处理逻辑永远运行 — 除非你显式杀掉这个处理逻辑。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">6.&nbsp;语言无关性： 健壮性和可伸缩性不应该局限于一个平台。Storm的topology和消息处理组件可以用任何语言来定义， 这一点使得任何人都可以使用storm.</span>\r\n	</p>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>',NULL,NULL,'2014-05-22 13:03:41',0,'Twitter Storm简介',0),(99,'admin',6,'<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>场景</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	伴随着信息科技日新月异的发展，信息呈现出爆发式的膨胀，人们获取信息的途径也更加多样、更加便捷，同时对于信息的时效性要求也越来越高。举个搜索场景中的例子，当一个卖家发布了一条宝贝信息时，他希望的当然是这个宝贝马上就可以被卖家搜索出来、点击、购买啦，相反，如果这个宝贝要等到第二天或者更久才可以被搜出来，估计这个大哥就要骂娘了。再举一个推荐的例子，如果用户昨天在淘宝上买了一双袜子，今天想买一副泳镜去游泳，但是却发现系统在不遗余力地给他推荐袜子、鞋子，根本对他今天寻找泳镜的行为视而不见，估计这哥们心里就会想推荐你妹呀。其实稍微了解点背景知识的码农们都知道，这是因为后台系统做的是每天一次的全量处理，而且大多是在夜深人静之时做的，那么你今天白天做的事情当然要明天才能反映出来啦。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>实现一个实时计算系统</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	全量数据处理使用的大多是鼎鼎大名的hadoop或者hive，作为一个批处理系统，hadoop以其吞吐量大、自动容错等优点，在海量数据处理上得到了广泛的使用。但是，hadoop不擅长实时计算，因为它天然就是为批处理而生的，这也是业界一致的共识。否则最近这两年也不会有s4,storm,puma这些实时计算系统如雨后春笋般冒出来啦。先抛开s4,storm,puma这些系统不谈，我们首先来看一下，如果让我们自己设计一个实时计算系统，我们要解决哪些问题。\r\n</p>\r\n<ol style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		低延迟。都说了是实时计算系统了，延迟是一定要低的。\r\n	</li>\r\n	<li>\r\n		高性能。性能不高就是浪费机器，浪费机器是要受批评的哦。\r\n	</li>\r\n	<li>\r\n		分布式。系统都是为应用场景而生的，如果你的应用场景、你的数据和计算单机就能搞定，那么不用考虑这些复杂的问题了。我们所说的是单机搞不定的情况。\r\n	</li>\r\n	<li>\r\n		可扩展。伴随着业务的发展，我们的数据量、计算量可能会越来越大，所以希望这个系统是可扩展的。\r\n	</li>\r\n	<li>\r\n		容错。这是分布式系统中通用问题。一个节点挂了不能影响我的应用。\r\n	</li>\r\n</ol>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	好，如果仅仅需要解决这5个问题，可能会有无数种方案，而且各有千秋，随便举一种方案，使用消息队列+分布在各个机器上的工作进程就ok啦。我们再继续往下看。\r\n</p>\r\n<ol style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		容易在上面开发应用程序。亲，你设计的系统需要应用程序开发人员考虑各个处理组件的分布、消息的传递吗？如果是，那有点麻烦啊，开发人员可能会用不好，也不会想去用。\r\n	</li>\r\n	<li>\r\n		消息不丢失。用户发布的一个宝贝消息不能在实时处理的时候给丢了，对吧？更严格一点，如果是一个精确数据统计的应用，那么它处理的消息要不多不少才行。这个要求有点高哦。\r\n	</li>\r\n	<li>\r\n		消息严格有序。有些消息之间是有强相关性的，比如同一个宝贝的更新和删除操作消息，如果处理时搞乱顺序完全是不一样的效果了。\r\n	</li>\r\n</ol>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	不知道大家对这些问题是否都有了自己的答案，下面让我们带着这些问题，一起来看一看storm的解决方案吧。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Storm是什么</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	如果只用一句话来描述storm的话，可能会是这样：分布式实时计算系统。按照storm作者的说法，storm对于实时计算的意义类似于hadoop对于批处理的意义。我们都知道，根据google mapreduce来实现的hadoop为我们提供了map, reduce原语，使我们的批处理程序变得非常地简单和优美。同样，storm也为实时计算提供了一些简单优美的原语。我们会在第三节中详细介绍。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	我们来看一下storm的适用场景。\r\n</p>\r\n<ol style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		流数据处理。Storm可以用来处理源源不断流进来的消息，处理之后将结果写入到某个存储中去。\r\n	</li>\r\n	<li>\r\n		分布式rpc。由于storm的处理组件是分布式的，而且处理延迟极低，所以可以作为一个通用的分布式rpc框架来使用。当然，其实我们的搜索引擎本身也是一个分布式rpc系统。\r\n	</li>\r\n</ol>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	说了半天，好像都是很玄乎的东西，下面我们开始具体讲解storm的基本概念和它内部的一些实现原理吧。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Storm的基本概念</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	首先我们通过一个 storm 和hadoop的对比来了解storm中的基本概念。\r\n</p>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"margin:2px;padding:0px;color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;\">\r\n	<tbody>\r\n		<tr>\r\n			<td width=\"157\" valign=\"top\">\r\n				<strong></strong>\r\n			</td>\r\n			<td width=\"165\" valign=\"top\">\r\n				<strong>Hadoop</strong>\r\n			</td>\r\n			<td width=\"162\" valign=\"top\">\r\n				<strong>Storm</strong>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td rowspan=\"3\" width=\"157\" valign=\"top\">\r\n				系统角色\r\n			</td>\r\n			<td width=\"165\" valign=\"top\">\r\n				JobTracker\r\n			</td>\r\n			<td width=\"162\" valign=\"top\">\r\n				Nimbus\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td width=\"165\" valign=\"top\">\r\n				TaskTracker\r\n			</td>\r\n			<td width=\"162\" valign=\"top\">\r\n				Supervisor\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td width=\"165\" valign=\"top\">\r\n				Child\r\n			</td>\r\n			<td width=\"162\" valign=\"top\">\r\n				Worker\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td width=\"157\" valign=\"top\">\r\n				应用名称\r\n			</td>\r\n			<td width=\"165\" valign=\"top\">\r\n				Job\r\n			</td>\r\n			<td width=\"162\" valign=\"top\">\r\n				Topology\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td width=\"157\" valign=\"top\">\r\n				组件接口\r\n			</td>\r\n			<td width=\"165\" valign=\"top\">\r\n				Mapper/Reducer\r\n			</td>\r\n			<td width=\"162\" valign=\"top\">\r\n				Spout/Bolt\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	表3-1\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	接下来我们再来具体看一下这些概念。\r\n</p>\r\n<ol style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		Nimbus：负责资源分配和任务调度。\r\n	</li>\r\n	<li>\r\n		Supervisor：负责接受nimbus分配的任务，启动和停止属于自己管理的worker进程。\r\n	</li>\r\n	<li>\r\n		Worker：运行具体处理组件逻辑的进程。\r\n	</li>\r\n	<li>\r\n		Task：worker中每一个spout/bolt的线程称为一个task. 在storm0.8之后，task不再与物理线程对应，同一个spout/bolt的task可能会共享一个物理线程，该线程称为executor。\r\n	</li>\r\n</ol>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	下面这个图描述了以上几个角色之间的关系。<br />\r\n<a href=\"http://www.searchtb.com/wp-content/uploads/2012/08/deploy0.jpg\"><img class=\"alignnone size-full wp-image-2400\" src=\"http://www.searchtb.com/wp-content/uploads/2012/08/deploy0.jpg\" alt=\"系统结构\" width=\"479\" height=\"305\" style=\"border:1px solid #DDDDDD;\" /></a><br />\r\n图3-1\r\n</p>\r\n<ol style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		Topology：storm中运行的一个实时应用程序，因为各个组件间的消息流动形成逻辑上的一个拓扑结构。\r\n	</li>\r\n	<li>\r\n		Spout：在一个topology中产生源数据流的组件。通常情况下spout会从外部数据源中读取数据，然后转换为topology内部的源数据。Spout是一个主动的角色，其接口中有个nextTuple()函数，storm框架会不停地调用此函数，用户只要在其中生成源数据即可。\r\n	</li>\r\n	<li>\r\n		Bolt：在一个topology中接受数据然后执行处理的组件。Bolt可以执行过滤、函数操作、合并、写数据库等任何操作。Bolt是一个被动的角色，其接口中有个execute(Tuple input)函数,在接受到消息后会调用此函数，用户可以在其中执行自己想要的操作。\r\n	</li>\r\n	<li>\r\n		Tuple：一次消息传递的基本单元。本来应该是一个key-value的map，但是由于各个组件间传递的tuple的字段名称已经事先定义好，所以tuple中只要按序填入各个value就行了，所以就是一个value list.\r\n	</li>\r\n	<li>\r\n		Stream：源源不断传递的tuple就组成了stream。\r\n	</li>\r\n</ol>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	10.&nbsp; stream grouping：即消息的partition方法。Storm中提供若干种实用的grouping方式，包括shuffle, fields hash, all, global, none, direct和localOrShuffle等\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	相比于s4, puma等其他实时计算系统，storm最大的亮点在于其记录级容错和能够保证消息精确处理的事务功能。下面就重点来看一下这两个亮点的实现原理。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Storm记录级容错的基本原理</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	首先来看一下什么叫做记录级容错？storm允许用户在spout中发射一个新的源tuple时为其指定一个message id, 这个message id可以是任意的object对象。多个源tuple可以共用一个message id，表示这多个源 tuple对用户来说是同一个消息单元。storm中记录级容错的意思是说，storm会告知用户每一个消息单元是否在指定时间内被完全处理了。那什么叫做完全处理呢，就是该message id绑定的源tuple及由该源tuple后续生成的tuple经过了topology中每一个应该到达的bolt的处理。举个例子。在图4-1中，在spout由message 1绑定的tuple1和tuple2经过了bolt1和bolt2的处理生成两个新的tuple，并最终都流向了bolt3。当这个过程完成处理完时，称message 1被完全处理了。<br />\r\n<a href=\"http://www.searchtb.com/wp-content/uploads/2012/08/message10.jpg\"><img class=\"alignnone size-full wp-image-2401\" src=\"http://www.searchtb.com/wp-content/uploads/2012/08/message10.jpg\" alt=\"消息传递\" width=\"362\" height=\"155\" style=\"border:1px solid #DDDDDD;\" /></a><br />\r\n图4-1\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	在storm的topology中有一个系统级组件，叫做acker。这个acker的任务就是追踪从spout中流出来的每一个message id绑定的若干tuple的处理路径，如果在用户设置的最大超时时间内这些tuple没有被完全处理，那么acker就会告知spout该消息处理失败了，相反则会告知spout该消息处理成功了。在刚才的描述中，我们提到了”记录tuple的处理路径”，如果曾经尝试过这么做的同学可以仔细地思考一下这件事的复杂程度。但是storm中却是使用了一种非常巧妙的方法做到了。在说明这个方法之前，我们来复习一个数学定理。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	A xor A = 0.\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	A xor B…xor B xor A = 0，其中每一个操作数出现且仅出现两次。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	storm中使用的巧妙方法就是基于这个定理。具体过程是这样的：在spout中系统会为用户指定的message id生成一个对应的64位整数，作为一个root id。root id会传递给acker及后续的bolt作为该消息单元的唯一标识。同时无论是spout还是bolt每次新生成一个tuple的时候，都会赋予该tuple一个64位的整数的id。Spout发射完某个message id对应的源tuple之后，会告知acker自己发射的root id及生成的那些源tuple的id。而bolt呢，每次接受到一个输入tuple处理完之后，也会告知acker自己处理的输入tuple的id及新生成的那些tuple的id。Acker只需要对这些id做一个简单的异或运算，就能判断出该root id对应的消息单元是否处理完成了。下面通过一个图示来说明这个过程。<br />\r\n<a href=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack10.jpg\"><img class=\"alignnone size-full wp-image-2402\" src=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack10.jpg\" alt=\"\" width=\"373\" height=\"206\" style=\"border:1px solid #DDDDDD;\" /></a><br />\r\n图4-1 spout中绑定message 1生成了两个源tuple，id分别是0010和1011.<br />\r\n<a href=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack20.jpg\"><img class=\"alignnone size-full wp-image-2402\" src=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack20.jpg\" alt=\"\" width=\"373\" height=\"206\" style=\"border:1px solid #DDDDDD;\" /></a><br />\r\n图4-2 bolt1处理tuple 0010时生成了一个新的tuple，id为0110.<br />\r\n<a href=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack30.jpg\"><img class=\"alignnone size-full wp-image-2402\" src=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack30.jpg\" alt=\"\" width=\"373\" height=\"206\" style=\"border:1px solid #DDDDDD;\" /></a><br />\r\n图4-3 bolt2处理tuple 1011时生成了一个新的tuple，id为0111.<br />\r\n<a href=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack40.jpg\"><img class=\"alignnone size-full wp-image-2402\" src=\"http://www.searchtb.com/wp-content/uploads/2012/08/ack40.jpg\" alt=\"\" width=\"373\" height=\"206\" style=\"border:1px solid #DDDDDD;\" /></a><br />\r\n图4-4 bolt3中接收到tuple 0110和tuple 0111，没有生成新的tuple.\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	可能有些细心的同学会发现，容错过程存在一个可能出错的地方，那就是，如果生成的tuple id并不是完全各异的，acker可能会在消息单元完全处理完成之前就错误的计算为0。这个错误在理论上的确是存在的，但是在实际中其概率是极低极低的，完全可以忽略。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Storm的事务拓扑</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	事务拓扑(transactional topology)是storm0.7引入的特性，在最近发布的0.8版本中已经被封装为Trident，提供了更加便利和直观的接口。因为篇幅所限，在此对事务拓扑做一个简单的介绍。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	事务拓扑的目的是为了满足对消息处理有着极其严格要求的场景，例如实时计算某个用户的成交笔数，要求结果完全精确，不能多也不能少。Storm的事务拓扑是完全基于它底层的spout/bolt/acker原语实现的，通过一层巧妙的封装得出一个优雅的实现。个人觉得这也是storm最大的魅力之一。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	事务拓扑简单来说就是将消息分为一个个的批(batch)，同一批内的消息以及批与批之间的消息可以并行处理，另一方面，用户可以设置某些bolt为committer，storm可以保证committer的finishBatch()操作是按严格不降序的顺序执行的。用户可以利用这个特性通过简单的编程技巧实现消息处理的精确。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Storm在淘宝</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	由于storm的内核是clojure编写的(不过大部分的拓展工作都是java编写的)，为我们理解它的实现带来了一定的困难，好在大部分情况下storm都比较稳定，当然我们也在尽力熟悉clojure的世界。我们在使用storm时通常都是选择java语言开发应用程序。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	在淘宝，storm被广泛用来进行实时日志处理，出现在实时统计、实时风控、实时推荐等场景中。一般来说，我们从类kafka的metaQ或者基于hbase的timetunnel中读取实时日志消息，经过一系列处理，最终将处理结果写入到一个分布式存储中，提供给应用程序访问。我们每天的实时消息量从几百万到几十亿不等，数据总量达到TB级。对于我们来说，storm往往会配合分布式存储服务一起使用。在我们正在进行的个性化搜索实时分析项目中，就使用了timetunnel + hbase + storm + ups的架构，每天处理几十亿的用户日志信息，从用户行为发生到完成分析延迟在秒级。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>Storm的未来</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	Storm0.7系列的版本已经在各大公司得到了广泛使用，最近发布的0.8版本中引入了State，使得其从一个纯计算框架演变成了一个包含存储和计算的实时计算新利器，还有刚才提到的Trident，提供更加友好的接口，同时可定制scheduler的特性也为其针对不同的应用场景做优化提供了更便利的手段，也有人已经在基于storm的实时ql(query language)上迈出了脚本。在服务化方面，storm一直在朝着融入mesos框架的方向努力。同时，storm也在实现细节上不断地优化，使用很多优秀的开源产品，包括kryo, Disruptor, curator等等。可以想象，当storm发展到1.0版本时，一定是一款无比杰出的产品，让我们拭目以待，当然，最好还是参与到其中去吧，同学们。\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	<li>\r\n		<strong>参考文献</strong>\r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	[1]storm官方wiki及code.&nbsp;<a href=\"https://github.com/nathanmarz/storm\">https://github.com/nathanmarz/storm</a>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;background-color:#FFFFFF;\">\r\n	原文链接：<a href=\"http://www.searchtb.com/2012/09/introduction-to-storm.html\">http://www.searchtb.com/2012/09/introduction-to-storm.html</a>\r\n</p>',NULL,NULL,'2014-05-22 13:04:38',0,'storm简介',0),(100,'admin',6,'<div>\r\n	<div>\r\n		作者:&nbsp;<a href=\"http://xumingming.sinaapp.com/\">xumingming</a>&nbsp;| 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明<br />\r\n网址:&nbsp;<a href=\"http://xumingming.sinaapp.com/117/twitter-storm%E7%9A%84%E4%B8%80%E4%BA%9B%E5%85%B3%E9%94%AE%E6%A6%82%E5%BF%B5/\">http://xumingming.sinaapp.com/117/twitter-storm的一些关键概念/</a> \r\n	</div>\r\n	<p>\r\n		&nbsp;<br />\r\n这篇文章翻译自storm官方wiki:&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Concepts\">https://github.com/nathanmarz/storm/wiki/Concepts</a>, 主要介绍storm的一些关键概念。\r\n	</p>\r\n	<p>\r\n		storm的一些关键概念如下:\r\n	</p>\r\n	<ol>\r\n		<li>\r\n			Topologies\r\n		</li>\r\n		<li>\r\n			Streams\r\n		</li>\r\n		<li>\r\n			Spouts\r\n		</li>\r\n		<li>\r\n			Bolts\r\n		</li>\r\n		<li>\r\n			Stream groupings\r\n		</li>\r\n		<li>\r\n			Reliability\r\n		</li>\r\n		<li>\r\n			Tasks\r\n		</li>\r\n		<li>\r\n			Workers\r\n		</li>\r\n		<li>\r\n			Configuration\r\n		</li>\r\n	</ol>\r\n	<p>\r\n		先看一张storm里面各种对象的一个示意图:\r\n	</p>\r\n	<div>\r\n		<a href=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/09/storm-concepts.png\"><img title=\"storm里面各个对象的示意图\" src=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/09/storm-concepts.png\" alt=\"storm里面各个对象的示意图\" width=\"2034\" height=\"1793\" style=\"height:auto;\" /></a> \r\n		<p>\r\n			storm里面各个对象的示意图\r\n		</p>\r\n	</div>\r\n	<h2>\r\n		计算拓补： Topologies\r\n	</h2>\r\n	<p>\r\n		一个实时计算应用程序的逻辑在storm里面被封装到topology对象里面， 我把它叫做计算拓补. Storm里面的topology相当于Hadoop里面的一个MapReduce Job, 它们的关键区别是：一个MapReduce Job最终总是会结束的， 然而一个storm的topoloy会一直运行 — 除非你显式的杀死它。 一个Topology是Spouts和Bolts组成的图状结构， 而链接Spouts和Bolts的则是Stream groupings。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		消息流: Streams\r\n	</h2>\r\n	<p>\r\n		消息流是storm里面的最关键的抽象。一个消息流是一个没有边界的tuple序列， 而这些tuples会被以一种分布式的方式并行地创建和处理。 对消息流的定义主要是对消息流里面的tuple的定义， 我们会给tuple里的每个字段一个名字。 并且不同tuple的对应字段的类型必须一样。 也就是说： 两个tuple的第一个字段的类型必须一样， 第二个字段的类型必须一样， 但是第一个字段和第二个字段可以有不同的类型。 在默认的情况下， tuple的字段类型可以是： integer, long, short, byte, string, double, float, boolean和byte array。 你还可以自定义类型 — 只要你实现对应的序列化器。\r\n	</p>\r\n	<p>\r\n		每个消息流在定义的时候会被分配给一个id， 因为单向消息流是那么的普遍， OutputFieldsDeclarer定义了一些方法让你可以定义一个stream而不用指定这个id。在这种情况下这个stream会有个默认的id: 1.\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		消息源: Spouts\r\n	</h2>\r\n	<p>\r\n		消息源Spouts是storm里面一个topology里面的消息生产者。一般来说消息源会从一个外部源读取数据并且向topology里面发出消息: tuple。 消息源Spouts可以是可靠的也可以是不可靠的。一个可靠的消息源可以重新发射一个tuple如果这个tuple没有被storm成功的处理， 但是一个不可靠的消息源Spouts一旦发出一个tuple就把它彻底忘了 — 也就不可能再发了。\r\n	</p>\r\n	<p>\r\n		消息源可以发射多条消息流stream。要达到这样的效果， 使用OutFieldsDeclarer.declareStream来定义多个stream, 然后使用SpoutOutputCollector来发射指定的sream。\r\n	</p>\r\n	<p>\r\n		Spout类里面最重要的方法是nextTuple要么发射一个新的tuple到topology里面或者简单的返回如果已经没有新的tuple了。要注意的是nextTuple方法不能block Spout的实现， 因为storm在同一个线程上面调用所有消息源Spout的方法。\r\n	</p>\r\n	<p>\r\n		另外两个比较重要的Spout方法是ack和fail。storm在检测到一个tuple被整个topology成功处理的时候调用ack, 否则调用fail。storm只对可靠的spout调用ack和fail。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		消息处理者: Bolts\r\n	</h2>\r\n	<p>\r\n		所有的消息处理逻辑被封装在bolts里面。 Bolts可以做很多事情： 过滤， 聚合， 查询数据库等等等等。\r\n	</p>\r\n	<p>\r\n		Bolts可以简单的做消息流的传递。复杂的消息流处理往往需要很多步骤， 从而也就需要经过很多Bolts。比如算出一堆图片里面被转发最多的图片就至少需要两步： 第一步算出每个图片的转发数量。第二步找出转发最多的前10个图片。（如果要把这个过程做得更具有扩展性那么可能需要更多的步骤）。\r\n	</p>\r\n	<p>\r\n		Bolts可以发射多条消息流， 使用OutputFieldsDeclarer.declareStream定义stream， 使用OutputCollector.emit来选择要发射的stream。\r\n	</p>\r\n	<p>\r\n		Bolts的主要方法是execute, 它以一个tuple作为输入，Bolts使用OutputCollector来发射tuple, Bolts必须要为它处理的每一个tuple调用OutputCollector的ack方法，以通知storm这个tuple被处理完成了。– 从而我们通知这个tuple的发射者Spouts。 一般的流程是： Bolts处理一个输入tuple, &nbsp;发射0个或者多个tuple, 然后调用ack通知storm自己已经处理过这个tuple了。storm提供了一个IBasicBolt会自动调用ack。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		Stream groupings： 消息分发策略\r\n	</h2>\r\n	<p>\r\n		定义一个Topology的其中一步是定义每个bolt接受什么样的流作为输入。stream grouping就是用来定义一个stream应该如果分配给Bolts上面的多个Tasks。\r\n	</p>\r\n	<p>\r\n		storm里面有6种类型的stream grouping:\r\n	</p>\r\n	<ol>\r\n		<li>\r\n			Shuffle Grouping: 随机分组， 随机派发stream里面的tuple， 保证每个bolt接收到的tuple数目相同。\r\n		</li>\r\n		<li>\r\n			Fields Grouping：按字段分组， 比如按userid来分组， 具有同样userid的tuple会被分到相同的Bolts， 而不同的userid则会被分配到不同的Bolts。\r\n		</li>\r\n		<li>\r\n			All Grouping： 广播发送， 对于每一个tuple， 所有的Bolts都会收到。\r\n		</li>\r\n		<li>\r\n			Global Grouping: 全局分组， 这个tuple被分配到storm中的一个bolt的其中一个task。再具体一点就是分配给id值最低的那个task。\r\n		</li>\r\n		<li>\r\n			Non Grouping: 不分组， 这个分组的意思是说stream不关心到底谁会收到它的tuple。目前这种分组和Shuffle grouping是一样的效果， 有一点不同的是storm会把这个bolt放到这个bolt的订阅者同一个线程里面去执行。\r\n		</li>\r\n		<li>\r\n			Direct Grouping: 直接分组, &nbsp;这是一种比较特别的分组方法，用这种分组意味着消息的发送者指定由消息接收者的哪个task处理这个消息。 只有被声明为Direct Stream的消息流可以声明这种分组方法。而且这种消息tuple必须使用emitDirect方法来发射。消息处理者可以通过TopologyContext来获取处理它的消息的taskid&nbsp;(OutputCollector.emit方法也会返回taskid)\r\n		</li>\r\n	</ol>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		可靠性\r\n	</h2>\r\n	<p>\r\n		storm保证每个tuple会被topology完整的执行。storm会追踪由每个spout tuple所产生的tuple树(一个bolt处理一个tuple之后可能会发射别的tuple从而可以形成树状结构), 并且跟踪这棵tuple树什么时候成功处理完。每个topology都有一个消息超时的设置， 如果storm在这个超时的时间内检测不到某个tuple树到底有没有执行成功， 那么topology会把这个tuple标记为执行失败，并且过一会会重新发射这个tuple。\r\n	</p>\r\n	<p>\r\n		为了利用storm的可靠性特性，在你发出一个新的tuple以及你完成处理一个tuple的时候你必须要通知storm。这一切是由OutputCollector来完成的。通过它的emit方法来通知一个新的tuple产生了， 通过它的ack方法通知一个tuple处理完成了。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		Tasks： 任务\r\n	</h2>\r\n	<p>\r\n		每一个Spout和Bolt会被当作很多task在整个集群里面执行。每一个task对应到一个线程，而stream grouping则是定义怎么从一堆task发射tuple到另外一堆task。你可以调用TopologyBuilder.setSpout()和TopBuilder.setBolt来设置并行度 — 也就是有多少个task。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<h2>\r\n		工作进程\r\n	</h2>\r\n	<p>\r\n		一个topology可能会在一个或者多个工作进程里面执行，每个工作进程执行整个topology的一部分。比如对于并行度是300的topology来说，如果我们使用50个工作进程来执行，那么每个工作进程会处理其中的6个tasks（其实就是每个工作进程里面分配6个线程）。storm会尽量均匀的工作分配给所有的工作进程。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n</div>\r\n<h2>\r\n	配置\r\n</h2>\r\n<p>\r\n	storm里面有一堆参数可以配置来调整nimbus, supervisor以及正在运行的topology的行为， 一些配置是系统级别的， 一些配置是topology级别的。所有有默认值的配置的默认配置是配置在default.xml里面的。你可以通过定义个storm.xml在你的classpath厘米来覆盖这些默认配置。并且你也可以在代码里面设置一些topology相关的配置信息 &nbsp;– 使用StormSubmitter。当然，这些配置的优先级是: default.xml &lt; storm.xml &lt; TOPOLOGY-SPECIFIC配置。\r\n</p>',NULL,NULL,'2014-05-22 13:05:41',0,'Twitter Storm的一些关键概念',0),(101,'admin',6,'<div style=\"background-color:#FFFFFF;border:0px;margin:0px;padding:0px;vertical-align:baseline;font-family:Georgia, \'Bitstream Charter\', serif;font-size:15px;color:#888888;\">\r\n	作者:&nbsp;<a href=\"http://xumingming.sinaapp.com/\">xumingming</a>&nbsp;| 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明<br />\r\n网址:&nbsp;<a href=\"http://xumingming.sinaapp.com/127/twitter-storm%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1/\">http://xumingming.sinaapp.com/127/twitter-storm如何保证消息不丢失/</a>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	&nbsp;<br />\r\n本文翻译自：&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Guaranteeing-message-processing\">https://github.com/nathanmarz/storm/wiki/Guaranteeing-message-processing</a>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm保证从spout发出的每个tuple都会被完全处理。这篇文章介绍storm是怎么做到这个保证的，以及我们使用者怎么做才能充分利用storm的可靠性特点。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	一个tuple被”完全处理”是什么意思？\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	就如同蝴蝶效应一样，从spout发射的一个tuple可以引起其它成千上万个tuple因它而产生， 想想那个计算一篇文章中每个单词出现次数的topology.\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">TopologyBuilder builder = new TopologyBuilder();\r\nbuilder.setSpout(1, new KestrelSpout(\"kestrel.backtype.com\",\r\n                                     22133,\r\n                                     \"sentence_queue\",\r\n                                     new StringScheme()));\r\nbuilder.setBolt(2, new SplitSentence(), 10)\r\n        .shuffleGrouping(1);\r\nbuilder.setBolt(3, new WordCount(), 20)\r\n        .fieldsGrouping(2, new Fields(\"word\"));</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个topology从一个Kestrel队列读取句子， 把每个句子分割成一个个单词， 然后发射这一个个单词： 一个源tuple（一个句子）引起后面很多tuple的产生(一个个单词）， 这个消息流大概是这样的：\r\n</p>\r\n<div id=\"attachment_128\" class=\"wp-caption alignnone\" style=\"background-color:#F1F1F1;border:0px;margin:0px 0px 20px;padding:4px;vertical-align:baseline;text-align:center;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<a href=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/09/tuple_tree.png\" class=\"thickbox no_icon\"><img class=\"size-full wp-image-128\" title=\"tuple_tree\" src=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/09/tuple_tree.png\" alt=\"统计单词出现次数的tuple树\" width=\"484\" height=\"396\" style=\"height:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"background-color:transparent;margin-left:5px;vertical-align:baseline;font-family:\'Helvetica Neue\', Arial, Helvetica, \'Nimbus Sans L\', sans-serif;color:#888888;font-size:12px;\">\r\n		统计单词出现次数的tuple树\r\n	</p>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	在storm里面<strong>一个tuple被完全处理的意思是： 这个tuple以及由这个tuple所导致的所有的tuple都被成功处理。而一个tuple会被认为处理失败了如果这个消息在timeout所指定的时间内没有成功处理。</strong>&nbsp;而这个timetout可以通过<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/Config.html#TOPOLOGY_MESSAGE_TIMEOUT_SECS\">Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS</a>来指定。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	&nbsp;\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	如果一个消息处理成功了或者失败了会发生什么？\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	FYI。 下面这个是spout要实现的接口:\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public interface ISpout extends Serializable {\r\n    void open(Map conf, TopologyContext context,\r\n              SpoutOutputCollector collector);\r\n    void close();\r\n    void nextTuple();\r\n    void ack(Object msgId);\r\n    void fail(Object msgId);\r\n}</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	首先storm通过调用spout的nextTuple方法来获取下一个tuple, Spout通过open方法参数里面提供的SpoutOutputCollector来发射新tuple到它的其中一个输出消息流, 发射tuple的时候spout会提供一个message-id, 后面我们通过这个message-id来追踪这个tuple。举例来说， KestrelSpout从kestrel队列里面读取一个消息，并且把kestrel提供的消息id作为message-id, 看例子：\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">_collector.emit(new Values(\"field1\",\"field2\", 3),msgId);</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	接下来， 这个发射的tuple被传送到消息处理者bolt那里， storm会跟踪由此所产生的这课tuple树。如果storm检测到一个tuple被完全处理了， 那么storm会以最开始的那个message-id作为参数去调用消息源的ack方法；反之storm会调用spout的fail方法。<strong>值得注意的一点是， storm调用ack或者fail的task始终是产生这个tuple的那个task。所以如果一个spout被分成很多个task来执行， 消息执行的成功失败与否始终会通知最开始发出tuple的那个task。</strong>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	我们再以KestrelSpout为例来看看spout需要做些什么才能保证“一个消息始终被完全处理”, 当KestrelSpout从Kestrel里面读出一条消息， 首先它“打开”这条消息， 这意味着这条消息还在kestrel队列里面， 不过这条消息会被标示成“处理中”直到ack或者fail被调用。处于“处理中“状态的消息不会被发给其他消息处理者了；并且如果这个spout“断线”了， 那么所有处于“处理中”状态的消息会被重新标示成“等待处理”.\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	Storm的可靠性API\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	作为storm的使用者，有两件事情要做以更好的利用storm的可靠性特征。 首先，在你生成一个新的tuple的时候要通知storm; 其次，完成处理一个tuple之后要通知storm。 这样storm就可以检测整个tuple树有没有完成处理，并且通知源spout处理结果。storm提供了一些简洁的api来做这些事情。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>由一个tuple产生一个新的tuple称为： anchoring。</strong>你发射一个新tuple的同时也就完成了一次anchoring。看下面这个例子： 这个bolt把一个包含一个句子的tuple分割成每个单词一个tuple。\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public class SplitSentence implements IRichBolt {\r\n        OutputCollector _collector;\r\n\r\n        public void prepare(Map conf,\r\n                            TopologyContext context,\r\n                            OutputCollector collector) {\r\n            _collector = collector;\r\n        }\r\n\r\n        public void execute(Tuple tuple) {\r\n            String sentence = tuple.getString(0);\r\n            for(String word: sentence.split(\" \")) {\r\n                _collector.emit(tuple, new Values(word));\r\n            }\r\n            _collector.ack(tuple);\r\n        }\r\n\r\n        public void cleanup() {\r\n        }\r\n\r\n        public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n            declarer.declare(new Fields(\"word\"));\r\n        }\r\n    }</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	看一下这个execute方法， emit的第一个参数是输入tuple， 第二个参数则是输出tuple， 这其实就是通过输入tuple anchoring了一个新的输出tuple。因为这个“单词tuple”被anchoring在“句子tuple”一起， 如果其中一个单词处理出错，那么这整个句子会被重新处理。作为对比， 我们看看如果通过下面这行代码来发射一个新的tuple的话会有什么结果。\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">_collector.emit(new Values(word));</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	用这种方法发射会导致新发射的这个tuple脱离原来的tuple树(unanchoring), 如果这个tuple处理失败了， 整个句子不会被重新处理。到底要anchoring还是要 unanchoring则完全取决于你的业务需求。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	一个输出tuple可以被anchoring到多个输入tuple。这种方式在stream合并或者stream聚合的时候很有用。一个多入口tuple处理失败的话，那么它对应的所有输入tuple都要重新执行。看看下面演示怎么指定多个输入tuple:\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">List&lt;Tuple&gt; anchors = new ArrayList&lt;Tuple&gt;();\r\nanchors.add(tuple1);\r\nanchors.add(tuple2);\r\n_collector.emit(anchors, new Values(1, 2, 3));</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	多入口tuple把这个新tuple加到了多个tuple树里面去了。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	我们通过anchoring来构造这个tuple树，最后一件要做的事情是在你处理完当个tuple的时候告诉storm, &nbsp;通过OutputCollector类的ack和fail方法来做，如果你回过头来看看SplitSentence的例子， 你可以看到“句子tuple”在所有“单词tuple”被发出之后调用了ack。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	你可以调用OutputCollector&nbsp;的fail方法去立即将从消息源头发出的那个tuple标记为fail， 比如你查询了数据库，发现一个错误，你可以马上fail那个输入tuple， 这样可以让这个tuple被快速的重新处理， 因为你不需要等那个timeout时间来让它自动fail。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>每个你处理的tuple， 必须被ack或者fail。因为storm追踪每个tuple要占用内存。所以如果你不ack/fail每一个tuple， 那么最终你会看到OutOfMemory错误。</strong>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	大多数Bolt遵循这样的规律：读取一个tuple；发射一些新的tuple；在execute的结束的时候ack这个tuple。这些Bolt往往是一些过滤器或者简单函数。Storm为这类规律封装了一个BasicBolt类。如果用BasicBolt来做， 上面那个SplitSentence可以改写成这样：\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public class SplitSentence implements IBasicBolt {\r\n        public void prepare(Map conf,\r\n                            TopologyContext context) {\r\n        }\r\n\r\n        public void execute(Tuple tuple,\r\n                            BasicOutputCollector collector) {\r\n            String sentence = tuple.getString(0);\r\n            for(String word: sentence.split(\" \")) {\r\n                collector.emit(new Values(word));\r\n            }\r\n        }\r\n\r\n        public void cleanup() {\r\n        }\r\n\r\n        public void declareOutputFields(\r\n                        OutputFieldsDeclarer declarer) {\r\n            declarer.declare(new Fields(\"word\"));\r\n        }\r\n    }</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个实现比之前的实现简单多了， 但是功能上是一样的。发送到BasicOutputCollector的tuple会自动和输入tuple相关联，而在execute方法结束的时候那个输入tuple会被自动ack的。<br />\r\n作为对比，处理聚合和合并的bolt往往要处理一大堆的tuple之后才能被ack， 而这类tuple通常都是多输入的tuple， 所以这个已经不是IBasicBolt可以罩得住的了。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	storm是怎么实现高效率的可靠性的？\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm里面有一类特殊的task称为：acker， 他们负责跟踪spout发出的每一个tuple的tuple树。当acker发现一个tuple树已经处理完成了。它会发送一个消息给产生这个tuple的那个task。你可以通过Config.TOPOLOGY_ACKERS来设置一个topology里面的acker的数量， 默认值是一。 如果你的topology里面的tuple比较多的话， 那么把acker的数量设置多一点，效率会高一点。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	理解storm的可靠性的最好的方法是来看看tuple和tuple树的生命周期， 当一个tuple被创建， 不管是spout还是bolt创建的， 它会被赋予一个64位的id，而acker就是利用这个id去跟踪所有的tuple的。每个tuple知道它的祖宗的id(从spout发出来的那个tuple的id), 每当你新发射一个tuple， 它的祖宗id都会传给这个新的tuple。所以当一个tuple被ack的时候，它会发一个消息给acker，告诉它这个tuple树发生了怎么样的变化。具体来说就是：它告诉acker： 我呢已经完成了， 我有这些儿子tuple, 你跟踪一下他们吧。下面这个图演示了C被ack了之后，这个tuple树所发生的变化。\r\n</p>\r\n<div id=\"attachment_130\" class=\"wp-caption alignnone\" style=\"background-color:#F1F1F1;border:0px;margin:0px 0px 20px;padding:4px;vertical-align:baseline;text-align:center;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<a href=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/09/ack_tree.png\" class=\"thickbox no_icon\"><img class=\"size-full wp-image-130\" title=\"tuple ack示例\" src=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/09/ack_tree.png\" alt=\"tuple ack示例\" width=\"499\" height=\"193\" style=\"height:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"background-color:transparent;margin-left:5px;vertical-align:baseline;font-family:\'Helvetica Neue\', Arial, Helvetica, \'Nimbus Sans L\', sans-serif;color:#888888;font-size:12px;\">\r\n		tuple ack示例\r\n	</p>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	关于storm怎么跟踪tuple还有一些细节， 前面已经提到过了， 你可以自己设定你的topology里面有多少个acker。而这又给我们带来一个问题， 当一个tuple需要ack的时候，它到底选择哪个acker来发送这个信息呢？\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm使用一致性哈希来把一个spout-tuple-id对应到acker， 因为每一个tuple知道它所有的祖宗的tuple-id， 所以它自然可以算出要通知哪个acker来ack。（这里所有的祖宗是指这个tuple所对应的所有的根tuple。这里注意因为一个tuple可能存在于多个tuple树，所以才有所有一说）。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm的另一个细节是acker是怎么知道每一个spout tuple应该交给哪个task来处理。当一个spout发射一个新的tuple， 它会简单的发一个消息给一个合适的acker，并且告诉acker它自己的id(taskid)， 这样storm就有了taskid-tupleid的对应关系。 当acker发现一个树完成处理了， 它知道给哪个task发送成功的消息。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>acker task并不显式的跟踪tuple树。对于那些有成千上万个节点的tuple树，把这么多的tuple信息都跟踪起来会耗费太多的内存。相反， acker用了一种不同的方式， 使得对于每个spout tuple所需要的内存量是恒定的（20 bytes) . &nbsp;这个跟踪算法是storm如何工作的关键，并且也是它的主要突破。</strong>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	一个acker task存储了一个spout-tuple-id到一对值的一个mapping。这个对子的第一个值是创建这个tuple的taskid， 这个是用来在完成处理tuple的时候发送消息用的。 第二个值是一个64位的数字称作：”ack val”<strong>, ack val是整个tuple树的状态的一个表示，不管这棵树多大。它只是简单地把这棵树上的所有创建的tupleid/ack的tupleid一起异或(XOR)。</strong>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	当一个acker task 发现一个 ack val变成0了， 它知道这棵树已经处理完成了。 因为tupleid是随机的64位数字， 所以， ack val碰巧变成0(而不是因为所有创建的tuple都完成了)的几率极小。算一下就知道了， 就算每秒发生10000个ack， 那么需要50000000万年才可能碰到一个错误。而且就算碰到了一个错误， 也只有在这个tuple失败的时候才会造成数据丢失。 关于Acker的详细工作流程的分析可以看看这篇文章:&nbsp;<a href=\"http://xumingming.sinaapp.com/410/twitter-storm-code-analysis-acker-merchanism/\">Twitter Storm源代码分析之acker工作流程</a>。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	既然你已经理解了storm的可靠性算法， 让我们一起过一遍所有可能的失败场景，并看看storm在每种情况下是怎么避免数据丢失的。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>1. 由于对应的task挂掉了，一个tuple没有被ack：</strong>&nbsp;storm的超时机制在超时之后会把这个tuple标记为失败，从而可以重新处理。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>2. Acker挂掉了：</strong>&nbsp;这种情况下由这个acker所跟踪的所有spout tuple都会超时，也就会被重新处理。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>3. Spout挂掉了：</strong>&nbsp;在这种情况下给spout发送消息的消息源负责重新发送这些消息。比如Kestrel和RabbitMQ在一个客户端断开之后会把所有”处理中“的消息放回队列。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	就像你看到的那样， storm的可靠性机制是完全分布式的， 可伸缩的并且是高度容错的。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	&nbsp;\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	调整可靠性 (Tuning Reliability)\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	acker task是非常轻量级的， 所以一个topology里面不需要很多acker。你可以通过Strom UI(id: -1)来跟踪它的性能。 如果它的吞吐量看起来不正常，那么你就需要多加点acker了。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	如果可靠性对你来说不是那么重要 — 你不太在意在一些失败的情况下损失一些数据， 那么你可以通过不跟踪这些tuple树来获取更好的性能。不去跟踪消息的话会使得系统里面的消息数量减少一半， 因为对于每一个tuple都要发送一个ack消息。并且它需要更少的id来保存下游的tuple， 减少带宽占用。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	有三种方法可以去掉可靠性。第一是把Config.TOPOLOGY_ACKERS 设置成 0. 在这种情况下， storm会在spout发射一个tuple之后马上调用spout的ack方法。也就是说这个tuple树不会被跟踪。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	第二个方法是在tuple层面去掉可靠性。 你可以在发射tuple的时候不指定messageid来达到不跟粽某个特定的spout tuple的目的。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	最后一个方法是如果你对于一个tuple树里面的某一部分到底成不成功不是很关心，那么可以在发射这些tuple的时候unanchor它们。 这样这些tuple就不在tuple树里面， 也就不会被跟踪了。\r\n</p>',NULL,NULL,'2014-05-22 13:06:36',0,'Twitter Storm如何保证消息不丢失',0),(102,'admin',6,'<div style=\"background-color:#FFFFFF;border:0px;margin:0px;padding:0px;vertical-align:baseline;font-family:Georgia, \'Bitstream Charter\', serif;font-size:15px;color:#888888;\">\r\n	作者:&nbsp;<a href=\"http://xumingming.sinaapp.com/\">xumingming</a>&nbsp;| 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明<br />\r\n网址:&nbsp;<a href=\"http://xumingming.sinaapp.com/138/twitter-storm%E5%85%A5%E9%97%A8/\">http://xumingming.sinaapp.com/138/twitter-storm入门/</a>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	&nbsp;<br />\r\n本文翻译自：&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Tutorial\">https://github.com/nathanmarz/storm/wiki/Tutorial</a>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	在这个教程里面我们将学习如何创建Topologies, 并且把topologies部署到storm的集群里面去。Java将是我们主要的示范语言， 个别例子会使用python以演示storm的多语言特性。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	准备工作\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个教程使用<a href=\"http://github.com/nathanmarz/storm-starter\">storm-starter</a>项目里面的例子。我推荐你们下载这个项目的代码并且跟着教程一起做。先读一下：<a href=\"http://xumingming.sinaapp.com/149/twitter-storm-%e9%85%8d%e7%bd%ae%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83/\">配置storm开发环境</a>和<a href=\"http://xumingming.sinaapp.com/160/twitter-storm-%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e6%96%b0%e7%9a%84storm%e9%a1%b9%e7%9b%ae/\">新建一个strom项目</a>这两篇文章把你的机器设置好。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	一个Storm集群的基本组件\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm的集群表面上看和hadoop的集群非常像。但是在Hadoop上面你运行的是MapReduce的Job, 而在Storm上面你运行的是Topology。它们是非常不一样的 —&nbsp;<strong>一个关键的区别是： 一个MapReduce Job最终会结束， 而一个Topology运永远运行（除非你显式的杀掉他）</strong>。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	在Storm的集群里面有两种节点： 控制节点(master node)和工作节点(worker node)。控制节点上面运行一个后台程序： Nimbus， 它的作用类似Hadoop里面的JobTracker。Nimbus负责在集群里面分布代码，分配工作给机器， 并且监控状态。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	每一个工作节点上面运行一个叫做Supervisor的节点。Supervisor会监听分配给它那台机器的工作，根据需要 启动/关闭工作进程。每一个工作进程执行一个Topology的一个子集；一个运行的Topology由运行在很多机器上的很多工作进程组成。\r\n</p>\r\n<div id=\"attachment_142\" class=\"wp-caption alignnone\" style=\"background-color:#F1F1F1;border:0px;margin:0px 0px 20px;padding:4px;vertical-align:baseline;text-align:center;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<a href=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/10/storm-cluster.png\" class=\"thickbox no_icon\"><img class=\"size-full wp-image-142\" title=\"storm topology结构\" src=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/10/storm-cluster.png\" alt=\"storm topology结构\" width=\"320\" height=\"259\" style=\"height:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"background-color:transparent;margin-left:5px;vertical-align:baseline;font-family:\'Helvetica Neue\', Arial, Helvetica, \'Nimbus Sans L\', sans-serif;color:#888888;font-size:12px;\">\r\n		storm topology结构\r\n	</p>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	Nimbus和Supervisor之间的所有协调工作都是通过一个Zookeeper集群来完成。<strong>并且，nimbus进程和supervisor都是快速失败（fail-fast)和无状态的。所有的状态要么在Zookeeper里面， 要么在本地磁盘上。</strong>这也就意味着你可以用kill -9来杀死nimbus和supervisor进程， 然后再重启它们，它们可以继续工作， 就好像什么都没有发生过似的。这个设计使得storm不可思议的稳定。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	Topologies\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	为了在storm上面做实时计算， 你要去建立一些topologies。一个topology就是一个计算节点所组成的图。Topology里面的每个处理节点都包含处理逻辑， 而节点之间的连接则表示数据流动的方向。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	运行一个Topology是很简单的。首先，把你所有的代码以及所依赖的jar打进一个jar包。然后运行类似下面的这个命令。\r\n</p>\r\n<pre class=\"brush: bash; title: ; notranslate\">strom jar all-your-code.jar backtype.storm.MyTopology arg1 arg2</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个命令会运行主类: backtype.strom.MyTopology, 参数是arg1, arg2。这个类的main函数定义这个topology并且把它提交给Nimbus。storm jar负责连接到nimbus并且上传jar文件。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	因为topology的定义其实就是一个Thrift结构并且nimbus就是一个Thrift服务， 有可以用任何语言创建并且提交topology。上面的方面是用JVM<br />\r\n-based语言提交的最简单的方法, 看一下文章:&nbsp;<a href=\"http://xumingming.sinaapp.com/185/twitter-storm-%e5%9c%a8%e7%94%9f%e4%ba%a7%e9%9b%86%e7%be%a4%e4%b8%8a%e8%bf%90%e8%a1%8ctopology/\">在生产集群上运行topology</a>去看看怎么启动以及停止topologies。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	Stream\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	Stream是storm里面的关键抽象。一个stream是一个没有边界的tuple序列。storm提供一些原语来分布式地、可靠地把一个stream传输进一个新的stream。比如： 你可以把一个tweets流传输到热门话题的流。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm提供的最基本的处理stream的原语是spout和bolt。你可以实现Spout和Bolt对应的接口以处理你的应用的逻辑。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>spout的流的源头。</strong>比如一个spout可能从Kestrel队列里面读取消息并且把这些消息发射成一个流。又比如一个spout可以调用twitter的一个api并且把返回的tweets发射成一个流。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<strong>bolt可以接收任意多个输入stream， 作一些处理， 有些bolt可能还会发射一些新的stream。</strong>一些复杂的流转换， 比如从一些tweet里面计算出热门话题， 需要多个步骤， 从而也就需要多个bolt。 Bolt可以做任何事情: 运行函数， 过滤tuple, 做一些聚合， 做一些合并以及访问数据库等等。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	spout和bolt所组成一个网络会被打包成topology， topology是storm里面最高一级的抽象， 你可以把topology提交给storm的集群来运行。topology的结构在Topology那一段已经说过了，这里就不再赘述了。\r\n</p>\r\n<div id=\"attachment_143\" class=\"wp-caption alignnone\" style=\"background-color:#F1F1F1;border:0px;margin:0px 0px 20px;padding:4px;vertical-align:baseline;text-align:center;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<a href=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/10/topology.png\" class=\"thickbox no_icon\"><img class=\"size-full wp-image-143\" title=\"topology结构\" src=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/10/topology.png\" alt=\"topology结构\" width=\"361\" height=\"278\" style=\"height:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"background-color:transparent;margin-left:5px;vertical-align:baseline;font-family:\'Helvetica Neue\', Arial, Helvetica, \'Nimbus Sans L\', sans-serif;color:#888888;font-size:12px;\">\r\n		topology结构\r\n	</p>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	topology里面的每一个节点都是并行运行的。 在你的topology里面， 你可以指定每个节点的并行度， storm则会在集群里面分配那么多线程来同时计算。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	一个topology会一直运行直到你显式停止它。storm自动重新分配一些运行失败的任务， 并且storm保证你不会有数据丢失， 即使在一些机器意外停机并且消息被丢掉的情况下。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	数据模型(Data Model)\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm使用tuple来作为它的数据模型。每个tuple是一堆值，每个值有一个名字，并且每个值可以是任何类型， 在我的理解里面一个tuple可以看作一个没有方法的java对象。总体来看，storm支持所有的基本类型、字符串以及字节数组作为tuple的值类型。你也可以使用你自己定义的类型来作为值类型， 只要你实现对应的序列化器(serializer)。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	topology里面的每个节点必须定义它要发射的tuple的每个字段。 比如下面这个bolt定义它所发射的tuple包含两个字段，类型分别是: double和triple。\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public class DoubleAndTripleBolt implements IRichBolt {\r\n    private OutputCollectorBase _collector;\r\n\r\n    @Override\r\n    public void prepare(Map conf, TopologyContext context, OutputCollectorBase collector) {\r\n        _collector = collector;\r\n    }\r\n\r\n    @Override\r\n    public void execute(Tuple input) {\r\n        int val = input.getInteger(0);\r\n        _collector.emit(input, new Values(val*2, val*3));\r\n        _collector.ack(input);\r\n    }\r\n\r\n    @Override\r\n    public void cleanup() {\r\n    }\r\n\r\n    @Override\r\n    public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n        declarer.declare(new Fields(\"double\", \"triple\"));\r\n    }\r\n}</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	declareOutputFields方法定义要输出的字段 ： [\"double\", \"triple\"]。这个bolt的其它部分我们接下来会解释。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	一个简单的Topology\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	让我们来看一个简单的topology的例子， 我们看一下storm-starter里面的ExclamationTopology:\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">TopologyBuilder builder = new TopologyBuilder();\r\nbuilder.setSpout(1, new TestWordSpout(), 10);\r\nbuilder.setBolt(2, new ExclamationBolt(), 3)\r\n        .shuffleGrouping(1);\r\nbuilder.setBolt(3, new ExclamationBolt(), 2)\r\n        .shuffleGrouping(2);</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个Topology包含一个Spout和两个Bolt。Spout发射单词， 每个bolt在每个单词后面加个”!!!”。这三个节点被排成一条线: spout发射单词给第一个bolt， 第一个bolt然后把处理好的单词发射给第二个bolt。如果spout发射的单词是[\"bob\"]和[\"john\"], 那么第二个bolt会发射[\"bolt!!!!!!\"]和[\"john!!!!!!\"]出来。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	我们使用setSpout和setBolt来定义Topology里面的节点。这些方法接收我们指定的一个id， 一个包含处理逻辑的对象(spout或者bolt), 以及你所需要的并行度。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个包含处理的对象如果是spout那么要实现IRichSpout的接口， 如果是bolt，那么就要实现IRichBolt接口.<br />\r\n最后一个指定并行度的参数是可选的。它表示集群里面需要多少个thread来一起执行这个节点。如果你忽略它那么storm会分配一个线程来执行这个节点。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	setBolt方法返回一个InputDeclarer对象， 这个对象是用来定义Bolt的输入。 这里第一个Bolt声明它要读取spout所发射的所有的tuple — 使用shuffle grouping。而第二个bolt声明它读取第一个bolt所发射的tuple。<strong>shuffle grouping表示所有的tuple会被随机的分发给bolt的所有task</strong>。给task分发tuple的策略有很多种，后面会介绍。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	如果你想第二个bolt读取spout和第一个bolt所发射的所有的tuple， 那么你应该这样定义第二个bolt:\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">builder.setBolt(3, new ExclamationBolt(), 5)\r\n            .shuffleGrouping(1)\r\n            .shuffleGrouping(2);</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	让我们深入地看一下这个topology里面的spout和bolt是怎么实现的。Spout负责发射新的tuple到这个topology里面来。TestWordSpout从[\"nathan\", \"mike\", \"jackson\", \"golda\", \"bertels\"]里面随机选择一个单词发射出来。TestWordSpout里面的nextTuple()方法是这样定义的：\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public void nextTuple() {\r\n    Utils.sleep(100);\r\n    final String[] words = new String[] {\"nathan\", \"mike\",\r\n                     \"jackson\", \"golda\", \"bertels\"};\r\n    final Random rand = new Random();\r\n    final String word = words[rand.nextInt(words.length)];\r\n    _collector.emit(new Values(word));\r\n}</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	可以看到，实现很简单。<br />\r\nExclamationBolt把”!!!”拼接到输入tuple后面。我们来看下ExclamationBolt的完整实现。\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public static class ExclamationBolt implements IRichBolt {\r\n    OutputCollector _collector;\r\n\r\n    public void prepare(Map conf, TopologyContext context,\r\n                        OutputCollector collector) {\r\n        _collector = collector;\r\n    }\r\n\r\n    public void execute(Tuple tuple) {\r\n        _collector.emit(tuple, new Values(tuple.getString(0) + \"!!!\"));\r\n        _collector.ack(tuple);\r\n    }\r\n\r\n    public void cleanup() {\r\n    }\r\n\r\n    public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n        declarer.declare(new Fields(\"word\"));\r\n    }\r\n}</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	prepare方法提供给bolt一个Outputcollector用来发射tuple。Bolt可以在任何时候发射tuple — 在prepare, execute或者cleanup方法里面, 或者甚至在另一个线程里面异步发射。这里prepare方法只是简单地把OutputCollector作为一个类字段保存下来给后面execute方法使用。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	execute方法从bolt的一个输入接收tuple(一个bolt可能有多个输入源). ExclamationBolt获取tuple的第一个字段，加上”!!!”之后再发射出去。如果一个bolt有多个输入源，你可以通过调用Tuple#getSourceComponent方法来知道它是来自哪个输入源的。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	execute方法里面还有其它一些事情值得一提： 输入tuple被作为emit方法的第一个参数，并且输入tuple在最后一行被ack。这些呢都是Storm可靠性API的一部分，后面会解释。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	cleanup方法在bolt被关闭的时候调用， 它应该清理所有被打开的资源。但是集群不保证这个方法一定会被执行。比如执行task的机器down掉了，那么根本就没有办法来调用那个方法。<strong>cleanup设计的时候是被用来在local mode的时候才被调用(也就是说在一个进程里面模拟整个storm集群), 并且你想在关闭一些topology的时候避免资源泄漏。</strong>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	最后，declareOutputFields定义一个叫做”word”的字段的tuple。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	以local mode运行ExclamationTopology<br />\r\n让我们看看怎么以local mode运行ExclamationToplogy。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	storm的运行有两种模式: 本地模式和分布式模式. 在本地模式中， storm用一个进程里面的线程来模拟所有的spout和bolt. 本地模式对开发和测试来说比较有用。 你运行storm-starter里面的topology的时候它们就是以本地模式运行的， 你可以看到topology里面的每一个组件在发射什么消息。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	在分布式模式下， storm由一堆机器组成。当你提交topology给master的时候， 你同时也把topology的代码提交了。master负责分发你的代码并且负责给你的topolgoy分配工作进程。如果一个工作进程挂掉了， master节点会把认为重新分配到其它节点。关于如何在一个集群上面运行topology， 你可以看看Running topologies on a production cluster文章。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	下面是以本地模式运行ExclamationTopology的代码:\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">Config conf = new Config();\r\nconf.setDebug(true);\r\nconf.setNumWorkers(2);\r\n\r\nLocalCluster cluster = new LocalCluster();\r\ncluster.submitTopology(\"test\", conf, builder.createTopology());\r\nUtils.sleep(10000);\r\ncluster.killTopology(\"test\");\r\ncluster.shutdown();</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	首先， 这个代码定义通过定义一个LocalCluster对象来定义一个进程内的集群。提交topology给这个虚拟的集群和提交topology给分布式集群是一样的。通过调用submitTopology方法来提交topology， 它接受三个参数：要运行的topology的名字，一个配置对象以及要运行的topology本身。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	topology的名字是用来唯一区别一个topology的，这样你然后可以用这个名字来杀死这个topology的。前面已经说过了， 你必须显式的杀掉一个topology， 否则它会一直运行。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	Conf对象可以配置很多东西， 下面两个是最常见的：\r\n</p>\r\n<ol style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n		TOPOLOGY_WORKERS(setNumWorkers) 定义你希望集群分配多少个工作进程给你来执行这个topology. topology里面的每个组件会被需要线程来执行。每个组件到底用多少个线程是通过setBolt和setSpout来指定的。这些线程都运行在工作进程里面. 每一个工作进程包含一些节点的一些工作线程。比如， 如果你指定300个线程，60个进程， 那么每个工作进程里面要执行6个线程， 而这6个线程可能属于不同的组件(Spout, Bolt)。你可以通过调整每个组件的并行度以及这些线程所在的进程数量来调整topology的性能。\r\n	</li>\r\n	<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n		TOPOLOGY_DEBUG(setDebug), 当它被设置成true的话， storm会记录下每个组件所发射的每条消息。这在本地环境调试topology很有用， 但是在线上这么做的话会影响性能的。\r\n	</li>\r\n</ol>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	感兴趣的话可以去看看<a href=\"http://nathanmarz.github.com/storm/doc/backtype/storm/Config.html\">Conf对象的Javadoc</a>去看看topology的所有配置。<br />\r\n可以看看<a href=\"http://xumingming.sinaapp.com/160/twitter-storm-%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e6%96%b0%e7%9a%84storm%e9%a1%b9%e7%9b%ae/\">创建一个新storm项目</a>去看看怎么配置开发环境以使你能够以本地模式运行topology.\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	流分组策略(Stream grouping)\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	流分组策略告诉topology如何在两个组件之间发送tuple。 要记住， spouts和bolts以很多task的形式在topology里面同步执行。如果从task的粒度来看一个运行的topology， 它应该是这样的:\r\n</p>\r\n<div id=\"attachment_145\" class=\"wp-caption alignnone\" style=\"background-color:#F1F1F1;border:0px;margin:0px 0px 20px;padding:4px;vertical-align:baseline;text-align:center;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<a href=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/10/topology-tasks.png\" class=\"thickbox no_icon\"><img class=\"size-full wp-image-145\" title=\"从task角度来看topology\" src=\"http://xumingming-wordpress.stor.sinaapp.com/uploads/2011/10/topology-tasks.png\" alt=\"从task角度来看topology\" width=\"320\" height=\"239\" style=\"height:auto;\" /></a>\r\n	<p class=\"wp-caption-text\" style=\"background-color:transparent;margin-left:5px;vertical-align:baseline;font-family:\'Helvetica Neue\', Arial, Helvetica, \'Nimbus Sans L\', sans-serif;color:#888888;font-size:12px;\">\r\n		从task角度来看topology\r\n	</p>\r\n</div>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	当Bolt A的一个task要发送一个tuple给Bolt B， 它应该发送给Bolt B的哪个task呢？<br />\r\nstream grouping专门回答这种问题的。在我们深入研究不同的stream grouping之前， 让我们看一下<a href=\"http://github.com/nathanmarz/storm-starter\">storm-starter</a>里面的另外一个topology。WordCountTopology读取一些句子， 输出句子里面每个单词出现的次数.\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">TopologyBuilder builder = new TopologyBuilder();\r\n\r\nbuilder.setSpout(1, new RandomSentenceSpout(), 5 );\r\nbuilder.setBolt(2, new SplitSentence(), 8 )\r\n        .shuffleGrouping(1);\r\nbuilder.setBolt(3, new WordCount(), 12)\r\n        .fieldsGrouping(2, new Fields(\"word\"));</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	SplitSentence对于句子里面的每个单词发射一个新的tuple, WordCount在内存里面维护一个单词-&gt;次数的mapping， WordCount每收到一个单词， 它就更新内存里面的统计状态。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	有好几种不同的stream grouping:\r\n</p>\r\n<ol style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n		最简单的grouping是shuffle grouping, 它随机发给任何一个task。上面例子里面RandomSentenceSpout和SplitSentence之间用的就是shuffle grouping, shuffle grouping对各个task的tuple分配的比较均匀。\r\n	</li>\r\n	<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n		一种更有趣的grouping是fields grouping, SplitSentence和WordCount之间使用的就是fields grouping, 这种grouping机制保证相同field值的tuple会去同一个task， 这对于WordCount来说非常关键，如果同一个单词不去同一个task， 那么统计出来的单词次数就不对了。\r\n	</li>\r\n</ol>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	<span style=\"background-color:transparent;vertical-align:baseline;\">fields grouping是stream合并，stream聚合以及很多其它场景的基础。在背后呢， fields grouping使用的一致性哈希来分配tuple的。</span>\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	还有一些其它类型的stream grouping. 你可以在Concepts一章里更详细的了解。\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	使用别的语言来定义Bolt\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	Bolt可以使用任何语言来定义。用其它语言定义的bolt会被当作子进程(subprocess)来执行， storm使用JSON消息通过stdin/stdout来和这些subprocess通信。这个通信协议是一个只有100行的库， storm团队给这些库开发了对应的Ruby, Python和Fancy版本。\r\n</p>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	下面是WordCountTopology里面的SplitSentence的定义:\r\n</p>\r\n<pre class=\"brush: java; title: ; notranslate\">public static class SplitSentence extends ShellBolt implements IRichBolt {\r\n    public SplitSentence() {\r\n        super(\"python\", \"splitsentence.py\");\r\n    }\r\n\r\n    public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n        declarer.declare(new Fields(\"word\"));\r\n    }\r\n}</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	SplitSentence继承自ShellBolt并且声明这个Bolt用python来运行，并且参数是: splitsentence.py。下面是splitsentence.py的定义:\r\n</p>\r\n<pre class=\"brush: python; title: ; notranslate\">import storm\r\n\r\nclass SplitSentenceBolt(storm.BasicBolt):\r\n    def process(self, tup):\r\n        words = tup.values[0].split(\" \")\r\n        for word in words:\r\n          storm.emit([word])\r\n\r\nSplitSentenceBolt().run()</pre>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	更多有关用其它语言定义Spout和Bolt的信息， 以及用其它语言来创建topology的 信息可以参见:&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Using-non-JVM-languages-with-Storm\">Using non-JVM languages with Storm</a>.\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	可靠的消息处理\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	在这个教程的前面，我们跳过了有关tuple的一些特征。这些特征就是storm的可靠性API： storm如何保证spout发出的每一个tuple都被完整处理。看看<a href=\"http://xumingming.sinaapp.com/127/twitter-storm%e5%a6%82%e4%bd%95%e4%bf%9d%e8%af%81%e6%b6%88%e6%81%af%e4%b8%8d%e4%b8%a2%e5%a4%b1/\">《storm如何保证消息不丢失》</a>以更深入了解storm的可靠性API.\r\n</p>\r\n<h2 style=\"background-color:#FFFFFF;vertical-align:baseline;font-weight:normal;font-family:Georgia, \'Bitstream Charter\', serif;\">\r\n	结论\r\n</h2>\r\n<p style=\"background-color:#FFFFFF;vertical-align:baseline;color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;\">\r\n	这个入门教程比较广泛的介绍了从开发，测试和部署一个topology. 文档的其它部分会深入介绍使用storm的各个方面。\r\n</p>',NULL,NULL,'2014-05-22 13:07:29',0,'Twitter Storm入门',0),(103,'admin',6,'<div>\r\n	作者: <a href=\"http://xumingming.sinaapp.com/\">xumingming</a> | 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明<br />\r\n网址: <a href=\"http://xumingming.sinaapp.com/149/twitter-storm-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/\">http://xumingming.sinaapp.com/149/twitter-storm-配置开发环境/</a> \r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	本文翻译自：<a href=\"https://github.com/nathanmarz/storm/wiki/Setting-up-development-environment\">https://github.com/nathanmarz/storm/wiki/Setting-up-development-environment</a> \r\n</p>\r\n<p>\r\n	这篇文章介绍了如何配置一个storm的开发环境， 总的来看有下面几个步骤：\r\n</p>\r\n<ol>\r\n	<li>\r\n		下载storm的<a href=\"http://github.com/nathanmarz/storm/downloads\">release版本</a>， 解压，并且把bin/目录加到环境变量PATH里面去。\r\n	</li>\r\n	<li>\r\n		为了让我们可以启动/停止远端storm集群上的topology, 把集群的信息配置在~/.storm/storm.yaml里面。\r\n	</li>\r\n</ol>\r\n<p>\r\n	下面具体介绍。\r\n</p>\r\n<h2>\r\n	storm开发环境到底是个什么样子\r\n</h2>\r\n<p>\r\n	storm有两种操作模式: 本地模式和远程模式。使用本地模式的时候，你可以在你的本地机器上开发测试你的topology， 一切都在你的本地机器上模拟出来; 用远端模式的时候你提交的topology会在一个集群的机器上执行。\r\n</p>\r\n<p>\r\n	一个storm开发环境安装了你使用本地模式开发测试topology; 把topology打包以部署到远端的集群; 提交，终止远端集群上的topology所需要的一切东西。\r\n</p>\r\n<p>\r\n	让我们快速看一下你的机器和远端storm集群之间的关系。storm集群是被一个称作Nimbus的控制节点所管理的。你的机器与nimbus通信以提交topology的代码，运行这个topology，而nimbus会自动在集群内部分发你的topology代码， 分配任务给各个机器。你的机器使用一个称为storm的客户端去和nimbus通信。storm只有在远程模式的时候才有用； 对于用本地模式开发、测试topology来说是没什么用的。\r\n</p>\r\n<h2>\r\n	在本地机器安装一个storm\r\n</h2>\r\n<p>\r\n	如果你想从你的机器提交topology给远端的storm集群， 你应该在你的本地安装一个storm发行版。安装了storm发行版之后你会得到你和远端集群通信的工具: storm。为了在本地安装storm, 从<a href=\"https://github.com/nathanmarz/storm/downloads\">这里</a>下载代码，并且把它解压到你机器上的一个目录。然后把bin/目录添加到环境变量PATH里面去并且使bin/storm有可执行权限。\r\n</p>\r\n<p>\r\n	安装一个storm发行版只是用来和远端storm集群通信用的。而为了用本地模式开发测试topology， 我们推荐你使用maven来把storm作为你的项目的一个dev依赖。关于使用Maven开发storm项目可以看这篇文章：<a href=\"http://xumingming.sinaapp.com/170/twitter-storm-maven%E9%85%8D%E7%BD%AE/\">Maven</a>。\r\n</p>\r\n<h2>\r\n	在一个远端集群里面启动/终止topology\r\n</h2>\r\n<p>\r\n	前面一个步骤在你的机器上安装了可以和远端集群通信用的storm客户端。现在你只需要告诉你的storm客户端和哪个集群进行通信。把你集群的控制节点的地址指定在~/.storm/storm.yaml里面就可以了：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<a href=\"http://xumingming.sinaapp.com/149/twitter-storm-%e9%85%8d%e7%bd%ae%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83/#\">帮助</a>\r\n		</div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							1\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								nimbus.host:\"123.45.678.890\"\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	或者你也可以使用storm-deploy项目来操作AWS上面的storm集群， 它会自动设置好你的~/.storm/storm.yaml文件。你可以手动“添加”一个集群（或者在多个集群之间进行切换） — 使用”attach”命令:\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<a href=\"http://xumingming.sinaapp.com/149/twitter-storm-%e9%85%8d%e7%bd%ae%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83/#\">帮助</a>\r\n		</div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							1\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								lein run :deploy --attach --name mystormcluster\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	更多关于storm-deploy的信息看<a href=\"https://github.com/nathanmarz/storm-deploy/wiki\">这里</a>。\r\n</p>',NULL,'2014-05-22 13:08:30','2014-05-22 13:08:12',0,'Twitter Storm: 配置开发环境',0),(104,'admin',6,'<div>\r\n	作者:&nbsp;<a href=\"http://xumingming.sinaapp.com/\">xumingming</a>&nbsp;| 可以转载, 但必须以超链接形式标明文章原始出处和作者信息及版权声明<br />\r\n网址:&nbsp;<a href=\"http://xumingming.sinaapp.com/160/twitter-storm-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84storm%E9%A1%B9%E7%9B%AE/\">http://xumingming.sinaapp.com/160/twitter-storm-创建一个新的storm项目/</a> \r\n</div>\r\n<p>\r\n	&nbsp;<br />\r\n这篇文章翻译自:&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Creating-a-new-Storm-project\">https://github.com/nathanmarz/storm/wiki/Creating-a-new-Storm-project</a> \r\n</p>\r\n<p>\r\n	这篇文章主要介绍如何新建一个storm项目， 主要步骤:\r\n</p>\r\n<ol>\r\n	<li>\r\n		把storm的jar包加到classpath里面去。\r\n	</li>\r\n	<li>\r\n		如果使用storm的多语言特性的话， 把multilang目录也加到classpath里面去。\r\n	</li>\r\n</ol>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	把storm jar包添加到classapth里面\r\n</h2>\r\n<p>\r\n	为了开发storm项目你的classpath里面需要有storm的jar包。最推荐的方式是使用<a href=\"https://github.com/nathanmarz/storm/wiki/Maven\">Maven</a>， 不使用maven的话你可以手动把storm发行版里面的所有的jar包添加到classpath。\r\n</p>\r\n<p>\r\n	<a href=\"http://github.com/nathanmarz/storm-starter\">storm-starter</a>项目使用<a href=\"http://github.com/technomancy/leiningen\">Leiningen</a>作为build和依赖管理工具，你可以下载这个<a href=\"https://raw.github.com/technomancy/leiningen/stable/bin/lein\">脚本</a>来安装Leiningen, 把它加入到你的PATH， 使它可执行。要拉取storm的所有依赖包， 简单地在项目的根目录执行lein deps就可以了。\r\n</p>\r\n<p>\r\n	要在eclipse里面设置storm的classpath的话， 以src/jvm作为源代码路径建立一个新的项目并且把lib，lib/jvm里面所有的jar包都添加到这个项目的Referenced Libraries里面去。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<h2>\r\n	如果要使用多语言特性， 把mutltilang添加到classpath里面去\r\n</h2>\r\n<p>\r\n	如果你用非java的其它语言来实现你的spout和bolt(storm里面的两个关键对象), 那么你的实现要放在这个项目的multilang/resources目录下面。为了让storm在本地模式下能找到这些文件， multilang目录要放到classpath里面去。在eclipse里面你可以通过把multilang目录设置成源代码目录来达到这个目的。\r\n</p>\r\n<p>\r\n	更多关于用非java语言来编写spout和bolt的信息可以看一下:&nbsp;<a href=\"https://github.com/nathanmarz/storm/wiki/Using-non-JVM-languages-with-Storm\">Using non-JVM languages with Storm</a>。\r\n</p>\r\n<p>\r\n	为了在eclipse测试所有的东西是不是都配置好了， 你可以运行一下WordCountTopology这个类， 如果正常的话， 你可以看到它发射十秒钟消息。\r\n</p>',NULL,NULL,'2014-05-22 13:09:02',0,'Twitter Storm: 创建一个新的storm项目',0),(105,'admin',6,'<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	本文翻译自《<a href=\"http://ifeve.com/wp-content/uploads/2014/03/Getting-Started-With-Storm-Jonathan-Leibiusky-Gabriel-E_1276.pdf\" target=\"_blank\">Getting Started With Storm</a>》&nbsp;&nbsp;译者：<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn\" target=\"_blank\">吴京润</a> 编辑：方腾飞\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>准备开始</strong> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	在本章，我们要创建一个Storm工程和我们的第一个Storm拓扑结构。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE</strong>: 下面假设你的JRE版本在1.6以上。我们推荐Oracle提供的JRE。你可以到<a href=\"http://www.java%20.com/downloads/\">http://www.java .com/downloads/</a>下载。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>操作模式</strong> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	开始之前，有必要了解一下Storm的操作模式。有下面两种方式。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>本地模式</strong> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	在本地模式下，Storm拓扑结构运行在本地计算机的单一JVM进程上。这个模式用于开发、测试以及调试，因为这是观察所有组件如何协同工作的最简单方法。在这种模式下，我们可以调整参数，观察我们的拓扑结构如何在不同的Storm配置环境下运行。要在本地模式下运行，我们要下载Storm开发依赖，以便用来开发并测试我们的拓扑结构。我们创建了第一个Storm工程以后，很快就会明白如何使用本地模式了。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<span id=\"more-10677\"></span> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE</strong>: 在本地模式下，跟在集群环境运行很像。不过很有必要确认一下所有组件都是线程安全的，因为当把它们部署到远程模式时它们可能会运行在不同的JVM进程甚至不同的物理机上，这个时候它们之间没有直接的通讯或共享内存。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	我们要在本地模式运行本章的所有例子。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>远程模式</strong> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	在远程模式下，我们向Storm集群提交拓扑，它通常由许多运行在不同机器上的流程组成。远程模式不会出现调试信息， 因此它也称作生产模式。不过在单一开发机上建立一个Storm集群是一个好主意，可以在部署到生产环境之前，用来确认拓扑在集群环境下没有任何问题。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	你将在<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter6/A%20RealLife%20Example.md\">第六章</a>学到更多关于远程模式的内容，并在<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/appendix/B.md\">附录B</a>学到如何安装一个Storm集群。\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#hello-world\"><strong>Hello World</strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	我们在这个工程里创建一个简单的拓扑，数单词数量。我们可以把这个看作Storm的“Hello World”。不过，这是一个非常强大的拓扑，因为它能够扩展到几乎无限大的规模，而且只需要做一些小修改，就能用它构建一个统计系统。举个例子，我们可以修改一下工程用来找出Twitter上的热点话题。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	要创建这个拓扑，我们要用一个<em>spout</em>读取文本，第一个<em>bolt</em>用来标准化单词，第二个<em>bolt</em>为单词计数，如图2-1所示。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"http://ifeve.com/storm%e5%85%a5%e9%97%a8-%e7%ac%ac%e4%ba%8c%e7%ab%a0%e5%87%86%e5%a4%87%e5%bc%80%e5%a7%8b/figure-2-1-getting-started-topology/\"><img class=\"aligncenter size-medium wp-image-10678\" alt=\"\" src=\"/upload/image/20140523/20140523002719_300.png\" width=\"300\" height=\"88\" style=\"height:auto;width:auto;\" /></a> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	你可以从这个网址下载源码压缩包，<a href=\"https://github.com/%20storm-book/examples-ch02-getting_started/zipball/master\"> https://github.com/ storm-book/examples-ch02-getting_started/zipball/master</a>。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE</strong>: 如果你使用<a href=\"http://git-scm.com/\">git</a>（一个分布式版本控制与源码管理工具），你可以执行git clone <a href=\"mailto:git@github.com\">git@github.com</a>:storm-book/examples-ch02-getting_started.git，把源码检出到你指定的目录。\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#java%E5%AE%89%E8%A3%85%E6%A3%80%E6%9F%A5\"><strong>Java安装检查</strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	构建Storm运行环境的第一步是检查你安装的Java版本。打开一个控制台窗口并执行命令：java -version。控制台应该会显示出类似如下的内容：\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    java -version\r\n\r\n    java version \"1.6.0_26\"\r\n    Java(TM) SE Runtime Enviroment (build 1.6.0_26-b03)\r\n\r\n    Java HotSpot(TM) Server VM (build 20.1-b02, mixed mode)</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	如果不是上述内容，检查你的Java安装情况。（参考<a href=\"http://www.java.com/download/\">http://www.java.com/download/</a>）\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B\"><strong>创建工程</strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	开始之前，先为这个应用建一个目录（就像你平常为Java应用做的那样）。这个目录用来存放工程源码。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	接下来我们要下载Storm依赖包，这是一些jar包，我们要把它们添加到应用类路径中。你可以采用如下两种方式之一完成这一步：\r\n</p>\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		下载所有依赖，解压缩它们，把它 们添加到类路径\r\n	</li>\r\n	<li>\r\n		使用<em><a href=\"http://maven.apache.org/\">Apache Maven</a></em> \r\n	</li>\r\n</ul>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE</strong>: Maven是一个软件项目管理的综合工具。它可以用来管理项目的开发周期的许多方面，从包依赖到版本发布过程。在这本书中，我们将广泛使用它。如果要检查是否已经安装了maven，在命令行运行mvn。如果没有安装你可以从<a href=\"http://maven.apache.org/download.html\">http://maven.apache.org/download.html</a>下载。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	没有必要先成为一个Maven专家才能使用Storm，不过了解一下关于Maven工作方式的基础知识仍然会对你有所帮助。你可以在Apache Maven的网站上找到更多的信息（<a href=\"http://maven.apache.org/\">http://maven.apache.org/</a>）。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE:</strong> Storm的Maven依赖引用了运行Storm本地模式的所有库。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	要运行我们的拓扑，我们可以编写一个包含基本组件的pom.xml文件。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    4.0.0storm.bookGetting-Started0.0.1-SNAPSHOTorg.apache.maven.pluginsmaven-compiler-plugin2.3.21.61.61.6<!-- Repository where we can found the storm dependencies -->clojars.orghttp://clojars.org/repo<!-- Storm Dependency -->stormstorm0.6.0</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	开头几行指定了工程名称和版本号。然后我们添加了一个编译器插件，告知Maven我们的代码要用Java1.6编译。接下来我们定义了Maven仓库（Maven支持为同一个工程指定多个仓库）。clojars是存放Storm依赖的仓库。Maven会为运行本地模式自动下载必要的所有子包依赖。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	一个典型的Maven Java工程会拥有如下结构：\r\n</p>\r\n<pre>我们的应用目录/\r\n             ├── pom.xml\r\n             └── src\r\n                   └── main\r\n                      └── java\r\n                   |  ├── spouts\r\n                   |  └── bolts\r\n                   └── resources</pre>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	java目录下的子目录包含我们的代码，我们把要统计单词数的文件保存在resource目录下。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE</strong>：命令mkdir -p 会创建所有需要的父目录。\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#%E5%88%9B%E5%BB%BA%E6%88%91%E4%BB%AC%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%8B%93%E6%89%91\"><strong>创建我们的第一个Topology</strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	我们将为运行单词计数创建所有必要的类。可能这个例子中的某些部分，现在无法讲的很清楚，不过我们会在随后的章节做进一步的讲解。\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#spout\"><strong><em>Spout</em></strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<em>pout</em> WordReader类实现了IRichSpout接口。我们将在<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter4/Spouts.md\">第四章</a>看到更多细节。WordReader负责从文件按行读取文本，并把文本行提供给第一个<em>bolt</em>。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE:</strong> 一个<em>spout</em>发布一个定义域列表。这个架构允许你使用不同的<em>bolts</em>从同一个<em>spout</em>流读取数据，它们的输出也可作为其它<em>bolts</em>的定义域，以此类推。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	例2-1包含WordRead类的完整代码（我们将会分析下述代码的每一部分）。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>       /**\r\n         *  例2-1.src/main/java/spouts/WordReader.java\r\n         */\r\n        package spouts;\r\n\r\n        import java.io.BufferedReader;\r\n        import java.io.FileNotFoundException;\r\n        import java.io.FileReader;\r\n        import java.util.Map;\r\n        import backtype.storm.spout.SpoutOutputCollector;\r\n        import backtype.storm.task.TopologyContext;\r\n        import backtype.storm.topology.IRichSpout;\r\n        import backtype.storm.topology.OutputFieldsDeclarer;\r\n        import backtype.storm.tuple.Fields;\r\n        import backtype.storm.tuple.Values;\r\n\r\n        public class WordReader implements IRichSpout {\r\n            private SpoutOutputCollector collector;\r\n            private FileReader fileReader;\r\n            private boolean completed = false;\r\n            private TopologyContext context;\r\n            public boolean isDistributed() {return false;}\r\n            public void ack(Object msgId) {\r\n                    System.out.println(\"OK:\"+msgId);\r\n            }\r\n            public void close() {}\r\n            public void fail(Object msgId) {\r\n                 System.out.println(\"FAIL:\"+msgId);\r\n            }\r\n            /**\r\n             * 这个方法做的惟一一件事情就是分发文件中的文本行\r\n             */\r\n            public void nextTuple() {\r\n            /**\r\n             * 这个方法会不断的被调用，直到整个文件都读完了，我们将等待并返回。\r\n             */\r\n                 if(completed){\r\n                     try {\r\n                         Thread.sleep(1000);\r\n                     } catch (InterruptedException e) {\r\n                         //什么也不做\r\n                     }\r\n                    return;\r\n                 }\r\n                 String str;\r\n                 //创建reader\r\n                 BufferedReader reader = new BufferedReader(fileReader);\r\n                 try{\r\n                     //读所有文本行\r\n                    while((str = reader.readLine()) != null){\r\n                     /**\r\n                      * 按行发布一个新值\r\n                      */\r\n                         this.collector.emit(new Values(str),str);\r\n                     }\r\n                 }catch(Exception e){\r\n                     throw new RuntimeException(\"Error reading tuple\",e);\r\n                 }finally{\r\n                     completed = true;\r\n                 }\r\n             }\r\n             /**\r\n              * 我们将创建一个文件并维持一个collector对象\r\n              */\r\n             public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {\r\n                     try {\r\n                         this.context = context;\r\n                         this.fileReader = new FileReader(conf.get(\"wordsFile\").toString());\r\n                     } catch (FileNotFoundException e) {\r\n                         throw new RuntimeException(\"Error reading file [\"+conf.get(\"wordFile\")+\"]\");\r\n                     }\r\n                     this.collector = collector;\r\n             }\r\n             /**\r\n              * 声明输入域\"word\"\r\n              */\r\n             public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n                 declarer.declare(new Fields(\"line\"));\r\n             }\r\n        }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	第一个被调用的<em>spout</em>方法都是<strong>public void open(Map conf, TopologyContext context, SpoutOutputCollector collector)</strong>。它接收如下参数：配置对象，在定义topology对象是创建；TopologyContext对象，包含所有拓扑数据；还有SpoutOutputCollector对象，它能让我们发布交给<em>bolts</em>处理的数据。下面的代码主是这个方法的实现。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    public void open(Map conf, TopologyContext context,\r\n        SpoutOutputCollector collector) {\r\n        try {\r\n            this.context = context;\r\n            this.fileReader = new FileReader(conf.get(\"wordsFile\").toString());\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(\"Error reading file [\"+conf.get(\"wordFile\")+\"]\");\r\n        }\r\n        this.collector = collector;\r\n    }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	我们在这个方法里创建了一个FileReader对象，用来读取文件。接下来我们要实现<strong>public void nextTuple()</strong>，我们要通过它向<em>bolts</em>发布待处理的数据。在这个例子里，这个方法要读取文件并逐行发布数据。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    public void nextTuple() {\r\n        if(completed){\r\n            try {\r\n                Thread.sleep(1);\r\n            } catch (InterruptedException e) {\r\n                //什么也不做\r\n            }\r\n            return;\r\n        }\r\n        String str;\r\n        BufferedReader reader = new BufferedReader(fileReader);\r\n        try{\r\n            while((str = reader.readLine()) != null){\r\n                this.collector.emit(new Values(str));\r\n            }\r\n        }catch(Exception e){\r\n            throw new RuntimeException(\"Error reading tuple\",e);\r\n        }finally{\r\n            completed = true;\r\n        }\r\n    }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE:</strong> Values是一个ArrarList实现，它的元素就是传入构造器的参数。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>nextTuple()</strong>会在同一个循环内被<strong>ack()</strong>和<strong>fail()</strong>周期性的调用。没有任务时它必须释放对线程的控制，其它方法才有机会得以执行。因此nextTuple的第一行就要检查是否已处理完成。如果完成了，为了降低处理器负载，会在返回前休眠一毫秒。如果任务完成了，文件中的每一行都已被读出并分发了。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE:</strong>元组(tuple)是一个具名值列表，它可以是任意java对象（只要它是可序列化的）。默认情况，Storm会序列化字符串、字节数组、ArrayList、HashMap和HashSet等类型。\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#bolts\"><strong>Bolts</strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	现在我们有了一个<em>spout</em>，用来按行读取文件并每行发布一个<em>元组</em>，还要创建两个<em>bolts</em>，用来处理它们（看图2-1）。<em>bolts</em>实现了接口<strong>backtype.storm.topology.IRichBolt</strong>。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<em>bolt</em>最重要的方法是<strong>void execute(Tuple input)</strong>，每次接收到元组时都会被调用一次，还会再发布若干个元组。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE:</strong> 只要必要，<em>bolt</em>或<em>spout</em>会发布若干元组。当调用<strong>nextTuple</strong>或<strong>execute</strong>方法时，它们可能会发布0个、1个或许多个元组。你将在<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter5/Bolts.md\">第五章</a>学习更多这方面的内容。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	第一个<em>bolt</em>，<strong>WordNormalizer</strong>，负责得到并标准化每行文本。它把文本行切分成单词，大写转化成小写，去掉头尾空白符。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	首先我们要声明<em>bolt</em>的出参：\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    public void declareOutputFields(OutputFieldsDeclarer declarer){\r\n        declarer.declare(new Fields(\"word\"));\r\n    }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	这里我们声明<em>bolt</em>将发布一个名为“word”的域。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	下一步我们实现<strong>public void execute(Tuple input)</strong>，处理传入的元组：\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    public void execute(Tuple input){\r\n        String sentence=input.getString(0);\r\n        String[] words=sentence.split(\" \");\r\n        for(String word : words){\r\n            word=word.trim();\r\n            if(!word.isEmpty()){\r\n                word=word.toLowerCase();\r\n                //发布这个单词\r\n                collector.emit(new Values(word));\r\n            }\r\n        }\r\n        //对元组做出应答\r\n        collector.ack(input);\r\n    }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	第一行从元组读取值。值可以按位置或名称读取。接下来值被处理并用collector对象发布。最后，每次都调用collector对象的<strong>ack()</strong>方法确认已成功处理了一个元组。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	例2-2是这个类的完整代码。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    //例2-2 src/main/java/bolts/WordNormalizer.java\r\n    package bolts;\r\n    import java.util.ArrayList;\r\n    import java.util.List;\r\n    import java.util.Map;\r\n    import backtype.storm.task.OutputCollector;\r\n    import backtype.storm.task.TopologyContext;\r\n    import backtype.storm.topology.IRichBolt;\r\n    import backtype.storm.topology.OutputFieldsDeclarer;\r\n    import backtype.storm.tuple.Fields;\r\n    import backtype.storm.tuple.Tuple;\r\n    import backtype.storm.tuple.Values;\r\n    public class WordNormalizer implements IRichBolt{\r\n        private OutputCollector collector;\r\n        public void cleanup(){}\r\n        /**\r\n          * *bolt*从单词文件接收到文本行，并标准化它。\r\n          * 文本行会全部转化成小写，并切分它，从中得到所有单词。\r\n         */\r\n        public void execute(Tuple input){\r\n            String sentence = input.getString(0);\r\n            String[] words = sentence.split(\" \");\r\n            for(String word : words){\r\n                word = word.trim();\r\n                if(!word.isEmpty()){\r\n                    word=word.toLowerCase();\r\n                    //发布这个单词\r\n                    List a = new ArrayList();\r\n                    a.add(input);\r\n                    collector.emit(a,new Values(word));\r\n                }\r\n            }\r\n            //对元组做出应答\r\n            collector.ack(input);\r\n        }\r\n        public void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {\r\n            this.collector=collector;\r\n        }\r\n\r\n        /**\r\n          * 这个*bolt*只会发布“word”域\r\n          */\r\n        public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n            declarer.declare(new Fields(\"word\"));\r\n        }\r\n    }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE:</strong>通过这个例子，我们了解了在一次<strong>execute</strong>调用中发布多个元组。如果这个方法在一次调用中接收到句子“This is the Storm book”，它将会发布五个元组。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	下一个<em>bolt</em>，<strong>WordCounter</strong>，负责为单词计数。这个拓扑结束时（<strong>cleanup()</strong>方法被调用时），我们将显示每个单词的数量。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE</strong>: 这个例子的<em>bolt</em>什么也没发布，它把数据保存在map里，但是在真实的场景中可以把数据保存到数据库。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>package bolts;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport backtype.storm.task.OutputCollector;\r\nimport backtype.storm.task.TopologyContext;\r\nimport backtype.storm.topology.IRichBolt;\r\nimport backtype.storm.topology.OutputFieldsDeclarer;\r\nimport backtype.storm.tuple.Tuple;\r\n\r\npublic class WordCounter implements IRichBolt{\r\n    Integer id;\r\n    String name;\r\n    Map<string,integer> counters;\r\n    private OutputCollector collector;\r\n\r\n    /**\r\n      * 这个spout结束时（集群关闭的时候），我们会显示单词数量\r\n      */\r\n    @Override\r\n    public void cleanup(){\r\n        System.out.println(\"-- 单词数 【\"+name+\"-\"+id+\"】 --\");\r\n        for(Map.Entry<string,integer> entry : counters.entrySet()){\r\n            System.out.println(entry.getKey()+\": \"+entry.getValue());\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  为每个单词计数\r\n     */\r\n    @Override\r\n    public void execute(Tuple input) {\r\n        String str=input.getString(0);\r\n        /**\r\n         * 如果单词尚不存在于map，我们就创建一个，如果已在，我们就为它加1\r\n         */\r\n        if(!counters.containsKey(str)){\r\n            conters.put(str,1);\r\n        }else{\r\n            Integer c = counters.get(str) + 1;\r\n            counters.put(str,c);\r\n        }\r\n        //对元组作为应答\r\n        collector.ack(input);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    @Override\r\n    public void prepare(Map stormConf, TopologyContext context, OutputCollector collector){\r\n        this.counters = new HashMap<string, integer=\"\">();\r\n        this.collector = collector;\r\n        this.name = context.getThisComponentId();\r\n        this.id = context.getThisTaskId();\r\n    }\r\n\r\n    @Override\r\n    public void declareOutputFields(OutputFieldsDeclarer declarer) {}\r\n}</string,></string,integer></string,integer></pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	execute方法使用一个map收集单词并计数。拓扑结束时，将调用<strong>clearup()</strong>方法打印计数器map。（虽然这只是一个例子，但是通常情况下，当拓扑关闭时，你应当使用<strong>cleanup()</strong>方法关闭活动的连接和其它资源。）\r\n</p>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#%E4%B8%BB%E7%B1%BB\"><strong>主类</strong></a> \r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	你可以在主类中创建拓扑和一个本地集群对象，以便于在本地测试和调试。<strong>LocalCluster</strong>可以通过<strong>Config</strong>对象，让你尝试不同的集群配置。比如，当使用不同数量的工作进程测试你的拓扑时，如果不小心使用了某个全局变量或类变量，你就能够发现错误。（更多内容请见<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter3/Topologies.md\">第三章</a>）\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>NOTE：</strong>所有拓扑节点的各个进程必须能够独立运行，而不依赖共享数据（也就是没有全局变量或类变量），因为当拓扑运行在真实的集群环境时，这些进程可能会运行在不同的机器上。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	接下来，<strong>TopologyBuilder</strong>将用来创建拓扑，它决定Storm如何安排各节点，以及它们交换数据的方式。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    TopologyBuilder builder = new TopologyBuilder();\r\n    builder.setSpout(\"word-reader\", new WordReader());\r\n    builder.setBolt(\"word-normalizer\", new WordNormalizer()).shuffleGrouping(\"word-reader\");\r\n    builder.setBolt(\"word-counter\", new WordCounter())..shuffleGrouping(\"word-normalizer\");</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	在<em>spout</em>和<em>bolts</em>之间通过<strong>shuffleGrouping</strong>方法连接。这种分组方式决定了Storm会以随机分配方式从源节点向目标节点发送消息。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	下一步，创建一个包含拓扑配置的<strong>Config</strong>对象，它会在运行时与集群配置合并，并通过<strong>prepare</strong>方法发送给所有节点。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    Config conf = new Config();\r\n    conf.put(\"wordsFile\", args[0]);\r\n    conf.setDebug(true);</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	由<em>spout</em>读取的文件的文件名，赋值给<strong>wordFile</strong>属性。由于是在开发阶段，设置<strong>debug</strong>属性为<strong>true</strong>，Strom会打印节点间交换的所有消息，以及其它有助于理解拓扑运行方式的调试数据。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	正如之前讲过的，你要用一个<strong>LocalCluster</strong>对象运行这个拓扑。在生产环境中，拓扑会持续运行，不过对于这个例子而言，你只要运行它几秒钟就能看到结果。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    LocalCluster cluster = new LocalCluster();\r\n    cluster.submitTopology(\"Getting-Started-Topologie\", conf, builder.createTopology());\r\n    Thread.sleep(2000);\r\n    cluster.shutdown();</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	调用<strong>createTopology</strong>和<strong>submitTopology</strong>，运行拓扑，休眠两秒钟（拓扑在另外的线程运行），然后关闭集群。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	例2-3是完整的代码\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    //例2-3 src/main/java/TopologyMain.java\r\n    import spouts.WordReader;\r\n    import backtype.storm.Config;\r\n    import backtype.storm.LocalCluster;\r\n    import backtype.storm.topology.TopologyBuilder;\r\n    import backtype.storm.tuple.Fields;\r\n    import bolts.WordCounter;\r\n    import bolts.WordNormalizer;\r\n\r\n    public class TopologyMain {\r\n        public static void main(String[] args) throws InterruptedException {\r\n        //定义拓扑\r\n            TopologyBuilder builder = new TopologyBuilder());\r\n            builder.setSpout(\"word-reader\", new WordReader());\r\n            builder.setBolt(\"word-normalizer\", new WordNormalizer()).shuffleGrouping(\"word-reader\");\r\n            builder.setBolt(\"word-counter\", new WordCounter(),2).fieldsGrouping(\"word-normalizer\", new Fields(\"word\"));\r\n\r\n        //配置\r\n            Config conf = new Config();\r\n            conf.put(\"wordsFile\", args[0]);\r\n            conf.setDebug(false);\r\n\r\n        //运行拓扑\r\n             conf.put(Config.TOPOLOGY_MAX_SPOUT_PENDING, 1);\r\n            LocalCluster cluster = new LocalCluster();\r\n            cluster.submitTopology(\"Getting-Started-Topologie\", conf, builder.createTopology();\r\n            Thread.sleep(1000);\r\n            cluster.shutdown();\r\n        }\r\n    }</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#%E8%A7%82%E5%AF%9F%E8%BF%90%E8%A1%8C%E6%83%85%E5%86%B5\"><strong>观察运行情况</strong></a> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	你已经为运行你的第一个拓扑准备好了。在这个目录下面创建一个文件，<strong>/src/main/resources/words.txt</strong>，一个单词一行，然后用下面的命令运行这个拓扑：<strong>mvn exec:java -Dexec.mainClass=”TopologyMain” -Dexec.args=”src/main/resources/words.txt</strong>。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	举个例子，如果你的<em>words.txt</em>文件有如下内容： <strong>Storm test are great is an Storm simple application but very powerful really Storm is great</strong> 你应该会在日志中看到类似下面的内容： <strong>is: 2 application: 1 but: 1 great: 1 test: 1 simple: 1 Storm: 3 really: 1 are: 1 great: 1 an: 1 powerful: 1 very: 1</strong> 在这个例子中，每类节点只有一个实例。但是如果你有一个非常大的日志文件呢？你能够很轻松的改变系统中的节点数量实现并行工作。这个时候，你就要创建两个<strong>WordCounter</strong>实例。\r\n</p>\r\n<div style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n<pre>    builder.setBolt(\"word-counter\", new WordCounter(),2).shuffleGrouping(\"word-normalizer\");</pre>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	程序返回时，你将看到： <strong>– 单词数 【word-counter-2】 — application: 1 is: 1 great: 1 are: 1 powerful: 1 Storm: 3 — 单词数 [word-counter-3] — really: 1 is: 1 but: 1 great: 1 test: 1 simple: 1 an: 1 very: 1</strong> 棒极了！修改并行度实在是太容易了（当然对于实际情况来说，每个实例都会运行在单独的机器上）。不过似乎有一个问题：单词<em>is</em>和<em>great</em>分别在每个<strong>WordCounter</strong>各计数一次。怎么会这样？当你调用<strong>shuffleGrouping</strong>时，就决定了Storm会以随机分配的方式向你的<em>bolt</em>实例发送消息。在这个例子中，理想的做法是相同的单词问题发送给同一个<strong>WordCounter</strong>实例。你把<strong>shuffleGrouping(“word-normalizer”)</strong>换成<strong>fieldsGrouping(“word-normalizer”, new Fields(“word”))</strong>就能达到目的。试一试，重新运行程序，确认结果。 你将在后续章节学习更多分组方式和消息流类型。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"https://github.com/runfriends/GettingStartedWithStorm-cn/blob/master/chapter2/Hello%20World%20Storm.md#%E7%BB%93%E8%AE%BA\"><strong>结论</strong> </a> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	我们已经讨论了Storm的本地和远程操作模式之间的不同，以及Storm的强大和易于开发的特性。你也学习了一些Storm的基本概念，我们将在后续章节深入讲解它们。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<em> </em> \r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		<strong>原创文章转载请注明出处</strong>：<a href=\"http://ifeve.com/getting-started-with-storm-2/\">Storm入门 第二章准备开始</a> \r\n	</li>\r\n</ul>',NULL,'2014-05-23 00:27:23','2014-05-22 14:36:43',0,'Storm入门 第二章准备开始',0),(106,'admin',16,'<div style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;text-align:center;\">\r\n	<img border=\"0\" src=\"http://www.blogcdn.com/cn.engadget.com/media/2011/04/charlesbabbage.jpg\" alt=\"\" /> \r\n</div>\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">查尔斯．巴贝奇（Charles Babbage）生于 1791 年，卒于 1871 年，是活跃于十九世纪的数学家、发明家兼机械工程师。那是个人们相信机械的力量可以做到一切的时代，源自于工业时代的进步带来了蒸汽机和各种机械装置，将人们从各种劳动中解放了出来。就是在这样的环境下，巴贝奇开始了对数学制表的机械化的研究 -- 在那个没有计算器和计算机的时代，很多计算最快的方式其实是用查表的，但是靠人工来制表不仅费时费力，而且难免会有计算错误、抄写错误、校对错误、印制错误等各式各样的问题。巴贝奇在剑桥求学（地名，不是学校）时，发现到了这个现象，于是就将改善制表时的各种问题当作了毕生的志业。</span><br />\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">听起来这么厉害的人，我们都应该读过他的传记了啊？为什么最后这个名字却没有多少人知道呢？那是因为很可惜的，最后他因为经费、个性、大环境等种种因素而失败了，没能在十九世纪就掀起一次计算器革命。然而他的想法和图纸却留了下来，让我们有机会可以一探这位天才在几乎 200 年前的维多利亚时代，是如何差一点改变了世界。让我们一起来看看巴贝奇的计算器吧！</span><br />\r\n<p style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	<strong>什么是差分机？</strong><br />\r\n<br />\r\n差分机又称差分引擎（Difference Engine），是巴贝奇毕生的研究所在。和你想象的可能有些不同，这其实并不是一台一般意义上的「计算器」 -- 当时可以做简单的加减乘除的机械装置已经存在，而巴贝奇的机器也没打算和他们抢工作。准确的说，巴贝奇的机器是一台「多项式求值机」，只要将欲求值的一元多次方程式输入到机器里，机器每运转一轮，就能产生出一个值来。假设我们以 F(x) = x²+4 做为例子好了，差分引擎吐出来的结果，就会是 F(1) = 5，F(2) = 8，F(3) = 13，F(4) =20...etc. 直到系统停止为止。机器运作最重要的基础，在于其实要求值，完全只需要用到加减法而已喔！\r\n</p>\r\n<div style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;text-align:center;\">\r\n	<img border=\"0\" src=\"http://www.blogcdn.com/cn.engadget.com/media/2010/10/difference.jpg\" id=\"vimage_3504062\" alt=\"\" /> \r\n</div>\r\n<div style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\n	上图同样是 F(x) = x²+4 的例子。第一步是先算出 F(1) 和 F(2) 的值之间的差（8-5=3），称为第一阶差（ First Difference）。如果这个值和 F(2) 及 F(3) 之间的差（13-8=5）不同的话，就拿这两个第一阶差再算一次差（ 5-3=2），称为第二阶差（ Second Difference）。在这个例子里，第二阶差每一个都是 2，所以就不用再计算下去了。一次方程式最多只会有第一阶差，二次会到第二阶差，N 次会到 N 阶差...etc。一但有了一个固定不变的差数后，就可以开始往前推算回去，接下来的每一个值，就是将差数和前一阶的上一个值相加，即可获得。例如求 F(4) 时，先将 2 加上上一阶差的值 5 得到 7，再将 7 加上 F(3) 的值 13，就会得到 F(4) = 20，以此类推。以人类的角度来看似乎略显得有些啰嗦，但这正是最适合机械计算的结构了。\r\n</div>\r\n<br />\r\n<strong>差分机引擎一号</strong><br />\r\n<div style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;text-align:center;\">\r\n	<br />\r\n<img border=\"0\" src=\"http://www.blogcdn.com/cn.engadget.com/media/2010/10/3-1.jpg\" id=\"vimage_3504088\" alt=\"\" /> \r\n</div>\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">巴贝奇的想法很简单，他想要造一台机器，从计算一直到最后印结果全部都自动化，在减少人工的同时，全面地消除可能出错的一切问题点。他开始设计的第一台机器称为差分机引擎一号（Difference Engine No.1），由英国政府补助出资，工匠 Joseph Clement 打造，预计完工后将有 25,000 个零件，重 15 吨。可惜，一方面是因为大量精密零件制造困难，加上巴贝奇不停地边制造边修改设计，从 1822 到 1832 年的十年间，巴贝奇只能拿出完成品 1/7 的部份来示范（上图）。但即使如此，差分机引擎运转中的精密仍然令当时的人叹为观止。可惜，再精采的演出，也无法改变巴贝奇已经严重超支的事实，再加上他不停的在制作过程中修改设计和其他的一些因素，令他和工匠师傅 Clement 间时有争论。最后不仅导致 Clement 辞职，差分机引擎一号也很不幸地一直未能完成。最后 12000 个零件被熔掉回收，英国政府在 1842 年的最后清算发现，整个计划一共让英国政府赔掉了 17500 英镑 -- 约等同于 22 台蒸汽火车头，一个相当惊人的数字。</span><br />\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">差分机引擎一号如果完成的话，25000 个零件会差不多平均分摊在计算的部份和印出的部份里，两者是不可分开的。1830 年的设计显示它可以计算到第六阶差，最高可以存 16 位数。</span><br />\r\n<br />\r\n<strong>分析机引擎</strong><br />\r\n<div style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;text-align:center;\">\r\n	<img border=\"0\" src=\"http://www.blogcdn.com/cn.engadget.com/media/2011/04/analyticalengine.jpg\" id=\"vimage_4088099\" alt=\"\" /> \r\n</div>\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">不过对巴贝奇来说，差分机引擎不是个「失败」。事实上他本来就对制造差分机引擎的行政工作感到无比地厌烦，和英国政府结束合作意味着他可以专心的坐下来，做他最拿手的事 -- 设计更强大的机器。在 1834 年他设计出了一台更加野心勃勃的机器，称为分析机引擎（Analytical Engine）。列出它的功能可以让人眼睛都突出来：首先，它的机械结构被分成了「计算单元」和「储存单元」两个部份，其中计算单元不仅内建四则运算，而且还可以「存」四组不同的运算方程式，用穿孔卡片（Punch Card）加载到机器里。这台机器在设计上甚至有能力进行条件分支（if）、循环、平行处理等程序逻辑，只是巴贝奇的年代自然还没有这些名词的出现。最后的结果还可以选择印刷、打卡、绘图等多种输出方式，从某些方面来说，它计算、储存、I/O 三项分离的设计，和今日的计算机并无二致，只是最后分析机引擎只停留在了纸上，从没做成实机过。</span><br />\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">提到分析机引擎，就不能不提一下另一个传奇的人物：</span><a href=\"http://zh.wikipedia.org/wiki/%E6%84%9B%E9%81%94%C2%B7%E5%8B%92%E8%8A%99%E8%95%BE%E7%B5%B2\">爱达．勒芙蕾丝</a><span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">（Ada Lovelace）。爱达的父亲就是英国的大诗人拜伦，只是拜伦在爱达九岁时就过世了。爱达小时候身体并不好，但并没有因此落下教育，特别是（以当时的女性来说还蛮稀少的）科学和数学。她的家庭教师之一 Augustus De Morgan 对她数学能力的评价非常之高，认为她非常有机会成为第一流的数学家。爱达和巴贝奇认识于 1833 年，之后一直有维持通讯，因此对巴贝奇在差分机和分析机引擎方面的进展颇有了解。1842-43 年间，爱达翻译了另一位意大利数学家 </span><a href=\"http://en.wikipedia.org/wiki/Luigi_Menabrea\">Luigi Menabrea</a><span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">（这位老兄后来做到意大利首相）关于分析机引擎的著作时，应巴贝奇的要求在后面附上了七篇她自已的手记。这七篇笔记比 Luigi 的原文还长，其中第七篇里爱达用非常详细的描述，设想了如果分析机引擎成真的话，要如何用它来求伯努利数列的值。虽然机器是机械的不是数字的，计数方式也是十进制的不是二进制的，但一般仍然认为这是世界上第一个计算机程序。</span><br />\r\n<br />\r\n<strong>差分机引擎二号<br />\r\n</strong><br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">在分析机引擎之后，巴贝奇运用在开发过程中得到的心得，重新回头设计了差分机引擎。运用新的方法，在 1847-49 年间设计的差分机引擎二号可以计算到 31 位数，可以计算到第七阶差，而且零件数还只有差分机引擎的 1/3。可惜的是，这时候巴贝奇已经找不到愿意出资的人，因此差分机引擎二号也就停留在了纸上。到巴贝奇一生结束，一共只留下来了 1/7 的差分机引擎一号，一些实验性的分析机引擎零件，和大量的笔记和图纸。</span><br />\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">故事结束了吗？当然没有。事实证明巴贝奇留下来的详细图纸才是最重要的遗产，在 1985 年时伦敦科学博物馆决定照着巴贝奇的图纸，打造一台完整的差分机引擎出来，回答两个历史性的问题：这东西，到底做不做得出来？做得出来的话，能照着巴贝奇的说明操作吗？整个计划一如巴贝奇当年的翻版，充满了经费困难、生产问题、一推再推的期限和无数的技术困难。最主要的，因为只是纸上的概念，巴贝奇并没有注明材料、工法等事项，因此工程学家只能用现代技术去反推当时的技术上限，确保做出来的机器是那个年代也能完成的。整台机器到 2002 年才完工，一共花了 17 年的时间，最后的成果，就是这个：</span><br />\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<embed src=\"http://player.youku.com/player.php/sid/XMjE5MTU4Mjcy/v.swf\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" />\r\n</p>\r\n<div style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;text-align:center;\">\r\n</div>\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">机器本身的部份大约在 3:30 开始，前面是巴贝奇的生平。完成的差分机引擎重五吨，长 11 英呎、高 7 英呎、最窄处 18 英吋，有 8000 个各式零件。机器的运作一如巴贝奇的描述，虽然单论运算能力来说是比今日的计算机差远了，但至少完全证明了巴贝奇的设计并没有错。换了一个时空，说不定信息革命还能提前个五十年呢！</span><br />\r\n<br />\r\n<span style=\"color:#363636;font-family:Arial, Helvetica, sans-serif;font-size:13px;line-height:19.200000762939453px;background-color:#FFFFFF;\">当然，剩下来的问题就只有一个了：那分析机引擎呢？巴贝奇的儿子亨利．巴贝奇花了相当长的时间，试图让分析机引擎成真，但最多也就是在 1910 年时完成了没有程序化能力的一部份计算单元，从此巴贝奇的名字便消失在历史的长河中， 1930、1940 年代的科学家重新开始制造计算机时，根本就已经忘了巴贝奇的成就，不得不重新再走一次巴贝奇走过的老路，有趣的是，最后的基本架构依然是如此地相似。目前有计划要让分析机引擎也像差分机引擎一样「死而复生」，希望能再一次地从实物中，了解查尔斯巴贝奇的天才。</span>',NULL,'2014-05-22 21:24:52','2014-05-22 21:21:59',0,'查尔斯．巴贝奇的差分机与分析机',0),(107,'admin',16,'<p>\r\n	<span style=\"font-size:14px;\">Google 迎来了它的 15 岁生日，它成为了信息检索的代名词。可能许多人都没有听说过 Jonathon Fletcher 这个名字，如果将它键入 Google 的搜索框，没有直接的结果会告诉你他在万维网历史中所发挥的作用，以及他作为现代搜索引擎之父的角色。但正是在 20 年前，他在苏格兰斯特灵大学的一个计算机实验室里发明了世界上第一个采用网络爬虫技术的搜索引擎——该技术奠定了今天 Google、Bing、Yahoo 等搜索工具的基础。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1993 年，网络刚刚起步。历史上首款大众浏览器 Mosaic 才出现不久，而网页的总数量也仅有数千个，人们还不知道如何在网上检索信息。Mosaic 当时推出了一个叫做 What‘s New 的页面，可以对新创建的网站进行索引。问题是，这些站长若要 Mosaic 的开发者获知其新网站，须向 Mosaic 所在的国家超级计算机应用中心（NCSA）写信通知。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在同一时期，Jonathon Fletcher 刚刚以优异成绩从斯特灵大学毕业，并获得了格拉斯哥大学提供的 PhD 学习机会。不幸的是，格拉斯哥大学终止了 PhD 研究经费，他顿时无事可做。“突然间我非常想去找一份工作，”他回想道：“所以我回到了母校，在那里得到了在科技部门工作的机会。”正是这份工作让他第一次接触到了万维网，以及 Mosaic。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/084cc32375b9c43abb7e69353ce1d7b6.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在建设一个网络服务器的过程中，Jonathon 意识到 Mosaic 的 What‘s New 页面是存在本质缺陷的。由于需要手动添加网站到 What‘s New 的列表上，网站内容的变动无法被追踪，最终导致的后果是，许多列表上的链接很快就会过时，或者被错误标注。“如果你想知道发生了什么变化，你必须亲自回到网站上去查看，”他说：“我拥有计算机科学学位，认为应该有更好的解决方式，我决定编写一个程序来帮助我进行查看。”而这一程序正是世界上首个网络爬虫（web crawler）。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Jonathon 将他的发明取名为 JumpStation，他将一些网页放在一起，提供给一个网络爬虫进行搜索，接下来它会自动对经过的所有网页上的所有链接进行访问和索引，直到访问完所有内容。十天之后，也就是 1993 年的 12 月 21 日，JumpStation 完成了它的任务，总共索引了 25000 个页面。Google 到目前为止页面索引量已逾万亿。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">很快 Jonathon 就为索引创建了一个易于使用的搜索工具，并将之置于 Mosaic 的 What‘s New 页面，世界上首个现代搜索引擎诞生了。“我认为他是网络搜索引擎之父，”研究信息检索历史的 Mark Sanderson 教授说：“很长一段时间里，都是由计算机完成搜索工作，在网络出现前肯定也有搜索引擎，但 Jonathon 的发明第一次具备了现代搜索引擎的所有要素。”同 Google 一样，其创始人塞吉布林和拉里佩奇的名字家喻户晓，而现居香港的 Jonathon Fletcher 却没有为其在互联网发展历史所发挥的作用得到应有的认可。这可能也与他的项目被最终抛弃有关系。随着 JumpStation 的成长，它需要越来越多的投资——而斯特灵大学当时并无此意愿。“它在一台共享服务器上运行，”Jonathon 解释道：“当时没有很多磁盘空间，而且那时候磁盘空间小、造价昂贵。”</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/76a5e9388c3182b553b359d35a19a063.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">到 1994 年 6 月，JumpStation 页面索引量达到了 27.5 万个。由于存储空间限制，Jonathon 无法对页面的所有内容进行索引，只能退而求其次，对标题和页眉进行索引。即便如此，JumpStation 依然不堪重负。Jonathon 也开始觉得力不从心。“那不是我的本职工作，”他说：“我的工作是维持学生实验室运行，做些系统管理和技术方面的零工。”来自日本的一份工作邀请也让他难以拒绝，斯特灵大学方面对他也无意挽留。JumpStation 也没有引起足够的重视，“显然我没有成功说服他们 JumpStation 所具的潜力，”Jonathon 说：“那时候我做了我认为对的决定，但在过去 20 年里，我也曾数次回首那段往事。”斯特灵大学计算机科学和数学主任 Leslie Smith 教授承认 JumpStation 事后被证明“领先于时代”，她说“大学的同事很高兴看到 Jonathon 正在获得他应得的认可”。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">尽管 JumpStation 的最终结果让人唏嘘，但 Jonathon 的这一发明依然是随后很多网络搜索引擎的基础。“1993 年时的网络社区规模还很小，”Sanderson 教授说：“当时任何与网络沾边的人都知道 JumpStation。到 1994 年中，大家逐渐意识到网络搜索引擎将变得非常重要，Google 直到 1998 年才出现，而 Jonathon 在 1993 年就在干这事儿了。”</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/3c540bc6df6fa05eafb55073250853ae.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Jonathon 在数周前作为嘉宾参加了在爱尔兰都柏林举办的一个会议，与他同座的是来自微软、雅虎和 Google 的代表，他在演讲中谈论了未来。“以我的观点，网络总有一天会消亡，”他说：“但搜寻信息的难题将一直存在。从内容中搜索和发现信息的需求并不受媒介的限制。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">许多搜索引擎正是在他发明的技术基础上发展和崛起来的，对此他没有后悔：“我父母以我为荣，我妻子以我为荣，我的孩子们也以我为荣。这些对我来说很重要，所以我很快乐。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"></span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">[消息来源：</span><a href=\"http://www.bbc.co.uk/news/technology-23945326\" target=\"_blank\"><span style=\"font-size:14px;\">bbc.co.uk</span></a><span style=\"font-size:14px;\">]</span>\r\n</p>',NULL,NULL,'2014-05-22 21:30:24',0,'Jonathan Fletcher：鲜为人知的现代搜索引擎之父',0),(108,'admin',16,'<div>\r\n	<h2>\r\n		摘要：\r\n	</h2>\r\n	<p>\r\n		到今天，距离世界上首位程序员奥古斯塔·爱达·金（Augusta Ada King）【原名奥古斯塔·爱达·拜伦（Augusta Ada Byron）】的诞生已经过去了整整197年了，今天人们认为她对计算机的预见超前了一个世纪以上。她的一生充满了悲情却不失色彩，出生５周父母离异、年幼丧父、受子宫癌和赌博债务的折磨过早辞世。她的父亲是英国诗人拜伦，母亲是位数学爱好者，阿达没有继承父亲诗一般的浪漫热情，却继承了母亲的数学才能。在他短暂的生命中因对分析机如何进行编程进行了描述，并最早给出计算机程序设计的许多想法被誉为世界上首位程序员！\r\n	</p>\r\n	<p>\r\n		<img src=\"http://www.ituring.com.cn/download/01RXR4NM5wd3\" alt=\"enter image description here\" /> \r\n	</p>\r\n	<p>\r\n		奥古斯塔·爱达·金，勒芙蕾丝伯爵夫人（Augusta Ada King, Countess of Lovelace，1815年12月10日－1852年11月27日），原名奥古斯塔·爱达·拜伦（Augusta Ada Byron），通称爱达·勒芙蕾丝（Ada Lovelace），是著名英国诗人拜伦之女。母亲安娜·密尔班克（A.Millbanke）是位业余数学爱好者，阿达没有继承父亲诗一般的浪漫热情，却继承了母亲的数学才能。她最著名的事迹为翻译意大利人查尔斯·巴贝奇早期的程式设计书《分析机概论》（analytical engine），爱达对翻译查尔斯·巴贝奇的《分析机概论》所留下的笔记，被认为对现代电脑与软件工程造成了重大影响。\r\n	</p>\r\n	<p>\r\n		由于巴贝奇晚年因喉疾几乎不能说话，介绍分析机的文字主要由阿达替他完成。阿达的生命是短暂的，她对计算机的预见超前了一个世纪以上。阿达也死于36岁，与她父亲拜伦相似。根据她的遗愿，她被葬于诺丁汉郡其父亲身边。\r\n	</p>\r\n	<p>\r\n		爱达是她诗人父亲——拜伦与母亲安妮·伊莎贝拉·米尔班奇（Anne Isabella Milbanke）唯一的合法子嗣。她的名字取自拜伦的异母的姊妹奥古斯塔·李（Augusta Leigh）。拜伦与安妮贝拉的婚事是在奥古斯塔为了避免丑闻，而怂恿拜伦与安妮贝拉结合的产物。然而，在1816年1月16日，安妮贝拉还是离开拜伦，带着一个月大的爱达离开。同年4月21日，拜伦签下了分居协议，并离开英国。\r\n	</p>\r\n	<p>\r\n		爱达从未见过她同父异母的妹妹阿拉格·拜伦（Allegra Byron），阿拉格是拜伦与克莱尔·克莱蒙（Claire Clairmont）所出，但于1822年死去，得年5岁。至于爱达的另一位亲戚伊丽莎白·梅朵拉·李（Elizabeth Medora Leigh，是奥古斯塔·李之女）则有与她照过面，并由爱达的母亲告知爱达与梅朵拉彼此的身世。\r\n	</p>\r\n	<p>\r\n		不幸的童年\r\n	</p>\r\n	<p>\r\n		爱达·奥古斯塔·拜伦(Ada Augusta Byron)1815年12月10日生于英国伦敦。她的父亲是英国著名诗人乔治·拜伦(George Gordon Noel Byron，1788-1824)，母亲是数学家安娜·伊莎贝拉(Anna Isabella Milbanke)。热恋时，拜伦曾戏称他未来的妻子是“the Princess of Parallelograms”(平行四边形公主)。看来，兴趣爱好的巨大反差，埋下了不幸的种子。\r\n	</p>\r\n	<p>\r\n		爱达出生后的第一个悲剧就是父母的离异。她父母的婚姻只维持了一年零半个月：1815年1月2日结婚，1816年1月16日离婚，这时爱达出生仅37天。\r\n	</p>\r\n	<p>\r\n		第二个悲剧应该是幼年丧父。我们知道，拜伦于1816年4月25日离开伦敦出国，而且一直没有再回英国。他先在瑞士生活，后来到了意大利，又转至希腊。在那里，他还参加过希腊反对土耳其的独立战争。37岁时病故于希腊的Missolonghi，这时爱达才8岁，好在她一直没有见过自己的父亲。\r\n	</p>\r\n	<p>\r\n		爱达的母亲希望女儿成为一名数学家，而不是诗人。尽管也让女儿学习钢琴，那是为提高她的音乐素养，而不是让她从事艺术。不过，爱达与母亲在一起的时间并不多。她的童年主要是在祖母呵护下度过的。然而祖母Noel Byron夫人1822年逝世，爱达只有7岁。\r\n	</p>\r\n	<p>\r\n		严格的教育\r\n	</p>\r\n	<p>\r\n		既然爱达的母亲安娜对数学有兴趣，而且对“既疯又坏”(mad and bad)的丈夫深恶痛绝，当然就把希望寄托在女儿身上，渴望并鼓励她发展理性的修养，而抵制父亲浪漫主义色彩的影响。于是，爱达接受了近乎严酷的教育。\r\n	</p>\r\n	<p>\r\n		爱达6岁时，母亲雇了家庭女教师雷蒙特小姐(Miss Lamont)在家里对她进行启蒙教育。安娜强烈相信，数学作为一门智力的学科，必须让它在爱达的头脑里牢牢扎根。她认为打好数学基础将为爱达提供稳定的、理智的社会地位，而这也是针对“粗鲁、轻率、自负、搪塞和狂妄的良好解毒剂。”\r\n	</p>\r\n	<p>\r\n		安娜希望女儿喜欢数学，然而女儿却爱好地理，她花很少的时间学习数学，以便应付母亲的严格要求。安娜发现女儿敷衍后，既要处罚爱达，如关到小黑屋反省，又要斥责并辞退雷蒙特小姐。所以家庭教师的更换比较频繁。而爱达不免要说点小谎话以搪塞母亲。例如，写一些无关痛痒的检讨：“我，爱达，没有好好记笔记，明天一定把它做好。”(I, Ada, have not done the Notes very well, but I‘ll try to do it better tomorrow)。\r\n	</p>\r\n	<p>\r\n		在爱达的家庭教师名单中，有几位数学家参与。其中既有平庸之辈，也有赫赫有名的数学大师。下面我们列举几位：\r\n	</p>\r\n	<p>\r\n		首先应该谈到的是威廉·弗雷德(William Frend)。他曾经教过安娜，现在又来教爱达。这时他年事已高，竟然不相信有负数存在，更谈不上了解数学的最新进展。\r\n	</p>\r\n	<p>\r\n		其次必须提及的是劳伦斯小姐(Miss Arabella Lawrence)，安娜请她把13岁的爱达那偏好争辩的性情改变过来。不过，爱达身体不佳，又染上麻疹，休息了好长一段时间。\r\n	</p>\r\n	<p>\r\n		还有威廉·金(William King)博士，他1829年也忙过爱达的数学教育。但这位博士的数学根基不深，他自己也坦白他学习数学是通过阅读而不是作研究(by reading it rather than by doing it)。此后若干年，虽然他还给爱达一些帮助，但在1834年他写给爱达的信中，直率地承认“在您的学习中，很快就能把我难倒(you will soon puzzle me in your studies)”。\r\n	</p>\r\n	<p>\r\n		大师的影响\r\n	</p>\r\n	<p>\r\n		除了以上三位平庸之辈，在爱达的一生中，受过三位世界级大师的培养。这就是女科学家玛丽·莎沫维勒(Mary Fairfax Greig Somerville，1780-1872)；计算机鼻祖查尔斯·巴贝奇(Charles Babbage，1791-1871)；数理逻辑学家德·摩根(Augustus DeMorgan，1806-1871)。三位大师彼此之间有多年交情，对爱达栽 培的默契可能是她短暂一生感受到的最大幸福。\r\n	</p>\r\n	<p>\r\n		1830年由于母亲安娜与女科学家玛丽·莎沫维勒的交往，15岁的爱达也成为玛丽家的常客。玛丽有两个女儿与爱达年龄差不多，爱达经常去玛丽家里，度过一个个美好的夜晚。玛丽则带她们一起去听音乐会，还经常去伦敦大学听地理学讲座。后来，她们成立了女学者联谊会，组织参观博物馆，拜访科学家等活动。正是这些活动使爱达认识了巴贝奇。玛丽把爱达当作自己的女儿一样，给她数学书籍、指导她的学习、为她设计思考问题。师徒之间无所不谈，她们畅谈数学问题以及其他自然科学问题，特别是讨论巴贝奇及其制造的计算机器。此外，她们也谈论音乐、绘画等艺术，以及争取妇女受教育权与选举权等政治问题。\r\n	</p>\r\n	<p>\r\n		1833年6月5日，在一次聚会上爱达认识了查尔斯·巴贝奇。两周后她和母亲一起拜访了巴贝奇在伦敦的工作室，在那里她看到差分机的演示以及对分析机的设计。爱达立刻为这些机器着迷，这给巴贝奇留下深刻的印象。当时花季妙龄的爱达出落得已令人入神，据索菲亚·弗雷德(她是威廉·弗雷德的女儿、德·摩根的妻子)回忆，“像她这样年轻，能理解机器的工作，而且看到这一发明的无比美妙(young as she was, understood its working, and saw the great beauty of the invention)”。此后她就与分析机结上了不解之缘。\r\n	</p>\r\n	<p>\r\n		1841年，在巴贝奇的建议下，德·摩根专门对爱达的数学研究进行了高级的个别指导。\r\n	</p>\r\n	<p>\r\n		爱达的注释体现最早的编程思想\r\n	</p>\r\n	<p>\r\n		如上所述，爱达18岁时听了巴贝奇关于设计差分机的讲演，从而对巴贝奇的机器产生了浓厚的兴趣。后来又对全新的分析机特别地着迷。从1836年1月18日开始，爱达给巴贝奇写信，探讨分析机的各种问题。一直到生命结束，她给巴贝奇写了大量的信件。这是研究爱达编程思想的重要资料。\r\n	</p>\r\n	<p>\r\n		但最有代表性的文献，却是爱达翻译一本书时所加的注释。那是1842年10月，法国工程师Luigi Federico Menabrea(1809-1896)发表了一篇关于巴贝奇分析机的理论和性能的文章。爱达把它由法文译成英文，而且在其中加入她的许多注释。\r\n	</p>\r\n	<p>\r\n		关于这个工作，巴贝奇有一段精彩的回忆：“在日内瓦综合书目上出现Menabrea关于这个机器的实录后，有一天晚上拉夫拉斯伯爵夫人告诉我，她已经把这篇东西由法文翻译成英文。我问她，为什么不就这个题目自己写一篇原创性的论文，你是能够非常亲切地介绍这个机器的。拉夫拉斯伯爵夫人答复道：她的思想还没有形成。然后我建议她在Menabrea的文章上加些注释。这个建议立即被她采纳了。”“我们一起讨论了必须引入的各种插图，我建议了几个，但是否选择完全由她决定。还有一些不同问题的代数工作，例如有关伯努利数的计算，为了减少她的麻烦，我给出一些计算。结果她寄来一份修订，纠正了我在计算中的一个重大错误。”“拉夫拉斯伯爵夫人的注释比原文的长度扩展了三倍。她全力以赴，对于和这个题目有关的很困难、很抽象的问题都作了解释。把这两个资料一起提供给读者，就能理解机器的工作原理，并通过完整的示范，了解如何使用分析机去执行分析开发的任务。”\r\n	</p>\r\n	<p>\r\n		在这些注释中，爱达描述了分析机如何进行编程，最早给出计算机程序设计的许多想法。下面给出几个注释的内容，以飨读者：\r\n	</p>\r\n	<p>\r\n		注释A：说明设计中的“分析机”与已存在的“差分机”的区别。她的讨论预言了通用计算机(general purpose computer)的作用，这超出了巴贝奇的想象。她表明分析机可以接受各种各样的穿孔卡：“控制卡”、“数据卡”、“操作卡”，它们如何使计算机自动地对输入的数据完成正确的操作。换句话说，计算机能“分析数据”。她还提议数字和其他符号如字母都可以“编码”成数字数据，机器可以处理它们，并给出写成的数据。她甚至要为分析机能产生音乐而奋斗。\r\n	</p>\r\n	<p>\r\n		注释B：爱达讨论了分析机的记忆能力，她把记忆装置称为“仓库”。她提出了存储位置或地址的想法。她指出插入“注解或备忘”的可能性，计算机不会执行它们，但可以让人们简明地了解程序将走向何方。\r\n	</p>\r\n	<p>\r\n		注释C：爱达引入“返回”(backing)的概念，制作一个操作卡返回到某个位置，而它就是将要工作的下一个数据卡。她解释这样做的原因是：“在解决一个问题的方案中，能确保某个特殊的穿孔卡或者一组卡能成功地使用若干次”(to secure the possibility of bringing any particular card or set of cards into use any number of times successively in the solution of one problem)。这个思想我们今天称为“循环”(looping)，爱达和巴贝奇早就讨论过这个问题。\r\n	</p>\r\n	<p>\r\n		注释D：爱达解释了如何使用操作卡、返回、仓库以及各种控制卡，以写成一个指令序列，去完成一个特定的操作集合。\r\n	</p>\r\n	<p>\r\n		注释E：她解释了机器如何拥有三角函数和其他函数。这就在计算机内部引入了内建函数(built-in function)的思想。\r\n	</p>\r\n	<p>\r\n		注释F：她给出利用返回处理(循环)，仅通过重复几个操作，来解一个任意大小的线性方程组。她详细写出解十元线性方程组的程序。她还推测通过简单的循环过程生成素数表的可能性。\r\n	</p>\r\n	<p>\r\n		注释G：爱达警告读者，如果输入“不真实”的信息，那么计算机就不能做任何事情。今天我们把这称为“输入垃圾，输出垃圾”(Garbage in, Garbage out)。她写到：“分析机不能自命不凡，无论什么问题都能解决。它只能完成我们告诉它如何做的事情。它能遵循分析，但没有能力预期任何分析关系或事实。”(The Analytical Engine has no pretensions whatever to originate anything. It can do whatever we know how to order it to perform. It can follow analysis; but it has no power of anticipating any analytical relations or truths)。在注释G中，爱达还写了一个程序，让分析机生成伯努利数的表。\r\n	</p>\r\n	<h2>\r\n		由上可知，爱达获得世界上第一位计算机程序员的荣誉是当之无愧的。\r\n	</h2>\r\n	<p>\r\n		爱达的辞世与爱达语言\r\n	</p>\r\n	<p>\r\n		由于受子宫癌和赌博债务的折磨，有的文献还说她曾经吸毒，这位悲剧性的人物爱达过早地于1852年11月27日去世，生命周期与她的父亲拜伦同样短促，都只有37岁。最后与她的父亲一起，埋葬在诺丁汉郡Hucknall镇拜伦家族的墓地。 当年36岁。很讽刺的，她与她父亲拜伦死于相同年龄，一样死于治疗中的失血过多。她留下了两个儿子与一位女儿—安妮·布兰特贵女。依她的遗言，爱达葬于诺丁汉哈克诺的圣 玛丽亚·抹大拉教堂，长眠在父亲的身旁。\r\n	</p>\r\n	<p>\r\n		爱达的形象完美地体现了一位程序员应该具备的科学家与艺术家的双重气质。一方面，程序员需要在数学概念、形式理论、符号表示等基础上工作，应该有科学家的素养。另一方面，对于一个高效的、可靠的、便于维护的软件系统，又必须刻画它的细节，并把它组成一个和谐的整体，所以程序员又应该有艺术家的气质。 　　1975年1月，美国国防部(DoD)提出统一高级语言的必要性，并为此在国际范围内招标。1979年5月，从四种入围语言中最后选定了一种。现在，该给它起个什么名字呢？总不能把它称为DoD-1语言吧。国防部通过与英国拉夫拉斯伯爵的继承人莱顿(Lytton)伯爵协商，决定把新语言命名为Ada语言，以此纪念爱达在130年前对程序设计的历史贡献。于是，爱达的名字、生平与事迹才广为世人传诵。\r\n	</p>\r\n	<p>\r\n		Ada是一种表现能力很强的通用程序设计语言，它是美国国防部为克服软件开发危机，耗费巨资，历时近20年研制成功的。它被誉为第四代计算机语言的成功代表。美国国防部之所以把这种语言取名为Ada，是为了纪念奥左斯特·艾达·洛夫莱斯伯爵夫人(Augusta Ada Lovlace，1815-1852)，她是英格兰诗人拜伦(Byron)勋爵的女儿，曾对现代计算机技术之父查尔斯·巴贝奇(Charles Babage，1791-1871)的笔记、手稿进行了整理和修正。从某种意义上说，她是世界上第一位计算机程序员。\r\n	</p>\r\n	<p>\r\n		与其他流行的程序设计语言不同，Ada语言不仅体现了许多现代软件的开发原理，而且将这些原理付诸实现。因此，Ada语言的使用可大大改善软件系统的清晰性、可靠性、有效性、可维护性。Ada是现有的语言中无与伦比的一种大型通用程序设计语言，它是现代计算机语言的成功代表，集中反映了程序语言研究的成果。Ada的出现，标志着软件工程成功地进入了国家和国际的规模。在一定意义上说，Ada还刺破了“冯·偌依曼思维模式” (Von Newman Mind-set) 的桎梏，连同Ada的支持环境(APSE)一起，形成了新一派的所谓Ada文化。它是迄今为止最复杂、最完备的软件工具。Ada语言是美国国防部指定的唯一的一种可用于军用系统开发的语言，我国军方也将Ada作为军内开发标准（GJB 1383《程序设计语言Ada》）。\r\n	</p>\r\n	<p>\r\n		Ada最初设计时关注于3个最重要的问题：程序的稳定性和可维护性，程序设计和人的行为接近，并且高效。这份语言的修订版是为了提供更大的灵活性和扩展性，存储管理的额外控制和同步，以及标准化的程序包以支持重要的应用程序领域，同时保留原来的重点。对于程序设计语言促进可靠性和简化维护难度的需求已被确立。因此程序可读性的重要性高于轻松地写代码。例如，语言规则要求程序变量应当明确声明并指定它们的类型。由于变量的数据类型是不变的，编译器可以确保对于变量的操作适用于该类型的对象。\r\n	</p>\r\n	<p>\r\n		另外，有错误倾向的符号已经避免，并且语言语法避免了编码形式的使用，使更倾向于英语的结构。最后，Ada 语言提供了程序单元单独编译的功能，使程序开发和维护简便，同样也提供了在一个单元内多个单元之间的检测。考虑人类程序员的问题也在设计时被强调。总而言之，在继续避免过多复杂句型的缺陷的同时，尝试以一致系统的方式保持相对较少的底层概念。\r\n	</p>\r\n	<p>\r\n		Ada 语言最初设计是为了构建长周期的、高度可靠的软件系统。它提供了一系列功能来定义相关的数据类型(type)、对象(object)和操作(operation)的程序包(package)。程序包可以被参数化，数据类型可以被扩展以支持可重用库的构建。操作既可以使用方便的顺序控制结构，通过子程序(subprogram)来实现，也可以通过包含并发线程同步控制的入口(entry)来实现。Ada 也支持单独编译(separate compilation)，在物理层上支持模块性。\r\n	</p>\r\n	<p>\r\n		Ada 包含了很复杂的功能以支持实时(real-time),并发程序设计(concurrent programming)。错误可以作为异常(exception)来标示，并可以被明确地处理。Ada 也覆盖了系统编程(system programming)；这需要对数据表示和系统特性访问的精确控制。最后，提供了预定义的标准程序包，包括输入输出、字符串处理、数值计算的基本函数和随机数生成。\r\n	</p>\r\n	<p>\r\n		Ada的风格在Pascal语言中得以延续。\r\n	</p>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	本文仅用于学习和交流目的，不代表图灵社区观点。非商业转载请注明作译者、出处，并保留本文的原始链接。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	原文链接：http://www.ituring.com.cn/article/19152\r\n</p>',NULL,NULL,'2014-05-22 22:43:46',0,'世界上第一位女程序员——奥古斯塔·爱达·金',0),(109,'admin',6,'<p>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		To develop topologies, you\'ll need the Storm jars on your classpath. You should either include the unpacked jars in the classpath for your project or use Maven to include Storm as a development dependency. Storm is hosted on Clojars (a Maven repository). To include Storm in your project as a development dependency, add the following to your pom.xml:\r\n	</p>\r\n	<div class=\"highlight highlight-xml\" style=\"background-color:#FFFFFF;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n<pre><span class=\"nt\" style=\"color:navy;\">&lt;repository&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;id&gt;</span>clojars.org<span class=\"nt\" style=\"color:navy;\">&lt;/id&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;url&gt;</span>http://clojars.org/repo<span class=\"nt\" style=\"color:navy;\">&lt;/url&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;/repository&gt;</span> </pre>\r\n	</div>\r\n	<div class=\"highlight highlight-xml\" style=\"background-color:#FFFFFF;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n<pre><span class=\"nt\" style=\"color:navy;\">&lt;dependency&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;groupId&gt;</span>storm<span class=\"nt\" style=\"color:navy;\">&lt;/groupId&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;artifactId&gt;</span>storm<span class=\"nt\" style=\"color:navy;\">&lt;/artifactId&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;version&gt;</span>0.7.2<span class=\"nt\" style=\"color:navy;\">&lt;/version&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;scope&gt;</span>test<span class=\"nt\" style=\"color:navy;\">&lt;/scope&gt;</span> <span class=\"nt\" style=\"color:navy;\">&lt;/dependency&gt;</span> </pre>\r\n	</div>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		<a href=\"https://github.com/nathanmarz/storm-starter/blob/master/m2-pom.xml\">Here\'s an example</a>&nbsp;of a pom.xml for a Storm project.\r\n	</p>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		If Maven isn\'t your thing, check out&nbsp;<a href=\"https://github.com/technomancy/leiningen\">leiningen</a>. Leiningen is a build tool for Clojure, but it can be used for pure Java projects as well. Leiningen makes builds and dependency management using Maven dead-simple. Here\'s an example project.clj for a pure-Java Storm project:\r\n	</p>\r\n	<div class=\"highlight highlight-clojure\" style=\"background-color:#FFFFFF;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n<pre><span class=\"p\">(</span><span class=\"kd\" style=\"font-weight:bold;\">defproject </span><span class=\"nv\" style=\"color:teal;\">storm-starter</span> <span class=\"s\" style=\"color:#DD1144;\">\"0.0.1-SNAPSHOT\"</span> <span class=\"ss\" style=\"color:#990073;\">:java-source-path</span> <span class=\"s\" style=\"color:#DD1144;\">\"src/jvm\"</span> <span class=\"ss\" style=\"color:#990073;\">:javac-options</span> <span class=\"p\">{</span><span class=\"ss\" style=\"color:#990073;\">:debug</span> <span class=\"s\" style=\"color:#DD1144;\">\"true\"</span> <span class=\"ss\" style=\"color:#990073;\">:fork</span> <span class=\"s\" style=\"color:#DD1144;\">\"true\"</span><span class=\"p\">}</span> <span class=\"ss\" style=\"color:#990073;\">:jvm-opts</span> <span class=\"p\">[</span><span class=\"s\" style=\"color:#DD1144;\">\"-Djava.library.path=/usr/local/lib:/opt/local/lib:/usr/lib\"</span><span class=\"p\">]</span> <span class=\"ss\" style=\"color:#990073;\">:dependencies</span> <span class=\"p\">[]</span> <span class=\"ss\" style=\"color:#990073;\">:dev-dependencies</span> <span class=\"p\">[</span> <span class=\"p\">[</span><span class=\"nv\" style=\"color:teal;\">storm</span> <span class=\"s\" style=\"color:#DD1144;\">\"0.7.2\"</span><span class=\"p\">]</span> <span class=\"p\">])</span> </pre>\r\n	</div>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		You can fetch dependencies using&nbsp;lein deps, build the project with&nbsp;lein compile, and make a jar suitable for submitting to a cluster with&nbsp;lein uberjar.\r\n	</p>\r\n	<h3 style=\"font-size:1.5em;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;background-color:#FFFFFF;\">\r\n		<a name=\"user-content-using-storm-as-a-library\" class=\"anchor\" href=\"https://github.com/nathanmarz/storm/wiki/Maven#using-storm-as-a-library\"></a>Using Storm as a library\r\n	</h3>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		If you want to use Storm as a library (e.g., use the Distributed RPC client) and have the Storm dependency jars be distributed with your application, there\'s a separate Maven dependency called \"storm/storm-lib\". The only difference between this dependency and the usual \"storm/storm\" is that storm-lib does not have any logging configured.\r\n	</p>\r\n	<h3 style=\"font-size:1.5em;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;background-color:#FFFFFF;\">\r\n		<a name=\"user-content-developing-storm\" class=\"anchor\" href=\"https://github.com/nathanmarz/storm/wiki/Maven#developing-storm\"></a>Developing Storm\r\n	</h3>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		You will want to\r\n	</p>\r\n<pre>bash ./bin/install_zmq.sh   # install the jzmq dependency\r\nlein sub install</pre>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		Build javadocs with\r\n	</p>\r\n<pre>bash ./bin/javadoc.sh</pre>\r\n	<h3 style=\"font-size:1.5em;color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;background-color:#FFFFFF;\">\r\n		<a name=\"user-content-building-a-storm-release\" class=\"anchor\" href=\"https://github.com/nathanmarz/storm/wiki/Maven#building-a-storm-release\"></a>Building a Storm Release\r\n	</h3>\r\n	<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;background-color:#FFFFFF;\">\r\n		Use the file&nbsp;bin/build_release.sh&nbsp;to make a zipfile like the ones you would download (and like what the bin files require in order to run daemons).\r\n	</p>\r\n</p>',NULL,NULL,'2014-05-23 07:15:59',0,'Maven Storm配置',0),(110,'admin',12,'<p>\r\n	<span style=\"font-size:14px;\">在7月10日举行的</span><a href=\"http://developerclub.taobao.com/\"><span style=\"font-size:14px;\">淘宝技术嘉年华</span></a><span style=\"font-size:14px;\">之</span><a href=\"http://developerclub.taobao.com/about/?f=5\"><span style=\"font-size:14px;\">淘宝技术专场</span></a><span style=\"font-size:14px;\">上，来自淘宝产品技术部</span><a href=\"http://rdc.taobao.com/team/jm/\"><span style=\"font-size:14px;\">中间件团队</span></a><span style=\"font-size:14px;\">的</span><a href=\"http://weibo.com/vanadies10\"><span style=\"font-size:14px;\">曾宪杰</span></a><span style=\"font-size:14px;\">（花名华黎）为大家介绍了近几年Java在淘宝的应用情况――</span><a href=\"http://www.slideshare.net/vanadies10/javataobao-8554649\"><span style=\"font-size:14px;\">《Java@Taobao》</span></a><span style=\"font-size:14px;\">。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">演讲之初，曾宪杰先分四个阶段介绍了淘宝的建构变迁：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">2003年5月至2004年5月，小而快的简单架构，基于LAMP，符合当时的需求。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">2004年2月至2008年3月，一个懵懂的阶段，开始分为多个层次。这个阶段需要一个能够支撑百万到千万用户级的架构，必须容易扩展；系统从WebLogic迁移至了JBoss；开发了大量软件，例如</span><a href=\"http://code.taobao.org/project/view/366/\"><span style=\"font-size:14px;\">TFS</span></a><span style=\"font-size:14px;\">、iSearch、TDBM和CDN。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">2007年10月至2009年11月，开始有前瞻性，走向产品化及服务化。能够支持大型团队的并行开发，系统逐步模组化、中心化，可快速扩容，可用性大大提升，基础软件也开始走产品化道路。非核心的数据由Oracle迁移到了MySQL上，构建起了消息系统和服务框架，</span><a href=\"http://open.taobao.com/\"><span style=\"font-size:14px;\">淘宝开放平台</span></a><span style=\"font-size:14px;\">（TOP）正式上线。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">2009年8月至今的淘宝则更系统化、智能化及专业化，这是发展的必然方向。知识经验慢慢融入工具之中，降低了门槛，减少误操作几率；操作从人工处理逐步转为系统自主决策；在稳定性和性能方面有长足发展（在2010年以前eBay的稳定性要好于淘宝）。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">曾宪杰指出所谓大型网站就是要同时满足高访问量和搞数据量的要求，核心是通过分布式系统解决数据的处理、存储及访问问题。随后，他根据淘宝网站的结构示意图，分别介绍了其中涉及到的Java基础技术产品。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">首先是在阿里集团内被广泛使用的Turbine风格的MVC框架――</span><a href=\"http://code.taobao.org/project/view/401/\"><span style=\"font-size:14px;\">WebX</span></a><span style=\"font-size:14px;\">，其核心代码由阿里巴巴18创始人之一的周悦虹（宝宝）编写，具有很好的层次化、模块化特点，高度可扩展，WebX还对Velocity模板做了编译优化，在一般情况下能有20%至50%的性能提升。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其次是中间件中的服务框架，负责服务的发布、查询、调用和治理。该服务框架使用上简单透明，支持软负载（没有中间层，服务使用方直接连接到服务提供方，使用服务注册查找中心进行管理），灵活可控，方便扩展，为保证稳定性提供了有力支持。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">接下来是实现系统松耦合的消息中间件Notify，这是一个高性能、高可靠、可扩展组件，支持最终一致性和订阅者集群。所谓订阅者集群，即将订阅消息的客户端分为多个集群，集群之间采用Topic方式，让每个集群都能收到消息，集群之中再按照Queue的方式，仅由一个客户端来处理消息。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在数据层上，为了更好地支持分库分表以及读写分离，也做了一定的封装，对上层应用而言还是在操作JDBC，实际则是在使用淘宝分布式数据层（TDDL），它能实现SQL解析、规则路由、数据合并；既可以用jar的方式在客户端直接连接数据库，也可以让客户端通过DBProxy服务器访问数据库；还支持非对称数据复制。如果将众多数据源看成一个矩阵，横向是同一数据库的主库与从库，纵向是不同的数据库，TDDL将数据源分为三个层次――TAtomDataSource，封装单个数据源，将配置进行集中管理；TGroupDataSource，封装横向的多个数据源，支持权重和节点的增减；TDataSouce，管理整个数据源矩阵。在具体的场景中，系统可以选择配置的粒度。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在分布式存储方面，淘宝基于</span><a href=\"http://hbase.apache.org/\"><span style=\"font-size:14px;\">HBase</span></a><span style=\"font-size:14px;\">&nbsp;0.90.2做了一些扩展，主要是提供了一个运维页面，修正了Master节点恢复时间过长以及备用Master无法自动接管的问题，并做了一些优化。</span><a href=\"http://weibo.com/1072396800\"><span style=\"font-size:14px;\">林昊</span></a><span style=\"font-size:14px;\">在下午的</span><a href=\"http://www.idata-forum.org/\"><span style=\"font-size:14px;\">iDataForum</span></a><span style=\"font-size:14px;\">上就HBase做了更详细的</span><a href=\"http://www.slideshare.net/BlueDavy/hbase-8548273\"><span style=\"font-size:14px;\">分享</span></a><span style=\"font-size:14px;\">。截止两周前的使用情况：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://www.etao.com/\"><span style=\"font-size:14px;\">一淘</span></a><span style=\"font-size:14px;\">拥有100台服务器，已使用60T。</span>\r\n	</li>\r\n	<li>\r\n		<a href=\"http://data.taobao.com/datacube.html\"><span style=\"font-size:14px;\">数据魔方</span></a><span style=\"font-size:14px;\">拥有10台服务器，已使用500G。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">交易日志拥有12台服务器，已使用360G。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">UDC拥有8台服务器，使用600G。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">此外还有众多应用，例如历史库搜索等。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">搜索方面，基于</span><a href=\"http://lucene.apache.org/\"><span style=\"font-size:14px;\">Lucene</span></a><span style=\"font-size:14px;\">和</span><a href=\"http://lucene.apache.org/solr/\"><span style=\"font-size:14px;\">Solr</span></a><span style=\"font-size:14px;\">开发了终搜，可进行中心化的配置管理，容易接入，支持多种Dump机制。淘宝还拥有国内最大的</span><a href=\"http://hadoop.apache.org/\"><span style=\"font-size:14px;\">Hadoop</span></a><span style=\"font-size:14px;\">集群（云梯I系统），总容量超过1400台服务器，约30PB，利用率55.2%。主要做了JobTracker的异步化，NameNode优化，存储优化以及小作业优化。为了提升稳定性，除了哈勃（使用</span><a href=\"http://cassandra.apache.org/\"><span style=\"font-size:14px;\">Cassandra</span></a><span style=\"font-size:14px;\">存储数据，由云梯处理数据）对全网服务器基础数据进行采集分析以外，淘宝还有CSP监控，它主要监控核心应用，协助进行容量规划，以及服务的依赖于降级。目前CSP一共有15台服务器，15个库，对200多个系统进行监控，每日采集数据超过5000万行。淘宝如此大规模的系统的运维也是由系统完成，目前在系统的部署、发布、监控方面已经做了很多工作，在运维管理方面稍有欠缺。演讲最后，曾宪杰列举了众多各有特色的业务系统，分析了它们的架构，说明了各基础技术产品在这些系统中的应用。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果您没有参加淘宝技术嘉年华，或者错过了心仪的主题，</span><a href=\"http://developerclub.taobao.com/\"><span style=\"font-size:14px;\">官方网站</span></a><span style=\"font-size:14px;\">上已经陆续放出了演讲的幻灯片，可以访问</span><a href=\"http://developerclub.taobao.com/schedule/\"><span style=\"font-size:14px;\">日程安排</span></a><span style=\"font-size:14px;\">页面进行下载。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;line-height:21px;\">原文链接：<a href=\"http://www.infoq.com/cn/news/2011/07/java-taobao/\">http://www.infoq.com/cn/news/2011/07/java-taobao/</a></span>\r\n</p>',NULL,NULL,'2014-05-23 09:09:01',0,'曾宪杰谈Java在淘宝的应用',0),(112,'admin',12,'<div class=\"motadou_spec_line\" style=\"margin:0px 0px 3px;padding:5px 0px 1px;color:#E3940B;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	1 -- 淘宝公司技术站点\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<strong>淘宝核心系统团队</strong>&nbsp;<br />\r\n网址：<a href=\"http://rdc.taobao.com/blog/cs/\" target=\"_blank\">http://rdc.taobao.com/blog/cs</a>&nbsp;<br />\r\n这里是 淘宝核心系统团队的博客，淘宝核心系统团队隶属于淘宝产品技术部，负责淘宝应用基础平台的研发和搭建，现在主要的产品线包括CDN系统、淘宝分布式文件系统（TFS），淘宝分布式KV引擎（TAIR），图像搜索技术，服务器软硬件平台优化, MySQL数据库分支维护等。&nbsp;<br />\r\n<br />\r\n<strong>淘宝数据库技术团队</strong>&nbsp;<br />\r\n网址：<a href=\"http://www.taobaodba.com/\" target=\"_blank\">http://www.taobaodba.com</a>&nbsp;<br />\r\n淘宝网（www.taobao.com）是国内首选购物网站，亚洲最大购物网站，由全球最佳B2B平台阿里巴巴公司投资4.5亿创办，致力于成就全球首选购物网站。主要讲述数据库管理，数据库开发，数据库工具，数据库架构。&nbsp;<br />\r\n<br />\r\n<strong>淘宝网综合业务平台团队博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://rdc.taobao.com/team/jm\" target=\"_blank\">http://rdc.taobao.com/team/jm</a>&nbsp;<br />\r\n通用产品团队，前身是淘宝Java中间件团队，主要职责是构建支撑淘宝网业务系统的中间件产品以及其他一些通用产品。并积极参与业务系统的项目和改造工作，与业务系统协同，配合业务系统一起更快、更有效率的发展。&nbsp;<br />\r\n<br />\r\n<strong>淘宝搜索技术博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://www.searchtb.com/\" target=\"_blank\">http://www.searchtb.com</a>&nbsp;<br />\r\n关注技术 关注搜索 关注淘宝。淘宝搜索技术blog。&nbsp;<br />\r\n<br />\r\n<strong>淘宝共享数据平台</strong>&nbsp;<br />\r\n网址：<a href=\"http://www.tbdata.org/\" target=\"_blank\">http://www.tbdata.org</a>&nbsp;<br />\r\n我们致力于搭建全淘宝共享的分布式数据处理平台，整合，分析，挖掘全淘宝的商业数据，提供多样性的数据产品。 同时，我们负责建立全淘宝的收费平台，建立淘宝的统一用户中心等服务模块，为淘宝网，淘宝商城，一淘网提供统一的用户体系。&nbsp;<br />\r\n<br />\r\n<strong>量子恒道官方博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://blog.linezing.com/\">http://blog.linezing.com</a>&nbsp;<br />\r\n2011年 量子统计（淘宝官方版）精彩继续！量子数科院是什么？1、介绍量子业务的。2、分享卖家经验的。3、展示量子技术的。4、研究数据可视化的。5、关注量子动态的。&nbsp;<br />\r\n<br />\r\n<strong>淘宝质量保障团队</strong>&nbsp;<br />\r\n网址：<a href=\"http://qa.taobao.com/\" target=\"_blank\">http://qa.taobao.com</a>&nbsp;<br />\r\n提高测试人员的技术水平；在测试的过程中能发现一些更深层次，更有技术含量的bug；每个Q举办一次Golden Bug Award的评选活动；评选委员由测试部技术委员会的各位成员组成。&nbsp;<br />\r\n<br />\r\n<strong>淘宝UED团队</strong>&nbsp;<br />\r\n网址：<a href=\"http://ued.taobao.com/blog\" target=\"_blank\">http://ued.taobao.com/blog</a>&nbsp;<br />\r\nUED的本意是用户体验设计，是英文User Experience Design的缩写。通常的理解，我们做的一切都是为了呈现在您眼前的页面。我们来自淘宝网，每一个页面都凝结了我们的心血。淘宝网站的口号是：“没有淘不到的宝贝，没有卖不出的宝贝。”我们期望在将来的某一天，能成为“地球上最好的UED团队”。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<br />\r\n<strong>淘宝开源</strong>&nbsp;<br />\r\n网址：<a href=\"http://tengine.taobao.org/\" target=\"_blank\">http://tengine.taobao.org</a>&nbsp;<br />\r\nTengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。&nbsp;<br />\r\n从2011年12月开始，Tengine成为一个开源项目，Tengine团队在积极地开发和维护着它。Tengine团队的核心成员来自于淘宝、搜狗等互联网企业。Tengine是社区合作的成果，我们欢迎大家参与其中，贡献自己的力量。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<br />\r\n<strong>TaoCode</strong>&nbsp;<br />\r\n网址：<a href=\"http://code.taobao.org/opensources/\" target=\"_blank\">http://code.taobao.org/opensources/</a>&nbsp;<br />\r\nTaoCode是为开源爱好者和广大技术人员提供交流、孵化、创新项目的平台，同时平台也遵循开源理念全面开源，欢迎更多朋友来参与平台建设，希望在我们共同的努力下能加速中国开源消费者向开源贡献者的转变。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<br />\r\n<strong>TFS</strong>&nbsp;<br />\r\n网址：<a href=\"http://code.taobao.org/p/tfs/wiki/intro/\" target=\"_blank\">http://code.taobao.org/p/tfs/wiki/intro/</a>&nbsp;<br />\r\nTFS（Taobao !FileSystem）是一个高可扩展、高可用、高性能、面向互联网服务的分布式文件系统，主要针对海量的非结构化数据，它构筑在普通的Linux机器集群上，可为外部提供高可靠和高并发的存储访问。TFS为淘宝提供海量小文件存储，通常文件大小不超过1M，满足了淘宝对小文件存储的需求，被广泛地应用在淘宝各项应用中。它采用了HA架构和平滑扩容，保证了整个文件系统的可用性和扩展性。同时扁平化的数据组织结构，可将文件名映射到文件的物理地址，简化了文件的访问流程，一定程度上为TFS提供了良好的读写性能。\r\n</p>\r\n<div class=\"motadou_spec_line\" style=\"margin:0px 0px 3px;padding:5px 0px 1px;color:#E3940B;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	2 -- 腾讯公司技术站点\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<strong>编码者说</strong>&nbsp;<br />\r\n网址：<a href=\"http://blog.webshuo.com/\" target=\"_blank\">http://blog.webshuo.com</a>&nbsp;<br />\r\n腾讯公司WEB开发技术团队。&nbsp;<br />\r\n<br />\r\n<strong>腾讯大讲堂</strong>&nbsp;<br />\r\n网址：<a href=\"http://djt.qq.com/\" target=\"_blank\">http://djt.qq.com</a>&nbsp;<br />\r\n腾讯大讲堂是腾讯专业、高质的知识分享平台，分享产品技术和成功经验，与业界同行一起成长！在这里交流,产品设计,交互,敏捷研发,用户体验,创新,应用实践等。\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<strong>腾讯Web前端团队</strong>&nbsp;<br />\r\n网址：<a href=\"http://www.alloyteam.com/\">http://www.alloyteam.com</a>&nbsp;<br />\r\n<span style=\"line-height:1.5;\">TAT(Tencent Alloy Team)来自于腾讯SNG(社交网络事业群)，我们致力于Web前端技术的研究，热衷HTML5技术，用最酷的新技术开发各种有趣的开源项目。</span>\r\n</p>\r\n<div class=\"motadou_spec_line\" style=\"margin:0px 0px 3px;padding:5px 0px 1px;color:#E3940B;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	3 -- 百度公司技术站点\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<strong>百度搜索研发部官方博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://www.baidu-tech.com/\" target=\"_blank\">http://www.baidu-tech.com</a>&nbsp;<br />\r\n百度搜索研发部官方博客（http://www.baidu-tech.com）由百度搜索研发部创建并维护。我们希望通过网络社区与关注搜索引擎及相关产品的技术人员交流互动，分享百度工程师研究的方向和取得的成果。<br />\r\n<br />\r\n<strong>百度互联网技术官方博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://blog.csdn.net/baiduforum\" target=\"_blank\">http://blog.csdn.net/baiduforum</a>&nbsp;<br />\r\n分享交流百度的互联网技术。&nbsp;<br />\r\n<br />\r\n<strong>百度框计算技术交流平台</strong>&nbsp;<br />\r\n网址：<a href=\"http://box.baidu-tech.com/\" target=\"_blank\">http://box.baidu-tech.com</a>&nbsp;<br />\r\n这里是百度框计算技术交流平台\r\n</p>\r\n<div class=\"motadou_spec_line\" style=\"margin:0px 0px 3px;padding:5px 0px 1px;color:#E3940B;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	4 -- 搜狐公司技术博客\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<strong>搜狗实验室博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://www.sogou.com/labs/\" target=\"_blank\">http://www.sogou.com/labs</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://labs.blog.sohu.com/\" target=\"_blank\">http://labs.blog.sohu.com</a>&nbsp;<br />\r\n搜狗实验室(Sogou Labs)是搜狗搜索核心研发团队对外交流的窗口，包含数据资源、研究合作等几个栏目。我们期望通过这个平台，展现搜狗研发团队强大的研发、创新能力；推动学术界和产业界的交互；了解用户对新产品的需求。我们的目标：为中文网民的互联网生活提供更加全面、更加优质的服务。&nbsp;<br />\r\n<br />\r\n<strong>搜狐UED团队博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://ued.sohu.com/\" target=\"_blank\">http://ued.sohu.com</a>&nbsp;<br />\r\nSohu UED Team就聚集着这样一群人，执着于为用户提供更好的产品和体验，哪怕是对一点点小细节的精益求精。我们一直探索着，并永远不会停下脚步……\r\n</p>\r\n<div class=\"motadou_spec_line\" style=\"margin:0px 0px 3px;padding:5px 0px 1px;color:#E3940B;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	5 -- 新浪公司技术博客\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	<strong>新浪UED团队的博客</strong>&nbsp;<br />\r\n网址：<a href=\"http://blog.sina.com.cn/uimedia\" target=\"_blank\">http://blog.sina.com.cn/uimedia</a>&nbsp;<br />\r\n新浪UED团队博客\r\n</p>\r\n<div class=\"motadou_spec_line\" style=\"margin:0px 0px 3px;padding:5px 0px 1px;color:#E3940B;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	9 -- 技术博客类\r\n</div>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	网址：<a href=\"http://tech.uc.cn/\">http://tech.uc.cn</a>\r\n</p>\r\n<p style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14.399999618530273px;background-color:#FFFFFF;\">\r\n	Tim[后端技术]&nbsp;<br />\r\n网址：<a href=\"http://timyang.net/\" target=\"_blank\">http://timyang.net/</a>\r\n</p>',NULL,NULL,'2014-05-23 09:17:15',0,'顶级技术网站博客汇总',0),(113,'admin',27,'<p>\r\n	<span style=\"font-size:14px;\">这段时间学习zookeeper，记录一下找到的一些资料</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">zookeeper学习记录</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://agapple.iteye.com/blog/1111377</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">zookeeper watcher功能分析</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://luzengyi.blog.163.com/blog/static/529188201064113744373/</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp; &nbsp;watcher evetn对象客户端与服务器交互的流程</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://luzengyi.blog.163.com/blog/static/529188201061155444869/</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">watch 事件的注册和调用</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">基于zookeeper的分布式lock实现</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://agapple.iteye.com/blog/1184040</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">阿里巴巴的一个应用案例</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://agapple.iteye.com/blog/1184023</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Zookeeper ACL 访问权限管理</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://rdc.taobao.com/team/jm/archives/947</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">介绍了zookeeper能用来干嘛</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://www.ibm.com/developerworks/cn/opensource/os-cn-zookeeper/</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">官方文档，大致介绍zookeeper</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://zookeeper.apache.org/doc/r3.3.2/zookeeperOver.html</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">paxos 实现</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://rdc.taobao.com/blog/cs/?p=162</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">paxos算法介绍续</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://rdc.taobao.com/blog/cs/?p=261</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Paxos算法之旅（四）zookeeper代码解析</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://rdc.taobao.com/team/jm/archives/448</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">选举算法</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://rdc.taobao.com/blog/cs/?p=162</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">代码解析</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">http://rdc.taobao.com/team/jm/archives/448</span>\r\n</p>',NULL,NULL,'2014-05-23 09:23:40',0,'zookeeper 学习资料',0),(114,'admin',15,'<p style=\"text-align:left;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">时启维</span>\r\n</p>\r\n<p style=\"text-align:left;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">时启元</span>\r\n</p>\r\n<p style=\"text-align:left;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">时启超</span>\r\n</p>\r\n<p style=\"text-align:left;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">时启刚</span>\r\n</p>\r\n<p style=\"text-align:left;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">时启发</span>\r\n</p>\r\n<p style=\"text-align:left;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">时启文</span>\r\n</p>',NULL,'2014-05-23 19:42:07','2014-05-23 10:19:16',0,'名字记录',0),(115,'admin',12,'<p>\r\n	<span style=\"font-size:14px;\">作为一名Java程序员和软件开发人员，那些每个程序员都应该知道的XXX的文章教会了我不少东西，它们提供了某个特定领域的一些实用的并且有深度的信息，这些东西通常很难找到。在我学习的过程中我读到过许多非常有用的文章，我把它们添加到了书签里，方便以后阅读或者引用。我个人认为所有开发人员都能从这些文章中受益，因此我也写了篇“每个程序员都应该了解的”文章，准备分享给你们。这是我的个人收藏。在这篇文章中，你会看到每个程序员都应该了解的一些经典文章，涵盖了内存，unicode，浮点数，网络，面向对象设计，时间，URL编码，字符串等话题。这个列表对初学者和新手来说非常重要，因为他们现在缺的正是实战的经验。而这些文章正好是实践相关的，他们可以从中学到很多东西。在职业生涯的初级，早点了解一些基础的知识有助于今后避免犯错，这些坑已经被其他的程序员和软件开发人员在他们学习的过程中踩过了。你可能还搞不明白浮点数的一些细节，或者被内存的细节弄得晕头转向，不过将这份列表保留在手边还是很有必要的，在适当的时候可以时不时的参考下。祝你好运，希望你能喜欢这些文章。顺便提一句，如果有任何的程序员必读系列的文章没在这个列表中，别忘了分享一下。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://www.akkadia.org/drepper/cpumemory.pdf\" target=\"_blank\"><strong><span style=\"font-size:14px;\">程序员必知之内存篇</span></strong></a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是篇非常经典的文章，它将会带领你走入内存的各个方面，有老的，也有新的，有知道的，也有不知道的。尽管内存十分常见，无处不在，但并不是每个程序员都足够了解它。如果你正在编写高性能的应用程序的话，了解现代系统中的内存尤为重要。硬件设计师们带来了更复杂的内存处理及加速的技术，比如说CPU缓存，但如果离开了程序员它们也无法发挥出最大的价值。我仍在阅读这篇文章，很难说清楚我到底从中学到了多少关于随机访问内存（RAM），CPU缓存，包括1级，2级缓存，不同类型的内存，直接内存访问，内存控制器设计及普通内存的知识。简而言之，它是各个层次的程序员都必读的文章。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\" target=\"_blank\"><strong><span style=\"font-size:14px;\">每个计算机科学家都必知之浮点数运算</span></strong></a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">浮点数运算是一个非常有技术含量的话题，不太容易掌握。许多Java程序员都不清楚使用==操作符比较float/double类型的话到底出现什么问题。许多人在使用float/double进行货币计算的时候经常会犯错。这篇文章是这一系列中的精华，所有的软件开发人员都应该读一下。随着你经验的增长，你肯定想去深入了解一些常见的东西的细节，浮点数运算就是其中之一。作为一名Java高级开发人员，你必须了解如何进行货币运算，何时使用float,double或者BigDecimal，如何对浮点数进行舍入运算等等。就算你知道了浮点数运算的一些基础知识，读下这篇文章，你肯定还会学到一些新的东西。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://www.joelonsoftware.com/articles/Unicode.html\" target=\"_blank\"><strong><span style=\"font-size:14px;\">每个程序员必知之Unicode篇</span></strong></a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">字符编码是另一个许多程序员痛苦挣扎的领域，”每一个程序员都绝对绝对应该了解Unicode以及字符集（不许找任何借口！）“填补了这一空白。标注一下，是的，这就是这篇文章的标题。它是由stackoverflow.com的创始人之一，Joel Spolsky所写的。Joel10年前就在他的博客上发表了这篇文章，不过对于现在而言仍然适用。这篇文章会告诉你什么是Unicode，什么是字符编码，字符是如何通过字节来表示的等等。这篇文章最赞的一点就是它的语言及行文，尽管你根本不知道什么是Unicode，你也能够很容易地看懂。一句话，这又是一篇程序员，码农，软件工程师必读的文章。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://unix4lyfe.org/time/?v=1\" target=\"_blank\"><strong><span style=\"font-size:14px;\"></span></strong><strong><span style=\"font-size:14px;\">每个程序员必知之时间篇</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">除了字符编码外，时间和日期又是另一个程序员经常栽倒的领域，包括我自己在内。甚至是高级开发人员也会被格林尼治标准时间（GMT），世界标准时间（UTC），夏令时，闰秒这些东西搞的死去活来。坦白地说，在处理时区这个问题上，很难不踩一些坑，更别说再加上夏令时什么的。如果你想要试错法的话则更糟糕，因为这么做永远也解决不了你的问题。这里有许多可能出错或者产生误解的地方。比方说，日期是否包括时区可能就会困扰到你，将UNIX时间转化成其它的时区可能会让你崩溃，你还是忘了时钟同步和延迟这些事吧。我希望读完这篇经典的文章后，你的许多关于时间的误解都能够消除，自己能够巩固一些关于日期的基础常识。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://blog.lunatech.com/2009/02/03/what-every-web-developer-must-know-about-url-encoding\" target=\"_blank\"><strong><span style=\"font-size:14px;\">每个WEB开发人员必知之URL编码篇</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这篇文章介绍了Uniform Resource Locator(URL）编码中的一些常见的误解，然后试图阐明什么是HTTP的URL编码，最后列举了一些常见的错误及解决方案。尽管这篇文章的内容并不特定于某种编程语言，但它是用Java来进行问题的描述，并修复URL编码中存在的问题。你会学习到URL的基础语法，HTTP及其它协议中通用的URL格式。这篇文章还介绍了URL中的一些常见错误，比如字符编码，URL不同部分的保留字符，以及URL编解码问题。如果你是一名Java开发人员，你会学习到如何在Java中正确地处理URL，如何构造URL，以及如何使用Apache Common Http client库。最后它还提供了一些最佳实践的建议，比如你应该在构建URL的时候进行编码，确保你的重写URL的过滤器正确地处理了URL，等等。这是任何WEB开发人员必读的文章 。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://programmers.stackexchange.com/questions/46716/what-technical-details-should-a-programmer-of-a-web-application-consider-before\" target=\"_blank\"><strong><span style=\"font-size:14px;\"></span></strong><strong><span style=\"font-size:14px;\">每个程序员必知之WEB开发</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是programmers.stackexchange.com上的一篇非常有趣的文章，它讲的是程序员在将网站对外发布之前需要实现的技术细节。这包括接口设计及用户体验，安全性，WEB标准，性能，搜索引擎优化(SEO），以及一些重要的资源。当今世界严重地依赖于互联网，很多程序员都有自己的网站，通常是一个博客。这篇文章中学到的东西可能对你的专业没有帮助，但它对你个人的事情肯定会有所帮助。你会了解到一些关键的技术，比如HTML,HTTP,XML,CSS，JavaScript,浏览器兼容性，减少网站加载时间的技巧，XML站点地图，W3C规范，以及许多其它的关键的细节。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://katemats.com/what-every-programmer-should-know-about-seo/\" target=\"_blank\"><strong><span style=\"font-size:14px;\">每个程序员必知之SEO</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这对WEB开发人员，程序员，博主而言又是一篇很重要的文章。由于很多程序员同时也是博主，你无法对SEO视而不见，学一个搜索引擎优化的基础知识还是非常重要的，这能帮助Google检索到你的内容并推荐给其它程序员。在今天这个网络互联的时代，没有任何公司可以脱离WEB而存在，SEO变得尤为重要。如果你有一家初创企业在卖一些产品，那么SEO就是你要关注的事情。所有程序员，尤其是WEB开发人员，都可以从这篇文章中受益良多。记住，SEO是一个很宽泛变化的题目，不同的搜索引擎，比如Google，Yahoo等，它们的SEO都各不相同。因此，要想掌握这项技能你得经常更新你的知识库。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://en.deepinmind.com/blog/2014/05/15/what-every-c-programmer-should-know.html\" target=\"_blank\"><strong><span style=\"font-size:14px;\">C程序必知的未定义行为</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">C语言有一个未定义行为的概念。未定义行为是一个很宽泛的主题，它有许多细微的差别，这就是为什么我喜欢Java的一个原因，没有这么多的未定义行为，没有这么多的困惑，更稳定也更消停。很多人看起来很自然的事情在C里其实是未定义的行为，这也是程序BUG的一个常见的来源。除此之外，C中的任何未定义行为都由具体实现来决定（编译器和运行时），它们生成的代码会格式化你硬盘，做一些意想不到的事情，甚至更糟。读下这篇文章，到未定义行为的海洋里遨游吧。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://gafferongames.com/networking-for-game-programmers/what-every-programmer-needs-to-know-about-game-networking/\" target=\"_blank\"><strong><span style=\"font-size:14px;\">程序员必知之网络</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这段话摘自这篇文章，”你是一个程序员。你有想过多玩家的游戏是如何实现的吗？从外面看起来它是：两个或多个玩家通过网络共享相同的经验，就像他们在同一个虚拟世界中一样。不过作为程序员，我们知道底下的真相和你看到的东西是有所区别的。事实上这都只是一个错觉“。这是篇关于网络的非常有趣的文章，它是为游戏开发人员而写的，不过我认为每个程序开发人员都能从中受益。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://en.deepinmind.com/blog/2014/05/15/java-string-tutorial-and-examples-beginners-programming.html\" target=\"_blank\"><strong><span style=\"font-size:14px;\">Java程序员必知之String</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是我自己关于java.lang.String的一篇文章，我个人认为每个Java开发人员都应该了解一下。String在日常的Java开发中非常重要，这就是为什么每个Java程序员都应该对它非常了解。这篇文章涉及到了String的许多重要的领域，包括String池，字符串常量，使用==和equals比较字符串，将字节数组转化成String，为什么字符串是不可变的，如何正确拼接字符串，等等。高级程序员应该都知道这些东西了，不过回顾一下也是不错的。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://stackoverflow.com/questions/2794016/what-should-every-programmer-know-about-security\" target=\"_blank\"><strong><span style=\"font-size:14px;\">程序员必知之安全</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">有一个计算机系的学生在StackOverFlow上问了这个问题。就像我们了解到的一些常见编程概念比如操作系统，算法，数据结构，计算机体系结构，以及其它东西一样，了解安全也同样重要。安全是一个很大的话题，包括加密解密，SSL，WEB安全，混淆，认证，授权，等等，它是每个程序员都应该了解的基础知识。刚进这行的时候，我个人对安全这块还不是很了解，这时候我就开始基于Servlet/JSP写一些的Java WEB程序，后来我才了解到EWB安全性以及一些安全威胁比如SQL注入，拒绝服务，XML注入，跨站脚本，等等。作为一名Java开发人员，我现在遵循fortify, PMP，以及其它一些静态代码分析器提供的Java安全编码规范进行编码。这篇文章是关于安全这个主题的一个很好的合集，不管你现在还写不写代码，这些资源对你来说都非常有用。</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://www.eecs.berkeley.edu/~rcs/research/interactive_latency.html\" target=\"_blank\"><strong><span style=\"font-size:14px;\">程序员必知之延迟时间</span></strong></a>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">这篇文章是一份额外的福利，但也是每个程序员都应该读的。不管用的是什么语言，Java还是C++都好，要写出高性能的应用程序，你都得了解延迟时间的基础常识，比如从内存中读取一个变量需要多久，从一级缓存中读取又需要多久，二级缓存呢，SSD硬盘中随机读又需要多久，还有要是从磁盘中读呢？互斥锁的加锁解锁需要多长时间，从一个城市发送一个数据包到另一个城市需要多长时间，在同一个数据中心又需要多久？这些延迟的数字是独立于任何编程语言的，开发人员必须要想写高频低延迟的应用程序，它们是核心知识库中的一部分。这篇文章还有一个好消息就是，它会告诉你这些年以来这些延迟时间的变化。你可以看到2006年的延迟时间是多少，而现在又是多少。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这就是所有程序员必读文章的列表。看到这些文章的标题，每个程序员都应该知道的XXX，你能了解到关于某个主题的一些比较有深度的知识。坦白说程序员有太多东西要学了，像学习Java语言这种只是冰山的一角，但并不是所有人都有热情去学习。写程序是一份很有挑战的工作，在你的职业生涯中，能帮忙到你的就是这些基础知识，比如，内存，Unicode，浮点数，时间，安全，这些对任何程序员来说都非常重要。有些文章是和语言相关的，比如我自己那篇关于String的文章，还有每个C程序员都应该了解的未定义行为，不过对于许多初学者来说学习一下也有好处。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">译注：我觉得还有一个必读的，就是数数，这里一共是12篇了。。有几篇访问不了的，我也搬运到自己的博客上了。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">原创文章转载请注明出处：</span><a href=\"http://it.deepinmind.com/%E5%85%B6%E5%AE%83/2014/05/15/10-articles-every-programmer-must-read.html\" target=\"_blank\"><span style=\"font-size:14px;\">每个程序员都必读的10篇文章</span></a> \r\n</p>\r\n<p>\r\n	<a href=\"http://javarevisited.blogspot.sg/2014/05/10-articles-every-programmer-must-read.html\" target=\"_blank\"><span style=\"font-size:14px;\">英文原文链接</span></a> \r\n</p>',NULL,NULL,'2014-05-23 16:13:46',0,'每个程序员都必读的10篇文章',0),(116,'admin',12,'<p>\r\n	从 1996 年 Java 诞生到现在，经过多年的考验和积累，Java 慢慢发展壮大起来，现在的 Java 不仅是一门编程语言，而且更是一个编程平台。为什么这么说呢？因为 Java 提供了优雅并且易懂的语法规范，并且在此基础上发展出了大量的类库、可重用代码和开源组织等等，你可以充分利用这些资源来构建你的程序。<br />\r\n<br />\r\n在 Java 官方的白皮书定义了以下的关键词：\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>简单</strong></span>\r\n</p>\r\n<p>\r\n	Java 的语法很接近 C++，但是 Java 忽略了很多不常用到但是又很难理解的语法。例如，在 Java 中不需要头文件，指针，结构体，操作符重载等等。可以说 Java 语法相当于简洁版的 C++，如果你是 C 或者 C++ 程序员，那么你应该很容易理解 Java 代码。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>面向对象</strong></span>\r\n</p>\r\n<p>\r\n	面向对象的概念由来已久，面向对象的思想将程序的关注点放到了数据（=对象）上。打个比方，一个“面向对象”的木匠可能首先考虑的是他正在制作的椅子，然后才是制作椅子的工具。而“非面向对象”的木匠可能首先考虑的是制作椅子的工具。Java 和 C++ 最大的不同是没有使用多重继承机制，而是引入了一个更为简单的概念“接口”。关于面向对象的问题以后再详细讨论。\r\n</p>\r\n<p>\r\n	网络编程能力\r\n</p>\r\n<p>\r\n	Java 有大量的包来处理像 HTTP 和 FTP 这样的 TCP/IP 协议。Java 可以很简单的就像访问本机的文件系统一样通过 URL 来访问网络上的对象。总之，Java 网络编程的能力强大并且简单。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>健壮</strong></span>\r\n</p>\r\n<p>\r\n	Java 着重在编译时检查可能出现的问题，然后是运行时检查。Java 编译器会检查出很多的问题，这些问题在其它的语言中可能会在运行时才会被发现。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>安全</strong></span>\r\n</p>\r\n<p>\r\n	Java 需要用于网络或分布式环境中，因此考虑了很多安全的因素。使用 Java 可以构建无病毒，无修改的系统。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>结构中立</strong></span>\r\n</p>\r\n<p>\r\n	Java 编译器生成了结构中立的字节码文件。这种格式的文件与计算机本身无关，只要计算机有 Java 运行时环境，就可以很容易解释字节码或者将字节码翻译成相应的机器码。当然，在全速的情况下，解释字节码执行速度会比直接执行机器码速度慢。不过，在 Java 虚拟机中提供了选项可以将经常执行的字节码翻译成机器码，这个过程被称为 just-in-time 编译。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>可移植</strong></span>\r\n</p>\r\n<p>\r\n	在 C/C++ 中，原始数据类型的长度数取决于编译器，而在 Java 中的长度却是固定的。例如，在 Java 中，int 类型的变量的长度总是 32 位，而在 C/C++ 中，可能是 16 位，也可能是 32 位，甚至有可能是其它的长度值。这意味着 Java 具有更好的移植性。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>解释器</strong></span>\r\n</p>\r\n<p>\r\n	Java 解释器可以在任何机器上直接执行 Java 字节码。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>高性能</strong></span>\r\n</p>\r\n<p>\r\n	在 Java 的早期，很多人都不满意 Java 的性能。今天，在 just-in-time 编译器的帮助下，Java 完全有能力和传统的编译器竞争，甚至在某些情况下，Java 的性能会更高，因为如果使用 Java，那么你将得到大量有用的信息来进行性能调优。例如，just-in-time 编译器可以监测哪些代码经常被执行并且对这部分代码进行优化。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>多线程</strong></span>\r\n</p>\r\n<p>\r\n	如果你使用过其它语言，那么你一定会惊叹在 Java 中能如此简单的实现多线程。正因如此，才使得 Java 是很受欢迎的服务器端编程语言。\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>动态</strong></span>\r\n</p>\r\n<p>\r\n	在许多方面，Java 语言的动态特性都比 C/C++ 强。Java 的动态特性对于需要在运行时分析对象的系统特别有用，例如插件系统、对象数据库系统、Java GUI 编辑器等等。\r\n</p>\r\n<p>\r\n	总之，Java 能够流行起来并非偶然，其中凝聚了无数大师的聪明才智。虽然 Java 语言简洁强大，但是学习的过程却需要按部就班，只有打下坚实的基础，才能将这门语言运用得游刃有余。\r\n</p>',NULL,'2014-05-25 19:11:57','2014-05-25 19:10:17',0,'为什么选择 Java ？',0),(117,'admin',16,'<img src=\"http://www.kepu.net.cn/gb/cnnic20year/20book/images/20140403_r1.jpg\" align=\"left\" /><span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 互联网进入中国人的生活已接近20 年了，它已经并且正在改变着我们的生活，影响着我们当中越来越多人的思维和行为方式，从而在不知不觉间逐渐影响、改变着我们的社会。&nbsp;</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 确实，互联网不只是取代了我们生活中许多传统的东西，提供了查找知识、购买和信息交流的新渠道，也不只是为我们展开了巨大的数字图书馆、在线电影院和可供在线学习的许多名校的数字课件，互联网标志一个新时代来临。这个时代的特征不只是前所未有的丰富多彩的物质环境，也不只是无所不在的，使我们既感到方便，又担心个人隐私泄露的、多样化的信息服务，同时也包含着精神和文化方面出现的某些崭新的现象。&nbsp;</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 互联网真的有精神吗？同历史上所有的科技创造一样，相关学科领域的科技进步和工程实践，是产生新的突破必不可少的物质条件。但是，对于互联网的发生，还有另外一个重要因素，那就是互联网的先驱和奠基者们所坚守的精神和追求。&nbsp;</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 中国的互联网只是全球互联网的一部分，回顾我们的发展绝不可孤立来看。从利克里德\"人机共生\"方向的革命性地预见，提出建设链接全球的网络，通过高度发达的信息共享和人机合作，使人的智慧充分得到解放，到温顿 · 瑟夫（VintCerf）和罗伯特 · 卡恩 （Robert Khan） 发明TCP/IP 协议，使得任何人只要做好互联网协议和软件，并找一个允许接入的点就能进入互联网。全球互联网发展40 多年来，从没有路的地方走出路来，推动知识共享、开放创新、超越包容。是许多这样的缔造者们所奠定的思想和气质，才成就了我们今天的互联网世界。</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 温顿 · 瑟夫作为TCP/IP 主要发明人，反复强调：\"互联网是为了每一个人的。\" 这句话说出来显得很轻松，但实现起来却是多么艰难。为达到这个髙尚的目的，像温顿 · 瑟夫这样的缔造者们经历了无法想象的努力，最终不仅留给世人伟大的互联网，而且也留下了宝贵的精神财富。</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 自从1983 年1 月1 日网络协议成功转换到TCP/IP 以来，互联网就像一种生物，基本上以\"有机生长\"的方式迅速扩展、延伸全球，链接着25 亿网民。所到之处，互联网都显现出特殊的精神气质：以信息公平促进社会公平；开放网络、自由访问、信息的共享；自下而上、首创精神；网络中立；不断创新、永无止境。</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 为什么说互联网是一个时代？</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 最具有实质意义的是，互联网改变了和正在改变着人际关系。对于人类社会的生态环境而言，人际关系可以说是起着决定性的作用，同时它也是伦理价值观的基本元素。在网络时代，技术发展巳经达到这样的髙度，以致于可以在某些情况下改变人的利害观，从而使得人际关系开始出现新的因子，开始走向开放、协同、共赢、共享的社会。例如从开源操作系统到维基百科、维基音乐、维基图书、维基旅行等等，都属于史无前例的、提供全球任何人免费使用的、全球智慧的大规模开放合作。</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 技术进步和好的游戏规则甚至可以改变容易发生利益冲突的双方的思考方式，进入共赢关系。例如，淘宝网把互相戒备的买卖双方变成了利益一致、友好共赢的双方，因为在淘宝平台上，欺骗行为很容易被发现并受到惩罚，为了自身利益，卖家更愿意以守信和良好服务换取好评，从而提髙自身在网上的价值，买卖双方的利益在互联网环境中达到了髙度统一。</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 互联网时代的开放思维方式、共享，不只是有利于他人，同时也提高了自身的价值。如果在各个社会领域中，这样的思考方式越来越普遍，游戏规则越来越有利于合作共赢，难道这不是人类历史长河中一种新时代的曙光吗？</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 当然，与历史上任何科技创新对社会产生的影响一样，信息技术，特别是互联网的普及，在给人们带来自由、开放、快捷、交互、方便和成本低廉的信息交流的同时，也会带来网络安全、青少年保护、网络版权、个人隐私等等一系列问题。在网上，任何善与恶都可以得到放大，但这并不应该成为我们舍弃它的借口，问题在于如何治理这个空间，如何规范来到这个自由空间的每一个人的行为，如何提髙每个人的自律精神和社会责任心。</span><br />\r\n<span style=\"color:#402A18;font-family:微软雅黑;font-size:15px;line-height:25px;background-color:#FCFBF7;\"> 在信息时代，我们的网络访问和信息知情权力应该不受侵犯。我们坚定不移的方针，是积极运用网络，认真规范个人和企业的网络行为，发挥网络监督作用，以信息公平促整个社会的公平。</span>',NULL,NULL,'2014-05-25 19:39:41',0,'胡启恒: 什么是真正的互联网精神',0),(118,'admin',12,'<p style=\"font-size:19px;font-family:\'Droid Sans\', sans-serif;color:#333333;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">时间追朔到 1991 年，当时由 sun 公司的 Patrick Naughton 和 James Gosling 领导的一个团队想要设计一种小型的计算机语言，这种语言可以运行在像电视机机顶盒这样的设备上面。由于这类设备不可能拥有太多的动力或内存，因此这种语言必须要小巧而且生成的代码要相当紧凑。当然，不同的生产厂商可能会选择不同的 CPU，因此这种语言不能和任何特定的硬件结构绑定。当时，这个项目的代号是“Green”。</span><br />\r\n<span id=\"more-27\"></span><br />\r\n<span style=\"font-family:\'Microsoft YaHei\';\"> 小巧、紧凑和跨平台是 Green 项目面临的主要问题。针对这些问题，Green 团队复活了早期 Pascal 的一些思想。Niklaus Wirth 是 Pascal 的创始人，他提出设计一种跨平台的语言，这种语言生成的中间代码在虚拟机中执行。只要有正确的解释器，那么这些中间代码就可以在任何机器上执行。Green 团队借用了虚拟机的思想解决了他们的问题。</span>\r\n</p>\r\n<p style=\"font-size:19px;font-family:\'Droid Sans\', sans-serif;color:#333333;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">Sun 公司的工作人员大多都具有 UNIX 背景，所以他们的语言基于 C++ 而不是 Pascal。并且他们将语言设计为面向对象而不是面向过程。Gosling 将这门语言命名为“Oak”（据说是因为从他办公室的窗户看出去，正好可以看到一颗橡树，而“Oak”在英文中的意思就是橡树）。不过后来发现“Oak”这个名字已经被其它程序语言使用了，最终他们将名字改为了“Java”。事实证明，这次改名相当成功。</span>\r\n</p>\r\n<p style=\"font-size:19px;font-family:\'Droid Sans\', sans-serif;color:#333333;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">1992 年 Green 项目发布了自己的第一个产品，名字叫做“*7”。它是一个相当智能的远程控制装置。但是，这个产品一直无人关注。当然，Green 团队的成员试图通过其它各种方式来推销他们的技术，但最终都以失败告终。他们甚至还参与了有线电视机顶盒项目的竞标，该项目需要设计一个新型的具有有线电视视频点播服务的产品，但是最终他们没有中标。</span>\r\n</p>\r\n<p style=\"font-size:19px;font-family:\'Droid Sans\', sans-serif;color:#333333;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">Green 项目（后来有了一个新名字叫做 “First Person”有限公司）花了 1993 年整年和 1994 年半年的时间来找寻购买他们产品的客户，但是最终都没能找到，在 1994 年 First Person 公司解散了。</span>\r\n</p>\r\n<p style=\"font-size:19px;font-family:\'Droid Sans\', sans-serif;color:#333333;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">与此同时，万维网正在逐渐地壮大。 Sun 公司的 Patrick Naughton 和 Jonathan Payne 开发出了自己的浏览器，这款浏览器发展成为了后来的 HotJava 浏览器。HotJava 浏览器可以在客户端运行 Java 程序，这些在客户端运行的 Java 程序后来称之为 Applet。正是由于这样的功能才使得 Java 逐渐流行。</span>\r\n</p>\r\n<p style=\"font-size:19px;font-family:\'Droid Sans\', sans-serif;color:#333333;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';\">Sun 公司在 1996 年发布了 Java 1.0 版本，但是这个版本的功能相当有限，在随后的 1.1 版本中提高了反射的能力并且在 GUI 编程中添加了新的事件模型。自此，Java 开始了自己风光的历史，我们在下表中来大略回顾一下 Java 经历的版本：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<table style=\"margin:0px 0px 2em;padding:0px;font-size:0.8em;width:680px;color:#333333;font-family:\'Droid Sans\', sans-serif;background-color:#FFFFFF;\">\r\n		<tbody>\r\n			<tr>\r\n				<td width=\"15%\" style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<strong><span style=\"font-family:\'Microsoft YaHei\';\">版本</span></strong> \r\n				</td>\r\n				<td width=\"15%\" style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<strong><span style=\"font-family:\'Microsoft YaHei\';\">年份</span></strong> \r\n				</td>\r\n				<td width=\"40%\" style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<strong><span style=\"font-family:\'Microsoft YaHei\';\">新的语言特性</span></strong> \r\n				</td>\r\n				<td width=\"30%\" style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<strong><span style=\"font-family:\'Microsoft YaHei\';\">类和接口数</span></strong> \r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1.0</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1996</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">语言自身</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">211</span>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1.1</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1997</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">内部类</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">477</span>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1.2</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1998</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">无</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1524</span>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1.3</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2000</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">无</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1840</span>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">1.4</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2004</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">无</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2723</span>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">5.0</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2004</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">泛型、“for each”循环、可变长参数、自动封箱、元数据、枚举、静态导入</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">3279</span>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">6</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">2006</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">无</span>\r\n				</td>\r\n				<td style=\"font-size:1em;font-family:\'Droid Sans\', sans-serif;\">\r\n					<span style=\"font-family:\'Microsoft YaHei\';\">3777</span>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</p>',NULL,'2014-05-26 06:27:04','2014-05-26 06:26:37',0,'Java 简史',0),(119,'admin',12,'<p>\r\n	<span style=\"font-size:14px;\">Java EE 平台使用分布式多层应用系统模式。应用程序按功能分离到不同层次的组件中，这样便于将 Java EE 应用按不同层部署到不同的主机上。</span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 下图展示了两个 Java EE 应用怎样分离成不同层的组件：</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://www.aptusource.org/wp-content/uploads/2011/02/java_ee_tier.gif\"><img title=\"java_ee_tier\" src=\"http://www.aptusource.org/wp-content/uploads/2011/02/java_ee_tier.gif\" alt=\"\" width=\"683\" height=\"517\" style=\"height:auto;\" /></a> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">客户层运行在客户端机器上。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Web 层运行在 Java EE 容器中。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">业务逻辑层运行在 Java EE 容器中。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">持久层（通常使用数据库），运行在 EIS（企业信息系统） 服务器中。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">虽然 Java EE 应用可以如上图所示那样分成三层或四层，但是在一般情况下我们还是习惯将其分为三层，因为我们可以将应用分别部署在三台不同的机器上：客户端机器，Java EE 服务器，存储设备（数据库）。三层应用程序模式扩展了标准的两层（客户端和服务端）模式，在客户端和存储设备之间添加了应用程序服务器。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">安全性</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在其它的企业级应用中，需要为每个平台制定详细的安全措施。而在 Java 企业应用中，Java EE 平台会强制启用安全措施，Java EE 平台提供了大量跨平台的安全实现，这样可以使开发人员从复杂的安全实现中解放出来。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Java EE 平台提供了标准的声明式访问控制规则，这些规则由程序员制定并在应用程序部署到服务器的时候生效。Java EE 还提供了标准的登录机制，因此开发人员不需要在应用程序中实现这部分的功能。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Java EE 组件</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Java EE 应用是由 Java EE 组件组成的。Java EE 组件是一个自包含的功能单元，它们拥有相关的类，文件等。并且也可以和其他的组件进行交互。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在 Java EE 标准中定义了下面的 Java EE 组件：</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">应用程序客户端和 Applet 是运行在客户端的客户层组件。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Java Servlet，JavaServer Faces （JSF）和 JavaServer Pages（JSP）技术是运行在服务器上的 Web 层组件。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Enterprise JavaBeans（EJB）是运行在服务器端的业务逻辑层组件。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Java EE 组件使用 Java 语言编写，并且和使用和其它 Java 程序一样的编译方式。Java EE 组件和普通的 Java 类的区别在于：Java EE 组件组成了 Java EE 应用，因此有着良好的结构并且需要遵循 Java EE 规范。Java EE 组件由 Java EE 服务器统一运行和管理。</span>\r\n</p>',NULL,NULL,'2014-05-26 06:28:35',0,'分布式多层应用系统',0),(120,'admin',28,'<p>\r\n	在本文中将介绍以下几点：\r\n</p>\r\n<ul>\r\n	<li>\r\n		下载 Quartz\r\n	</li>\r\n	<li>\r\n		安装 Quartz\r\n	</li>\r\n	<li>\r\n		配置 Quartz\r\n	</li>\r\n	<li>\r\n		编写一个样例程序\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	下载和安装\r\n</h3>\r\n<p>\r\n	首先，到 <a href=\"http://quartz-scheduler.org/downloads/\">Quartz 最新稳定版</a>下载软件（无需注册），然后解压以便使用。\r\n</p>\r\n<h4>\r\n	Quartz Jar 包\r\n</h4>\r\n<p>\r\n	Quartz 解压后包含了几个 jar 文件，定位到 Quartz 根目录。Quartz 的主要包名称为 quartz-xxx.jar（xxx 表示版本号）。要使用 Quartz 提供的特性，这个 jar 包必须添加到项目的 classpath 中。Quartz 根目录 /lib 目录下包含了 Quartz 的一系列依赖包。如果要使用 Quartz 的完整功能，那么这些 jar 包也要添加到项目的 classpath 中。如果需要创建独立的 Quartz 应用程序，那么建议将所有的这些包都添加到项目 classpath 中。如果你是在 web 服务器中使用 Quartz，那么这些第三方包可能在你的 classpath 中已经存在，这时你需要选择你的项目具体需要哪个 jar 包。\r\n</p>\r\n<h4>\r\n	配置文件\r\n</h4>\r\n<p>\r\n	Quartz 使用的配置文件是 quartz.properties。如果使用最基本的配置，那么这个文件不是必须的，否则，这个文件必须包含在 classpath 中。\r\n</p>\r\n<p>\r\n	如果你创建的是 web 应用程序，那么 quartz.properties 文件需要部署到 WEB-INF/classes 中，也就是 classpath 中。\r\n</p>\r\n<h3>\r\n	配置\r\n</h3>\r\n<p>\r\n	Quartz 的最大优势就是可配置。最好的配置方式是编写 quartz.properties 文件并放到项目的 classpath 中。\r\n</p>\r\n<p>\r\n	Quartz 发布包中包含了几个配置文件的例子，它们放在发布包的 /examples 目录下。我建议你创建新的 quartz.properties 文件进行配置，而不是拷贝例子中的 quartz.properties 文件来修改。这样做的配置文件将会更加整洁，并且你也会学习到更多 Quartz 提供的特性。\r\n</p>\r\n<p>\r\n	作为快速起步，我们配置一个最基本的 quartz.properties 文件：\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n<pre class=\"prettyprint lang-xml\">org.quartz.scheduler.instanceName = MyScheduler\r\norg.quartz.threadPool.threadCount = 3\r\norg.quartz.jobStore.class = org.quartz.simpl.RAMJobStore</pre>\r\n<br />\r\n	</div>\r\n</div>\r\n<p>\r\n	创建调度器时，会应用上面的配置，配置解释如下：\r\n</p>\r\n<ul>\r\n	<li>\r\n		org.quartz.scheduler.instanceName – 创建的调度器命名为 MyScheduler\r\n	</li>\r\n	<li>\r\n		org.quartz.threadPool.threadCount – 线程池中有 3 个线程，这意味着最多只能同时运行 3 个任务。\r\n	</li>\r\n	<li>\r\n		org.quartz.jobStore.class – 所有 Quartz 的数据，例如任务和触发器的数据都存放到内存中（而不是数据库中）。即使你使用了数据库同时也使用了 Quartz，也建议使用 RamJobStore。\r\n	</li>\r\n</ul>\r\n<h3>\r\n	编写一个样例\r\n</h3>\r\n<p>\r\n	现在，你已经下载并安装了 Quartz，是时候开始编写一个样例程序了。下面的代码得到了一个 Scheduler（调度器），并调用了调度器的开始和结束操作。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<span style=\"line-height:1.5;\"> </span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">import org.quartz.Scheduler;\r\nimport org.quartz.SchedulerException;\r\nimport org.quartz.impl.StdSchedulerFactory;\r\nimport static org.quartz.JobBuilder.*;\r\nimport static org.quartz.TriggerBuilder.*;\r\nimport static org.quartz.SimpleScheduleBuilder.*;\r\n \r\n \r\npublic class QuartzTest {\r\n \r\n    public static void main(String[] args) {\r\n \r\n        try {\r\n            // Grab the Scheduler instance from the Factory \r\n            Scheduler scheduler = StdSchedulerFactory.getDefaultScheduler();\r\n \r\n            // and start it off\r\n            scheduler.start();\r\n \r\n            scheduler.shutdown();\r\n \r\n        } catch (SchedulerException se) {\r\n            se.printStackTrace();\r\n        }\r\n    }\r\n}</pre>\r\n<br />\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">一旦使用 StdSchedulerFactory.getDefaultScheduler() 获得了 Scheduler，那么你的程序将不会停止，触发调用了 scheduler 的 shutdown 方法。这是因为一直都有活动的线程。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	如果你没有配置日志，那么所有的日志将会在控制台打印，你看到的输出可能是这样：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n</div>\r\n<p>\r\n	<span><span style=\"line-height:normal;\"> </span></span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">[INFO] 21 Jan 08:46:27.857 AM main [org.quartz.core.QuartzScheduler]\r\nQuartz Scheduler v.2.0.0-SNAPSHOT created.\r\n \r\n[INFO] 21 Jan 08:46:27.859 AM main [org.quartz.simpl.RAMJobStore]\r\nRAMJobStore initialized.\r\n \r\n[INFO] 21 Jan 08:46:27.865 AM main [org.quartz.core.QuartzScheduler]\r\nScheduler meta-data: Quartz Scheduler (v2.0.0) \'Scheduler\' with instanceId \'NON_CLUSTERED\'\r\n  Scheduler class: \'org.quartz.core.QuartzScheduler\' - running locally.\r\n  NOT STARTED.\r\n  Currently in standby mode.\r\n  Number of jobs executed: 0\r\n  Using thread pool \'org.quartz.simpl.SimpleThreadPool\' - with 50 threads.\r\n  Using job-store \'org.quartz.simpl.RAMJobStore\' - which does not support persistence. and is not clustered.\r\n \r\n \r\n[INFO] 21 Jan 08:46:27.865 AM main [org.quartz.impl.StdSchedulerFactory]\r\nQuartz scheduler \'Scheduler\' initialized from default resource file in Quartz package: \'quartz.properties\'\r\n \r\n[INFO] 21 Jan 08:46:27.866 AM main [org.quartz.impl.StdSchedulerFactory]\r\nQuartz scheduler version: 2.0.0\r\n \r\n[INFO] 21 Jan 08:46:27.866 AM main [org.quartz.core.QuartzScheduler]\r\nScheduler Scheduler_$_NON_CLUSTERED started.\r\n \r\n[INFO] 21 Jan 08:46:27.866 AM main [org.quartz.core.QuartzScheduler]\r\nScheduler Scheduler_$_NON_CLUSTERED shutting down.\r\n \r\n[INFO] 21 Jan 08:46:27.866 AM main [org.quartz.core.QuartzScheduler]\r\nScheduler Scheduler_$_NON_CLUSTERED paused.\r\n \r\n[INFO] 21 Jan 08:46:27.867 AM main [org.quartz.core.QuartzScheduler]\r\nScheduler Scheduler_$_NON_CLUSTERED shutdown complete.</pre>\r\n<br />\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<br />\r\n			</td>\r\n			<td>\r\n				<div>\r\n					<div>\r\n						chedulerScheduler_$_NON_CLUSTEREDshutdowncomplete.\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	要完成一些你感兴趣的任务，需要在 start() 和 shutdown() 方法之间添加代码：\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\"> // define the job and tie it to our HelloJob class\r\n&nbsp;&nbsp;&nbsp; JobDetail job = newJob(HelloJob.class)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .withIdentity(\"job1\", \"group1\")\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .build();\r\n\r\n&nbsp;&nbsp;&nbsp; // Trigger the job to run now, and then repeat every 40 seconds\r\n&nbsp;&nbsp;&nbsp; Trigger trigger = newTrigger()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .withIdentity(\"trigger1\", \"group1\")\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .startNow()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .withSchedule(simpleSchedule()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .withIntervalInSeconds(40)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .repeatForever())&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .build();\r\n\r\n&nbsp;&nbsp;&nbsp; // Tell quartz to schedule the job using our trigger\r\n&nbsp;&nbsp;&nbsp; scheduler.scheduleJob(job, trigger);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	（你可能也需要在执行 shutdown() 之前设置一点时间用于触发任务，最简单的办法是添加 Thread.sleep(60000) 方法）。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	原文链接:http://www.aptusource.org/2014/05/quartz-quick-start-guide/\r\n</p>',NULL,'2014-05-26 06:36:09','2014-05-26 06:32:50',0,'Quartz快速入门指南',0),(121,'admin',28,'<p>\r\n	<span style=\"font-size:14px;\">在使用 scheduler （调度器）之前，首先要创建实例。创建实例需要用到 SchedulerFactory 类。有的 Quartz 使用者喜欢将这个工厂对象放入 JNDI 中存储，另外一些用户喜欢简单地实例化工厂类（下面的例子就使用这种方式）。</span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 一旦 Scheduler 实例被创建，你就可以进行启动，待命，关闭操作。记住，一旦 Scheduler 关闭后，就不能重新启动，而是需要创建另一个 Scheduler 实例。如果 Scheduler 没有启动，或者触发器处于暂停状态，那么触发器不会被触发（也不会执行任何任务）。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">下面是一段简单的代码，其中创建了 Scheduler 实例，并且安排了一些执行的任务：</span>\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">SchedulerFactory schedFact = new org.quartz.impl.StdSchedulerFactory();\r\n\r\n  Scheduler sched = schedFact.getScheduler();\r\n\r\n  sched.start();\r\n\r\n  // define the job and tie it to our HelloJob class\r\n  JobDetail job = newJob(HelloJob.class)\r\n      .withIdentity(\"myJob\", \"group1\")\r\n      .build();\r\n\r\n  // Trigger the job to run now, and then every 40 seconds\r\n  Trigger trigger = newTrigger()\r\n      .withIdentity(\"myTrigger\", \"group1\")\r\n      .startNow()\r\n      .withSchedule(simpleSchedule()\r\n          .withIntervalInSeconds(40)\r\n          .repeatForever())\r\n      .build();\r\n\r\n  // Tell quartz to schedule the job using our trigger\r\n  sched.scheduleJob(job, trigger);</pre>\r\n</p>',NULL,NULL,'2014-05-26 06:37:07',0,'使用 Quartz',0),(122,'admin',28,'<p>\r\n	Quartz API 主要包含了以下接口\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		Scheduler – 调度器，任务调度的主 API。\r\n	</li>\r\n	<li>\r\n		Job – 由调度器调度的任务需要实现的接口。\r\n	</li>\r\n	<li>\r\n		JobDetail – 用于定义任务的实例。\r\n	</li>\r\n	<li>\r\n		Trigger – 用于定义需要执行的任务和任务的执行时间。\r\n	</li>\r\n	<li>\r\n		JobBuilder – 用于定义/创建 JobDetail 实例。\r\n	</li>\r\n	<li>\r\n		TriggerBuilder – 用于定义/创建 Trigger 对象。\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h3>\r\n	Quartz API\r\n</h3>\r\n<p>\r\n	Scheduler（调度器）的生命周期由&nbsp;SchedulerFactory&nbsp; 创建 Scheduler 开始到调用 shutdown() 结束。一旦创建了 Scheduler&nbsp; 实例，就可以新增，移除，查看 Job 和 Trigger，和执行其它调度相关工作（例如暂停 Trigger）。如果 Scheduler 没有调用 start() 方法，那么将不会执行任何 Trigger 上的任务。\r\n</p>\r\n<p>\r\n	Quartz 定义了 builder 类，它们定义了领域专用语言（DSL，有时也成为“流式接口”）。\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">  // define the job and tie it to our HelloJob class\r\n  JobDetail job = newJob(HelloJob.class)\r\n      .withIdentity(\"myJob\", \"group1\") // name \"myJob\", group \"group1\"\r\n      .build();\r\n        \r\n  // Trigger the job to run now, and then every 40 seconds\r\n  Trigger trigger = newTrigger()\r\n      .withIdentity(\"myTrigger\", \"group1\")\r\n      .startNow()\r\n      .withSchedule(simpleSchedule()\r\n          .withIntervalInSeconds(40)\r\n          .repeatForever())            \r\n      .build();\r\n        \r\n  // Tell quartz to schedule the job using our trigger\r\n  sched.scheduleJob(job, trigger);</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	上面代码中创建 job 使用到的方法来自静态导入的 JobBuilder 类，创建 Trigger 的方法来自静态导入的 TriggerBuilder，同样也静态导入了 SimpleScheduleBuilder。\r\n</p>\r\n<p>\r\n	静态导入的 DSL 可以通过下面语法定义：\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">import static org.quartz.JobBuilder.*;\r\nimport static org.quartz.SimpleScheduleBuilder.*;\r\nimport static org.quartz.CronScheduleBuilder.*;\r\nimport static org.quartz.CalendarIntervalScheduleBuilder.*;\r\nimport static org.quartz.TriggerBuilder.*;\r\nimport static org.quartz.DateBuilder.*;</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	ScheduleBuilder 有多个变体，用于定义不同类型的周期。\r\n</p>\r\n<p>\r\n	DateBuilder 中包含了大量的方法方便创建 java.util.Date 实例来指定时间。\r\n</p>\r\n<h3>\r\n	Jobs 和 Triggers\r\n</h3>\r\n<p>\r\n	任务需要实现 Job 接口，接口中只有一个方法：\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">  package org.quartz;\r\n\r\n  public interface Job {\r\n\r\n    public void execute(JobExecutionContext context)\r\n      throws JobExecutionException;\r\n  }</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	当任务的 Trigger 被触发，任务的 execute 方法将会由调度器的一个工作线程调用。传入这个方法的 JobExecutionContext&nbsp; 对象用于提供任务运行环境的信息（包含了一个 Scheduler 的句柄，一个Trigger 的句柄，一个 JobDetail 的句柄和几个其它项）。\r\n</p>\r\n<p>\r\n	JobDetail 由 Quartz 客户端创建（你自己编写）。它包含了大量的任务属性设置和 JobMetaMap 对象（可用于存储任务的状态信息）。这个类本质上来说是用于定义 Job 对象。\r\n</p>\r\n<p>\r\n	Trigger 对象用于触发任务的执行。它定义了任务的执行时间。当你创建了一个 Trigger，你需要提供你需要的时间表（schedule）用于控制任务的执行。Trigger 可能还包含了 JobDataMap 对象，当你需要传递参数给 Job 的时候，这个类就相当有用。Quartz 提供了几个 Trigger 的实现，其中最常用的是 SimpleTrigger 和 CronTrigger。\r\n</p>\r\n<p>\r\n	SimpleTrigger 用于执行某个时间点执行一次的任务，或用于在某个时间执行一次任务，并且在 T 周期重复执行 N 次。CronTrigger 用于基于日历的任务，例如“每周五中午”或“每个月10号上午10点15分”执行。\r\n</p>\r\n<p>\r\n	为什么需要 Job 和 Trigger？有些任务调度方案没有分离 job 和 trigger，为什么 Quartz 需要分别定义 Job 和 Trigger 呢？主要基于以下考虑。\r\n</p>\r\n<p>\r\n	多个 Job 可以保存到同一个 Trigger，多个 Trigger 也可以关联到相同的 Job。这种松耦合的设计的另外一个好处是可以在 trigger 过期后配置任务到调度器中，方便以后重新开始任务，而不用再次定义任务。也允许在不更换任务的情况下更改和替换 Trigger。\r\n</p>\r\n<h3>\r\n	唯一标识\r\n</h3>\r\n<p>\r\n	Jobs 和 Triggers 可以使用 Quartz 调度器注册一个唯一标识。Job 和 Trigger 的键（JobKey 和 TriggerKey）允许进行分组，这对于任务和触发器来说非常易于组织成像“报表任务”或“维护任务”这样的分组。 分组中的键必须唯一。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>',NULL,NULL,'2014-05-26 06:39:08',0,'Jobs 和 Triggers',0),(123,'admin',28,'<p>\r\n	<span style=\"font-size:14px;\">类似于 Job，Trigger 也非常容易使用，但是它包含了大量的自定义选项，你需要了解它们才能完全使用 Quartz。并且，Trigger 本身有很多不同的实现，你需要根据具体情况进行选择。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">通用 Trigger 属性</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">先不说所有 Trigger 都有 TriggerKey 属性用于跟踪唯一标识。所有的 Trigger 还有另一些通用的其它属性。这些通用属性可以在你定义 Trigger 的时候使用 TriggerBuilder 进行设置。（后面有例子）</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">下面列出了所有 Trigger 的通用属性：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">jobKey 属性表示当 trigger 触发的时候，被执行的 Job 的唯一标识。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">startTime 属性表示 trigger 的时间表中开始进行关注的时间。这个值是 java.util.Date 类型的对象。 对于有的 Trigger 类型来说，它们将会在这个时间被触发，另外的一些 Trigger 只是简单地将这个时间标记为开始关注的时间，这意味着你可以在 1 月份的时候设置触发器为“每月 5 日执行”，并且设置 startTime 为 4 月 1 日，那么距离这个触发器触发还有几个月的时间。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">endTime 属性表示 Trigger 中的时间表不再进行关注的时间。例如，如果你设置了“每月 5 日执行”的触发器，如果将 endTime 设置为 7 月 1 日，那么这个触发器最后一次触发将会是 6 月 5 日。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style=\"font-size:14px;\">其它属性将会在下面的文章中进行介绍。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">Priority</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">有的时候，当你有多个 Trigger（或者在 Quartz 线程池中有多个工作线程），Quartz 可能没有足够的资源同时触发所有触发器上的任务。在这种情况下，你可能想控制你的哪个 Trigger 将会在 Quartz 工作线程中第一个被触发。为了满足这个需求，你可以设置 Trigger 的 priority 属性。如果有 N 个 Trigger 同时被触发，而当时只有 Z 个工作线程，那么前 Z 个 priority 最高的 Trigger 将会被触发。如果没有设置这个属性，默认值是 5。这个属性接受所有整数，正数或负数都合法。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">注意：Priority 只会在同时触发 Trigger 的时候进行比较。10:59 触发的 Trigger 总是比 11:00 触发的 Trigger，不管它们的 priority 值是多少。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">注：如果 trigger 上的 job 需要恢复，那么恢复后会使用原始 trigger 相同的 priority。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">错过触发机制</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">Trigger 上的另一个很重要的属性是“错过触发指令”。当调度器停止或在 Quartz 线程池中没有可用的线程可以执行任务的时候，就有可能发成错过触发（应该触发而没有触发）。不同的 Trigger 类型有它们各自不同的错过触发机制。默认情况下，使用“智能策略”机制-这是基于 Trigger 类型和配置的动态行为。当调度器启动的时候，它会检索是否有 trigger 错过触发，然后将会基于它们独立配置的错过触发机制进行更新。当你在自己的项目中使用 Quartz 的时候，你需要熟悉你使用的 trigger 类型的错过触发机制，在它们的 JavaDoc 中都有详细说明。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">Calendar</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">Quartz Calendar 对象（不是 java.util.Calendar 对象）可以在定义 Trigger 的时候关联到 Trigger，并保存到调度器中。使用 Calendar 可以很方便的在触发周期内去除某些时间。例如，你可以创建一个 trigger，并设置在每个工作日的上午 9:30 被触发，然后可以添加 Calendar 来去除所有的节假日。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Calendar 可以是任何实现 Calendar 接口的可序列化对象。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Calendar 接口：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">\r\n<pre class=\"prettyprint lang-java\">package org.quartz;\r\n\r\npublic interface Calendar {\r\n\r\n  public boolean isTimeIncluded(long timeStamp);\r\n\r\n  public long getNextIncludedTime(long timeStamp);\r\n\r\n}</pre>\r\n<br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">注意，这些方法的参数都是 long 类型，正如你所料，它们表示毫秒时间戳。 这意味着使用 calendar 可以定义的时间最小单位是毫秒，你可能感兴趣的是 Quartz 如何定义一整天，为了方便，Quartz 提供了 org.quartz.impl.HolidayCalendar 来做这个工作。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Calendars 必须实例化并通过 addCalendar() 方法注册到调度器。如果你使用 HolidayCalendar，实例化之后，可以调用 addExcludedDate(Date date) 方法在运行周期中去除某些日期。相同的 Calendar 可以由多个 Trigger 使用：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">\r\n<pre class=\"prettyprint lang-java\">HolidayCalendar cal = new HolidayCalendar();\r\ncal.addExcludedDate( someDate );\r\ncal.addExcludedDate( someOtherDate );\r\n\r\nsched.addCalendar(\"myHolidays\", cal, false);\r\n\r\n\r\nTrigger t = newTrigger()\r\n    .withIdentity(\"myTrigger\")\r\n    .forJob(\"myJob\")\r\n    .withSchedule(dailyAtHourAndMinute(9, 30)) // execute job daily at 9:30\r\n    .modifiedByCalendar(\"myHolidays\") // but not on holidays\r\n    .build();\r\n\r\n// .. schedule job with trigger\r\n\r\nTrigger t2 = newTrigger()\r\n    .withIdentity(\"myTrigger2\")\r\n    .forJob(\"myJob2\")\r\n    .withSchedule(dailyAtHourAndMinute(11, 30)) // execute job daily at 11:30\r\n    .modifiedByCalendar(\"myHolidays\") // but not on holidays\r\n    .build();\r\n\r\n// .. schedule job with trigger2</pre>\r\n<br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">上面的代码创建了两个 trigger，都是每日触发。然而，在设置的 calendar 周期内的触发将会被忽略。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">org.quartz.impl.calendar 包中有更多的 Calendar 实现可以满足你的需要。</span>\r\n</p>',NULL,NULL,'2014-05-26 06:40:54',0,'Triggers 详解',0),(124,'admin',28,'<p>\r\n	<span style=\"font-size:14px;\">Job 非常容易实现，这个接口中只有一个 execute() 方法。Quartz 中可能需要为 Job 实例设置属性，这个功能通过 JobDetail 类来完成。</span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> JobDetail 实例通过 JobBuilder 创建。你可以使用静态导入所有的方法，这样可以在你的代码中使用 DSL 风格：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		import static org.quartz.JobBuilder.*;<br />\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">让我们花点时间来讨论 Job 在 Quartz 中的生命周期：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">现在，假设 HelloJob 的定义如下：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\"> </span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">  // define the job and tie it to our HelloJob class\r\n  JobDetail job = newJob(HelloJob.class)\r\n      .withIdentity(\"myJob\", \"group1\") // name \"myJob\", group \"group1\"\r\n      .build();\r\n        \r\n  // Trigger the job to run now, and then every 40 seconds\r\n  Trigger trigger = newTrigger()\r\n      .withIdentity(\"myTrigger\", \"group1\")\r\n      .startNow()\r\n      .withSchedule(simpleSchedule()\r\n          .withIntervalInSeconds(40)\r\n          .repeatForever())            \r\n      .build();\r\n        \r\n  // Tell quartz to schedule the job using our trigger\r\n  sched.scheduleJob(job, trigger);</pre>\r\n<br />\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">注意，我们给了调度器一个 JobDetail 实例，JobDetail 中提供了 Job 的 class 对象，因此它知道调用的 Job 类型。每次调度器执行 Job，它会在调用 execute(…) 方法前创建一个新的 Job 实例。当执行完成后，所有 Job 的引用将会丢弃，这些对象会被垃圾回收。 基于前面的描述，首先 Job 类需要一个无参构造方法，另外，在 Job 中存储状态属性是没有意义的，因为每次执行完成后，对象将会被删除。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">你可能想问“我如何为 Job 实例提供配置属性”或者“我怎么保存 Job 的状态数据”。这些问题的关键是 JobDataMap 对象，它是 JobDetail 对象中的一部分。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">JobDataMap</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">JobDataMap 可以用来保存数据对象（序列化）。JobDataMap 其实是 Java Map 接口的一个实现，并且添加了一些方便的方法用于存储和获取原始数据类型。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">下面的例子将存储数据到 JobDataMap ：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\"> </span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">  public class HelloJob implements Job {\r\n\r\n    public HelloJob() {\r\n    }\r\n\r\n    public void execute(JobExecutionContext context)\r\n      throws JobExecutionException\r\n    {\r\n      System.err.println(\"Hello!  HelloJob is executing.\");\r\n    }\r\n  }</pre>\r\n<br />\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">下面的例子演示如何在执行期间从 JobDataMap 获取数据：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\"> </span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">  // define the job and tie it to our DumbJob class\r\n  JobDetail job = newJob(DumbJob.class)\r\n      .withIdentity(\"myJob\", \"group1\") // name \"myJob\", group \"group1\"\r\n      .usingJobData(\"jobSays\", \"Hello World!\")\r\n      .usingJobData(\"myFloatValue\", 3.141f)\r\n      .build();</pre>\r\n<br />\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果你使用 JobStore 存储，那么你需要小心决定在 JobDataMap 中存放什么数据，因为对象将会序列化，因此会有一些 class 类型的问题。标准的 Java 类都非常安全，但是如果你要使用自己定义的类，那么任何时候你要改变类定义，都要小心不要破坏兼容性。你可以只保存 String 和原始数据类型从而消除可能发生的序列化问题。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果你添加了 set 方法到你的 Job 类中，并且和 JobDataMap 中存放的键一致（例如，上面例子中添加 setJobSays(String val) 方法），然后 Quartz 默认的 JobFactory 实现将会自动在 Job 实例化的时候调用这些 set 方法。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Trigger 也可以关联 JobDataMap。这可用于当你需要在多个 Trigger 中使用相同的 Job 的时候，为每个 Job 设置不同的输入数据。JobDataMap 可以在 Job 执行期间从 JobExecutionContext 中获得。它将会合并 JobDetail 和 Trigger 中的 JobDataMap，如果名称相同，那么后者的值将会覆盖前者的值。下面的例子将演示如何从 JobExecutionContext 中获取 JobDataMap：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"> </span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public class DumbJob implements Job {\r\n\r\n    public DumbJob() {\r\n    }\r\n\r\n    public void execute(JobExecutionContext context)\r\n      throws JobExecutionException\r\n    {\r\n      JobKey key = context.getJobDetail().getKey();\r\n\r\n      JobDataMap dataMap = context.getJobDetail().getJobDataMap();\r\n\r\n      String jobSays = dataMap.getString(\"jobSays\");\r\n      float myFloatValue = dataMap.getFloat(\"myFloatValue\");\r\n\r\n      System.err.println(\"Instance \" + key + \" of DumbJob says: \" + jobSays + \", and val is: \" + myFloatValue);\r\n    }\r\n  }</pre>\r\n或者，如果你想要依赖 JobFactory 注入映射值到你的类中，那么可以使用下面的代码：\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\"> </span>\r\n</p>\r\n<pre class=\"prettyprint lang-java\">public class DumbJob implements Job {\r\n\r\n\r\n    String jobSays;\r\n    float myFloatValue;\r\n    ArrayList state;\r\n      \r\n    public DumbJob() {\r\n    }\r\n\r\n    public void execute(JobExecutionContext context)\r\n      throws JobExecutionException\r\n    {\r\n      JobKey key = context.getJobDetail().getKey();\r\n\r\n      JobDataMap dataMap = context.getMergedJobDataMap();  // Note the difference from the previous example\r\n\r\n      state.add(new Date());\r\n\r\n      System.err.println(\"Instance \" + key + \" of DumbJob says: \" + jobSays + \", and val is: \" + myFloatValue);\r\n    }\r\n    \r\n    public void setJobSays(String jobSays) {\r\n      this.jobSays = jobSays;\r\n    }\r\n    \r\n    public void setMyFloatValue(float myFloatValue) {\r\n      myFloatValue = myFloatValue;\r\n    }\r\n    \r\n    public void setState(ArrayList state) {\r\n      state = state;\r\n    }\r\n    \r\n  }</pre>\r\n<br />\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">你可能已经注意到代码有点长，但是 execute() 方法更加清晰整洁。无论使用哪种方式，都取决于你自己的决定。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">Job 实例</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">你可以创建一个 Job 类，然后通过创建多个 JobDetail 实例与 Job 关联，并保存到调度器中（每个任务都有自己的属性和 JobDataMap），这个 JobDetail 称为 Job 实例。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">例如，你可以创建一个实现了 Job 接口的类，命名为“SalesReportJob”。这个类可以接收一个参数（通过 JobDataMap）用于定义销售报表基于哪个销售人员。它们可以创建多个 Job 实例（使用 JobDetail），例如 “SalesReportForJoe” 和 “SalesReportForMike”，这里使用了由 JobDataMap 传入 “joe” 和 “mike” 作为参数。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当 Trigger 被触发，关联的 JobDetail 将会被加载，并且 Job 类会通过 JobFactory 配置到 Scheduler。默认的 JobFactory 将会简单地调用 Job Class 的 newInstance() 方法，并尝试调用 set 方法将 JobDataMap 中同名的属性设置到 Job 中。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">Job 状态和并发</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">有一组可添加到 Job 的 Annotation，可以影响 Quartz 的行为。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">@DisallowConcurrentExecution&nbsp;添加到 Job 类后，Quartz 将不会同时执行多个 Job 实例（什么是 Job 实例可参看上一节）。</span><br />\r\n<span style=\"font-size:14px;\"> 注意措辞。我们用上一节的例子来讲解，如果 “SalesReportJob” 上添加了这个 Annotation，那么同时只能执行一个“SalesReportForJoe”，但是却可以同时执行“SalesReportForMike”。因此，可以说这个约束是基于 JobDetail 的而不是基于 Job 的。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">@PersistJobDataAfterExecution&nbsp;添加到 Job 类后，表示 Quartz 将会在成功执行 execute() 方法后（没有抛出异常）更新 JobDetail 的 JobDataMap，下一次执行相同的任务（JobDetail）将会得到更新后的值，而不是原始的值。就像@DisallowConcurrentExecution&nbsp;一样，这个注释基于 JobDetail 而不是 Job 类的实例。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果你使用了&nbsp;@PersistJobDataAfterExecution&nbsp;注释，那么强烈建议你使用@DisallowConcurrentExecution&nbsp;注释，这是为了避免出现并发问题，当多个 Job 实例同时执行的时候，到底使用了哪个数据将变得很混乱。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">Job 的其它属性</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">下面列举了一些通过 JobDetail 定义的 Job 属性：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">Durability – 持久性，如果 Job 是非持久性的，那么执行完 Job 后，如果没有任何活动的 Trigger 与之关联，那么将会被调度器自动删除。换句话说，非持久性的 Job 的生命周期与它关联的 Trigger 相关。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">RequestsRecovery – 如果任务设置了 RequestsRecovery，那么它在调度器发生硬停止（例如，当前进程 crash，或者机器宕机）后，当调度器再次启动的时候将会重新执行。这种情况下，JobExecutionContext.isRecovering() 方法将会返回 true。</span>\r\n	</li>\r\n</ul>\r\n<h3>\r\n	<span style=\"font-size:14px;\">JobExecutionException</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">最后，我们来看看 Job.execute(…) 方法。这个方法只允许抛出一种异常（包括 RuntimeException），那就是 JobExecutionException。正是因为如此，你通常需要将 execute() 方法中的所有内容放入 try-catch 语句块中。你也需要花点时间看看 JobExecutionException 的文档，你的任务可以使用它提供的各种指令来控制如何处理异常。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">原文链接：http://www.aptusource.org/2014/05/quartz-job-details/</span>\r\n</p>',NULL,NULL,'2014-05-26 06:46:39',0,'quartz Job 详解',0),(125,'admin',28,'<p>\r\n	<span style=\"font-size:14px;\">SimpleTrigger&nbsp;可以让你在某个精确的时间执行一次 Job，或者在某个精确的时间执行之后在特定的时间间隔内重复执行。例如，如果你想在 2015 年 1 月 13 日上午 11:23:54 时间点精确执行，或者在这个时间点执行完成后再执行 5 次，每次间隔 10 秒钟。</span><br />\r\n<br />\r\n<span style=\"font-size:14px;\"> 基于前面的描述，你可能也会预料到，SimpleTrigger 中包含了以下属性：开始时间、结束时间、重复次数、重复间隔时间。这些属性看起来都很直观，其中只有结束时间需要花点时间来特殊说明一下。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">重复次数可以是 0，正整数（int），或者是 SimpleTrigger.REPEAT_INDEFINITELY 常量值。重复间隔时间必须是 0 或者正长整数（long），并且单位是毫秒。注意，如果将重复间隔时间设置为 0，可能会发生 Trigger 同时触发（并发）的问题。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果你还不熟悉 Quartz 的 DateBuilder 类，你可能会发现使用它基于开始时间（或结束时间）来计算触发次数非常有用。结束时间属性将覆盖重复次数属性。这在某些情况下非常有用，例如当你在创建好一个 Trigger 后，设置在指定的时间内每 10 秒执行一次，如果设置了结束时间就不用去计算开始时间到结束时间之间到底需要执行多少次，你可以简单的设置结束时间，并使用 REPEAT_INDEFINITELY 作为重复次数（你还可以简单地写一个足够大的数字作为重复次数，只要这个数字大于在结束时间之前的实际执行次数即可）。SimpleTrigger 实例可以使用 TriggerBuilder（基于 Trigger 的主要属性） 或 SimpleScheduleBuilder (基于 SimpleTrigger 的特殊属性) 创建。要使用 DSL 风格需要先进行静态导入：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">importstaticorg.quartz.TriggerBuilder.*;</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">importstaticorg.quartz.SimpleScheduleBuilder.*;</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">importstaticorg.quartz.DateBuilder.*:</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">这里有几个例子使用简单的 schedule 来定义 Trigger，它们每个例子都展示了一些不同的地方。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">创建一个在某个时间点执行的 Trigger：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;SimpleTriggertrigger=(SimpleTrigger)newTrigger()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withIdentity(\"trigger1\",\"group1\")</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.startAt(myStartTime)// some Date</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.forJob(\"job1\",\"group1\")// identify job with name, group strings</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.build();</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">创建一个在某个时间点执行的 Trigger，并且随后每 10 秒执行一次，执行 10 次：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">6</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">7</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">8</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;trigger=newTrigger()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withIdentity(\"trigger3\",\"group1\")</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.startAt(myTimeToStartFiring)&nbsp;&nbsp;// if a start time is not given (if this line were omitted), \"now\" is implied</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withSchedule(simpleSchedule()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withIntervalInSeconds(10)</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withRepeatCount(10))// note that 10 repeats will give a total of 11 firings</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.forJob(myJob)// identify job with handle to its JobDetail itself&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.build();</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">创建一个 Trigger，并且在 5 分钟后执行一次：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;trigger=(SimpleTrigger)newTrigger()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withIdentity(\"trigger5\",\"group1\")</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.startAt(futureDate(5,IntervalUnit.MINUTE))// use DateBuilder to create a date in the future</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.forJob(myJobKey)// identify job with its JobKey</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.build();</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">创建一个 Trigger，并且立即执行一次，以后每 5 分钟执行一次，直到 22:00：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">6</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">7</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;trigger=newTrigger()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withIdentity(\"trigger7\",\"group1\")</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withSchedule(simpleSchedule()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withIntervalInMinutes(5)</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.repeatForever())</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.endAt(dateOf(22,0,0))</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.build();</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">创建一个 Trigger，并且在下一小时开始的时候执行一次，以后每两小时执行一次，永久循环：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">6</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">7</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">8</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">9</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">10</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">11</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;trigger=newTrigger()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withIdentity(\"trigger8\")// because group is not specified, \"trigger8\" will be in the default group</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.startAt(evenHourDate(null))// get the next even-hour (minutes and seconds zero (\"00:00\"))</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withSchedule(simpleSchedule()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withIntervalInHours(2)</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.repeatForever())</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;// note that in this example, \'forJob(..)\' is not called</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;- which is valid if the trigger is passed to the scheduler along with the job&nbsp;&nbsp;</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.build();</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;scheduler.scheduleJob(trigger,job);</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">花点时间研究所有 TriggerBuilder 和 SimpleScheduleBuilder 中的方法，你将更加熟悉如何使用，这些方法有很多都没有在上面的例子中出现。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">注意，TriggerBuilder（或者 Quartz 的其它 Builder）在你没有显式的设置属性的时候会设置一个合理的默认属性。例如，如果你没有调用 withIdentity(..) 方法，那么 TriggerBuilder 将会为你的 Trigger 设置一个默认名称；如果没有调用 startAt(..) 方法，那么当前时间将会作为开始时间。</span>\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">SimpleTrigger 的错过触发机制</span>\r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">当 Quartz 发生错过触发事件后，SimpleTrigger 提供了几个机制。（关于错过触发的概念可参看&nbsp;</span><a href=\"http://www.aptusource.org/2014/05/quartz-triggers-details/\"><span style=\"font-size:14px;\">[Quartz] Triggers 详解</span></a><span style=\"font-size:14px;\">）。这些机制以常量形式保存在 SimpleTrigger 中（具体行为可参看 JavaDoc），这些机制包括：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">6</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">MISFIRE_INSTRUCTION_IGNORE_MISFIRE_POLICY</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">MISFIRE_INSTRUCTION_FIRE_NOW</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_EXISTING_REPEAT_COUNT</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_REMAINING_REPEAT_COUNT</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">MISFIRE_INSTRUCTION_RESCHEDULE_NEXT_WITH_REMAINING_COUNT</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">MISFIRE_INSTRUCTION_RESCHEDULE_NEXT_WITH_EXISTING_COUNT</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">其中 Trigger.MISFIRE_INSTRUCTION_SMART_POLICY （智能策略）是所有 Trigger 的默认值。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">如果使用了“智能策略”机制，那么 SimpleTrigger 将会基于配置项和给定的 SimpleTrigger 实例的状态动态的选择使用哪个机制。JavaDoc 中 SimpleTrigger.updateAfterMisfire() 方法详细描述了动态行为的细节。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">当创建 SimpleTrigger 的时候，可以通过 SimpleSchedulerBuilder 指定错过触发机制：</span>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">1</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">2</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">3</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">4</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">5</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">6</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">7</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;trigger=newTrigger()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withIdentity(\"trigger7\",\"group1\")</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.withSchedule(simpleSchedule()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withIntervalInMinutes(5)</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.repeatForever()</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withMisfireHandlingInstructionNextWithExistingCount())</span>\r\n							</div>\r\n							<div>\r\n								<span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp;&nbsp;.build();</span>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>',NULL,NULL,'2014-05-26 06:47:49',0,'SimpleTrigger',0),(127,'admin',25,'<p style=\"color:#333333;font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;======================================================\r\n</p>\r\n<p style=\"color:#333333;font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	案例一：\r\n</p>\r\n<div id=\"blog_text\" class=\"cnt\" style=\"color:#333333;font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<p>\r\n		先看看下面这段代码（有删节）\r\n	</p>\r\n	<p>\r\n		public static String send(String sendurl, String sendText) throws Exception {<br />\r\n&nbsp;&nbsp; URL url = null;<br />\r\n&nbsp;&nbsp; URLConnection uc = null;\r\n	</p>\r\n	<p>\r\n		//建立连接、输出数据等；\r\n	</p>\r\n	<p>\r\n		String strReceive = \"\";&nbsp;<br />\r\n&nbsp;&nbsp; try {<br />\r\n&nbsp;&nbsp;&nbsp; InputStream is = uc.getInputStream();\r\n	</p>\r\n	<p>\r\n		&nbsp;&nbsp;&nbsp; DataInputStream in = new DataInputStream(is);<br />\r\n&nbsp;&nbsp;&nbsp;<span style=\"color:#FF0000;\">int blockLen = in.available();<br />\r\n</span><span style=\"color:#FF0000;\">&nbsp;&nbsp;&nbsp; byte block[] = new byte[blockLen];</span><br />\r\n&nbsp;&nbsp;&nbsp;<span style=\"color:#FF0000;\">for (int readLen = -9999; readLen != -1;) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; readLen = in.read(block);</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#FF0000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (readLen != -1)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strReceive = strReceive + new String(block);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n</span>&nbsp;&nbsp;&nbsp; is.close();<br />\r\n&nbsp;&nbsp;&nbsp; in.close();<br />\r\n&nbsp;&nbsp; } catch (IOException e) {<br />\r\n&nbsp;&nbsp;&nbsp; logger.info(\"httpl接收错误1：\" + e.getMessage());<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; return strReceive;<br />\r\n}\r\n	</p>\r\n	<p>\r\n		注意红色字体那几行。blockLen被用来创建一个字节数组block，block作为数据缓冲来读取inputstream里的数据。然后循环从inputstream中读取数据，写入block中。\r\n	</p>\r\n	<p>\r\n		考虑一种情况。如果网络阻塞了，inputstream已经打开，但是数据却还没有传输过来，会发生什么？\r\n	</p>\r\n	<p>\r\n		inputstream.available()方法返回的值是该inputstream在不被阻塞的情况下一次可以读取到的数据长度。如果数据还没有传输过来，那么这个inputstream势必会被阻塞，从而导致inputstream.available返回0。而对inputstream.read(byte[] b)而言，如果b的长度等于0，该方法将返回0。\r\n	</p>\r\n	<p>\r\n		回头看看这个循环体的结束条件，是<span style=\"color:#FF0000;\">readLen == -1</span><span style=\"color:#000000;\">时跳出。显然，上面提到的网络阻塞情况发生之后，代码将陷入这个死循环当中。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#000000;\">这是我们在工程应用中遇到的一个问题。由外包商提供的工具jar包中的这段代码，直接将我们的服务器拉进了死循环。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#000000;\">我们的解决方法，是将整个接收与发送的方法进行改写，使用了下面的这段代码：</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#000000;\">&nbsp;&nbsp; HttpClient client = new HttpClient();<br />\r\n&nbsp;&nbsp;&nbsp; PostMethod method = new PostMethod(prpUrl);<br />\r\n&nbsp;&nbsp;&nbsp; method.setRequestBody(sendstr);<br />\r\n&nbsp;&nbsp;&nbsp; method.getParams().setParameter(<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpMethodParams.HTTP_CONTENT_CHARSET, \"GBK\");<br />\r\n&nbsp;&nbsp;&nbsp; client.executeMethod(method);<br />\r\n&nbsp;&nbsp;&nbsp; // rtnXml = method.getResponseBodyAsString();<br />\r\n&nbsp;&nbsp;&nbsp; InputStream txtis = method.getResponseBodyAsStream();<br />\r\n&nbsp;&nbsp;&nbsp; BufferedReader br = new BufferedReader(new InputStreamReader(txtis));<br />\r\n&nbsp;&nbsp;&nbsp; String tempbf;<br />\r\n&nbsp;&nbsp;&nbsp; StringBuffer html = new StringBuffer(100);<br />\r\n&nbsp;&nbsp;&nbsp; while ((tempbf = br.readLine()) != null) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; html.append(tempbf);<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; rtnXml = html.toString();</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp; method.releaseConnection();</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#000000;\">确确实实的，解决了问题。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"color:#000000;\">如果仍然要采用原方法中手动打开输入流、建立缓冲区、循环读取数据的方法，那么不应该用available这个字段来作为缓冲区的初始长度。可以考虑手工设定一个固定值；或者读取http报文头的content-length属性值。最后的这种方式没有尝试过。</span>\r\n	</p>\r\n	<p>\r\n		=====================================================================================\r\n	</p>\r\n	<p>\r\n		案例二\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		如果用inputStream对象的available()方法获取流中可读取的数据大小，通常我们调用这个函数是在下载文件或者对文件进行其他处理时获取文件的总大小。\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">以前在我们初学File和inputStream和outputStream时，有需要将文件从一个文件夹复制到另一个文件夹中，这时候我们用的就是inputStream.available()来获取文件的总大小，而且屡试不爽。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">但是当我们要从网络URL中下载一个文件时，我们发现得到的数值并不是需要下载的文件的总大小。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">好吧。我们看看JDK文档中怎么解释。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:10px;\">&nbsp;</span>\r\n	</p>\r\n	<h3>\r\n		available\r\n	</h3>\r\n<pre>public int <strong>available</strong>()\r\n              throws <a href=\"http://blog.csdn.net/admin/java/io/IOException.html\">IOException</a></pre>\r\n返回此输入流下一个方法调用可以不受阻塞地从此输入流读取（或跳过）的估计字节数。下一个调用可能是同一个线程，也可能是另一个线程。一次读取或跳过此估计数个字节不会受阻塞，但读取或跳过的字节数可能小于该数。\r\n	<p>\r\n		注意，有些&nbsp;InputStream&nbsp;的实现将返回流中的字节总数，但也有很多实现不会这样做。试图使用此方法的返回值分配缓冲区，以保存此流所有数据的做法是不正确的。\r\n	</p>\r\n	<p>\r\n		如果已经调用&nbsp;<a href=\"http://blog.csdn.net/admin/java/io/InputStream.html#close()\">close()</a>&nbsp;方法关闭了此输入流，那么此方法的子类实现可以选择抛出<a href=\"http://blog.csdn.net/admin/java/io/IOException.html\">IOException</a>。\r\n	</p>\r\n	<p>\r\n		类&nbsp;InputStream&nbsp;的&nbsp;available&nbsp;方法总是返回&nbsp;0。\r\n	</p>\r\n	<p>\r\n		此方法应该由子类重写。\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n<strong>返回：</strong>可以不受阻塞地从此输入流读取（或跳过）的估计字节数；如果到达输入流末尾，则返回&nbsp;0。<strong>抛出：</strong><a href=\"http://blog.csdn.net/admin/java/io/IOException.html\">IOException</a>&nbsp;- 如果发生 I/O 错误。\r\n	<p>\r\n		inputStream 源代码\r\n	</p>\r\n	<div class=\"dp-highlighter\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				Java代码&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\"><img alt=\"复制代码\" src=\"http://blog.csdn.net/images/icon_copy.gif\" /></a>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818\"><img class=\"star\" alt=\"收藏代码\" src=\"http://blog.csdn.net/images/icon_star.png\" /><img class=\"spinner\" alt=\"\" src=\"http://blog.csdn.net/images/spinner.gif\" /></a>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">/**&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;that&nbsp;are&nbsp;available&nbsp;before&nbsp;this&nbsp;stream&nbsp;will</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;block.&nbsp;This&nbsp;implementation&nbsp;always&nbsp;returns&nbsp;0.&nbsp;Subclasses&nbsp;should&nbsp;override</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;and&nbsp;indicate&nbsp;the&nbsp;correct&nbsp;number&nbsp;of&nbsp;bytes&nbsp;available.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;available&nbsp;before&nbsp;blocking.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs&nbsp;in&nbsp;this&nbsp;stream.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@since&nbsp;Android&nbsp;1.0&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&lt;SPAN&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"COLOR:&nbsp;#ff0000\"</span><span style=\"color:black;background-color:inherit;\">&gt;&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">public</span><span style=\"color:black;background-color:inherit;\">&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">int</span><span style=\"color:black;background-color:inherit;\">&nbsp;available()&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">throws</span><span style=\"color:black;background-color:inherit;\">&nbsp;IOException&nbsp;{ &nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"color:black;background-color:inherit;\">&nbsp;</span><span class=\"number\" style=\"color:#C00000;background-color:inherit;\">0</span><span style=\"color:black;background-color:inherit;\">; &nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;}&lt;/SPAN&gt;&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<div class=\"dp-highlighter bg_java\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				<b>[java]</b>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"ViewSource\">view plain</a><a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"CopyToClipboard\">copy</a>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">/**</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;that&nbsp;are&nbsp;available&nbsp;before&nbsp;this&nbsp;stream&nbsp;will</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;block.&nbsp;This&nbsp;implementation&nbsp;always&nbsp;returns&nbsp;0.&nbsp;Subclasses&nbsp;should&nbsp;override</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;and&nbsp;indicate&nbsp;the&nbsp;correct&nbsp;number&nbsp;of&nbsp;bytes&nbsp;available.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;available&nbsp;before&nbsp;blocking.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs&nbsp;in&nbsp;this&nbsp;stream.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@since&nbsp;Android&nbsp;1.0</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&lt;span&nbsp;style=<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"color:#ff0000;\"</span><span style=\"background-color:inherit;\">&gt;&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">public</span><span style=\"background-color:inherit;\">&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">int</span><span style=\"background-color:inherit;\">&nbsp;available()&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">throws</span><span style=\"background-color:inherit;\">&nbsp;IOException&nbsp;{&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;</span><span class=\"number\" style=\"color:#C00000;background-color:inherit;\">0</span><span style=\"background-color:inherit;\">;&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;}&lt;/span&gt;&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;这里返回的是 0 值。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">所以说要从网络中下载文件时，我们知道网络是不稳定的，也就是说网络下载时，read()方法是阻塞的，说明这时我们用</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">inputStream.available()获取不到文件的总大小。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">但是从本地拷贝文件时，我们用的是FileInputStream.available()，难道它是将先将硬盘中的数据先全部读入流中？</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">然后才根据此方法得到文件的总大小？</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">好吧，我们来看看FileInputStream源代码吧</span>\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<div class=\"dp-highlighter\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				Java代码&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\"><img alt=\"复制代码\" src=\"http://blog.csdn.net/images/icon_copy.gif\" /></a>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818\"><img class=\"star\" alt=\"收藏代码\" src=\"http://blog.csdn.net/images/icon_star.png\" /><img class=\"spinner\" alt=\"\" src=\"http://blog.csdn.net/images/spinner.gif\" /></a>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">/**&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;that&nbsp;are&nbsp;available&nbsp;before&nbsp;this&nbsp;stream&nbsp;will</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;block.&nbsp;This&nbsp;method&nbsp;always&nbsp;returns&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;file&nbsp;minus&nbsp;the&nbsp;current</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;position.&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;available&nbsp;before&nbsp;blocking.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs&nbsp;in&nbsp;this&nbsp;stream.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@since&nbsp;Android&nbsp;1.0&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;</span><span class=\"annotation\" style=\"color:#646464;background-color:inherit;\">@Override</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">public</span><span style=\"color:black;background-color:inherit;\">&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">int</span><span style=\"color:black;background-color:inherit;\">&nbsp;available()&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">throws</span><span style=\"color:black;background-color:inherit;\">&nbsp;IOException&nbsp;{ &nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;openCheck(); &nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;BEGIN&nbsp;android-added&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;Android&nbsp;always&nbsp;uses&nbsp;the&nbsp;ioctl()&nbsp;method&nbsp;of&nbsp;determining&nbsp;bytes</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;available.&nbsp;See&nbsp;the&nbsp;long&nbsp;discussion&nbsp;in</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;org_apache_harmony_luni_platform_OSFileSystem.cpp&nbsp;about&nbsp;its</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;use.&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;SPAN&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"COLOR:&nbsp;#ff0000\"</span><span style=\"color:black;background-color:inherit;\">&gt;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"color:black;background-color:inherit;\">&nbsp;fileSystem.ioctlAvailable(fd.descriptor);&lt;/SPAN&gt; &nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;END&nbsp;android-added&nbsp;&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;BEGIN&nbsp;android-deleted&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;synchronized&nbsp;(repositioningLock)&nbsp;{</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;stdin&nbsp;requires&nbsp;special&nbsp;handling</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(fd&nbsp;==&nbsp;FileDescriptor.in)&nbsp;{</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(int)&nbsp;fileSystem.ttyAvailable();</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;currentPosition&nbsp;=&nbsp;fileSystem.seek(fd.descriptor,&nbsp;0L,</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IFileSystem.SEEK_CUR);</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;endOfFilePosition&nbsp;=&nbsp;fileSystem.seek(fd.descriptor,&nbsp;0L,</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IFileSystem.SEEK_END);</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileSystem.seek(fd.descriptor,&nbsp;currentPosition,</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IFileSystem.SEEK_SET);</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(int)&nbsp;(endOfFilePosition&nbsp;-&nbsp;currentPosition);</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;}&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;END&nbsp;android-deleted&nbsp;</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<div class=\"dp-highlighter bg_java\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				<b>[java]</b>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"ViewSource\">view plain</a><a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"CopyToClipboard\">copy</a>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">/**</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;that&nbsp;are&nbsp;available&nbsp;before&nbsp;this&nbsp;stream&nbsp;will</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;block.&nbsp;This&nbsp;method&nbsp;always&nbsp;returns&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;file&nbsp;minus&nbsp;the&nbsp;current</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;position.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;available&nbsp;before&nbsp;blocking.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs&nbsp;in&nbsp;this&nbsp;stream.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@since&nbsp;Android&nbsp;1.0</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;*/</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"annotation\" style=\"color:#646464;background-color:inherit;\">@Override</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">public</span><span style=\"background-color:inherit;\">&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">int</span><span style=\"background-color:inherit;\">&nbsp;available()&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">throws</span><span style=\"background-color:inherit;\">&nbsp;IOException&nbsp;{&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;openCheck();&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;BEGIN&nbsp;android-added</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;Android&nbsp;always&nbsp;uses&nbsp;the&nbsp;ioctl()&nbsp;method&nbsp;of&nbsp;determining&nbsp;bytes</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;available.&nbsp;See&nbsp;the&nbsp;long&nbsp;discussion&nbsp;in</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;org_apache_harmony_luni_platform_OSFileSystem.cpp&nbsp;about&nbsp;its</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;use.</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&nbsp;style=<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"color:#ff0000;\"</span><span style=\"background-color:inherit;\">&gt;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;fileSystem.ioctlAvailable(fd.descriptor);&lt;/span&gt;&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;END&nbsp;android-added&nbsp;</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;BEGIN&nbsp;android-deleted</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;synchronized&nbsp;(repositioningLock)&nbsp;{</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;stdin&nbsp;requires&nbsp;special&nbsp;handling</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(fd&nbsp;==&nbsp;FileDescriptor.in)&nbsp;{</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(int)&nbsp;fileSystem.ttyAvailable();</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;currentPosition&nbsp;=&nbsp;fileSystem.seek(fd.descriptor,&nbsp;0L,</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IFileSystem.SEEK_CUR);</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;endOfFilePosition&nbsp;=&nbsp;fileSystem.seek(fd.descriptor,&nbsp;0L,</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IFileSystem.SEEK_END);</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileSystem.seek(fd.descriptor,&nbsp;currentPosition,</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IFileSystem.SEEK_SET);</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(int)&nbsp;(endOfFilePosition&nbsp;-&nbsp;currentPosition);</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;}</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//&nbsp;END&nbsp;android-deleted</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;这里重写了inputStream中的available()方法</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">关键是：<span style=\"color:#FF0000;\">fileSystem.ioctlAvailable(fd.descriptor);</span></span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">调用了FileSystem这是java没有公开的一个类，JavaDoc API没有。<br />\r\n其中</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">fileSystem 是一个IFileSystem对象，IFileSySTEM是java没有公开的一个类，JavaDoc API中没有；</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">fd是一个FileDescriptor对象，即文件描述符</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">说明这句代码应该是通过文件描述符获取文件的总大小，而并不是事先将磁盘上的文件数据全部读入流中，再获取文件总大小</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">搞清楚了这些，但是我们的主要问题没有解决，怎么获得网络文件的总大小？</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">我想原理应该都差不多，应该也是通过一个类似文件描述符的东西来获取。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;网络下载获取文件总大小的代码：</span>\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<div class=\"dp-highlighter\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				Java代码&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\"><img alt=\"复制代码\" src=\"http://blog.csdn.net/images/icon_copy.gif\" /></a>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818\"><img class=\"star\" alt=\"收藏代码\" src=\"http://blog.csdn.net/images/icon_star.png\" /><img class=\"spinner\" alt=\"\" src=\"http://blog.csdn.net/images/spinner.gif\" /></a>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">&lt;SPAN&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"COLOR:&nbsp;#ff0000\"</span><span style=\"background-color:inherit;\">&gt;HttpURLConnection&nbsp;httpconn&nbsp;=&nbsp;(HttpURLConnection)url.openConnection(); &nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;httpconn.getContentLength();&lt;/SPAN&gt;&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<div class=\"dp-highlighter bg_java\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				<b>[java]</b>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"ViewSource\">view plain</a><a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"CopyToClipboard\">copy</a>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span style=\"background-color:inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"color:#ff0000;\"</span><span style=\"background-color:inherit;\">&gt;HttpURLConnection&nbsp;httpconn&nbsp;=&nbsp;(HttpURLConnection)url.openConnection();&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;httpconn.getContentLength();&lt;/span&gt;&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;我们再来看看httpconn.getContentLength();</span>\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<div class=\"dp-highlighter\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				Java代码&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\"><img alt=\"复制代码\" src=\"http://blog.csdn.net/images/icon_copy.gif\" /></a>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818\"><img class=\"star\" alt=\"收藏代码\" src=\"http://blog.csdn.net/images/icon_star.png\" /><img class=\"spinner\" alt=\"\" src=\"http://blog.csdn.net/images/spinner.gif\" /></a>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">/**&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;Gets&nbsp;the&nbsp;content&nbsp;length&nbsp;in&nbsp;bytes&nbsp;specified&nbsp;by&nbsp;the&nbsp;response&nbsp;header&nbsp;field</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;{@code&nbsp;content-length}&nbsp;or&nbsp;{@code&nbsp;-1}&nbsp;if&nbsp;this&nbsp;field&nbsp;is&nbsp;not&nbsp;set.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;@return&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;response&nbsp;header&nbsp;field&nbsp;{@code&nbsp;content-length}.</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;@since&nbsp;Android&nbsp;1.0&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*/</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"></span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">public</span><span style=\"color:black;background-color:inherit;\">&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">int</span><span style=\"color:black;background-color:inherit;\">&nbsp;getContentLength()&nbsp;{ &nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;SPAN&nbsp;style=</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"COLOR:&nbsp;#ff0000\"</span><span style=\"color:black;background-color:inherit;\">&gt;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"color:black;background-color:inherit;\">&nbsp;getHeaderFieldInt(</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"Content-Length\"</span><span style=\"color:black;background-color:inherit;\">,&nbsp;-</span><span class=\"number\" style=\"color:#C00000;background-color:inherit;\">1</span><span style=\"color:black;background-color:inherit;\">);&lt;/SPAN&gt;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//$NON-NLS-1$</span><span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;</span>\r\n			</li>\r\n			<li style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">}&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<div class=\"dp-highlighter bg_java\" style=\"font-family:Consolas, \'Courier New\', Courier, mono, serif;font-size:12px;background-color:#E7E5DC;margin:18px 0px !important;\">\r\n		<div class=\"bar\">\r\n			<div class=\"tools\" style=\"padding:3px 8px 10px 10px;font-size:9px;font-family:Verdana, Geneva, Arial, Helvetica, sans-serif;color:silver;background-color:#F8F8F8;\">\r\n				<b>[java]</b>&nbsp;<a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"ViewSource\">view plain</a><a href=\"http://blog.csdn.net/hongweideng/article/details/6897818#\" class=\"CopyToClipboard\">copy</a>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<ol class=\"dp-j\" style=\"background-color:#FFFFFF;color:#5C5C5C;\">\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">/**</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;Gets&nbsp;the&nbsp;content&nbsp;length&nbsp;in&nbsp;bytes&nbsp;specified&nbsp;by&nbsp;the&nbsp;response&nbsp;header&nbsp;field</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;{@code&nbsp;content-length}&nbsp;or&nbsp;{@code&nbsp;-1}&nbsp;if&nbsp;this&nbsp;field&nbsp;is&nbsp;not&nbsp;set.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;@return&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;response&nbsp;header&nbsp;field&nbsp;{@code&nbsp;content-length}.</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*&nbsp;@since&nbsp;Android&nbsp;1.0</span>&nbsp;</span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">&nbsp;*/</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\"><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">public</span><span style=\"background-color:inherit;\">&nbsp;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">int</span><span style=\"background-color:inherit;\">&nbsp;getContentLength()&nbsp;{&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"alt\" style=\"color:inherit;\">\r\n				<span style=\"color:black;background-color:inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&nbsp;style=<span class=\"string\" style=\"color:blue;background-color:inherit;\">\"color:#ff0000;\"</span><span style=\"background-color:inherit;\">&gt;</span><span class=\"keyword\" style=\"color:#006699;background-color:inherit;font-weight:bold;\">return</span><span style=\"background-color:inherit;\">&nbsp;getHeaderFieldInt(</span><span class=\"string\" style=\"color:blue;background-color:inherit;\">\"Content-Length\"</span><span style=\"background-color:inherit;\">,&nbsp;-</span><span class=\"number\" style=\"color:#C00000;background-color:inherit;\">1</span><span style=\"background-color:inherit;\">);&lt;/span&gt;&nbsp;</span><span class=\"comment\" style=\"color:#008200;background-color:inherit;\">//$NON-NLS-1$</span><span style=\"background-color:inherit;\">&nbsp;&nbsp;</span></span>\r\n			</li>\r\n			<li class=\"\" style=\"background-color:#F8F8F8;\">\r\n				<span style=\"color:black;background-color:inherit;\">}&nbsp;&nbsp;</span>\r\n			</li>\r\n		</ol>\r\n	</div>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">关键：<span style=\"color:#FF0000;\">getHeaderFieldInt(\"Content-Length\", -1);</span></span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">意思是从http预解析头中获取“Content-length”字段的值</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">其实也是类似从文件描述符中获取文件的总大小</span>\r\n	</p>\r\n	<p>\r\n		===========================================================================\r\n	</p>\r\n	<p>\r\n		&nbsp;我的简练的总结：&nbsp;&nbsp;\r\n	</p>\r\n<pre>FileInputStream 的 available()就是返回的的，实际可读<a href=\"http://wenwen.soso.com/z/Search.e?sp=S%E5%AD%97%E8%8A%82&amp;ch=w.search.yjjlink&amp;cid=w.search.yjjlink\" target=\"_blank\">字节</a>数，也就是总大小</pre>\r\n<pre>&nbsp;</pre>\r\n<pre>\r\n	<p>\r\n		FileInputStream的available() 方法返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取（或跳过）的估计剩余字节数。\r\n	</p>\r\n\r\n	<p>\r\n		在某些情况下，非阻塞的读取（或跳过）操作在执行很慢时看起来受阻塞，例如，在网速缓慢的网络上读取大文件时。\r\n	</p>\r\n</pre>\r\n</div>\r\n<p style=\"color:#333333;font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</p>',NULL,NULL,'2014-05-26 17:23:31',0,'new InputStream().available()方法的讲解',0),(128,'admin',12,'<p>\r\n	Java是最流行的编程语言之一，但似乎并没有人喜欢使用它。好吧，实际上Java是一门还不错的编程语言，由于最近Java 8发布了，我决定来编辑一个如何能更好地使用Java的列表，这里面包括一些库，实践技巧以及工具。\r\n</p>\r\n<p>\r\n	这篇文章在<a href=\"https://github.com/cxxr/better-java\" target=\"_blank\">GitHub</a>上也有。你可以随时在上面贡献或者添加你自己的Java使用技巧或者最佳实践。\r\n</p>\r\n<ul>\r\n	<li>\r\n		编码风格\r\n		<ul>\r\n			<li>\r\n				结构体\r\n				<ul>\r\n					<li>\r\n						builder模式\r\n					</li>\r\n				</ul>\r\n			</li>\r\n			<li>\r\n				依赖注入\r\n			</li>\r\n			<li>\r\n				避免null值\r\n			</li>\r\n			<li>\r\n				不可变\r\n			</li>\r\n			<li>\r\n				避免过多的工具类\r\n			</li>\r\n			<li>\r\n				格式\r\n				<ul>\r\n					<li>\r\n						文档\r\n					</li>\r\n					<li>\r\n						Stream\r\n					</li>\r\n				</ul>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		部署\r\n		<ul>\r\n			<li>\r\n				框架\r\n			</li>\r\n			<li>\r\n				Maven\r\n				<ul>\r\n					<li>\r\n						依赖收敛\r\n					</li>\r\n				</ul>\r\n			</li>\r\n			<li>\r\n				持续集成\r\n			</li>\r\n			<li>\r\n				Maven仓储\r\n			</li>\r\n			<li>\r\n				配置管理\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		库\r\n		<ul>\r\n			<li>\r\n				遗失的特性\r\n				<ul>\r\n					<li>\r\n						Apache Commons\r\n					</li>\r\n					<li>\r\n						Guava\r\n					</li>\r\n					<li>\r\n						Gson\r\n					</li>\r\n					<li>\r\n						Java Tuples\r\n					</li>\r\n					<li>\r\n						Joda-Time\r\n					</li>\r\n					<li>\r\n						Lombok\r\n					</li>\r\n					<li>\r\n						Play framework\r\n					</li>\r\n					<li>\r\n						SLF4J\r\n					</li>\r\n					<li>\r\n						jOOQ\r\n					</li>\r\n				</ul>\r\n			</li>\r\n			<li>\r\n				测试\r\n				<ul>\r\n					<li>\r\n						jUnit 4\r\n					</li>\r\n					<li>\r\n						jMock\r\n					</li>\r\n					<li>\r\n						AssertJ\r\n					</li>\r\n				</ul>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		工具\r\n		<ul>\r\n			<li>\r\n				IntelliJ IDEA\r\n				<ul>\r\n					<li>\r\n						Chronon\r\n					</li>\r\n				</ul>\r\n			</li>\r\n			<li>\r\n				JRebel\r\n			</li>\r\n			<li>\r\n				校验框架\r\n			</li>\r\n			<li>\r\n				Eclipse Memory Analyzer\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		资源\r\n		<ul>\r\n			<li>\r\n				书籍\r\n			</li>\r\n			<li>\r\n				播客\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ul>\r\n<h3>\r\n	编码风格\r\n</h3>\r\n<p>\r\n	传统的Java编码方式是非常啰嗦的企业级JavaBean的风格。新的风格更简洁准确，对眼睛也更好。\r\n</p>\r\n<h4>\r\n	结构体\r\n</h4>\r\n<p>\r\n	我们这些码农干的最简单的事情就是传递数据了。传统的方式就是定义一个JavaBean:\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								1\r\n							</div>\r\n							<div>\r\n								2\r\n							</div>\r\n							<div>\r\n								3\r\n							</div>\r\n							<div>\r\n								4\r\n							</div>\r\n							<div>\r\n								5\r\n							</div>\r\n							<div>\r\n								6\r\n							</div>\r\n							<div>\r\n								7\r\n							</div>\r\n							<div>\r\n								8\r\n							</div>\r\n							<div>\r\n								9\r\n							</div>\r\n							<div>\r\n								10\r\n							</div>\r\n							<div>\r\n								11\r\n							</div>\r\n							<div>\r\n								12\r\n							</div>\r\n							<div>\r\n								13\r\n							</div>\r\n							<div>\r\n								14\r\n							</div>\r\n							<div>\r\n								15\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								publicclassDataHolder{\r\n							</div>\r\n							<div>\r\n								privateStringdata;\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicDataHolder(){\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicvoidsetData(Stringdata){\r\n							</div>\r\n							<div>\r\n								this.data=data;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicStringgetData(){\r\n							</div>\r\n							<div>\r\n								returnthis.data;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	这不仅拖沓而且浪费。尽管你的IDE可以自动地生成这个，但这还是浪费。因此，<a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=84\" target=\"_blank\">不要这么写</a>。\r\n</p>\r\n<p>\r\n	相反的，我更喜欢C的结构体的风格，写出来的类只是包装数据：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								1\r\n							</div>\r\n							<div>\r\n								2\r\n							</div>\r\n							<div>\r\n								3\r\n							</div>\r\n							<div>\r\n								4\r\n							</div>\r\n							<div>\r\n								5\r\n							</div>\r\n							<div>\r\n								6\r\n							</div>\r\n							<div>\r\n								7\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								publicclassDataHolder{\r\n							</div>\r\n							<div>\r\n								publicfinalStringdata;\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicDataHolder(Stringdata){\r\n							</div>\r\n							<div>\r\n								this.data=data;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	这样写减少了一半的代码。不仅如此，除非你继承它，不然这个类是不可变的，由于它是不可变的，因此推断它的值就简单多了。\r\n</p>\r\n<p>\r\n	如果你存储的是Map或者List这些可以容易被修改的数据，你可以使用ImmutableMap或者ImmutableList，这个在不可变性这节中会有讨论。\r\n</p>\r\n<h4>\r\n	Builder模式\r\n</h4>\r\n<p>\r\n	如果你有一个相对复杂的对象，可以考虑下Builder模式。\r\n</p>\r\n<p>\r\n	你在对象里边创建一个子类，用来构造你的这个对象。它使用的是可修改的状态，但一旦你调用了build方法，它会生成一个不可变对象。\r\n</p>\r\n<p>\r\n	想象一下我们有一个非常复杂的对象DataHolder。它的构造器看起来应该是这样的：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								1\r\n							</div>\r\n							<div>\r\n								2\r\n							</div>\r\n							<div>\r\n								3\r\n							</div>\r\n							<div>\r\n								4\r\n							</div>\r\n							<div>\r\n								5\r\n							</div>\r\n							<div>\r\n								6\r\n							</div>\r\n							<div>\r\n								7\r\n							</div>\r\n							<div>\r\n								8\r\n							</div>\r\n							<div>\r\n								9\r\n							</div>\r\n							<div>\r\n								10\r\n							</div>\r\n							<div>\r\n								11\r\n							</div>\r\n							<div>\r\n								12\r\n							</div>\r\n							<div>\r\n								13\r\n							</div>\r\n							<div>\r\n								14\r\n							</div>\r\n							<div>\r\n								15\r\n							</div>\r\n							<div>\r\n								16\r\n							</div>\r\n							<div>\r\n								17\r\n							</div>\r\n							<div>\r\n								18\r\n							</div>\r\n							<div>\r\n								19\r\n							</div>\r\n							<div>\r\n								20\r\n							</div>\r\n							<div>\r\n								21\r\n							</div>\r\n							<div>\r\n								22\r\n							</div>\r\n							<div>\r\n								23\r\n							</div>\r\n							<div>\r\n								24\r\n							</div>\r\n							<div>\r\n								25\r\n							</div>\r\n							<div>\r\n								26\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								publicclassComplicatedDataHolder{\r\n							</div>\r\n							<div>\r\n								publicfinalStringdata;\r\n							</div>\r\n							<div>\r\n								publicfinalintnum;\r\n							</div>\r\n							<div>\r\n								// lots more fields and a constructor\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicclassBuilder{\r\n							</div>\r\n							<div>\r\n								privateStringdata;\r\n							</div>\r\n							<div>\r\n								privateintnum;\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicBuilderdata(Stringdata){\r\n							</div>\r\n							<div>\r\n								this.data=data;\r\n							</div>\r\n							<div>\r\n								returnthis;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicBuildernum(intnum){\r\n							</div>\r\n							<div>\r\n								this.num=num;\r\n							</div>\r\n							<div>\r\n								returnthis;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicComplicatedDataHolderbuild(){\r\n							</div>\r\n							<div>\r\n								returnnewComplicatedDataHolder(data,num);// etc\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	现在你可以使用它了：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								1\r\n							</div>\r\n							<div>\r\n								2\r\n							</div>\r\n							<div>\r\n								3\r\n							</div>\r\n							<div>\r\n								4\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								finalComplicatedDataHoldercdh=newComplicatedDataHolder.Builder()\r\n							</div>\r\n							<div>\r\n								.data(\"set this\")\r\n							</div>\r\n							<div>\r\n								.num(523)\r\n							</div>\r\n							<div>\r\n								.build();\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	关于Builder的使用<a href=\"http://en.deepinmind.com/blog/2014/05/21/the-builder-pattern-in-practice.html\" target=\"_blank\">这里</a>还有些更好的例子，我这里举的例子只是想让你大概感受一下。当然这会产生许多我们希望避免的样板代码，不过好处就是你有了一个不可变对象以及一个连贯接口。\r\n</p>\r\n<h4>\r\n	依赖注入\r\n</h4>\r\n<p>\r\n	这更像是一个软件工程的章节而不是Java的，写出可测的软件的一个最佳方式就是使用依赖注入（Dependency injection，DI）。由于Java强烈鼓励使用面向对象设计 ，因此想写出可测性强的软件，你需要使用DI。\r\n</p>\r\n<p>\r\n	在Java中，这个通常都是用Spring框架来完成的。它有一个基于XML配置的绑定方式，并且仍然相当流行。重要的一点是你不要因为它的基于XML的配置格式而过度使用它了。在XML中应该没有任何的逻辑和控制结构。它只应该是依赖注入。\r\n</p>\r\n<p>\r\n	还有一个不错的方式是使用<a href=\"http://square.github.io/dagger/\" target=\"_blank\">Dagger库</a>以及Google的<a href=\"https://code.google.com/p/google-guice/\" target=\"_blank\">Guice</a>。它们并没有使用Spring的XML配置文件的格式，而是将注入的逻辑放到了注解和代码里。\r\n</p>\r\n<h4>\r\n	避免null值\r\n</h4>\r\n<p>\r\n	如果有可能的话尽量避免使用null值。你可以返回一个空的集合，但不要返回null集合。如果你准备使用null的话，考虑一下@Nullable注解。IntelliJ IDEA对于@Nullable注解有内建的支持。\r\n</p>\r\n<p>\r\n	如果你使用的是Java 8的话，可以考虑下新的Optional类型。如果一个值可能存在也可能不存在，把它封装到Optional类里面，就像这样：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								1\r\n							</div>\r\n							<div>\r\n								2\r\n							</div>\r\n							<div>\r\n								3\r\n							</div>\r\n							<div>\r\n								4\r\n							</div>\r\n							<div>\r\n								5\r\n							</div>\r\n							<div>\r\n								6\r\n							</div>\r\n							<div>\r\n								7\r\n							</div>\r\n							<div>\r\n								8\r\n							</div>\r\n							<div>\r\n								9\r\n							</div>\r\n							<div>\r\n								10\r\n							</div>\r\n							<div>\r\n								11\r\n							</div>\r\n							<div>\r\n								12\r\n							</div>\r\n							<div>\r\n								13\r\n							</div>\r\n							<div>\r\n								14\r\n							</div>\r\n							<div>\r\n								15\r\n							</div>\r\n							<div>\r\n								16\r\n							</div>\r\n							<div>\r\n								17\r\n							</div>\r\n							<div>\r\n								18\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								publicclassFooWidget{\r\n							</div>\r\n							<div>\r\n								privatefinalStringdata;\r\n							</div>\r\n							<div>\r\n								privatefinalOptional&lt;Bar&gt;bar;\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicFooWidget(Stringdata){\r\n							</div>\r\n							<div>\r\n								this(data,Optional.empty());\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicFooWidget(Stringdata,Optional&lt;Bar&gt;bar){\r\n							</div>\r\n							<div>\r\n								this.data=data;\r\n							</div>\r\n							<div>\r\n								this.bar=bar;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								publicOptional&lt;Bar&gt;getBar(){\r\n							</div>\r\n							<div>\r\n								returnbar;\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	现在问题就清楚了，data是不会为null的，而bar可能为空。Optional类有一些像isPresent这样的方法，这让它感觉跟检查null没什么区别。不过有了它你可以写出这样的语句：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<div>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									1\r\n								</div>\r\n								<div>\r\n									2\r\n								</div>\r\n								<div>\r\n									3\r\n								</div>\r\n								<div>\r\n									4\r\n								</div>\r\n								<div>\r\n									5\r\n								</div>\r\n								<div>\r\n									6\r\n								</div>\r\n							</div>\r\n						</td>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									finalOptional&lt;FooWidget&gt;fooWidget=maybeGetFooWidget();\r\n								</div>\r\n								<div>\r\n									finalBazbaz=fooWidget.flatMap(FooWidget::getBar)\r\n								</div>\r\n								<div>\r\n									.flatMap(BarWidget::getBaz)\r\n								</div>\r\n								<div>\r\n									.orElse(defaultBaz);\r\n								</div>\r\n								<div>\r\n								</div>\r\n								<div>\r\n								</div>\r\n							</div>\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	这比使用if来检查null好多了。唯一的缺点就是标准类库中对Optional的支持并不是很好，因此你还是需要对null进行检查的。\r\n</p>\r\n<h4>\r\n	不可变\r\n</h4>\r\n<p>\r\n	变量，类，集合，这些都应该是不可变的，除非你有更好的理由它们的确需要进行修改。\r\n</p>\r\n<p>\r\n	变量可以通过final来设置成不可变的：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"line-height:1.5;\">1</span><br />\r\n<span style=\"line-height:1.5;\">2</span><br />\r\n<span style=\"line-height:1.5;\">3</span><br />\r\n<span style=\"line-height:1.5;\">4</span><br />\r\n<span style=\"line-height:1.5;\">5</span><br />\r\n<span style=\"line-height:1.5;\">6</span><br />\r\n<span style=\"line-height:1.5;\">7</span><br />\r\n<span style=\"line-height:1.5;\">8</span><br />\r\n<span style=\"line-height:1.5;\">9</span><br />\r\n<span style=\"line-height:1.5;\">10</span><br />\r\n<span style=\"line-height:1.5;\">11</span><br />\r\n<span style=\"line-height:1.5;\">12</span><br />\r\n<span style=\"line-height:1.5;\">13</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								<span style=\"line-height:1.5;\">finalFooWidgetfooWidget;</span><br />\r\n<span style=\"line-height:1.5;\">if(condition()){</span><br />\r\n<span style=\"line-height:1.5;\"> fooWidget=getWidget();</span><br />\r\n<span style=\"line-height:1.5;\">}else{</span><br />\r\n<span style=\"line-height:1.5;\"> try{</span><br />\r\n<span style=\"line-height:1.5;\"> fooWidget=cachedFooWidget.get();</span><br />\r\n<span style=\"line-height:1.5;\"> }catch(CachingExceptione){</span><br />\r\n<span style=\"line-height:1.5;\"> log.error(\"Couldn\'t get cached value\",e);</span><br />\r\n<span style=\"line-height:1.5;\"> throwe;</span><br />\r\n<span style=\"line-height:1.5;\"> }</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">/</span><span style=\"line-height:1.5;\">/ fooWidget is guaranteed to be set here</span> \r\n							</div>\r\n							<div>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	现在你可以确认fooWidget不会不小心被重新赋值了。final关键字可以和if/else块以及try/catch块配合使用。当然了，如果fooWidget对象不是不可变的，你也可以很容易地对它进行修改。\r\n</p>\r\n<p>\r\n	有可能的话，集合都应该尽量使用Guava的ImmutableMap, ImmutableList, or ImmutableSet类。这些类都有自己的构造器，你可以动态的创建它们，然后将它们设置成不可变的，。\r\n</p>\r\n<p>\r\n	要使一个类不可变，你可以将它的字段声明成不可变的（设置成final)。你也可以把类自身也设置成final的这样它就不能被扩展并且修改了，当然这是可选的。\r\n</p>\r\n<h4>\r\n	避免大量的工具类\r\n</h4>\r\n<p>\r\n	如果你发现自己添加了许多方法到一个Util类里，你要注意了。\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<div>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									1\r\n								</div>\r\n								<div>\r\n									2\r\n								</div>\r\n								<div>\r\n									3\r\n								</div>\r\n								<div>\r\n									4\r\n								</div>\r\n								<div>\r\n									5\r\n								</div>\r\n								<div>\r\n									6\r\n								</div>\r\n								<div>\r\n									7\r\n								</div>\r\n								<div>\r\n									8\r\n								</div>\r\n								<div>\r\n									9\r\n								</div>\r\n								<div>\r\n									10\r\n								</div>\r\n							</div>\r\n						</td>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									publicclassMiscUtil{\r\n								</div>\r\n								<div>\r\n									publicstaticStringfrobnicateString(Stringbase,inttimes){\r\n								</div>\r\n								<div>\r\n									// ... etc\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n								</div>\r\n								<div>\r\n									publicstaticvoidthrowIfCondition(booleancondition,Stringmsg){\r\n								</div>\r\n								<div>\r\n									// ... etc\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n								</div>\r\n							</div>\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	这些类乍一看挺吸引人的，因为它们里面的这些方法不属于任何一个地方。因此你以代码重用之名将它们全都扔到这里了。\r\n</p>\r\n<p>\r\n	这么解决问题结果更糟。把它们放回它们原本属于的地方吧，如果你确实有一些类似的常用方法，考虑下Java 8里接口的默认方法。并且由于它们是接口，你可以实现多个方法。\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<div>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									1\r\n								</div>\r\n								<div>\r\n									2\r\n								</div>\r\n								<div>\r\n									3\r\n								</div>\r\n								<div>\r\n									4\r\n								</div>\r\n								<div>\r\n									5\r\n								</div>\r\n								<div>\r\n									6\r\n								</div>\r\n								<div>\r\n									7\r\n								</div>\r\n								<div>\r\n									8\r\n								</div>\r\n								<div>\r\n									9\r\n								</div>\r\n								<div>\r\n									10\r\n								</div>\r\n							</div>\r\n						</td>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									publicinterfaceThrower{\r\n								</div>\r\n								<div>\r\n									publicvoidthrowIfCondition(booleancondition,Stringmsg){\r\n								</div>\r\n								<div>\r\n									// ...\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n								</div>\r\n								<div>\r\n									publicvoidthrowAorB(Throwablea,Throwableb,booleanthrowA){\r\n								</div>\r\n								<div>\r\n									// ...\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n								</div>\r\n							</div>\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	这样需要使用它的类只需简单的实现下这个接口就可以了。\r\n</p>\r\n<h4>\r\n	格式\r\n</h4>\r\n<p>\r\n	格式远比许多程序员相像的要重要的多。一致的格式说明你关注自己的代码或者对别人有所帮助？是的。不过你先不要着急为了让代码整齐点而浪费一整天的时间在那给if块加空格了。\r\n</p>\r\n<p>\r\n	如果你确实需要一份代码格式规范，我强烈推荐Google的<a href=\"http://google-styleguide.googlecode.com/svn/trunk/javaguide.html\" target=\"_blank\">Java风格指南</a>。这份指南最精彩的部分就是<a href=\"http://google-styleguide.googlecode.com/svn/trunk/javaguide.html#s6-programming-practices\" target=\"_blank\">编程实践</a>这节了。非常值得一读。\r\n</p>\r\n<h4>\r\n	文档\r\n</h4>\r\n<p>\r\n	面向用户的代码编写下文档还是很重要的。这意味着你需要提供一些<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableMap.Builder.html\" target=\"_blank\">使用的示例</a>，同时你的变量方法和类名都应该有适当的描述信息。\r\n</p>\r\n<p>\r\n	结论就是不要给不需要文档的地方添加文档。如果对于某个参数你没什么可说的，或者它已经非常明显了，别写文档了。模板化的文档比没有文档更糟糕，因为它欺骗了你的用户，让他觉得这里有文档。\r\n</p>\r\n<h4>\r\n	流\r\n</h4>\r\n<p>\r\n	Java 8有一个漂亮的流和lambda表达式的语法。你的代码可以这么写：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div>\r\n	</div>\r\n	<div>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								1\r\n							</div>\r\n							<div>\r\n								2\r\n							</div>\r\n							<div>\r\n								3\r\n							</div>\r\n							<div>\r\n								4\r\n							</div>\r\n							<div>\r\n								5\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								finalList&lt;String&gt;filtered=list.stream()\r\n							</div>\r\n							<div>\r\n								.filter(s-&gt;s.startsWith(\"s\"))\r\n							</div>\r\n							<div>\r\n								.map(s-&gt;s.toUpperCase());\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	而不是这样：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<div>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									1\r\n								</div>\r\n								<div>\r\n									2\r\n								</div>\r\n								<div>\r\n									3\r\n								</div>\r\n								<div>\r\n									4\r\n								</div>\r\n								<div>\r\n									5\r\n								</div>\r\n								<div>\r\n									6\r\n								</div>\r\n								<div>\r\n									7\r\n								</div>\r\n							</div>\r\n						</td>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									finalList&lt;String&gt;filtered=Lists.newArrayList();\r\n								</div>\r\n								<div>\r\n									for(Stringstr:list){\r\n								</div>\r\n								<div>\r\n									if(str.startsWith(\"s\"){\r\n								</div>\r\n								<div>\r\n									filtered.add(str.toUpperCase());\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n									}\r\n								</div>\r\n								<div>\r\n								</div>\r\n							</div>\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	这样你能写出更连贯的代码，可读性也更强。\r\n</p>\r\n<h3>\r\n	部署\r\n</h3>\r\n<p>\r\n	正确地部署Java程序还是需要点技巧的。现在部署Java代码的主流方式有两种 ：使用框架或者使用自家摸索出来的解决方案，当然那样更灵活。\r\n</p>\r\n<h4>\r\n	框架\r\n</h4>\r\n<p>\r\n	由于部署Java程序并不容易，因此才有了各种框架来用于部署。最好的两个是<a href=\"https://dropwizard.github.io/dropwizard/\" target=\"_ blank\">Dropwizard</a>以及<a href=\"http://projects.spring.io/spring-boot/\" target=\"_ blank\">Spring Boot</a>。<a href=\"http://www.playframework.com/\" target=\"_blank\">Play Framework</a>也可以算是一个部署框架。\r\n</p>\r\n<p>\r\n	这些框架都试图降低部署程序的门槛。如果你是一个Java的新手或者你需要快速把事情搞定的话，那么框架就派上用场了。单个jar的部署当然会比复杂的WAR或者EAR部署要更容易一些。\r\n</p>\r\n<p>\r\n	然而，这些框架的灵活性不够，并且相当顽固，因此如果这些框架的开发人员给出的方式不太适合你的项目的话，你只能自己进行配置了。\r\n</p>\r\n<h4>\r\n	Maven\r\n</h4>\r\n<p>\r\n	备选方案：<a href=\"http://www.gradle.org/\" target=\"_blank\">Gradle</a>。\r\n</p>\r\n<div>\r\n	<p>\r\n		Maven仍然是编译，打包，运行测试的标准化工具。还有其它一些选择，比如Gradle，不过它们的采用程度远不Maven。如果你之前没用过Maven，你可以看下这个<a href=\"http://books.sonatype.com/mvnex-book/reference/index.html\" target=\"_blank\">Maven的使用示例</a>。\r\n	</p>\r\n	<p>\r\n		我喜欢用一个根POM文件来包含所有的外部依赖。它看起来就像是<a href=\"https://gist.github.com/cxxr/10787344\" target=\"_blank\">这样</a>。这个根POM文件只有一个外部依赖，不过如果你的产品很大的话，你可能会有很多依赖。你的根POM文件自己就应该是一个项目：它有版本控制，并且和其它的Java项目一样进行发布。\r\n	</p>\r\n	<p>\r\n		如果你觉得为每个外部依赖的修改都给POM文件打个标签（tag)有点太浪费了，那是你还没有经历过花了一个星期的时间来跟踪项目依赖错误的问题。\r\n	</p>\r\n	<p>\r\n		你的所有Maven工程都应该包含你的主POM文件以及所有的版本信息。这样的话，你能知道公司项目的每个外部依赖所选择的版本，以及所有正确的Maven插件。如果你需要引入一个外部依赖的话，大概是这样的：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n									<div>\r\n										7\r\n									</div>\r\n									<div>\r\n										8\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										&lt;dependencies&gt;\r\n									</div>\r\n									<div>\r\n										&lt;dependency&gt;\r\n									</div>\r\n									<div>\r\n										&lt;groupId&gt;org.third.party&lt;/groupId&gt;\r\n									</div>\r\n									<div>\r\n										&lt;artifactId&gt;some-artifact&lt;/artifactId&gt;\r\n									</div>\r\n									<div>\r\n										&lt;/dependency&gt;\r\n									</div>\r\n									<div>\r\n										&lt;/dependencies&gt;\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		如果你需要进行内部依赖的话，应该在项目的段中单独进行维护。不然的话，主POM文件的版本号就要疯涨了。\r\n	</p>\r\n	<h4>\r\n		依赖收敛\r\n	</h4>\r\n	<p>\r\n		Java的一个最好的地方就是有大量的第三方库，它们无所不能。几乎每个API或者工具都有相应的Java SDK，并且可以很容易地引入到Maven中来。\r\n	</p>\r\n	<p>\r\n		所有的这些Java库自身可能又会依赖一些特定的版本的其它类库。如果你引入了大量的库，可能会出现版本冲突 ，比如说像这样：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										FoolibrarydependsonBarlibraryv1.0\r\n									</div>\r\n									<div>\r\n										WidgetlibrarydependsonBarlibraryv0.9\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		你的工程应该引入哪个版本？\r\n	</p>\r\n	<p>\r\n		有了Maven的依赖收敛的插件后，如果你的依赖版本不一致的话，编译的时候就会报错。那么你有两种解决冲突的方案：\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			在dependencyManagement区中显式地选择某个版本的bar。\r\n		</li>\r\n		<li>\r\n			Foo或者Widget都不要依赖Bar。\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		到底选择哪种方案取决你的具体情况： 如果你想要跟踪某个工程的版本，不依赖它是最好的。另一方面，如果你想要明确一点，你可以自己选择一个版本，不过这样的话，如果更新了其它的依赖，也得同步地修改它。\r\n	</p>\r\n	<h3>\r\n		持续集成\r\n	</h3>\r\n	<p>\r\n		很明显你需要某种持续集成的服务器来不断地编译你的SNAPSHOT版本，或者对Git分支进行构建。\r\n	</p>\r\n	<p>\r\n		<a href=\"http://jenkins-ci.org/\" target=\"_blank\">Jenkins</a>和<a href=\"https://travis-ci.org/\" target=\"_blank\">Travis-CI</a>是你的不二选择。\r\n	</p>\r\n	<p>\r\n		代码覆盖率也很重要，<a href=\"http://cobertura.github.io/cobertura/\" target=\"_blank\">Cobertura</a>有一个不错的Maven插件，并且对CI支持的也不错。当然还有其它的代码覆盖的工具，不过我用的是Cobertura。\r\n	</p>\r\n	<h3>\r\n		Maven库\r\n	</h3>\r\n	<p>\r\n		你需要一个地方来存储你编译好的jar包，war包，以及EAR包，因此你需要一个代码仓库。\r\n	</p>\r\n	<p>\r\n		常见的选择是<a href=\"http://www.jfrog.com/\" target=\"_blank\">Artifactory</a>或者<a href=\"http://www.sonatype.com/nexus\" target=\"_blank\">Nexus</a>。两个都能用，并且各有利弊。\r\n	</p>\r\n	<p>\r\n		你应该自己进行Artifactory/Nexus的安装并且将你的依赖做一份镜像。这样不会由于下载Maven 库的时候出错了导到编译中断。\r\n	</p>\r\n	<h4>\r\n		配置管理\r\n	</h4>\r\n	<p>\r\n		那现在你的代码可以编译了，仓库也搭建起来了，你需要把你的代码带出开发环境，走向最终的发布了。别马虎了，因为自动化执行从长远来看，好处是大大的。\r\n	</p>\r\n	<p>\r\n		<a href=\"http://www.getchef.com/chef/\" target=\"_blank\">Chef</a>，<a href=\"http://puppetlabs.com/\" target=\"_blank\">Puppet</a>，和<a href=\"http://www.ansible.com/home\" target=\"_blank\">Ansible</a>都是常见的选择。我自己也写了一个可选方案，<a href=\"http://www.gosquadron.com/\" target=\"_blank\">Squadron</a>。这个嘛，当然了，我自然是希望你们能下载下它的，因为它比其它那些要好用多了。\r\n	</p>\r\n	<p>\r\n		不管你用的是哪个工具，别忘了自动化部署就好。\r\n	</p>\r\n	<h3>\r\n		库\r\n	</h3>\r\n	<p>\r\n		可能Java最好的特性就是它拥有的这些库了。下面列出了一些库，应该绝大多数人都会用得上。\r\n	</p>\r\n	<p>\r\n		Java的标准库，曾经还是很不错的，但在现在看来它也遗漏掉了很多关键的特性。\r\n	</p>\r\n	<h4>\r\n		Apache Commons\r\n	</h4>\r\n	<p>\r\n		<a href=\"http://commons.apache.org/\" target=\"_blank\">Apache Commons项目</a>有许多有用的功能。\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			Commons Codec有许多有用的Base64或者16进制字符串的编解码的方法。别浪费时间自己又写一遍了。\r\n		</li>\r\n		<li>\r\n			Commons Lang是一个字符串操作，创建，字符集，以及许多工具方法的类库。\r\n		</li>\r\n		<li>\r\n			Commons IO，你想要的文件相关的方法都在这里了。它有FileUtils.copyDirectory，FileUtils.writeStringToFile, IOUtils.readLines，等等。\r\n		</li>\r\n	</ul>\r\n	<h4>\r\n		Guava\r\n	</h4>\r\n	<p>\r\n		Guava是一个非常棒的库，它就是Java标准库”所缺失的那部分”。它有很多我喜欢的地方，很难一一赘述，不过我还是想试一下。\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			Cache，这是一个最简单的获取内存缓存的方式了，你可以用它来缓存网络访问，磁盘访问，或者几乎所有东西。你只需实现一个CacheBuilder，告诉Guava如何创建缓存就好了。\r\n		</li>\r\n		<li>\r\n			不可变集合。这里有许多类：ImmutableMap, ImmutableList，甚至还有ImmutableSortedMultiSet，如果这就是你想要的话。\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		我还喜欢用Guava的方式来新建可变集合：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n									<div>\r\n										7\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										// Instead of\r\n									</div>\r\n									<div>\r\n										finalMap&lt;String,Widget&gt;map=newHashMap&lt;String,Widget&gt;();\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n										// You can use\r\n									</div>\r\n									<div>\r\n										finalMap&lt;String,Widget&gt;map=Maps.newHashMap();\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		有许多像Lists, Maps, Sets的静态类，他们都更简洁易懂一些。\r\n	</p>\r\n	<p>\r\n		如果你还在坚持使用Java 6或者7的话，你可以用下<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Collections2.html\" target=\"_blank\">Collections2</a>，它有一些诸如filter和transform的方法。没有Jvaa 8的stream的支持，你也可以用它们来写出连贯的代码。\r\n	</p>\r\n	<p>\r\n		Guava也有一些很简单的东西，比如Joiner，你可以用它来拼接字符串，还有一个类可以用来<a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/util/concurrent/Uninterruptibles.html\" target=\"_blank\">处理中断</a>。\r\n	</p>\r\n	<h4>\r\n		Gson\r\n	</h4>\r\n	<p>\r\n		Google的<a href=\"https://code.google.com/p/google-gson/\" target=\"_blank\">Gson</a>是一个简单高效的JSON解析库。它是这样工作的：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										finalGsongson=newGson();\r\n									</div>\r\n									<div>\r\n										finalStringjson=gson.toJson(fooWidget);\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n										finalFooWidgetnewFooWidget=gson.fromJson(json,FooWidget.class);\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		真的很简单，使用它会感觉非常愉快。Gson的<a href=\"https://sites.google.com/site/gson/gson-user-guide\" target=\"_blank\">用户指南</a>中有更多的示例。\r\n	</p>\r\n	<h4>\r\n		Java Tuples\r\n	</h4>\r\n	<p>\r\n		我对Java一个不爽的地方就是它的标准库中居然没有元组。幸运的是， <a href=\"http://www.javatuples.org/\" target=\"_blank\">Java tuples工程</a>解决了这一问题。\r\n	</p>\r\n	<p>\r\n		它也很容易使用，并且真的很赞：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										Pair&lt;String,Integer&gt;func(Stringinput){\r\n									</div>\r\n									<div>\r\n										// something...\r\n									</div>\r\n									<div>\r\n										returnPair.with(stringResult,intResult);\r\n									</div>\r\n									<div>\r\n										}\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<h4>\r\n		Joda-Time\r\n	</h4>\r\n	<p>\r\n		Joda-Time是我用过的最好的时间库了。简直，直接，容易测试。你还想要什么？\r\n	</p>\r\n	<p>\r\n		这个库里我最喜欢的一个类就是Duration，因为我用它来告诉说我要等待多长时间，或者过多久我才进行重试。\r\n	</p>\r\n	<h4>\r\n		Lombok\r\n	</h4>\r\n	<p>\r\n		<a href=\"http://projectlombok.org/\" target=\"_blank\">Lombok</a>是一个非常有趣的库。它通过注释来减少了Java中的饱受诟病的样板代码（注：setter,getter之类的）。\r\n	</p>\r\n	<p>\r\n		想给你类中的变量增加setter， getter方法？太简单了：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										publicclassFoo{\r\n									</div>\r\n									<div>\r\n										@Getter@Setterprivateintvar;\r\n									</div>\r\n									<div>\r\n										}\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		现在你可以这么写了：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										finalFoofoo=newFoo();\r\n									</div>\r\n									<div>\r\n										foo.setVar(5);\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		<a href=\"http://jnb.ociweb.com/jnb/jnbJan2010.html\" target=\"_blank\">这里</a>还有更多的示例。我还没在生产代码中用过Lombok，不过我有点等不及了。\r\n	</p>\r\n	<h4>\r\n		Play框架\r\n	</h4>\r\n	<p>\r\n		备选方案：<a href=\"https://jersey.java.net/\" target=\"_blank\">Jersey</a>或者<a href=\"http://www.sparkjava.com/\" target=\"_blank\">Spark</a> \r\n	</p>\r\n	<p>\r\n		在Java中实现REST风格的WEB服务有两大阵营：<a href=\"http://en.wikipedia.org/wiki/Java_API_for_RESTful_Web_Services\" target=\"_blank\">JAX-RS</a>和其它。\r\n	</p>\r\n	<p>\r\n		JAX-RS是传统的方式。你使用像Jersey这样的东西来将注解和接口，实现组合到一起来实现WEB服务。这样做的好处就是，你可以通过一个接口就能很容易创建出一个调用的客户端来。\r\n	</p>\r\n	<p>\r\n		Play框架是在JVM上实现WEB服务的截然不同的一种方式：你有一个routes文件，然后你去实现routes中那些规则所引用到的类。它其实就是个完整的MVC框架，不过你可以只用它来实现REST服务。\r\n	</p>\r\n	<p>\r\n		它同时支持Java和Scala。它优先使用Scala这点可能有点令人沮丧，但是用Java进行开发的话也非常不错。\r\n	</p>\r\n	<p>\r\n		如果你习惯了Python里的Flask这类的微框架，那么你应该会对Spark感到很熟悉。有了Java 8它简直如虎添翼。\r\n	</p>\r\n	<h4>\r\n		SLF4J\r\n	</h4>\r\n	<p>\r\n		Java打印日志有许多不错的解决方案。我个人最喜欢的是SLF4J，因为它是可挺插拔的，并且可以同时混合不同的日志框架中输出的日志。有个奇怪的工程同时使用了java.util.logging, JCL, 和log4j？没问题，SLF4J就是为它而生的。\r\n	</p>\r\n	<p>\r\n		想入门的话，看下它的这个<a href=\"http://www.slf4j.org/manual.html\" target=\"_blank\">两页的手册</a>就足够的了。\r\n	</p>\r\n	<h4>\r\n		jOOQ\r\n	</h4>\r\n	<p>\r\n		我不喜欢很重的ORM框架，因为我喜欢SQL。因此我写了许多的JDBC模板，但它们很难维护。jOOQ是个更不错的解决方案。\r\n	</p>\r\n	<p>\r\n		你可以在Java中以一种类型安全的方式来书写SQL语句：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n									<div>\r\n										7\r\n									</div>\r\n									<div>\r\n										8\r\n									</div>\r\n									<div>\r\n										9\r\n									</div>\r\n									<div>\r\n										10\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										// Typesafely execute the SQL statement directly with jOOQ\r\n									</div>\r\n									<div>\r\n										Result&lt;Record3&lt;String,String,String&gt;&gt;result=\r\n									</div>\r\n									<div>\r\n										create.select(BOOK.TITLE,AUTHOR.FIRST_NAME,AUTHOR.LAST_NAME)\r\n									</div>\r\n									<div>\r\n										.from(BOOK)\r\n									</div>\r\n									<div>\r\n										.join(AUTHOR)\r\n									</div>\r\n									<div>\r\n										.on(BOOK.AUTHOR_ID.equal(AUTHOR.ID))\r\n									</div>\r\n									<div>\r\n										.where(BOOK.PUBLISHED_IN.equal(1948))\r\n									</div>\r\n									<div>\r\n										.fetch();\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		将它以及<a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=66\" target=\"_blank\">DAO模式</a>结合起来，你可以让数据库访问变得更简单。\r\n	</p>\r\n	<h3>\r\n		测试\r\n	</h3>\r\n	<p>\r\n		测试对软件来说至关重要。下面这些库能让测试变得更加容易。\r\n	</p>\r\n	<h4>\r\n		jUnit 4\r\n	</h4>\r\n	<p>\r\n		jUnit就不用介绍了。它是Java中单元测试的标准工具。\r\n	</p>\r\n	<p>\r\n		不过可能你还没有完全发挥jUnit的威力。jUnit还支持参数化测试，以及能让你少写很多样板代码的<a href=\"https://github.com/junit-team/junit/wiki/Rules\" target=\"_blank\">测试规则</a>，还有能随机测试代码的<a href=\"https://github.com/junit-team/junit/wiki/Theories\" target=\"_blank\">Theory</a>,以及<a href=\"https://github.com/junit-team/junit/wiki/Assumptions-with-assume\" target=\"_blank\">Assumptions</a>。\r\n	</p>\r\n	<h4>\r\n		jMock\r\n	</h4>\r\n	<p>\r\n		如果你已经完成了依赖注入，那么它回报你的时候来了：你可以mock出带副作用的代码（就像和REST服务器通信那样），并且仍然能对调用它的代码执行断言操作。\r\n	</p>\r\n	<p>\r\n		jMock是Java中标准的mock工具。它的使用方式是这样的：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n									<div>\r\n										7\r\n									</div>\r\n									<div>\r\n										8\r\n									</div>\r\n									<div>\r\n										9\r\n									</div>\r\n									<div>\r\n										10\r\n									</div>\r\n									<div>\r\n										11\r\n									</div>\r\n									<div>\r\n										12\r\n									</div>\r\n									<div>\r\n										13\r\n									</div>\r\n									<div>\r\n										14\r\n									</div>\r\n									<div>\r\n										15\r\n									</div>\r\n									<div>\r\n										16\r\n									</div>\r\n									<div>\r\n										17\r\n									</div>\r\n									<div>\r\n										18\r\n									</div>\r\n									<div>\r\n										19\r\n									</div>\r\n									<div>\r\n										20\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										publicclassFooWidgetTest{\r\n									</div>\r\n									<div>\r\n										privateMockerycontext=newMockery();\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n										@Test\r\n									</div>\r\n									<div>\r\n										publicvoidbasicTest(){\r\n									</div>\r\n									<div>\r\n										finalFooWidgetDependencydep=context.mock(FooWidgetDependency.class);\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n										context.checking(newExpectations(){\r\n									</div>\r\n									<div>\r\n										oneOf(dep).call(with(any(String.class)));\r\n									</div>\r\n									<div>\r\n										atLeast(0).of(dep).optionalCall();\r\n									</div>\r\n									<div>\r\n										});\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n										finalFooWidgetfoo=newFooWidget(dep);\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n										Assert.assertTrue(foo.doThing());\r\n									</div>\r\n									<div>\r\n										context.assertIsSatisfied();\r\n									</div>\r\n									<div>\r\n										}\r\n									</div>\r\n									<div>\r\n										}\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		这段代码通过jMock设置了一个FooWidgetDependency ，然后添加了一些期望的操作。我们希望dep的call方法被调用一次而dep的optionalCall 方法会被调用0或更多次。\r\n	</p>\r\n	<p>\r\n		如果你反复的构造同样的FooWidgetDependency，你应该把它放到一个<a href=\"https://github.com/junit-team/junit/wiki/Test-fixtures\" target=\"_blank\">测试设备（Test Fixture）</a>里，然后把assertIsSatisfied放到一个@After方法中。\r\n	</p>\r\n	<h4>\r\n		AssertJ\r\n	</h4>\r\n	<p>\r\n		你是不是用jUnit写过这些？\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n									<div>\r\n										6\r\n									</div>\r\n									<div>\r\n										7\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										finalList&lt;String&gt;result=some.testMethod();\r\n									</div>\r\n									<div>\r\n										assertEquals(4,result.size());\r\n									</div>\r\n									<div>\r\n										assertTrue(result.contains(\"some result\"));\r\n									</div>\r\n									<div>\r\n										assertTrue(result.contains(\"some other result\"));\r\n									</div>\r\n									<div>\r\n										assertFalse(result.contains(\"shouldn\'t be here\"));\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		这些样板代码有点太聒噪了。AssertJ解决了这个问题。同样的代码可以变成这样：\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n					<div>\r\n						<div>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n			</div>\r\n			<div>\r\n				<table>\r\n					<tbody>\r\n						<tr>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										1\r\n									</div>\r\n									<div>\r\n										2\r\n									</div>\r\n									<div>\r\n										3\r\n									</div>\r\n									<div>\r\n										4\r\n									</div>\r\n									<div>\r\n										5\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td>\r\n								<div>\r\n									<div>\r\n										assertThat(some.testMethod()).hasSize(4)\r\n									</div>\r\n									<div>\r\n										.contains(\"some result\",\"some other result\")\r\n									</div>\r\n									<div>\r\n										.doesNotContain(\"shouldn\'t be here\");\r\n									</div>\r\n									<div>\r\n									</div>\r\n									<div>\r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		连贯接口让你的测试代码可读性更强了。代码如此，夫复何求？\r\n	</p>\r\n	<h3>\r\n		工具\r\n	</h3>\r\n	<h4>\r\n		IntelliJ IDEA\r\n	</h4>\r\n	<p>\r\n		备选方案： Eclipse and Netbeans\r\n	</p>\r\n	<p>\r\n		最好的Java IDE当然是 IntelliJ IDEA。它有许多很棒的特性，我们之所以还能忍受Java这些冗长的代码，它起了很大的作用。自动补全很棒，&lt; a href=”http://i.imgur.com/92ztcCd.png” target=”_blank”&gt;代码检查也超赞，重构工具也非常实用。\r\n	</p>\r\n	<p>\r\n		免费的社区版对我来说已经足够了，不过在旗舰版中有许多不错的特性比如数据库工具，Srping框架的支持以及Chronon等。\r\n	</p>\r\n	<h4>\r\n		Chronon\r\n	</h4>\r\n	<p>\r\n		GDB 7中我最喜欢的特性就是调试的时候可以按时间进行遍历了。有了IntelliJ IDEA的<a href=\"http://blog.jetbrains.com/idea/2014/03/try-chronon-debugger-with-intellij-idea-13-1-eap/\" target=\"_blank\">Chronon插件</a>后，这个也成为现实了。当然你得是旗舰版的。\r\n	</p>\r\n	<p>\r\n		你可以获取到变量的历史值，跳回前面执行的地方，获取方法的调用历史等等。第一次使用的话会感觉有点怪，但它能帮忙你调试一些很棘手的BUG。\r\n	</p>\r\n	<h4>\r\n		JRebel\r\n	</h4>\r\n	<p>\r\n		持续集成通常都是SaaS产品的一个目标。你想想如果你甚至都不需要等到编译完成就可以看到代码的更新？\r\n	</p>\r\n	<p>\r\n		这就是<a href=\"http://zeroturnaround.com/software/jrebel/\" target=\"_blank\">JRebel</a>在做的事情。只要你把你的服务器挂到某个JRebel客户端上，代码一旦有改动你马上就能看到效果。当你想快速体验一个功能的话，这个的确能节省不少时间。\r\n	</p>\r\n	<h4>\r\n		验证框架\r\n	</h4>\r\n	<p>\r\n		Java的类型系统是相当弱的。它不能区分出普通字符串以及实际上是正则的字符串，也不能进行\r\n	</p>\r\n	<div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<div>\r\n		</div>\r\n		<div>\r\n			<table>\r\n				<tbody>\r\n					<tr>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									1\r\n								</div>\r\n								<div>\r\n									2\r\n								</div>\r\n								<div>\r\n									3\r\n								</div>\r\n								<div>\r\n									4\r\n								</div>\r\n								<div>\r\n									5\r\n								</div>\r\n								<div>\r\n									6\r\n								</div>\r\n								<div>\r\n									7\r\n								</div>\r\n								<div>\r\n									8\r\n								</div>\r\n								<div>\r\n									9\r\n								</div>\r\n								<div>\r\n									10\r\n								</div>\r\n							</div>\r\n						</td>\r\n						<td>\r\n							<div>\r\n								<div>\r\n									<ahref=\"http: en.wikipedia.org=\"\" wiki=\"\" taint_checking\"=\"\" target=\"_blank”>污点检查</a>。而验证框架替它做了。\r\n										</p>\r\n										<p>\r\n											它使用像@Nullable这样的注解来检查类型，你可以定义自己的注解来让静态代码分析的威力变得更加强大。\r\n										</p>\r\n										<h4>\r\n											Eclipse Memory Analyzer\r\n										</h4>\r\n										<p>\r\n											在Java中也会发生内存泄漏。幸运的是，有这类的专门的工具。解决这类问题的最佳工具我觉得就是Eclipse Memory Analyzer了。它能dump出堆的内存，然后帮助你找出泄露的原因：\r\n										</p>\r\n										<p>\r\n											从JVM进程中dump出堆内存有许多方法，我个人用的是jmap:\r\n										</p>\r\n<div=\">$jmap-dump:live,format=b,file=heapdump.hprof-F8152</ahref=\"http:>\r\n											</div>\r\n											<div>\r\n												AttachingtoprocessID8152,pleasewait...\r\n											</div>\r\n											<div>\r\n												Debuggerattachedsuccessfully.\r\n											</div>\r\n											<div>\r\n												Servercompilerdetected.\r\n											</div>\r\n											<div>\r\n												JVMversionis23.25-b01\r\n											</div>\r\n											<div>\r\n												Dumpingheaptoheapdump.hprof...\r\n											</div>\r\n											<div>\r\n												...snip...\r\n											</div>\r\n											<div>\r\n												Heapdumpfilecreated\r\n											</div>\r\n											<div>\r\n											</div>\r\n											<div>\r\n											</div>\r\n										</div>\r\n											</td>\r\n												</tr>\r\n													</tbody>\r\n														</table>\r\n															</div>\r\n														</div>\r\n															</div>\r\n															<p>\r\n																然后你就可以用Memory Analyzer来打开heapdump.hprof文件，看看到底发生了什么。\r\n															</p>\r\n															<h3>\r\n																资源\r\n															</h3>\r\n															<p>\r\n																好的资源能帮助你成为一名Java大师。\r\n															</p>\r\n															<h4>\r\n																书籍\r\n															</h4>\r\n															<ul>\r\n																<li>\r\n																	Effective Java\r\n																</li>\r\n																<li>\r\n																	Java Concurrency in Practice\r\n																</li>\r\n															</ul>\r\n															<p>\r\n																原文链接：http://blog.sae.sina.com.cn/archives/3999\r\n															</p>',NULL,'2014-05-27 00:29:51','2014-05-27 00:28:59',0,'如何写出更好的Java代码',0),(129,'admin',12,'<p>\r\n	我的分词结果链表需要合并连续的数字和日期，所以需要熟悉一下Java Collection在遍历的过程中同时删除、合并元素的小trick。自己试验了一下，活用listIterator的previous()和next()方法就可以达到目的。\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:14px;\">遍历中删除</span>\r\n</h2>\r\n<h3>\r\n	数据集\r\n</h3>\r\n<div>\r\n	<div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								ListintegerList&nbsp;=&nbsp;new&nbsp;LinkedList();\r\n							</div>\r\n							<div>\r\n								for&nbsp;(int&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;= 10; ++i)\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								integerList.add(i);\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								System.out.println(integerList);\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	也就是\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n	</p>\r\n</blockquote>\r\n<h3>\r\n	<span style=\"font-size:14px;\">遍历中删除所有奇数</span>\r\n</h3>\r\n<div>\r\n	<div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								//&nbsp;遍历中删除所有奇数\r\n							</div>\r\n							<div>\r\n								ListIteratorlistIterator&nbsp;=&nbsp;integerList.listIterator();\r\n							</div>\r\n							<div>\r\n								while&nbsp;(listIterator.hasNext())\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								Integer&nbsp;next&nbsp;=&nbsp;listIterator.next();\r\n							</div>\r\n							<div>\r\n								if&nbsp;(next&nbsp;%&nbsp;2&nbsp;==&nbsp;1)\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								listIterator.remove();\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								System.out.println(integerList);\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<h3>\r\n	输出：<br />\r\n</h3>\r\n<blockquote>\r\n	<p>\r\n		[2, 4, 6, 8, 10]\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<br />\r\n</p>\r\n<h2>\r\n	<span style=\"font-size:14px;\">遍历中合并</span>\r\n</h2>\r\n<h3>\r\n	数据集\r\n</h3>\r\n<p>\r\n	数据集接上面的输出\r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">遍历中合并前后和为10的项</span>\r\n</h3>\r\n<div>\r\n	<div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								//&nbsp;遍历中合并前后和为10的项\r\n							</div>\r\n							<div>\r\n								listIterator&nbsp;=&nbsp;integerList.listIterator();\r\n							</div>\r\n							<div>\r\n								Integer&nbsp;next&nbsp;=&nbsp;listIterator.next();\r\n							</div>\r\n							<div>\r\n								while&nbsp;(listIterator.hasNext())\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								Integer&nbsp;current&nbsp;=&nbsp;next;\r\n							</div>\r\n							<div>\r\n								next&nbsp;=&nbsp;listIterator.next();\r\n							</div>\r\n							<div>\r\n								if&nbsp;(current&nbsp;+&nbsp;next&nbsp;==&nbsp;10)\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								//&nbsp;此时listIterator指向6\r\n							</div>\r\n							<div>\r\n								listIterator.remove();\r\n							</div>\r\n							<div>\r\n								//&nbsp;删除后listIterator还是指向6，但是其元素是无效的\r\n							</div>\r\n							<div>\r\n								listIterator.previous();\r\n							</div>\r\n							<div>\r\n								//&nbsp;回退到4，将其合并为10\r\n							</div>\r\n							<div>\r\n								listIterator.set(10);\r\n							</div>\r\n							<div>\r\n								//&nbsp;接下来会next到8\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								System.out.println(integerList);\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<h3>\r\n	输出：\r\n</h3>\r\n<blockquote>\r\n	<p>\r\n		[2, 10, 8, 10]\r\n	</p>\r\n</blockquote>\r\n<h3>\r\n	<span style=\"font-size:14px;\">数据集</span>\r\n</h3>\r\n<div>\r\n	<div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								//&nbsp;遍历中合并前后相等的项\r\n							</div>\r\n							<div>\r\n								integerList.clear();\r\n							</div>\r\n							<div>\r\n								for&nbsp;(int&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;= 5; ++i)\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt; 3; ++j)\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								integerList.add(i);\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								System.out.println(integerList);\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	也就是\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		[1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5]\r\n	</p>\r\n</blockquote>\r\n<h3>\r\n	遍历中合并前后相等的项\r\n</h3>\r\n<div>\r\n	<div>\r\n		<table border=\"0\" class=\"ke-zeroborder\">\r\n			<tbody>\r\n				<tr>\r\n					<td>\r\n						<div>\r\n							<div>\r\n								listIterator&nbsp;=&nbsp;integerList.listIterator();\r\n							</div>\r\n							<div>\r\n								next&nbsp;=&nbsp;listIterator.next();\r\n							</div>\r\n							<div>\r\n								while&nbsp;(listIterator.hasNext())\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								Integer&nbsp;current&nbsp;=&nbsp;next;\r\n							</div>\r\n							<div>\r\n								next&nbsp;=&nbsp;listIterator.next();\r\n							</div>\r\n							<div>\r\n								if&nbsp;(current&nbsp;==&nbsp;next)\r\n							</div>\r\n							<div>\r\n								{\r\n							</div>\r\n							<div>\r\n								//&nbsp;此时listIterator指向6\r\n							</div>\r\n							<div>\r\n								listIterator.remove();\r\n							</div>\r\n							<div>\r\n								//&nbsp;删除后listIterator还是指向6，但是其元素是无效的\r\n							</div>\r\n							<div>\r\n								listIterator.previous();\r\n							</div>\r\n							<div>\r\n								//&nbsp;回退到4，将其合并为10\r\n							</div>\r\n							<div>\r\n								listIterator.set(current&nbsp;+&nbsp;next);\r\n							</div>\r\n							<div>\r\n								//&nbsp;接下来会next到8\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n								}\r\n							</div>\r\n							<div>\r\n							</div>\r\n							<div>\r\n								System.out.println(integerList);\r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<h3>\r\n	输出\r\n</h3>\r\n<blockquote>\r\n	<p>\r\n		[2, 1, 4, 2, 6, 3, 8, 4, 10, 5]\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	值得注意的是，上面并没有合并所有相同的项，因为在一句listIterator.set(current&nbsp;+&nbsp;next);之后，前后就不相等了。\r\n</p>\r\n<p>\r\n	本来想用两个迭代器去做，但是一个迭代器删除之后，会导致另一个迭代器失效，抛出ConcurrentModificationException异常，所以只能操作单个迭代器。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<img src=\"http://ww2.sinaimg.cn/large/6cbb8645gw1egpfi2la96j20gn0en75q.jpg\" width=\"599\" height=\"527\" style=\"height:auto;\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	转载请注明：<a href=\"http://www.hankcs.com/\">码农场</a> » <a href=\"http://www.hankcs.com/program/java/java-collection-traversing-delete-merge-elements.html\">Java Collection在遍历中删除、合并元素</a> \r\n</p>',NULL,'2014-05-27 09:18:50','2014-05-27 09:16:25',0,'Java Collection在遍历中删除、合并元素',0),(130,'admin',29,'<span style=\"font-size:14px;\">最近需要用到多台cache服务器来作图片缓存，我在设计的时候考虑，一方面我想增加cache服务器的命中率，通过对URL进行hash是比较好的方法，各台服务器可以尽可能集中缓存一部分的页面。另一方面，我想尽可能的降低在增减cache服务器时候的出现所有cache重新分配的局面。所以，自然而然我想到了用一致性hash的方法。</span>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">原理</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">一致性hash的方法的原理[1][2]相当简单，它建立了一定范围hash值的环，每个cache服务器节点经过hash计算都映射到环上相应某个点。</span>\r\n</div>\r\n<div>\r\n	<div>\r\n		<img alt=\"一种一致性hash的实现及优化 - 120斤的大青蛙 - 老和山小和尚\" src=\"http://www.codeproject.com/KB/recipes/lib-conhash/cache.JPG\" /> \r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">当某个HTTP请求过来时，可以对其URL进行hash计算，获得的hash值在上面这个环沿顺时针方向进行查找，找到第一个点就是它需要的目标节点。</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">当服务器节点增加时，假设cache B与cache C之间加了一个cache D的节点，其影响也就是Key B与Key C之间的部分cache会重新分配，其他区间则不会改变。传统的hash分配的方法一般是hash值和服务器数进行求余，当服务器数据变化时，所有的hash值都会变化，这样会引起后端cache记录的剧烈抖动，大部分的cache数据可能需要重新向源服务器请求并刷新。</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">我参考的一种实现方式</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">上述一致性hash原理很简单，但具体实现还有很多地方需要优化，比如：key A, B, C如何分布，才能让到服务器ABC的负载均衡？增减服务器的时候也能实现负载均衡，并把抖动的cache数据量控制在一定的范围内？</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">这就引出了虚拟节点的概念：</span>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<img alt=\"一种一致性hash的实现及优化 - 120斤的大青蛙 - 老和山小和尚\" src=\"http://www.codeproject.com/KB/recipes/lib-conhash/virtual.JPG\" /> \r\n		</div>\r\n<span style=\"font-size:14px;\">&nbsp;虚拟节点的概念就是在环上出现的多个点对应的是同一个真实节点，也可以说是让真实的服务分布到环上的多个位置。</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">我参考的一种实现方法是[3]，它应该是源自PECL memcached[4]库里面获得的设计：</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">1.假设有S台服务器， 将真实节点乘以一定的倍数N，对于一台服务器就有N个节点在这个环上</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">2. 将这N个节点尽可能均匀的分布于这个环上，我采用的是md5对服务器字符串进行hash的方式，比如服务器A的地址是”192.168.0.1“，则其虚拟节点的字符串就是“192.168.0.1-1”至“192.168.0.1-N”。md5散列方式的混乱度是比较理想的，即使字符串相差一个字符，其散列值可能就完全不一样，所以我可以认为虚拟节点是比较均匀的分布于环上。其负载均匀与否，我在下面进行了测试。</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">在现实中，虚拟节点N的数目通常比较大，如果每次请求过来的hash值都进行查找，那么复杂度至少是O（SN）。有没有减少运行时计算的复杂度呢？我看到通常的方式是这样的：</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">1、将上述环平均分成Q个区间，Q远远大于虚拟节点的总数，也即Q &gt;&gt; SN。</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">2、在配置时，选取每个区间的中心点q（或者起始点也无所谓），查找q的下一个虚拟节点v，找到的v就代表了落在该区间的所有hash值的节点。</span>\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">3、在运行时，URL的hash值只要对Q进行求余获取它的区间，也就得到了该区间对应的虚拟节点v，所以其复杂度就是一次简单的求余计算。</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">可以看到上述的N和Q这两个值是需要手工设定的，拍脑袋想一个当然可以，那么取什么值可以实现节点的负载最均衡呢？根据Dynamo[5]的论文以后可知：N = Q/S，也就是虚拟节点的总数应该是与区间数是一样的（S如果能除尽Q的情况下）。</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;\">所以最后你只要设定Q这个值，当然Q越大越好，虚拟节点的数目也会变多，分布也会均匀一点，但是它会占用相应的内存。我最终取的是65536，我想几百台服务器的情况下，每个随机分布的虚拟节点也有几百个，节点分布应该还是比较均衡的。</span>\r\n	</div>\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">失败的处理</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">当某个后端节点暂时失效了，该怎么处理呢？我采用的是按照固定步长p，去尝试下面的节点，总共有几个真实节点，就尝试几次。这种错误尝试方法在一些如[5][6]等去中心化的存储结构都是非常重要的，它的数据通常会存储在多个节点上，可以实现实时数据节点随时上线下线，而不会影响真实的业务。</span>\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">我的代码</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">我的实现在这里：</span><a href=\"https://github.com/yaoweibin/ngx_http_consistent_hash\"><span style=\"font-size:14px;\">https://github.com/yaoweibin/ngx_http_consistent_hash</span></a><span style=\"font-size:14px;\">， 这是一个Nginx的反向代理模块。 原始版本不是我写的，我做了相应的优化，加进了md5的hash方法，虚拟节点的计算，失败请求的处理，并进行了负载均衡的测试。</span>\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">测试数据</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">对于这种一致性hash方法，究竟好不好用，根据其本来的目的，我从两方面来测试：第一个是分布的均匀性，这是所有hash方法的基础功能，第二个是节点增减影响的局部性，当出现节点增减时，会出现多大的影响。</span>\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">我以192.168.0.1-192.168.0.10为例依次增加节点服务器，最多10台服务器的情况下，获得的各区间节点的分布数据，我画出了比较能说明均匀性与失配率的折线图。</span>\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">这个不均衡比例是这样算的：计算各个真实服务器节点的虚拟节点数，分布最多的节点与分布最少的节点之差，再除以分布最多的节点数。由于md5散列分布的偶然性，该值可能会有变化，但是在几千个点的散布情况下（服务器数不超过20台），不均衡比例应该不会超过10%。</span>\r\n</div>\r\n<div>\r\n	<div>\r\n		<img alt=\"一种一致性hash的实现及优化 - 120斤的大青蛙 - 老和山小和尚\" src=\"http://img.ph.126.net/eqOJOXPuVHNsscDqwshP_Q==/1134344156160887436.png\" /> \r\n	</div>\r\n<span style=\"font-size:14px;\">&nbsp;失配率是比较前后节点数目变化时，各个小区间的节点出现变化的比例。总共有65536个区间，每个区间进行比较，如果前后区间所代表的节点不一致了，就是失配区间。可以看到，服务器节点越多，服务器增减引起的cache抖动越小，这也是显而易见的。它的极限值应该是1/N，因为增加第N个节点时，新出现了N的分区，它占用了1/N分区，这些分区肯定会失配。</span>\r\n</div>\r\n<div>\r\n	<div>\r\n		<img alt=\"一种一致性hash的实现及优化 - 120斤的大青蛙 - 老和山小和尚\" src=\"http://img.ph.126.net/cuqQOO7cnxjWmHxDskkMOA==/2719611224995303382.png\" /> \r\n	</div>\r\n<span style=\"font-size:14px;\">&nbsp;</span>\r\n</div>\r\n<div>\r\n	s\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">参考文献：</span>\r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">[1].&nbsp;</span><a href=\"http://en.wikipedia.org/wiki/Consistent_hashing\"><span style=\"font-size:14px;\">http://en.wikipedia.org/wiki/Consistent_hashing</span></a> \r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">[2].&nbsp;</span><a href=\"http://blog.csdn.net/sparkliang/article/details/5279393\"><span style=\"font-size:14px;\">http://blog.csdn.net/sparkliang/article/details/5279393</span></a> \r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">[3].&nbsp;</span><a href=\"http://mauro-stettler.blogspot.com/2010/02/pecl-memcache-compatible-consistent.html\"><span style=\"font-size:14px;\">http://mauro-stettler.blogspot.com/2010/02/pecl-memcache-compatible-consistent.html</span></a> \r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">[4].&nbsp;</span><a href=\"http://pecl.php.net/\"><span style=\"font-size:14px;\">http://pecl.php.net/</span></a> \r\n</div>\r\n<div>\r\n	<span style=\"font-size:14px;\">[5].&nbsp;&nbsp;Dynamo: Amazon\'s Highly Available&nbsp;Key-value Store, section 6.2</span>\r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">[6]. &nbsp;Cassandra - A Decentralized Structured Storage System</span>\r\n</p>\r\n<p>\r\n	原文链接：<a href=\"http://yaoweibin2008.blog.163.com/blog/static/110313920118134123440/\">http://yaoweibin2008.blog.163.com/blog/static/110313920118134123440/</a>\r\n</p>',NULL,NULL,'2014-05-27 09:29:35',0,'一种一致性hash的实现及优化  ',0),(131,'admin',12,'<p>\r\n	在Java基本类型对应的包装类型中，最为复杂的就是字符类型和字符串类型了。本篇在讲解字符类型之前，必须要讲解一下Unicode编码方面的知识，否则不好理解源代码。\r\n</p>\r\n<h1>\r\n	<a></a>1、Unicode编码基本概念\r\n</h1>\r\n<p>\r\n	（1）编码字符集\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;编码字符集是一个字符集，它为每一个字符分配一个唯一数字。Unicode 标准的核心是一个编码字符集，字母“A”的编码为0041和字符“€”的编码为20AC。Unicode标准始终使用十六进制数字，而且在书写时在前面加上前缀“U+”，所以“A”的编码书写为“U+0041”。\r\n</p>\r\n<p>\r\n	（2）代码点code point和代码单元\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;代码点是指可用于编码字符集的数字。编码字符集定义一个有效的代码点范围，但是并不一定将字符分配给所有这些代码点。有效的 Unicode代码点范围是 U+0000 至 U+10FFFF\r\n</p>\r\n代码单元可以理解为字符编码的一个基本单元，最常用的代码单元是字节（即8位），但是16位和32位整数也可以用于内部处理。\r\n<p>\r\n	（3）增补字符\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;16 位编码的所有 65，536 个字符并不能完全表示全世界所有正在使用或曾经使用的字符。于是，Unicode 标准已扩展到包含多达 1，112，064 个字符。那些超出原来的16 位限制的字符被称作增补字符。\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;Java的char类型是固定16bits的。代码点在U+0000 — U+FFFF之内到是可以用一个char完整的表示出一个字符。但代码点在U+FFFF之外的，一个char无论如何无法表示一个完整字符。这样用char类型来获取字符串中的那些代码点在U+FFFF之外的字符就会出现问题。\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;因此，Java 平台不仅需要支持增补字符，而且必须使应用程序能够方便地做到这一点。Java Community Process 召集了一个专家组，以期找到一个适当的解决方案。该小组被称为JSR-204专家组，使用Unicode 增补字符支持的Java技术规范请求的编号。\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;增补字符是代码点在 U+10000 至 U+10FFFF 范围之间的字符，也就是那些使用原始的 Unicode 的 16 位设计无法表示的字符。从 U+0000 至 U+FFFF 之间的字符集有时候被称为基本多语言面 （BMP UBasic Multilingual Plane&nbsp;）。因此，每一个 Unicode 字符要么属于 BMP，要么属于增补字符。\r\n</p>\r\n<h1>\r\n	<a></a>2、基于Unicode的具体编码格式\r\n</h1>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	UTF-32&nbsp;即将每一个 Unicode 代码点表示为相同值的32位整数。很明显，它是内部处理最方便的表达方式，但是，如果作为一般字符串表达方式，则要消耗更多的内存。\r\n</p>\r\n<p>\r\n	UTF-16&nbsp;使用一个或两个未分配的16位代码单元的序列对 Unicode 代码点进行编码。假设U是一个代码点，也就是Unicode编码表中一个字符所对应的Unicode值。\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;(1) 如果在BMP级别中，那么16bits(一个代码单元)就足够表示出字符的Unicode值。<br />\r\n&nbsp; &nbsp;(2) 如果U+10FFFF&gt;U&gt;=U+10000，也就是处于增补字符级别中。UTF-16用2个16位来表示出了，并且正好将每个16位都控制在替代区域U+D800-U+DFFF（其中\\uD800-\\uDBFF为高代理项&nbsp;范围，\\uDC00- &nbsp;\\uDFFF为低代理项&nbsp;范围） 中。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	下面来看一下Java是如何处理这些增补字符的。 &nbsp;\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp;分别初始化2个16位无符号的整数 —— W1和W2。其中W1=110110yyyyyyyyyy（0xD800-0xDBFF）,W2 = 110111xxxxxxxxxx(0xDC00-OxDFFF)。然后，将Unicode的高10位分配给W1的低10位，将Unicode&nbsp;的低10位分配给W2的低10位。这样就可以将20bits的代码点U拆成两个16bits的代码单元。而且这两个代码点正好落在替代区域U+D800-U+DFFF中。\r\n</p>\r\n<p>\r\n	举个例子：代码点U+1D56B（使用4个字节表示的代码点）\r\n</p>\r\n<p>\r\n	0x1D56B=&nbsp;0001 1101 01-01 0110 1011\r\n</p>\r\n<p>\r\n	将0x1D56B的高10位0001 1101 01分配给W1的低10位组合成110110&nbsp;0001 1101 01=0xD875<br />\r\n将0x1D56B的低10位01 0110 1011分配给W2的低10位组合成110111&nbsp;01 0110 1011=0xDD6B<br />\r\n这样代码点U+1D56B采用UTF-16编码方式，用2个连续的代码单元U+D875和U+DD68表示出了。\r\n</p>\r\n<p>\r\n	在Charachter类中定义相关的变量如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			public&nbsp;static&nbsp;final&nbsp;char&nbsp;MIN_HIGH_SURROGATE&nbsp;=&nbsp;\'\\uD800\';&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;char&nbsp;MAX_HIGH_SURROGATE&nbsp;=&nbsp;\'\\uDBFF\';&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;char&nbsp;MIN_LOW_SURROGATE&nbsp;&nbsp;=&nbsp;\'\\uDC00\';&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;char&nbsp;MAX_LOW_SURROGATE&nbsp;&nbsp;=&nbsp;\'\\uDFFF\';&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;char&nbsp;MIN_SURROGATE&nbsp;=&nbsp;MIN_HIGH_SURROGATE;&nbsp;//&nbsp;min_surrogate&nbsp;&nbsp;\'\\uD800\'&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;char&nbsp;MAX_SURROGATE&nbsp;=&nbsp;MAX_LOW_SURROGATE;&nbsp;//&nbsp;max_surrogate&nbsp;&nbsp;&nbsp;\'\\uDFFF\'&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;int&nbsp;MIN_SUPPLEMENTARY_CODE_POINT&nbsp;=&nbsp;0x010000;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;int&nbsp;MIN_CODE_POINT&nbsp;=&nbsp;0x000000;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;int&nbsp;MAX_CODE_POINT&nbsp;=&nbsp;0X10FFFF;&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p>\r\n	利用如上定义的一些常量，就可以对传入的代码点或字符进行判断了，如下：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			//&nbsp;最大的数为：10FFFF，也就是说以10开头的一定为Unicode编码&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			public&nbsp;static&nbsp;boolean&nbsp;isValidCodePoint(int&nbsp;codePoint)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Optimized&nbsp;form&nbsp;of:&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codePoint&nbsp;&gt;=&nbsp;MIN_CODE_POINT&nbsp;&amp;&amp;&nbsp;codePoint&nbsp;&lt;=&nbsp;MAX_CODE_POINT&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;plane&nbsp;=&nbsp;codePoint&nbsp;&gt;&gt;&gt;&nbsp;16;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;plane&nbsp;&lt;&nbsp;((MAX_CODE_POINT&nbsp;+&nbsp;1)&nbsp;&gt;&gt;&gt;&nbsp;16);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			public&nbsp;static&nbsp;boolean&nbsp;isBmpCodePoint(int&nbsp;codePoint)&nbsp;{&nbsp;//&nbsp;是否为BMP代码点&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;codePoint&nbsp;&gt;&gt;&gt;&nbsp;16&nbsp;==&nbsp;0;//&nbsp;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Optimized&nbsp;form&nbsp;of:&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;codePoint&nbsp;&gt;=&nbsp;MIN_VALUE&nbsp;&amp;&amp;&nbsp;codePoint&nbsp;&lt;=&nbsp;MAX_VALUE&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;We&nbsp;consistently&nbsp;use&nbsp;logical&nbsp;shift&nbsp;(&gt;&gt;&gt;)&nbsp;to&nbsp;facilitate(促进）&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;additional&nbsp;runtime&nbsp;optimizations.&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			public&nbsp;static&nbsp;boolean&nbsp;isSupplementaryCodePoint(int&nbsp;codePoint)&nbsp;{&nbsp;//&nbsp;是否为增补字符代码点&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;codePoint&nbsp;&gt;=&nbsp;MIN_SUPPLEMENTARY_CODE_POINT&nbsp;&amp;&amp;&nbsp;codePoint&nbsp;&lt;&nbsp;&nbsp;MAX_CODE_POINT&nbsp;+&nbsp;1;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			public&nbsp;static&nbsp;boolean&nbsp;isHighSurrogate(char&nbsp;ch)&nbsp;{//&nbsp;是否为高代理项&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Help&nbsp;VM&nbsp;constant-fold;&nbsp;MAX_HIGH_SURROGATE&nbsp;+&nbsp;1&nbsp;==&nbsp;MIN_LOW_SURROGATE&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ch&nbsp;&gt;=&nbsp;MIN_HIGH_SURROGATE&nbsp;&amp;&amp;&nbsp;ch&nbsp;&lt;&nbsp;(MAX_HIGH_SURROGATE&nbsp;+&nbsp;1);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			public&nbsp;static&nbsp;boolean&nbsp;isLowSurrogate(char&nbsp;ch)&nbsp;{//&nbsp;是否为低代理项&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ch&nbsp;&gt;=&nbsp;MIN_LOW_SURROGATE&nbsp;&amp;&amp;&nbsp;ch&nbsp;&lt;&nbsp;(MAX_LOW_SURROGATE&nbsp;+&nbsp;1);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			public&nbsp;static&nbsp;boolean&nbsp;isSurrogate(char&nbsp;ch)&nbsp;{&nbsp;//&nbsp;是否为代理项&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ch&nbsp;&gt;=&nbsp;MIN_SURROGATE&nbsp;&amp;&amp;&nbsp;ch&nbsp;&lt;&nbsp;(MAX_SURROGATE&nbsp;+&nbsp;1);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p>\r\n	如上只是介绍了一些基本的方法，这种类似的方法还很多，如\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			&lt;span&nbsp;style=\"font-family:&nbsp;\'Courier&nbsp;New\';\"&gt;public&nbsp;static&nbsp;boolean&nbsp;isSurrogatePair(char&nbsp;high,&nbsp;char&nbsp;low)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;isHighSurrogate(high)&nbsp;&amp;&amp;&nbsp;isLowSurrogate(low);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;计算一个字符需要用几个单元块来表示&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;int&nbsp;charCount(int&nbsp;codePoint)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;codePoint&nbsp;&gt;=&nbsp;MIN_SUPPLEMENTARY_CODE_POINT&nbsp;?&nbsp;2&nbsp;:&nbsp;1;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;根据高和低代理项计算增补字符代码点&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;int&nbsp;toCodePoint(char&nbsp;high,&nbsp;char&nbsp;low)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Optimized&nbsp;form&nbsp;of:&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;return&nbsp;((high&nbsp;-&nbsp;MIN_HIGH_SURROGATE)&nbsp;&lt;&lt;&nbsp;10)&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;(low&nbsp;-&nbsp;MIN_LOW_SURROGATE)&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;MIN_SUPPLEMENTARY_CODE_POINT;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;((high&nbsp;&lt;&lt;&nbsp;10)&nbsp;+&nbsp;low)&nbsp;+&nbsp;(MIN_SUPPLEMENTARY_CODE_POINT&nbsp;-&nbsp;(MIN_HIGH_SURROGATE&nbsp;&lt;&lt;&nbsp;10)&nbsp;-&nbsp;MIN_LOW_SURROGATE);//???&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;int&nbsp;codePointAt(CharSequence&nbsp;seq,&nbsp;int&nbsp;index)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;c1&nbsp;=&nbsp;seq.charAt(index++);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isHighSurrogate(c1))&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(index&nbsp;&lt;&nbsp;seq.length())&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;c2&nbsp;=&nbsp;seq.charAt(index);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isLowSurrogate(c2))&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;toCodePoint(c1,&nbsp;c2);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;c1;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&lt;/span&gt;&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p>\r\n	然后使用字符常量对一些字符和代码点进行了判断，如判断是否为合法的高位和低位增补字符、Unicode代码点需要几个单元块来存储、从字符序列中取出增补字符的代码点等。\r\n</p>\r\nUTF-8&nbsp;使用一至四个字节的序列对编码 Unicode 代码点进行编码。U+0000 至 U+007F 使用一个字节编码，U+0080 至 U+07FF 使用两个字节，U+0800 至 U+FFFF 使用三个字节，而 U+10000 至 U+10FFFF 使用四个字节。UTF-8 设计原理为：字节值 0x00 至 0x7F 始终表示代码点 U+0000 至 U+007F（Basic Latin 字符子集，它对应 ASCII 字符集）。这些字节值永远不会表示其他代码点，这一特性使 UTF-8 可以很方便地在软件中将特殊的含义赋予某些 ASCII 字符。\r\n<p>\r\n	&nbsp;以下是Unicode和UTF-8之间的转换关系表：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				U-00000000 - U-0000007F： 0xxxxxxx&nbsp;<br />\r\nU-00000080 - U-000007FF： 110xxxxx 10xxxxxx&nbsp;<br />\r\nU-00000800 - U-0000FFFF： 1110xxxx 10xxxxxx 10xxxxxx&nbsp;<br />\r\nU-00010000 - U-001FFFFF： 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx&nbsp;<br />\r\nU-00200000 - U-03FFFFFF： 111110xx 10xxxxxx 10xxxxxx 10xxxxx x 10xxxxxx&nbsp;<br />\r\nU-04000000 - U-7FFFFFFF： 1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx&nbsp;\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	可以看到：\r\n</p>\r\n<p>\r\n	（1）如果一个字节以10开头，一定不是首字节，需要向前查找。\r\n</p>\r\n<p>\r\n	（2）在一个首字节中，如果以0开头，表示是一个ASCII字符，而开头的连续的1的个数也表示了这个字符的字节数。如1110xxxx表示这个字符由三个字节组成。\r\n</p>\r\n<p>\r\n	下面来看一个使用各种编码对字符进行编码的例子，如下：\r\n</p>\r\n<p>\r\n	<img src=\"http://img.blog.csdn.net/20131231091803890?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWF6aGltYXpo/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\" />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<h1>\r\n	<a></a>3、源代码相关API\r\n</h1>\r\n<p>\r\n	在使用源码相关的API时，需要注意（摘自Java 7 API说明文档）：\r\n</p>\r\n<ul>\r\n	<li>\r\n		The methods that only accept a&nbsp;char&nbsp;value cannot support supplementary characters. They treat&nbsp;char&nbsp;values from the surrogate ranges as undefined characters. For example,&nbsp;Character.isLetter(\'\\uD840\')&nbsp;returns&nbsp;false, even though this specific value if followed by any low-surrogate value in a string would represent a letter.\r\n	</li>\r\n	<li>\r\n		The methods that accept an&nbsp;int&nbsp;value support all Unicode characters, including supplementary characters. For example,&nbsp;Character.isLetter(0x2F81A)&nbsp;returns&nbsp;true&nbsp;because the code point value represents a letter (a CJK ideograph).\r\n	</li>\r\n</ul>\r\n也就是说，在使用以char为参数的一类方法时，这类方法并不支持增补字符。参数为整数，也就是支持代码点值做为参数时是支持增补字符的。\r\n<h1>\r\n	<a></a>4、字符的属性\r\n</h1>\r\n<p>\r\n	我们在编写Java代码的过程中，如果要定义一个Java合法的标识符或者需要将一个字符串转换为数值，那么Java是怎么来确定标识符合法或者字符串合法的呢？这就要涉及到字符属性的概念了。先来看CharacterData类的源代码，如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			abstract&nbsp;class&nbsp;CharacterData&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;getProperties(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;getType(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isWhitespace(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isMirrored(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isJavaIdentifierStart(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isJavaIdentifierPart(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isUnicodeIdentifierStart(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isUnicodeIdentifierPart(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;boolean&nbsp;isIdentifierIgnorable(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;toLowerCase(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;toUpperCase(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;toTitleCase(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;digit(int&nbsp;ch,&nbsp;int&nbsp;radix);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;int&nbsp;getNumericValue(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;byte&nbsp;getDirectionality(int&nbsp;ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//need&nbsp;to&nbsp;implement&nbsp;for&nbsp;JSR204&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;toUpperCaseEx(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;toUpperCase(ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;char[]&nbsp;toUpperCaseCharArray(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;isOtherLowercase(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;isOtherUppercase(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;isOtherAlphabetic(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;isIdeographic(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Character&nbsp;&lt;=&nbsp;0xff&nbsp;(basic&nbsp;latin)&nbsp;is&nbsp;handled&nbsp;by&nbsp;internal&nbsp;fast-path&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;to&nbsp;avoid&nbsp;initializing&nbsp;large&nbsp;tables.&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Note:&nbsp;performance&nbsp;of&nbsp;this&nbsp;\"fast-path\"&nbsp;code&nbsp;may&nbsp;be&nbsp;sub-optimal&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;in&nbsp;negative&nbsp;cases&nbsp;for&nbsp;some&nbsp;accessors&nbsp;due&nbsp;to&nbsp;complicated&nbsp;ranges.&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Should&nbsp;revisit&nbsp;after&nbsp;optimization&nbsp;of&nbsp;table&nbsp;initialization.&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;final&nbsp;CharacterData&nbsp;of(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ch&nbsp;&gt;&gt;&gt;&nbsp;8&nbsp;==&nbsp;0)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;fast-path&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterDataLatin1.instance;&nbsp;//&nbsp;使用Latin编码所能表示的字符&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(ch&nbsp;&gt;&gt;&gt;&nbsp;16)&nbsp;{&nbsp;&nbsp;//plane&nbsp;00-16&nbsp;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case(0):&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterData00.instance;//&nbsp;是由两个字节表示的字符，以下全部为增补字符&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case(1):&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterData01.instance;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case(2):&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterData02.instance;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case(14):&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterData0E.instance;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case(15):&nbsp;&nbsp;&nbsp;//&nbsp;Private&nbsp;Use&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case(16):&nbsp;&nbsp;&nbsp;//&nbsp;Private&nbsp;Use&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterDataPrivateUse.instance;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;CharacterDataUndefined.instance;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			}&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p>\r\n	如上是一个抽象类，这个抽象类中定义了许多判断字符属性的抽象方法，这些方法的具体实现都在Character0X类中，这些类都继承了这个抽象类。其实Character类中有许多对应的方法，并不是Character类继承了这个抽象类，而是通过调用抽象类的具体实现类方法来实现字符属性的判断。我们并不关心这个字符由哪个具体类中的方法来判断，如果以后还增加了一些增补字符，那么只需要实现抽象类并且稍加修改of()方法即可。这就是使用策略模式的好处。\r\n</p>\r\n<p>\r\n	由于抽象类中定义的抽象方法都不是公开的，所以我们只好利用Character类中提供的方法进行字符属性的判断，如下：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			System.out.println(Character.getDirectionality(\'(\'));//13&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.getDirectionality(\'{\'));//13&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isMirrored(\'[\'));//true&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isMirrored(\']\'));//true&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isMirrored(\'c\'));//false&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isMirrored(\'&amp;\'));//false&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.getNumericValue(\'z\'));//35&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.getNumericValue(\'中\'));//-1&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.toUpperCase(\'A\'));//A&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.digit(\'c\',&nbsp;16));//12&nbsp;c在十六进制中代表12&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierStart(\'$\'));//true&nbsp;可以做为Java一个标识符的开头&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierStart(\'&amp;\'));//false&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierStart(\'4\'));//true&nbsp;关键字不允许以数字开头&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierStart(\'解\'));//true&nbsp;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierPart(\'&nbsp;\'));//false&nbsp;可以看到一个Java标识符的定义是不允许有空格的&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierPart(\'4\'));//true&nbsp;关键字不允许以数字开头&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			System.out.println(Character.isJavaIdentifierPart(\'解\'));//true&nbsp;&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<br />\r\n那么Java是怎么判断这些字符的属性的呢？其实每一个Java字符都用一个32位，也就是4个字节来表示这个属性。具体的32位中的各个位所代表的涵义如下：\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			1&nbsp;bit&nbsp;&nbsp;&nbsp;mirrored&nbsp;property&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			4&nbsp;bits&nbsp;&nbsp;directionality&nbsp;property&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			9&nbsp;bits&nbsp;&nbsp;signed&nbsp;offset&nbsp;used&nbsp;for&nbsp;converting&nbsp;case（有符号偏移，用于转换）&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			1&nbsp;bit&nbsp;&nbsp;&nbsp;if&nbsp;1,&nbsp;adding&nbsp;the&nbsp;signed&nbsp;offset&nbsp;converts&nbsp;the&nbsp;character&nbsp;to&nbsp;lowercase&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			1&nbsp;bit&nbsp;&nbsp;&nbsp;if&nbsp;1,&nbsp;subtracting（减去）&nbsp;the&nbsp;signed&nbsp;offset&nbsp;converts&nbsp;the&nbsp;character&nbsp;to&nbsp;uppercase&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			1&nbsp;bit&nbsp;&nbsp;&nbsp;if&nbsp;1,&nbsp;this&nbsp;character&nbsp;has&nbsp;a&nbsp;titlecase&nbsp;equivalent&nbsp;(possibly&nbsp;itself)&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			3&nbsp;bits&nbsp;&nbsp;0&nbsp;&nbsp;may&nbsp;not&nbsp;be&nbsp;part&nbsp;of&nbsp;an&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;ignorable&nbsp;control;&nbsp;may&nbsp;continue&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;or&nbsp;Java&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;may&nbsp;continue&nbsp;a&nbsp;Java&nbsp;identifier&nbsp;but&nbsp;not&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;(unused)&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;may&nbsp;continue&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;or&nbsp;Java&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;is&nbsp;a&nbsp;Java&nbsp;whitespace&nbsp;character&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;may&nbsp;start&nbsp;or&nbsp;continue&nbsp;a&nbsp;Java&nbsp;identifier;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;may&nbsp;continue&nbsp;but&nbsp;not&nbsp;start&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;(underscores)&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;may&nbsp;start&nbsp;or&nbsp;continue&nbsp;a&nbsp;Java&nbsp;identifier&nbsp;but&nbsp;not&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;($)&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;may&nbsp;start&nbsp;or&nbsp;continue&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;or&nbsp;Java&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thus:（因此）&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5,&nbsp;6,&nbsp;7&nbsp;may&nbsp;start&nbsp;a&nbsp;Java&nbsp;identifier（Java标识符）&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;5,&nbsp;6,&nbsp;7&nbsp;may&nbsp;continue&nbsp;a&nbsp;Java&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;may&nbsp;start&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1,&nbsp;3,&nbsp;5,&nbsp;7&nbsp;may&nbsp;continue&nbsp;a&nbsp;Unicode&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;is&nbsp;ignorable&nbsp;within&nbsp;an&nbsp;identifier&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;is&nbsp;Java&nbsp;whitespace&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			2&nbsp;bits&nbsp;&nbsp;0&nbsp;&nbsp;this&nbsp;character&nbsp;has&nbsp;no&nbsp;numeric&nbsp;property&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;adding&nbsp;the&nbsp;digit&nbsp;offset&nbsp;to&nbsp;the&nbsp;character&nbsp;code&nbsp;and&nbsp;then&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;masking&nbsp;with&nbsp;0x1F&nbsp;will&nbsp;produce&nbsp;the&nbsp;desired&nbsp;numeric&nbsp;value&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;this&nbsp;character&nbsp;has&nbsp;a&nbsp;\"strange\"&nbsp;numeric&nbsp;value&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;a&nbsp;Java&nbsp;supradecimal&nbsp;digit:&nbsp;adding&nbsp;the&nbsp;digit&nbsp;offset&nbsp;to&nbsp;the&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;character&nbsp;code,&nbsp;then&nbsp;masking&nbsp;with&nbsp;0x1F,&nbsp;then&nbsp;adding&nbsp;10&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;produce&nbsp;the&nbsp;desired&nbsp;numeric&nbsp;value&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			5&nbsp;bits&nbsp;&nbsp;digit&nbsp;offset&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			5&nbsp;bits&nbsp;&nbsp;character&nbsp;type&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n当我们传入一个\'0\'字符时，实际上通过\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			static&nbsp;final&nbsp;CharacterData&nbsp;of(int&nbsp;ch)&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p>\r\n	方法判断后，最终会调用CharacterDataLatin1类中对应的方法去处理。Latin1中的所有字符都会在CharacterDataLatin1类中进行处理，而对于其他的字符，可能会在不同的CharacterDataXX.java类中进行处理，如可以用两个字节表示的字符用CharacterData01类处理，而一些增补字符会用其他的一些类进行处理。\r\n</p>\r\n<p>\r\n	读者如果不是很理解的话，可以查看一下Unicode字符编码分布表，你就会明白CharacterData这个方法了。\r\n</p>\r\n<p>\r\n	具体来看一下ChatacterDataLation1的实现代码：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			static&nbsp;final&nbsp;int&nbsp;A[]&nbsp;=&nbsp;new&nbsp;int[256];//&nbsp;2^8=256&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;static&nbsp;final&nbsp;String&nbsp;A_DATA&nbsp;=&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\"\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\"+&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\"\\u100F\\u4800\\u100F\\u4800\\u100F\\u5800\\u400F\\u5000\\u400F\\u5800\\u400F\\u6000\\u400F\"+&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;省略....&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;\"\\u061D\\u7002\";&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;//&nbsp;THIS&nbsp;CODE&nbsp;WAS&nbsp;AUTOMATICALLY&nbsp;CREATED&nbsp;BY&nbsp;GenerateCharacter:&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char[]&nbsp;data&nbsp;=&nbsp;A_DATA.toCharArray();&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;(data.length&nbsp;==&nbsp;(256&nbsp;*&nbsp;2));&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;=&nbsp;0,&nbsp;j&nbsp;=&nbsp;0;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(i&nbsp;&lt;&nbsp;(256&nbsp;*&nbsp;2))&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;entry&nbsp;=&nbsp;data[i++]&nbsp;&lt;&lt;&nbsp;16;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A[j++]&nbsp;=&nbsp;entry&nbsp;|&nbsp;data[i++];&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n首先还需要说一下Latin1编码。Latin1是ISO-8859-1的别名，有些环境下写作Latin-1。<br />\r\n&nbsp;ISO-8859-1编码是单字节编码，向下兼容ASCII，其编码范围是0x00-0xFF，0x00-0x7F之间完全和ASCII一致，0x80-0x9F之间是控制字符，0xA0-0xFF之间是文字符号。<br />\r\nISO-8859-1收录的字符除ASCII收录的字符外，还包括西欧语言、希腊语、泰语、阿拉伯语、希伯来语对应的文字符号。欧元符号出现的比较晚，没有被收录在ISO-8859-1当中。<br />\r\n因为ISO-8859-1编码范围使用了单字节内的所有空间，在支持ISO-8859-1的系统中传输和存储其他任何编码的字节流都不会被抛弃。换言之，把其他任何编码的字节流当作ISO-8859-1编码看待都没有问题。这是个很重要的特性，MySQL数据库默认编码是Latin1就是利用了这个特性。ASCII编码是一个7位的容器，ISO-8859-1编码是一个8位的容器。<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;回到我们的源代码中，可以看到最终A[]中存储了256个整数，就是使用有4个字节，32bits来存储的数，但是不能将这256个数当作一个整数来看待，没有任何的意义，需要读取32个比特位中特定的位的值，因为他代表着字符的属性。举个例子：ASCII表中的49代表\'0\'字符，获取这个字符对应的属性值为A[49]，转换后的二进制值如下：<br />\r\n&nbsp; 0- 0011-000 &nbsp; 000000-0-0 &nbsp; 0-011-01-10 &nbsp; 000-01001<br />\r\n1位：0表示没有mirrored property,如果是\'(\'，\'[\'，这些字符，这个位置的值为1<br />\r\n4位：3<br />\r\n9位：无偏移<br />\r\n1位：无小写<br />\r\n1位：无大写<br />\r\n1位：无首字母大写属性<br />\r\n3位：3 表示是一个合法的Unicode标识符或Java标识符<br />\r\n2位：1 有数字的属性<br />\r\n5位：数字移位为0<br />\r\n5位：字符类型代表的值为9<br />\r\n<p>\r\n	既然能够得到每个字符的代表属性的整数，接下来当然就是编写方法取出特定二进制位上的值了。如要查看一个字符的类型，而这个类型由二进制位的最后5位表示，取出后5位的方法如下：\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			[java]&nbsp;<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">view plain</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">copy</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">print</a><a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001#\">?</a><a href=\"https://code.csdn.net/snippets/135883\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/CODE_ico.png\" width=\"12\" height=\"12\" alt=\"在CODE上查看代码片\" /></a><a href=\"https://code.csdn.net/snippets/135883/fork\" target=\"_blank\"><img src=\"https://code.csdn.net/assets/ico_fork.svg\" width=\"12\" height=\"12\" alt=\"派生到我的代码片\" /></a> \r\n			<div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			int&nbsp;getPropertiesEx(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;offset&nbsp;=&nbsp;(char)ch;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;props&nbsp;=&nbsp;B[offset];&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;props;&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;getType(int&nbsp;ch)&nbsp;{&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;props&nbsp;=&nbsp;getProperties(ch);&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(props&nbsp;&amp;&nbsp;0x1F);//&nbsp;0001&nbsp;1111取后5bits代表了character&nbsp;type&nbsp;&nbsp;\r\n		</li>\r\n		<li>\r\n			&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p>\r\n	当然还有许多的方法，有兴趣的读者可以自己去看一下。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	原文链接:<a href=\"http://blog.csdn.net/mazhimazh/article/details/17708001\">http://blog.csdn.net/mazhimazh/article/details/17708001</a>\r\n</p>',NULL,NULL,'2014-05-27 16:20:10',0,'Java字符类型',0),(132,'admin',4,'<p>\r\n	我不知道从何时起，速度（效率）这个词在软件开发领域安家落户了，以前可从来没有这么流行过。然而我非常确定的一点是如果你提到运动却没有提到三大定律的话，艾萨克·牛顿先生肯定会不高兴。\r\n</p>\r\n<h3>\r\n	第一定律\r\n</h3>\r\n<blockquote>\r\n	在一个惯性参考系里面来看的话，除非受到外力的作用，否则物体会保持静止或者匀速运动。\r\n</blockquote>\r\n<p>\r\n	外力简直是太多了：\r\n</p>\r\n<ul>\r\n	<li>\r\n		开发人员在解决BUG\r\n	</li>\r\n	<li>\r\n		开发人员在增加新的特性\r\n	</li>\r\n	<li>\r\n		开发人员在产生新的BUG\r\n	</li>\r\n	<li>\r\n		业务方要求降低操作成本\r\n	</li>\r\n	<li>\r\n		第三方竞争改变了市场格局\r\n	</li>\r\n	<li>\r\n		用户在改变\r\n	</li>\r\n	<li>\r\n		未完待续\r\n	</li>\r\n</ul>\r\n<p>\r\n	然而一个团队或者产品要么是黄了（保持静止状态）要么是在进行匀速运动（每天都生产固定的利润或者消耗一定的预算）。\r\n</p>\r\n<p>\r\n	现在我敢说，说起团队的速度（效率）是违背第一定律的，因为要维持团队的效率的话需要做什么？什么都不用做！\r\n</p>\r\n<p>\r\n	好吧，这会让很多主管感觉反感，”我还是希望我的开发人员做点事情的“。\r\n</p>\r\n<p>\r\n	那么我们需要看一下下一条定律。\r\n</p>\r\n<h3>\r\n	第二定律\r\n</h3>\r\n<blockquote>\r\n	F = ma。作用于物体的力的矢量等于物体的质量M乘以它的加速度矢量a。\r\n</blockquote>\r\n<p>\r\n	加速度是改变速度的能力。F在这里可以看作一个常量，因为说实话，你的团队的规模是固定的，除非你是在Google。你的时间也几乎是固定的，一天24个小时，除非你住在火星上，它可能会长点，也就是 24.622962小时吧。好吧，我们完蛋了。。只剩一个变量是可以修改了。根据第二定律，对于一个给定的F，加速度和质量是成反比的。质量是一个负担，它和加速度是相背的。\r\n</p>\r\n<p>\r\n	下面列出了一些提升质量的方法：\r\n</p>\r\n<ul>\r\n	<li>\r\n		想拥有的特性太多了\r\n	</li>\r\n	<li>\r\n		太多技术债要还了\r\n	</li>\r\n	<li>\r\n		太多的抽象，一层又一层，ORM，DAO，服务，控制器，视图。从数据库捞出一个简单的{“userid”: 123}就需要这么多的东西。哦，我忘了提了，还有SQL，NoSQl....\r\n	</li>\r\n	<li>\r\n		太多的进程\r\n	</li>\r\n	<li>\r\n		太多的模式，企业级的策略工厂构造器适配器监听器拦截器。。\r\n	</li>\r\n	<li>\r\n		沟通的流程太长了，业务方——项目经理——业务分析——团队主管——开发人员（你还可以加入更多的角色）\r\n	</li>\r\n	<li>\r\n		太多的框架，java EE ,Spring, Hibernate, Struts, Bootstrap, jQuery, Augular.js，Ember.js，你敢看下Java EE吗？在Java EE 7下有39个Java规范请求!\r\n	</li>\r\n	<li>\r\n		太多的服务器。WEB服务器，关系型数据库，NoSQL服务器，缓存服务器，消息队列，第三方集成服务器。\r\n	</li>\r\n</ul>\r\n<h3>\r\n	第三定律\r\n</h3>\r\n<blockquote>\r\n	作用力和反作用力总是同时存在的：或者说两个物体间的相互作用力总是相等的，并且作用于相反方向。\r\n</blockquote>\r\n<p>\r\n	A：“我们能删了XYZ特性吗？这样的话代码会简单很多” R：“还是不要了，这是投资人ABC想要的” A：“好吧，没关系”\r\n</p>\r\n<p>\r\n	A：“我们能改成git吗？” R：“别啊，我们最喜欢这些老古董了” A：”那下次再说吧“\r\n</p>\r\n<p>\r\n	A：“可以升级下Java 1.4吗” R：“生产环境还有很多在服务器在用呢” A：“好吧，那我还是坚持手动进行类型转化吧”\r\n</p>\r\n<p>\r\n	我还想多码点字，不过现在有一股反作用力在阻止我这么做。。。那今天就先到这吧。\r\n</p>\r\n<p>\r\n	感谢你浪费了这么长时间来听我啰嗦了这么多。\r\n</p>\r\n<h3>\r\n	引用\r\n</h3>\r\n<div>\r\n	* http://en.wikipedia.org/wiki/Velocity_(software_development)\r\n* http://en.wikipedia.org/wiki/Newton\'s_laws_of_motion\r\n</div>\r\n<p>\r\n	原创文章转载请注明出处：<a href=\"http://it.deepinmind.com/%E5%85%B6%E5%AE%83/2014/05/27/software-development-and-newtons-laws.html\" target=\"_blank\">软件开发与牛顿三大定律</a> \r\n</p>\r\n<p>\r\n	<a href=\"http://sgdev-blog.blogspot.sg/2014/05/software-development-and-newtons-laws.html\" target=\"_blank\">英文原文链接</a> \r\n</p>',NULL,NULL,'2014-05-27 21:16:32',0,'软件开发与牛顿三大定律',0),(133,'admin',12,'<h3>\r\n	<span style=\"font-size:14px;\">Java 线程面试问题</span> \r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\">在任何Java面试当中多线程和并发方面的问题都是必不可少的一部分。如果你想获得任何股票投资银行的前台资讯职位，那么你应该准备很多关于多线程的问题。在投资银行业务中多线程和并发是一个非常受欢迎的话题，特别是电子交易发展方面相关的。他们会问面试者很多令人混淆的Java线程问题。面试官只是想确信面试者有足够的Java线程与并发方面的知识，因为候选人中有很多只浮于表面。用于直接面向市场交易的高容量和低延时的电子交易系统在本质上是并发的。下面这些是我在不同时间不同地点喜欢问的Java线程问题。我没有提供答案，但只要可能我会给你线索，有些时候这些线索足够回答问题。现在引用Java5并发包关于并发工具和并发集合的问题正在增多。那些问题中ThreadLocal、Blocking Queue、Counting Semaphore和ConcurrentHashMap比较流行。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"></span> \r\n</p>\r\n<h3>\r\n	<span style=\"font-size:14px;\">15个Java多线程面试题及回答</span> \r\n</h3>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>1)现在有T1、T2、T3三个线程，你怎样保证T2在T1执行完后执行，T3在T2执行完后执行？</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp; &nbsp; 这个线程问题通常会在第一轮或电话面试阶段被问到，目的是检测你对”join”方法是否熟悉。这个多线程问题比较简单，可以用join方法实现。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2)在Java中Lock接口比synchronized块的优势是什么？你需要实现一个高效的缓存，它允许多个用户读，但只允许一个用户写，以此来保持它的完整性，你会怎样去实现它？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">&nbsp; &nbsp;lock接口在多线程和并发编程中最大的优势是它们为读和写分别提供了锁，它能满足你写像ConcurrentHashMap这样的高性能数据结构和有条件的阻塞。Java线程面试的问题越来越会根据面试者的回答来</span><span style=\"font-size:14px;line-height:1.5;\">提问。我强烈建议在你去参加多线程的面试之前认真读一下Locks，因为当前其大量用于构建电子交易终统的客户端缓存和交易连接空间。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;line-height:1.5;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3)在java中wait和sleep方法的不同？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">通常会在电话面试中经常被问到的Java线程面试问题。最大的不同是在等待时wait会释放锁，而sleep一直持有锁。Wait通常被用于线程间交互，sleep通常被用于暂停执行。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">4）用Java实现阻塞队列。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是一个相对艰难的多线程面试问题，它能达到很多的目的。第一，它可以检测侯选者是否能实际的用Java线程写程序；第二，可以检测侯选者对并发场景的理解，并且你可以根据这个问很多问题。如果他用wait()和notify()方法来实现阻塞队列，你可以要求他用最新的Java 5中的并发类来再写一次。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">5）用Java写代码来解决生产者——消费者问题。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">与上面的问题很类似，但这个问题更经典，有些时候面试都会问下面的问题。在Java中怎么解决生产者——消费者问题，当然有很多解决方法，我已经分享了一种用阻塞队列实现的方法。有些时候他们甚至会问怎么实现哲学家进餐问题。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">6）用Java编程一个会导致死锁的程序，你将怎么解决？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是我最喜欢的Java线程面试问题，因为即使死锁问题在写多线程并发程序时非常普遍，但是很多侯选者并不能写deadlock free code（无死锁代码？），他们很挣扎。只要告诉他们，你有N个资源和N个线程，并且你需要所有的资源来完成一个操作。为了简单这里的n可以替换为2，越大的数据会使问题看起来更复杂。通过避免Java中的死锁来得到关于死锁的更多信息。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">7)&nbsp;什么是原子操作，Java中的原子操作是什么？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">非常简单的java线程面试问题，接下来的问题是你需要同步一个原子操作。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">8)&nbsp;Java中的volatile关键是什么作用？怎样使用它？在Java中它跟synchronized方法有什么不同？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">自从Java 5和Java内存模型改变以后，基于volatile关键字的线程问题越来越流行。应该准备好回答关于volatile变量怎样在并发环境中确保可见性、顺序性和一致性。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">9)&nbsp;什么是竞争条件？你怎样发现和解决竞争？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是一道出现在多线程面试的高级阶段的问题。大多数的面试官会问最近你遇到的竞争条件，以及你是怎么解决的。有些时间他们会写简单的代码，然后让你检测出代码的竞争条件。可以参考我之前发布的关于Java竞争条件的文章。在我看来这是最好的java线程面试问题之一，它可以确切的检测候选者解决竞争条件的经验，or&nbsp;writing code which is free of data race or any other&nbsp;race condition。关于这方面最好的书是《Concurrency practices in Java》。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">10)&nbsp;你将如何使用thread dump？你将如何分析Thread dump？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在UNIX中你可以使用kill -3，然后thread dump将会打印日志，在windows中你可以使用”CTRL+Break”。非常简单和专业的线程面试问题，但是如果他问你怎样分析它，就会很棘手。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">11)&nbsp;为什么我们调用start()方法时会执行run()方法，为什么我们不能直接调用run()方法？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是另一个非常经典的java多线程面试问题。这也是我刚开始写线程程序时候的困惑。现在这个问题通常在电话面试或者是在初中级Java面试的第一轮被问到。这个问题的回答应该是这样的，当你调用start()方法时你将创建新的线程，并且执行在run()方法里的代码。但是如果你直接调用run()方法，它不会创建新的线程也不会执行调用线程的代码。阅读我之前写的《start与run方法的区别》这篇文章来获得更多信息。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">12)&nbsp;Java中你怎样唤醒一个阻塞的线程？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是个关于线程和阻塞的棘手的问题，它有很多解决方法。如果线程遇到了IO阻塞，我并且不认为有一种方法可以中止线程。如果线程因为调用wait()、sleep()、或者join()方法而导致的阻塞，你可以中断线程，并且通过抛出InterruptedException来唤醒它。我之前写的《How to deal with blocking methods in java》有很多关于处理线程阻塞的信息。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">13)在Java中CycliBarriar和CountdownLatch有什么区别？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这个线程问题主要用来检测你是否熟悉JDK5中的并发包。这两个的区别是CyclicBarrier可以重复使用已经通过的障碍，而CountdownLatch不能重复使用。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">14)&nbsp;什么是不可变对象，它对写并发应用有什么帮助？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">另一个多线程经典面试问题，并不直接跟线程有关，但间接帮助很多。这个java面试问题可以变的非常棘手，如果他要求你写一个不可变对象，或者问你为什么String是不可变的。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">15)&nbsp;你在多线程环境中遇到的共同的问题是什么？你是怎么解决它的？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">多线程和并发程序中常遇到的有Memory-interface、竞争条件、死锁、活锁和饥饿。问题是没有止境的，如果你弄错了，将很难发现和调试。这是大多数基于面试的，而不是基于实际应用的Java线程问题。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">补充的其它几个问题：</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1)&nbsp;在java中绿色线程和本地线程区别？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2)&nbsp;线程与进程的区别？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3)&nbsp;什么是多线程中的上下文切换？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">4)死锁与活锁的区别，死锁与馅饼的区别？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">5)&nbsp;Java中用到的线程调度算法是什么？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">6)&nbsp;在Java中什么是线程调度？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">7)&nbsp;在线程中你怎么处理不可捕捉异常？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">8)&nbsp;什么是线程组，为什么在Java中不推荐使用？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">9)&nbsp;为什么使用Executor框架比使用应用创建和管理线程好？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">10)&nbsp;在Java中Executor和Executors的区别？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">11)&nbsp;如何在Windows和Linux上查找哪个线程使用的CPU时间最长？</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">（全文完）如果您喜欢此文请点赞，分享，评论。</span> \r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">原创文章转载请注明出处：</span><a href=\"http://ifeve.com/15-java-faq/\"><span style=\"font-size:14px;\">15个顶级Java多线程面试题及回答</span></a> \r\n	</li>\r\n</ul>',NULL,'2014-05-29 09:09:03','2014-05-29 09:03:32',0,'15个顶级Java多线程面试题及回答',0),(134,'admin',17,'<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"https://blog.codecentric.de/en/2012/08/useful-jvm-flags-part-5-young-generation-garbage-collection/\" target=\"_blank\">原文链接</a>&nbsp;&nbsp;作者： PATRICK PESCHLOW ；译者：严亮\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	本部分，我们将关注堆(heap) 中一个主要区域，新生代(young generation)。首先我们会讨论为什么调整新生代的参数会对应用的性能如此重要，接着我们将学习新生代相关的JVM参数。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	单纯从JVM的功能考虑，并不需要新生代，完全可以针对整个堆进行操作。新生代存在的唯一理由是优化垃圾回收(GC)的性能。更具体说，把堆划分为新生代和老年代有2个好处：简化了新对象的分配(只在新生代分配内存),可以更有效的清除不再需要的对象(即死对象)(新生代和老年代使用不同的GC算法)\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	通过广泛研究面向对象实现的应用，发现一个共同特点：很多对象的生存时间都很短。同时研究发现，新生对象很少引用生存时间长的对象。结合这2个特点，很明显 GC 会频繁访问新生对象，例如在堆中一个单独的区域，称之为新生代。在新生代中，GC可以快速标记回收”死对象”，而不需要扫描整个Heap中的存活一段时间的”老对象”。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<span id=\"more-12538\"></span>\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	SUN/Oracle 的HotSpot JVM 又把新生代进一步划分为3个区域：一个相对大点的区域，称为”伊甸园区(Eden)”；两个相对小点的区域称为”From 幸存区(survivor)”和”To 幸存区(survivor)”。按照规定,新对象会首先分配在 Eden 中(如果新对象过大，会直接分配在老年代中)。在GC中，Eden 中的对象会被移动到survivor中，直至对象满足一定的年纪(定义为熬过GC的次数),会被移动到老年代。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	基于大多数新生对象都会在GC中被收回的假设。新生代的GC 使用复制算法。在GC前To 幸存区(survivor)保持清空,对象保存在 Eden 和 From 幸存区(survivor)中，GC运行时,Eden中的幸存对象被复制到 To 幸存区(survivor)。针对 From 幸存区(survivor)中的幸存对象，会考虑对象年龄,如果年龄没达到阀值(tenuring threshold)，对象会被复制到To 幸存区(survivor)。如果达到阀值对象被复制到老年代。复制阶段完成后，Eden 和From 幸存区中只保存死对象，可以视为清空。如果在复制过程中To 幸存区被填满了，剩余的对象会被复制到老年代中。最后 From 幸存区和 To幸存区会调换下名字，在下次GC时，To 幸存区会成为From 幸存区。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<img src=\"https://blog.codecentric.de/files/2011/08/young_gc.png\" alt=\"https://blog.codecentric.de/files/2011/08/young_gc.png\" style=\"height:auto;width:auto;\" /><br />\r\n<a href=\"https://blog.codecentric.de/files/2011/08/young_gc.png\" target=\"_blank\">https://blog.codecentric.de/files/2011/08/young_gc.png</a><br />\r\n上图演示GC过程，黄色表示死对象，绿色表示剩余空间，红色表示幸存对象\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	总结一下，对象一般出生在Eden区，年轻代GC过程中，对象在2个幸存区之间移动，如果对象存活到适当的年龄，会被移动到老年代。当对象在老年代死亡时，就需要更高级别的GC，更重量级的GC算法(复制算法不适用于老年代，因为没有多余的空间用于复制)\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	现在应该能理解为什么新生代大小非常重要了(译者,有另外一种说法：新生代大小并不重要，影响GC的因素主要是幸存对象的数量)，如果新生代过小，会导致新生对象很快就晋升到老年代中，在老年代中对象很难被回收。如果新生代过大，会发生过多的复制过程。我们需要找到一个合适大小，不幸的是，要想获得一个合适的大小，只能通过不断的测试调优。这就需要JVM参数了\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>-XX:NewSize and -XX:MaxNewSize</strong><br />\r\n就像可以通过参数(-Xms and -Xmx) 指定堆大小一样，可以通过参数指定新生代大小。设置 XX:MaxNewSize 参数时，应该考虑到新生代只是整个堆的一部分，新生代设置的越大，老年代区域就会减少。一般不允许新生代比老年代还大，因为要考虑GC时最坏情况，所有对象都晋升到老年代。(译者:会发生OOM错误) -XX:MaxNewSize 最大可以设置为-Xmx/2 .\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	考虑性能，一般会通过参数 -XX:NewSize 设置新生代初始大小。如果知道新生代初始分配的对象大小(经过监控) ，这样设置会有帮助，可以节省新生代自动扩展的消耗。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>-XX:NewRatio</strong><br />\r\n可以设置新生代和老年代的相对大小。这种方式的优点是新生代大小会随着整个堆大小动态扩展。参数 -XX:NewRatio 设置老年代与新生代的比例。例如 -XX:NewRatio=3 指定老年代/新生代为3/1. 老年代占堆大小的 3/4 ，新生代占 1/4 .\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	如果针对新生代,同时定义绝对值和相对值,绝对值将起作用。下面例子：<br />\r\n$ java -XX:NewSize=32m -XX:MaxNewSize=512m -XX:NewRatio=3 MyApp\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	以上设置, JVM 会尝试为新生代分配四分之一的堆大小，但不会小于32MB或大于521MB\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	在设置新生代大小问题上，使用绝对值还是相对值，不存在通用准则 。如果了解应用的内存使用情况,设置固定大小的堆和新生代更有利，当然也可以设置相对值。如果对应用的内存使用一无所知,正确的做法是不要设置任何参数，如果应用运行良好。很好，我们不用做任何额外动作.如果遇到性能或OutOfMemoryErrors, 在调优之前，首先需要进行一系列有目的的监控测试，缩小问题的根源。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>-XX:SurvivorRatio</strong><br />\r\n参数 -XX:SurvivorRatio 与 -XX:NewRatio 类似，作用于新生代内部区域。-XX:SurvivorRatio 指定伊甸园区(Eden)与幸存区大小比例. 例如, -XX:SurvivorRatio=10 表示伊甸园区(Eden)是 幸存区To 大小的10倍(也是幸存区From的10倍).所以,伊甸园区(Eden)占新生代大小的10/12, 幸存区From和幸存区To 每个占新生代的1/12 .注意,两个幸存区永远是一样大的..\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	设定幸存区大小有什么作用? 假设幸存区相对伊甸园区(Eden)太小, 相应新生对象的伊甸园区(Eden)永远很大空间, 我们当然希望,如果这些对象在GC时全部被回收,伊甸园区(Eden)被清空,一切正常.然而,如果有一部分对象在GC中幸存下来, 幸存区只有很少空间容纳这些对象.结果大部分幸存对象在一次GC后，就会被转移到老年代 ,这并不是我们希望的.考虑相反情况, 假设幸存区相对伊甸园区(Eden)太大,当然有足够的空间，容纳GC后的幸存对象. 但是过小的伊甸园区(Eden),意味着空间将越快耗尽，增加新生代GC次数，这是不可接受的。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	总之,我们希望最小化短命对象晋升到老年代的数量，同时也希望最小化新生代GC 的次数和持续时间.我们需要找到针对当前应用的折中方案, 寻找适合方案的起点是 了解当前应用中对象的年龄分布情况。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>-XX:+PrintTenuringDistribution</strong><br />\r\n参数 -XX:+PrintTenuringDistribution 指定JVM 在每次新生代GC时，输出幸存区中对象的年龄分布。例如:<br />\r\nDesired survivor size 75497472 bytes, new threshold 15 (max 15)<br />\r\n- age 1: 19321624 bytes, 19321624 total<br />\r\n- age 2: 79376 bytes, 19401000 total<br />\r\n- age 3: 2904256 bytes, 22305256 total\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	第一行说明幸存区To大小为 75 MB. 也有关于老年代阀值(tenuring threshold)的信息, 老年代阀值，意思是对象从新生代移动到老年代之前，经过几次GC(即, 对象晋升前的最大年龄). 上例中,老年代阀值为15,最大也是15.\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	之后行表示，对于小于老年代阀值的每一个对象年龄,本年龄中对象所占字节 (如果当前年龄没有对象,这一行会忽略). 上例中,一次 GC 后幸存对象大约 19 MB, 两次GC 后幸存对象大约79 KB , 三次GC 后幸存对象大约 3 MB .每行结尾，显示直到本年龄全部对象大小.所以,最后一行的 total 表示幸存区To 总共被占用22 MB . 幸存区To 总大小为 75 MB ,当前老年代阀值为15，可以断定在本次GC中，没有对象会移动到老年代。现在假设下一次GC 输出为：\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	Desired survivor size 75497472 bytes, new threshold 2 (max 15)<br />\r\n- age 1: 68407384 bytes, 68407384 total<br />\r\n- age 2: 12494576 bytes, 80901960 total<br />\r\n- age 3: 79376 bytes, 80981336 total<br />\r\n- age 4: 2904256 bytes, 83885592 total\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	对比前一次老年代分布。明显的,年龄2和年龄3 的对象还保持在幸存区中，因为我们看到年龄3和4的对象大小与前一次年龄2和3的相同。同时发现幸存区中,有一部分对象已经被回收,因为本次年龄2的对象大小为 12MB ，而前一次年龄1的对象大小为 19 MB。最后可以看到最近的GC中，有68 MB 新对象，从伊甸园区移动到幸存区。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	注意,本次GC 幸存区占用总大小 84 MB -大于75 MB. 结果,JVM 把老年代阀值从15降低到2，在下次GC时，一部分对象会强制离开幸存区，这些对象可能会被回收(如果他们刚好死亡)或移动到老年代。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>-XX:InitialTenuringThreshold, -XX:MaxTenuringThreshold and -XX:TargetSurvivorRatio</strong><br />\r\n参数 -XX:+PrintTenuringDistribution 输出中的部分值可以通过其它参数控制。通过 -XX:InitialTenuringThreshold 和 -XX:MaxTenuringThreshold 可以设定老年代阀值的初始值和最大值。另外,可以通过参数 -XX:TargetSurvivorRatio 设定幸存区的目标使用率.例如 , -XX:MaxTenuringThreshold=10 -XX:TargetSurvivorRatio=90 设定老年代阀值的上限为10,幸存区空间目标使用率为90%。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	有多种方式,设置新生代行为，没有通用准则。我们必须清楚以下2中情况：<br />\r\n1 如果从年龄分布中发现，有很多对象的年龄持续增长，在到达老年代阀值之前。这表示 -XX:MaxTenuringThreshold 设置过大<br />\r\n2 如果 -XX:MaxTenuringThreshold 的值大于1，但是很多对象年龄从未大于1.应该看下幸存区的目标使用率。如果幸存区使用率从未到达，这表示对象都被GC回收，这正是我们想要的。 如果幸存区使用率经常达到，有些年龄超过1的对象被移动到老年代中。这种情况，可以尝试调整幸存区大小或目标使用率。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<strong>-XX:+NeverTenure and -XX:+AlwaysTenure</strong><br />\r\n最后,我们介绍2个颇为少见的参数,对应2种极端的新生代GC情况.设置参数 -XX:+NeverTenure , 对象永远不会晋升到老年代.当我们确定不需要老年代时，可以这样设置。这样设置风险很大,并且会浪费至少一半的堆内存。相反设置参数 -XX:+AlwaysTenure, 表示没有幸存区,所有对象在第一次GC时，会晋升到老年代。<br />\r\n没有合理的场景使用这个参数。可以在测试环境中，看下这样设置会发生什么有趣的事.但是并不推荐使用这些参数.\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	结论<br />\r\n适当的配置新生代非常重要，有相当多的参数可以设置新生代。然而，单独调整新生代，而不考虑老年代是不可能优化成功的。当调整堆和GC设置时，我们总是应该同时考虑新生代和老年代。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	在本系列的下面2部分，我们将讨论 HotSpot JVM 中老年代 GC 策略,我们会学习“吞吐量GC收集器” 和 “并发低延迟GC收集器”,也会了解收集器的基本准则，算法和调整参数.\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		<strong>原创文章转载请注明出处</strong>：<a href=\"http://ifeve.com/useful-jvm-flags-part-5-young-generation-garbage-collection/\">JVM 实用参数-5 新生代垃圾回收</a>\r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-29 15:54:04',0,'JVM 实用参数-5 新生代垃圾回收',0),(135,'admin',14,'<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<a href=\"http://tutorials.jenkov.com/java-nio/pipe.html\" target=\"_blank\">原文链接</a>&nbsp; &nbsp; &nbsp;<b>作者：</b>Jakob Jenkov &nbsp; &nbsp;&nbsp;<b>译者：</b>黄忠 &nbsp; &nbsp; &nbsp;&nbsp;<b>校对：</b>丁一\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	Java NIO 管道是2个线程之间的单向数据连接。Pipe有一个source通道和一个sink通道。数据会被写到sink通道，从source通道读取。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	这里是Pipe原理的图示：\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<img class=\"aligncenter size-full wp-image-5386\" alt=\"\" src=\"http://ifeve.com/wp-content/uploads/2013/06/pipe.bmp\" style=\"height:auto;width:auto;\" />\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<span id=\"more-5330\"></span>\r\n</p>\r\n<h3 id=\"createpipe\" style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	创建管道\r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	通过Pipe.open()方法打开管道。例如：\r\n</p>\r\n<div id=\"highlighter_302454\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							1\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							Pipe pipe = Pipe.open();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	向管道写数据\r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	要向管道写数据，需要访问sink通道。像这样：\r\n</p>\r\n<div id=\"highlighter_951352\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							1\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							Pipe.SinkChannel sinkChannel = pipe.sink();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	通过调用SinkChannel的write()方法，将数据写入SinkChannel,像这样：\r\n</p>\r\n<div id=\"highlighter_468023\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							01\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							String newData =&nbsp;\"New String to write to file...\"&nbsp;+ System.currentTimeMillis();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							02\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer buf = ByteBuffer.allocate(48);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							03\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							buf.clear();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							04\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							buf.put(newData.getBytes());\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							05\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							06\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							buf.flip();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							07\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							08\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							while(buf.hasRemaining()) {\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							09\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;&nbsp;&nbsp;&nbsp;&lt;b&gt;sinkChannel.write(buf);&lt;/b&gt;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							10\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							}\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<h3 style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;\">\r\n	从管道读取数据\r\n</h3>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	从读取管道的数据，需要访问source通道，像这样：\r\n</p>\r\n<div id=\"highlighter_473125\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							1\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							Pipe.SourceChannel sourceChannel = pipe.source();\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	调用source通道的read()方法来读取数据，像这样：\r\n</p>\r\n<div id=\"highlighter_674675\" class=\"syntaxhighlighter \" style=\"background-color:#FFFFFF;font-size:14px;color:#666666;margin:1em 0px !important;padding:1px !important;border:0px !important;vertical-align:baseline !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;\">\r\n	<div class=\"lines\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							1\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							ByteBuffer buf = ByteBuffer.allocate(48);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt2\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							2\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							&nbsp;\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n		<div class=\"line alt1\" style=\"margin:0px !important;padding:0px !important;border:0px !important;vertical-align:baseline !important;font-size:1em !important;\">\r\n			<table style=\"margin:0px !important;padding:0px !important;width:auto !important;border:0px !important;height:auto !important;font-size:1em !important;\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"number\" style=\"border:0px !important;vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;color:#787878 !important;\">\r\n							3\r\n						</td>\r\n						<td class=\"content\" style=\"vertical-align:top !important;font-family:Consolas, \'Bitstream Vera Sans Mono\', \'Courier New\', Courier, monospace !important;font-size:1em !important;\">\r\n							int&nbsp;bytesRead = inChannel.read(buf);\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	read()方法返回的int值会告诉我们多少字节被读进了缓冲区。\r\n</p>\r\n<p style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul style=\"color:#666666;font-family:Arial, Helvetica, sans-serif;font-size:14px;\">\r\n	<li>\r\n		<strong>原创文章转载请注明出处</strong>：<a href=\"http://ifeve.com/pipe/\">Java NIO系列教程（十一） Pipe</a>\r\n	</li>\r\n</ul>',NULL,NULL,'2014-05-30 09:00:07',0,'Java NIO系列教程（十一） Pipe',0),(136,'admin',4,'<span style=\"font-size:14px;\">div class=\"entry\"&gt;</span>\r\n<p>\r\n	<span style=\"font-size:14px;\">一、meta标签的组成</span><br />\r\n<span style=\"font-size:14px;\"> meta标签共有两个属性，它们分别是http-equiv属性和name属性，不同的属性又有不同的参数值，这些不同的参数值就实现了不同的网页功能。</span><br />\r\n<span style=\"font-size:14px;\"> 1、name属性</span><br />\r\n<span style=\"font-size:14px;\"> name属性主要用于描述网页，与之对应的属性值为content，content中的内容主要是便于搜索引擎机器人查找信息和分类信息用的。</span><br />\r\n<span style=\"font-size:14px;\"> meat标签的name属性语法格式是：</span><br />\r\n<span style=\"font-size:14px;\"> 其中name属性主要有以下几种参数：</span><br />\r\n<span style=\"font-size:14px;\"> A、Keywords(关键字)</span><br />\r\n<span style=\"font-size:14px;\"> B、description(网站内容描述)</span><br />\r\n<span style=\"font-size:14px;\"> C、robots(机器人向导)</span><br />\r\n<span style=\"font-size:14px;\"> D、author(作者)</span><br />\r\n<span style=\"font-size:14px;\"> 2、http-equiv属性</span><br />\r\n<span style=\"font-size:14px;\"> http-equiv顾名思义，相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容，与之对应的属性值为content，content中的内容其实就是各个参数的变量值。</span><br />\r\n<span style=\"font-size:14px;\"> meat标签的http-equiv属性语法格式是： ；其中http-equiv属性主要有以下几种参数：</span><br />\r\n<span style=\"font-size:14px;\"> A、Expires(期限)</span><br />\r\n<span style=\"font-size:14px;\"> B、Pragma(cache模式)</span><br />\r\n<span style=\"font-size:14px;\"> C、Refresh(刷新)</span><br />\r\n<span style=\"font-size:14px;\"> D、Set-Cookie(cookie设定)</span><br />\r\n<span style=\"font-size:14px;\"> E、Window-target(显示窗口的设定)</span><br />\r\n<span style=\"font-size:14px;\"> F、content-Type(显示字符集的设定)</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">二、meta标签的功能</span><br />\r\n<span style=\"font-size:14px;\"> 上面我们介绍了meta标签的一些基本组成，接着我们再来一起看看meta标签的常见功能：</span><br />\r\n<span style=\"font-size:14px;\"> １、帮助主页被各大搜索引擎登录</span><br />\r\n<span style=\"font-size:14px;\"> ２、定义页面的使用语言</span><br />\r\n<span style=\"font-size:14px;\"> ３、自动刷新并指向新的页面</span><br />\r\n<span style=\"font-size:14px;\"> ４、实现网页转换时的动画效果</span><br />\r\n<span style=\"font-size:14px;\"> ５、网页定级评价</span><br />\r\n<span style=\"font-size:14px;\"> ６、控制页面缓冲</span><br />\r\n<span style=\"font-size:14px;\"> ７、控制网页显示的窗口。</span>\r\n</p>',NULL,NULL,'2014-05-31 14:36:38',0,'网站页面中meta标签的功能',0),(137,'admin',4,'<p>\r\n	Twitter 迅速占领了 Internet 市场。您肯定知道这个出色的社交网络工具允许订阅者提供关于他们自身以及当前正在执行的任务的简要状态更新。追随者 将接收到他们的 “Twitter 提要” 的更新，这与博客将更新生成到博客阅读者的提要中极为类似。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	就其本身而言，Twitter 是对社交网络的有趣讨论，并且是用户之间的新一代 “高度互联”，它具备您能想到的所有优点和缺点。\r\n</p>\r\n<p>\r\n	由于 Twitter 很早就发布了其 API，因此大量 Twitter 客户机应用程序涌入到 Internet 上。由于该 API 主要建立在直观和易于理解的基础上，因此许多开发人员都发现有必要构建一个自己的 Twitter 客户机，这与学习 Web 技术的开发人员构建自己的博客服务器极为类似。\r\n</p>\r\n<p>\r\n	考虑到 Scala 的功能性（这看上去能很好地协同 Twitter 的 REST 式特性）以及非常出众的 XML 处理特性，因此尝试构建一个用于访问 Twitter 的 Scala 客户机库应该是一个非常不错的体验。\r\n</p>\r\n<h2>\r\n	何为 Twitter？\r\n</h2>\r\n<p>\r\n	在详细讨论之前，我们先来看看 Twitter API。\r\n</p>\r\n<p>\r\n	简单来说，Twitter 是一个 “微型博客” — 关于您自己的简短个性化提要，不超过 140 个字符，任何 “追随者” 都可以通过 Web 更新、RSS、文本消息等方式接收它们。（140 字符的限制完全来自文本消息，它是 Twitter 的主要来源渠道，并受到类似的限制）。\r\n</p>\r\n<div>\r\n	<h2>\r\n		最具 REST 特征是什么意思？\r\n	</h2>\r\n	<p>\r\n		一些读者会对我所使用的最具 REST 特征短语感到好奇；这需要一些说明。“Twitter API 试图符合 Representational State Transfer (REST) 的设计原则”。并且在很大程度上说它做到了。该思想的创造者 Roy Fielding 可能不同意 Twitter 使用这个术语，但实现来说，Twitter 的方法将适合大多数人的 REST 定义。我只希望避免关于 REST 定义的激烈争论。因此，我使用了限定词 “最”。\r\n	</p>\r\n</div>\r\n<p>\r\n	从实际的角度来说，Twitter 是一个最具 REST 特征的 API，您可以使用一些种类的消息格式 — XML、ATOM、RSS 或 JSON — 来发送或从 Twitter 服务器接收消息。不同的 URL，与不同的消息和它们所需及可选的消息部分相结合，可以发起不同的 API 调用。例如，如果您希望接收 Twitter 上所有人的所有 “Tweets”（Twitter 更新）的完整列表（也称作 “公共时间轴”），您需要准备一个 XML、ATOM、RSS 或 JSON 消息，将它发送给合适的 URL，并采用与 Twitter 网站（apiwiki.twitter.com）上相同的格式来使用结果：\r\n</p>\r\n<p>\r\n	------------------------------------------------------------<br />\r\npublic_timeline<br />\r\n返回设定了自定义用户图标的<br />\r\n非保护用户的 20 条最新状态。不需要身份验证。<br />\r\n注意，公共时间轴将缓存 60 秒钟<br />\r\n因此频繁请求它不再浪费资源。\r\n</p>\r\n<p>\r\n	URL：http://twitter.com/statuses/public_timeline.format<br />\r\n格式：xml、json、rss、atom<br />\r\n方法：GET<br />\r\nAPI 限制：不适用<br />\r\n返回：状态元素列表<br />\r\n------------------------------------------------------------\r\n</p>\r\n<p>\r\n	从编程的角度来说，这意味着我们给 Twitter 服务器发送一个简单的&nbsp;GET HTTP&nbsp;请求，并且我们将获取一组封装在 XML、RSS、ATOM 或 JSON 消息中的 “状态” 消息。Twitter 站点将 “状态” 消息定义为类似清单 1 所示的内容：\r\n</p>\r\n<h5>\r\n	清单 1. 您好世界，您在哪里？\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">&lt;feed xml:lang=\"en-US\" xmlns=\"http://www.w3.org/2005/Atom\"&gt;\r\n  &lt;title&gt;Twitter / tedneward&lt;/title&gt;\r\n  &lt;id&gt;tag:twitter.com,2007:Status&lt;/id&gt;\r\n  &lt;link type=\"text/html\" rel=\"alternate\" href=\"http://twitter.com/tedneward\"/&gt;\r\n  &lt;updated&gt;2009-03-07T13:48:31+00:00&lt;/updated&gt;\r\n  &lt;subtitle&gt;Twitter updates from Ted Neward / tedneward.&lt;/subtitle&gt;\r\n  &lt;entry&gt;\r\n	&lt;title&gt;tedneward: @kdellison Happens to the best of us...&lt;/title&gt;\r\n	&lt;content type=\"html\"&gt;tedneward: @kdellison Happens to the best of us...&lt;/content&gt;\r\n	&lt;id&gt;tag:twitter.com,2007:http://twitter.com/tedneward/statuses/1292396349&lt;/id&gt;\r\n	&lt;published&gt;2009-03-07T11:07:18+00:00&lt;/published&gt;\r\n	&lt;updated&gt;2009-03-07T11:07:18+00:00&lt;/updated&gt;\r\n	&lt;link type=\"text/html\" rel=\"alternate\"\r\n        href=\"http://twitter.com/tedneward/statuses/1292396349\"/&gt;\r\n	&lt;link type=\"image/png\" rel=\"image\"\r\n        href=\"http://s3.amazonaws.com/twitter_production/profile_images/\r\n         55857457/javapolis_normal.png\"/&gt;\r\n	&lt;author&gt;\r\n	  &lt;name&gt;Ted Neward&lt;/name&gt;\r\n	  &lt;uri&gt;http://www.tedneward.com&lt;/uri&gt;\r\n	&lt;/author&gt;\r\n  &lt;/entry&gt;\r\n&lt;/feed&gt;</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	状态消息中的大部分元素（如果不是全部的话）都很直观，因此不再赘述。\r\n</p>\r\n<p>\r\n	由于我们可以采用三种基于 XML 的格式使用 Twitter 消息，以及 Scala 具备一些非常强大的 XML 特性，包括 XML 字面值和类似 XPath 的查询语法 API，因此编写可以发送和接收 Twitter 消息的 Scala 库只需要一些基础的 Scala 编码工作。举例来说，通过 Scala 使用清单 1 消息来提取状态更新的标题或内容可以利用 Scala 的 XML 类型和&nbsp;\\&nbsp;及&nbsp;\\\\&nbsp;方法，如 清单 2 所示：\r\n</p>\r\n<h5>\r\n	清单 2. 您好 Ted，您在哪里？\r\n</h5>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">&lt;![CDATA[\r\npackage com.tedneward.scitter.test\r\n{\r\n  class ScitterTest\r\n  {\r\n    import org.junit._, Assert._\r\n    \r\n    @Test def simpleAtomParse =\r\n    {\r\n      val atom =\r\n        &lt;feed xml:lang=\"en-US\" xmlns=\"http://www.w3.org/2005/Atom\"&gt;\r\n          &lt;title&gt;Twitter / tedneward&lt;/title&gt;\r\n          &lt;id&gt;tag:twitter.com,2007:Status&lt;/id&gt;\r\n          &lt;link type=\"text/html\" rel=\"alternate\" href=\"http://twitter.com/tedneward\"/&gt;\r\n          &lt;updated&gt;2009-03-07T13:48:31+00:00&lt;/updated&gt;\r\n          &lt;subtitle&gt;Twitter updates from Ted Neward / tedneward.&lt;/subtitle&gt;\r\n          &lt;entry&gt;\r\n            &lt;title&gt;tedneward: @kdellison Happens to the best of us...&lt;/title&gt;\r\n            &lt;content type=\"html\"&gt;tedneward: @kdellison\r\n                                 Happens to the best of us...&lt;/content&gt;\r\n            &lt;id&gt;tag:twitter.com,2007:\r\n                http://twitter.com/tedneward/statuses/1292396349&lt;/id&gt;\r\n            &lt;published&gt;2009-03-07T11:07:18+00:00&lt;/published&gt;\r\n            &lt;updated&gt;2009-03-07T11:07:18+00:00&lt;/updated&gt;\r\n            &lt;link type=\"text/html\" rel=\"alternate\"\r\n                  href=\"http://twitter.com/tedneward/statuses/1292396349\"/&gt;\r\n            &lt;link type=\"image/png\" rel=\"image\"\r\n                  href=\"http://s3.amazonaws.com/twitter_production/profile_images/\r\n                        55857457/javapolis_normal.png\"/&gt;\r\n            &lt;author&gt;\r\n              &lt;name&gt;Ted Neward&lt;/name&gt;\r\n              &lt;uri&gt;http://www.tedneward.com&lt;/uri&gt;\r\n            &lt;/author&gt;\r\n          &lt;/entry&gt;\r\n        &lt;/feed&gt;\r\n    \r\n      assertEquals(atom \\\\ \"entry\" \\ \"title\",\r\n		 \"tedneward: @kdellison Happens to the best of us...\")\r\n    }\r\n  }\r\n}\r\n]]&gt;</pre>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<!--[CDATA[ package com.tedneward.scitter.test { class ScitterTest { import org.junit._, Assert._ @Test def simpleAtomParse = { val atom =Twitter / tednewardtag:twitter.com,2007:Status2009-03-07T13:48:31+00:00Twitter updates from Ted Neward / tedneward.tedneward: @kdellison Happens to the best of us...tedneward: @kdellison Happens to the best of us...tag:twitter.com,2007: http://twitter.com/tedneward/statuses/12923963492009-03-07T11:07:18+00:002009-03-07T11:07:18+00:00Ted Newardhttp://www.tedneward.comassertEquals(atom \\\\ \"entry\" \\ \"title\", \"tedneward: @kdellison Happens to the best of us...\") } } } ]]-->\r\n</div>\r\n<p>\r\n	有关 Scala 的 XML 支持的更多详细信息，请参阅 “Scala 和 XML”（参见 <a href=\"http://www.ibm.com/developerworks/cn/java/j-scala05059.html#resources\">参考资料</a>）。\r\n</p>\r\n<p>\r\n	实际上，使用原始 XML 本身并不是一个有趣的练习。如果 Scala 的宗旨是让我们的生活更加轻松，那么可以创建一个或一组专用于简化 Scala 消息发送和接收任务的类。作为其中一个目标，应该能够在 “普通” Java 程序中方便地使用库（这意味着可以方便地从任何可理解普通 Java 语义的环境中来访问它，比如说 Groovy 或 Clojure）。\r\n</p>\r\n<h2>\r\n	API 设计\r\n</h2>\r\n<p>\r\n	在深入了解 Scala/Twitter 库的 API 设计之前（根据同事 ThoughtWorker Neal Ford 的建议，我将它称作 “Scitter”），需要明确一些需求。\r\n</p>\r\n<p>\r\n	首先，Scitter 显然会对网络访问有一些依赖 — 并且可扩展到 Twitter 服务器 — 这会使测试变得非常困难。\r\n</p>\r\n<p>\r\n	其次，我们需要解析（和测试）Twitter 发回的各种格式。\r\n</p>\r\n<p>\r\n	第三，我们希望隐藏 API 内部各种格式之间的差异，以便客户机不需要担心已记录的 Twitter 消息格式，但是可以仅使用标准类。\r\n</p>\r\n<p>\r\n	最后，由于 Twitter 依赖 “通过身份验证的用户” 才能使用大量 API，因此 Scitter 库需要适应 “验证” 和 “未验证” API 之间的差异，而不会让事情变得过于复杂。\r\n</p>\r\n<p>\r\n	网络访问需要一些形式的 HTTP 通信，以便联系 Twitter 服务器。虽然我们可以使用 Java 库本身（特别是 URL 类及其同胞），但由于 Twitter API 需要大量请求和响应主体连接，因此可以更加轻松地使用不同的 HTTP API，特别是 Apache Commons HttpClient 库。为了更便于测试客户机 API，实际通信将隐藏在一些 API 内部的 Scitter 库中，以便能够更加轻松地切换到另一个 HTTP 库（其必要性不太容易想到），并能模拟实际网络通信以简化测试（其作用很容易想到）。\r\n</p>\r\n<p>\r\n	结果，第一个测试是 Scala 化 HttpClient 调用，以确保基本通信模式就位；注意，由于 HttpClient 依赖另外两个 Apache 库（Commons Logging 和 Commons Codec），因此还需要在运行时提供这些库；对于那些希望开发相似种类代码的读者，确保类路径中包括所有三个库。\r\n</p>\r\n<p>\r\n	由于最易于使用的 Twitter API 是测试 API\r\n</p>\r\n<p>\r\n	因此在请求格式中返回 “ok”，并附带 200 OK HTTP 状态码。\r\n</p>\r\n<p>\r\n	我们将使用它作为 Scitter 测试中的保留条款。它位于 URL http://twitter.com/help/test.format（其中，“format” 为 “xml” 或 “json”；至于目前，我们将选择使用 “xml”），并且仅有的支持 HTTP 方法是&nbsp;GET。HttpClient 代码简明易懂，如清单 3 所示：\r\n</p>\r\n<h5>\r\n	清单 3. Twitter PING！\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">package com.tedneward.scitter.test\r\n{\r\n  class ExplorationTests\r\n  {\r\n    // ...\r\n  \r\n    import org.apache.commons.httpclient._, methods._, params._, cookie._\r\n    \r\n    @Test def callTwitterTest =\r\n    {\r\n      val testURL = \"http://twitter.com/help/test.xml\"\r\n      \r\n      // HttpClient API 101\r\n      val client = new HttpClient()\r\n      val method = new GetMethod(testURL)\r\n\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n\r\n      client.executeMethod(method)\r\n      \r\n      val statusLine = method.getStatusLine()\r\n      \r\n      assertEquals(statusLine.getStatusCode(), 200)\r\n      assertEquals(statusLine.getReasonPhrase(), \"OK\")\r\n    }\r\n  }\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	此代码中最重要的一部分是 HttpClient 样板 — 感兴趣的读者应该查阅 HttpClient API 文档了解详细信息。假设连接到公共 Internet 的网络可用（并且 Twitter 并未修改其公共 API），那么该测试应该能顺利通过。\r\n</p>\r\n<p>\r\n	鉴于此，我们详细分析 Scitter 客户机的第一部分。这意味着我们需要解决一个设计问题：如何构建 Scitter 客户机来处理经过验证和未经过验证的调用。目前，我将采用典型的 Scala 方式，假定验证是 “按对象” 执行的，因此将需要验证的调用放在类定义中，并在未验证的调用放在对象定义中：\r\n</p>\r\n<h5>\r\n	清单 4. Scitter.test\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">package com.tedneward.scitter\r\n{\r\n  /**\r\n   * Object for consuming \"non-specific\" Twitter feeds, such as the public timeline.\r\n   * Use this to do non-authenticated requests of Twitter feeds.\r\n   */\r\n  object Scitter\r\n  {\r\n    import org.apache.commons.httpclient._, methods._, params._, cookie._\r\n\r\n    /**\r\n     * Ping the server to see if it\'s up and running.\r\n     *\r\n     * Twitter docs say:\r\n     * test\r\n     * Returns the string \"ok\" in the requested format with a 200 OK HTTP status code.\r\n     * URL: http://twitter.com/help/test.format\r\n     * Formats: xml, json\r\n     * Method(s): GET\r\n     */\r\n    def test : Boolean =\r\n    {\r\n      val client = new HttpClient()\r\n\r\n      val method = new GetMethod(\"http://twitter.com/help/test.xml\")\r\n\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n\r\n      client.executeMethod(method)\r\n      \r\n      val statusLine = method.getStatusLine()\r\n      statusLine.getStatusCode() == 200\r\n    }\r\n  }\r\n  /**\r\n   * Class for consuming \"authenticated user\" Twitter APIs. Each instance is\r\n   * thus \"tied\" to a particular authenticated user on Twitter, and will\r\n   * behave accordingly (according to the Twitter API documentation).\r\n   */\r\n  class Scitter(username : String, password : String)\r\n  {\r\n  }\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	目前，我们将网络抽象放在一边 — 稍后，当离线测试变得更加重要时再添加它。当我们更好地理解如何使用 HttpClient 类时，这还将帮助避免 “过度抽象” 网络通信。\r\n</p>\r\n<p>\r\n	由于已经明确区分了验证和未验证 Twitter 客户机，因此我们将快速创建一个经过验证的方法。看上去 Twitter 提供了一个可验证用户登录凭证的 API。再次，HttpClient 代码将类似于之前的代码，除了将用户名和密码传递到 Twitter API 中之外。\r\n</p>\r\n<p>\r\n	这引出了 Twitter 如何验证用户的概念。快速查看 Twitter API 页面后，可以发现 Twitter 使用的是一种 Stock HTTP 验证方法，这与任何经过验证的资源在 HTTP 中的方法相同。这意味着 HttpClient 代码必须提供用户名和密码作为 HTTP 请求的一部分，而不是作为&nbsp;POST&nbsp;的主体，如清单 5 所示：\r\n</p>\r\n<h5>\r\n	清单 5. 您好 Twitter，是我！\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">package com.tedneward.scitter.test\r\n{\r\n  class ExplorationTests\r\n  {\r\n    def testUser = \"TwitterUser\"\r\n	def testPassword = \"TwitterPassword\"\r\n  \r\n    @Test def verifyCreds =\r\n    {\r\n      val client = new HttpClient()\r\n\r\n      val verifyCredsURL = \"http://twitter.com/account/verify_credentials.xml\"\r\n      val method = new GetMethod(verifyCredsURL)\r\n\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n\r\n      client.getParams().setAuthenticationPreemptive(true)\r\n      val defaultcreds = new UsernamePasswordCredentials(testUser, testPassword)\r\n      client.getState().setCredentials(new AuthScope(\"twitter.com\", 80,\r\n                                                     AuthScope.ANY_REALM), defaultcreds)\r\n      \r\n      client.executeMethod(method)\r\n      \r\n      val statusLine = method.getStatusLine()\r\n      \r\n      assertEquals(200, statusLine.getStatusCode())\r\n      assertEquals(\"OK\", statusLine.getReasonPhrase())\r\n    }\r\n  }\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	注意，要让此测试顺利通信，用户名和密码字段将需要输入 Twitter 能接收的内容 — 我在开发时使用了自己的 Twitter 用户名和密码，但显然您需要使用自己设定的用户名和密码。注册新的 Twitter 帐户相当简单，因此我假定您已经拥有一个帐户，或者知道如何注册（很好。我会等待完成此任务）。\r\n</p>\r\n<p>\r\n	完成后，使用用户名和密码构造函数参数将它映射到 Scitter 类非常简单，如清单 6 所示：\r\n</p>\r\n<h5>\r\n	清单 6. Scitter.verifyCredentials\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">package com.tedneward.scitter\r\n{\r\n  import org.apache.commons.httpclient._, auth._, methods._, params._\r\n\r\n  // ...\r\n\r\n  /**\r\n   * Class for consuming \"authenticated user\" Twitter APIs. Each instance is\r\n   * thus \"tied\" to a particular authenticated user on Twitter, and will\r\n   * behave accordingly (according to the Twitter API documentation).\r\n   */\r\n  class Scitter(username : String, password : String)\r\n  {\r\n    /**\r\n     * Verify the user credentials against Twitter.\r\n     *\r\n     * Twitter docs say:\r\n     * verify_credentials\r\n     * Returns an HTTP 200 OK response code and a representation of the\r\n     * requesting user if authentication was successful; returns a 401 status\r\n     * code and an error message if not.  Use this method to test if supplied\r\n     * user credentials are valid.\r\n     * URL: http://twitter.com/account/verify_credentials.format\r\n     * Formats: xml, json\r\n     * Method(s): GET\r\n     */\r\n    def verifyCredentials : Boolean =\r\n    {\r\n      val client = new HttpClient()\r\n\r\n      val method = new GetMethod(\"http://twitter.com/help/test.xml\")\r\n\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n        \r\n      client.getParams().setAuthenticationPreemptive(true)\r\n      val creds = new UsernamePasswordCredentials(username, password)\r\n      client.getState().setCredentials(\r\n        new AuthScope(\"twitter.com\", 80, AuthScope.ANY_REALM), creds)\r\n\r\n      client.executeMethod(method)\r\n      \r\n      val statusLine = method.getStatusLine()\r\n      statusLine.getStatusCode() == 200\r\n    }\r\n  }\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	清单 7 中相应的 Scitter 类测试也相当简单：\r\n</p>\r\n<h5>\r\n	清单 7. 测试 Scitter.verifyCredentials\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">package com.tedneward.scitter.test\r\n{\r\n  class ScitterTests\r\n  {\r\n    import org.junit._, Assert._\r\n    import com.tedneward.scitter._\r\n\r\n    def testUser = \"TwitterUsername\"\r\n      def testPassword = \"TwitterPassword\"\r\n    \r\n      // ...\r\n	\r\n    @Test def verifyCreds =\r\n    {\r\n      val scitter = new Scitter(testUser, testPassword)\r\n      val result = scitter.verifyCredentials\r\n      assertTrue(result)\r\n    }\r\n  }\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	不算太糟。库的基本结构已经成形，但显然还有很长的路要走，特别是因为目前实际上未执行任何特定于 Scala 的任务 — 在面向对象设计中，库的构建并不像练习那样简单。因此，我们开始使用一些 XML，并通过更加合理的格式将它返回。\r\n</p>\r\n<h2>\r\n	从 XML 到对象\r\n</h2>\r\n<p>\r\n	现在可以添加的最简单的 API 是 public_timeline，它收集 Twitter 从所有用户处接收到的最新的n更新，并返回它们以便于进行使用。与之前讨论的另外两个 API 不同，public_timeline API 返回一个响应主体（而不是仅依赖于状态码），因此我们需要分解生成的 XML/RSS/ATOM/，然后将它们返回给 Scitter 客户机。\r\n</p>\r\n<p>\r\n	现在，我们编写一个探索测试，它将访问公共提要并将结果转储到&nbsp;stdout&nbsp;以便进行分析，如清单 8 所示：\r\n</p>\r\n<h5>\r\n	清单 8. 大家都在忙什么？\r\n</h5>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	运行后，结果每次都会有所不同，因为公共 Twitter 服务器上有许多用户，但通常应与清单 9 的 JUnit 文本文件转储类似：\r\n</p>\r\n<h5>\r\n	清单 9. 我们的 Tweets 结果\r\n</h5>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">package com.tedneward.scitter.test\r\n{\r\n  class ExplorationTests\r\n  {\r\n    // ...\r\n  \r\n    @Test def callTwitterPublicTimeline =\r\n    {\r\n      val publicFeedURL = \"http://twitter.com/statuses/public_timeline.xml\"\r\n      \r\n      // HttpClient API 101\r\n      val client = new HttpClient()\r\n      val method = new GetMethod(publicFeedURL)\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n      \r\n      client.executeMethod(method)\r\n      \r\n      val statusLine = method.getStatusLine()\r\n      assertEquals(statusLine.getStatusCode(), 200)\r\n      assertEquals(statusLine.getReasonPhrase(), \"OK\")\r\n      \r\n      val responseBody = method.getResponseBodyAsString()\r\n      System.out.println(\"callTwitterPublicTimeline got... \")\r\n      System.out.println(responseBody)\r\n    }\r\n  }\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	通过查看结果和 Twitter 文档可以看出，调用的结果是一组具备一致消息结构的简单 “状态” 消息。使用 Scala 的 XML 支持分离结果相当简单，但我们会在基本测试通过后立即简化它们，如清单 10 所示：\r\n</p>\r\n<h5>\r\n	清单 10. 大家都在忙什么？\r\n</h5>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	随着示例代码模式的变化，这并不值得推荐 — 这有点类似于 DOM，依次导航到各个子元素，提取文本，然后导航到另一个节点。我可以仅执行两个 XPath 样式的查询，如清单 11 所示：\r\n</p>\r\n<h5>\r\n	清单 11. 替代解析方法\r\n</h5>\r\n<div>\r\n	for (n &lt;- statuses.elements) { val text = (n \\\\ \"text\").text val screenName = (n \\\\ \"user\" \\ \"screen_name\").text }\r\n</div>\r\n<p>\r\n	这显然更加简短，但它带来了两个基本问题：\r\n</p>\r\n<ul>\r\n	<li>\r\n		我们可以强制 Scala 的 XML 库针对每个元素或子元素遍历一次图，其速度会随时间减慢。\r\n	</li>\r\n	<li>\r\n		我们仍然需要直接处理 XML 消息的结构。这是两个问题中最为重要的。\r\n	</li>\r\n</ul>\r\n<p>\r\n	也就是说，这种方式不具备可伸缩性 — 假设我们最终对 Twitter 状态消息中的每个元素都感兴趣，我们将需要分别从各状态中提取各个元素。\r\n</p>\r\n<p>\r\n	这又造成了另一个与各格式本身相关的问题。记住，Twitter 可以使用四种不同的格式，并且我们不希望 Scitter 客户机需要了解它们之间的任何差异，因此 Scitter 需要一个能返回给客户机的中间结构，以便未来使用，如清单 12 所示：\r\n</p>\r\n<h5>\r\n	清单 12. Breaker，您的状态是什么？\r\n</h5>\r\n<div>\r\n	abstract class Status\r\n{\r\n  val createdAt : String\r\n  val id : Long\r\n  val text : String\r\n  val source : String\r\n  val truncated : Boolean\r\n  val inReplyToStatusId : Option[Long]\r\n  val inReplyToUserId : Option[Long]\r\n  val favorited : Boolean\r\n  val user : User\r\n}\r\n</div>\r\n<p>\r\n	这与&nbsp;User&nbsp;方式相类似，考虑到简洁性，我就不再重复了。注意，User&nbsp;子元素有一个有趣的问题 — 虽然存在 Twitter 用户类型，但其中内嵌了一个可选的 “最新状态”。状态消息还内嵌了一个用户。对于这种情况，为了帮助避免一些潜在的递归问题，我选择创建一个嵌入在&nbsp;Status&nbsp;内部的&nbsp;User&nbsp;类型，以反映所出现的&nbsp;User&nbsp;数据；反之亦然，Status&nbsp;也可以嵌入在&nbsp;User&nbsp;中，这样可以明确避免该问题。（至少，在没发现问题之前，这种方法是有效的）。\r\n</p>\r\n<p>\r\n	现在，创建了表示 Twitter 消息的对象类型之后，我们可以遵循 XML 反序列化的公共 Scala 模式：创建相应的对象定义，其中包含一个fromXml&nbsp;方法，用于将 XML 节点分离到对象实例中，如清单 13 所示：\r\n</p>\r\n<h5>\r\n	清单 13. 分解 XML\r\n</h5>\r\n<div>\r\n	/**\r\n   * Object wrapper for transforming (format) into Status instances.\r\n   */\r\n  object Status\r\n  {\r\n    def fromXml(node : scala.xml.Node) : Status =\r\n    {\r\n      new Status {\r\n        val createdAt = (node \\ \"created_at\").text\r\n        val id = (node \\ \"id\").text.toLong\r\n        val text = (node \\ \"text\").text\r\n        val source = (node \\ \"source\").text\r\n        val truncated = (node \\ \"truncated\").text.toBoolean\r\n        val inReplyToStatusId =\r\n          if ((node \\ \"in_reply_to_status_id\").text != \"\")\r\n            Some((node \\\"in_reply_to_status_id\").text.toLong)\r\n          else\r\n            None\r\n        val inReplyToUserId = \r\n          if ((node \\ \"in_reply_to_user_id\").text != \"\")\r\n            Some((node \\\"in_reply_to_user_id\").text.toLong)\r\n          else\r\n            None\r\n        val favorited = (node \\ \"favorited\").text.toBoolean\r\n        val user = User.fromXml((node \\ \"user\")(0))\r\n      }\r\n    }\r\n  }\r\n</div>\r\n<p>\r\n	其中最强大的一处是，它可以针对 Twitter 支持的其他任何格式进行扩展 —fromXml&nbsp;方法可以在分解节点之前检查它是否保存了 XML、RSS 或 Atom 类型的内容，或者&nbsp;Status&nbsp;可以包含&nbsp;fromXml、fromRss、fromAtom&nbsp;和&nbsp;fromJson&nbsp;方法。实际上，后一种方法是我的优先选择，因为它会平等对待基于 XML 的格式和 JSON（基于文本）格式。\r\n</p>\r\n<p>\r\n	好奇和细心的读者会注意到在&nbsp;Status&nbsp;及其内嵌&nbsp;User&nbsp;的&nbsp;fromXml&nbsp;方法中，我使用的是 XPath 样式的分解方法，而不是之前建议的遍历内嵌元素的方法。现在，XPath 样式的方法看上去更易于阅读，但幸运的是，我后来改变了注意，良好的封装仍然是我的朋友 — 我可以在随后修改它，Scitter 外部的任何人都不会知道。\r\n</p>\r\n<p>\r\n	注意&nbsp;Status&nbsp;内部的两个成员如何使用&nbsp;Option[T]&nbsp;类型；这是因为这些元素通常排除在&nbsp;Status&nbsp;消息外部，并且虽然元素本身会出现，但它们显示为空（类似于）。这正是&nbsp;Option[T]&nbsp;的作用所在。当元素为空时，它们将使用 “None” 值。（这表示考虑到基于 Java 的兼容性，访问它们会更加困难，但惟一可行方法是对最终生成的&nbsp;Option&nbsp;实例调用&nbsp;get()，这不太复杂并且能很好地解决 “非 null 即 0” 问题）。\r\n</p>\r\n<p>\r\n	现在已经可以轻而易举地使用公共时间轴：\r\n</p>\r\n<h5>\r\n	清单 14. 分解公共时间轴\r\n</h5>\r\n<div>\r\n	@Test def simplePublicFeedPullAndDeserialize =\r\n    {\r\n      val publicFeedURL = \"http://twitter.com/statuses/public_timeline.xml\"\r\n      // HttpClient API 101\r\n      val client = new HttpClient()\r\n      val method = new GetMethod(publicFeedURL)\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n      val statusCode = client.executeMethod(method)\r\n      val responseBody = new String(method.getResponseBody())\r\n      val responseXML = scala.xml.XML.loadString(responseBody)\r\n      val statuses = responseXML \\\\ \"status\"\r\n      for (n &lt;- statuses.elements) { val s = Status.fromXml(n) System.out.println(\"\\t\'@\" + s.user.screenName + \"\' wrote \" + s.text) } }\r\n</div>\r\n<p>\r\n	显然，这看上去更加简洁，并且易于使用。\r\n</p>\r\n<p>\r\n	将所有这些结合到 Scitter 单一实例中相当简单，仅涉及执行查询、解析各个&nbsp;Status&nbsp;元素以及将它们添加到&nbsp;List[Status]&nbsp;实例中，如清单 15 所示：\r\n</p>\r\n<h5>\r\n	清单 15. Scitter.publicTimeline\r\n</h5>\r\n<div>\r\n	package com.tedneward.scitter\r\n{\r\n  import org.apache.commons.httpclient._, auth._, methods._, params._\r\n  import scala.xml._\r\n  object Scitter\r\n  {\r\n    // ...\r\n    /**\r\n     * Query the public timeline for the most recent statuses.\r\n     *\r\n     * Twitter docs say:\r\n     * public_timeline\r\n     * Returns the 20 most recent statuses from non-protected users who have set\r\n     * a custom user icon.  Does not require authentication.  Note that the\r\n     * public timeline is cached for 60 seconds so requesting it more often than\r\n     * that is a waste of resources.\r\n     * URL: http://twitter.com/statuses/public_timeline.format\r\n     * Formats: xml, json, rss, atom\r\n     * Method(s): GET\r\n     * API limit: Not applicable\r\n     * Returns: list of status elements     \r\n     */\r\n    def publicTimeline : List[Status] =\r\n    {\r\n      import scala.collection.mutable.ListBuffer\r\n      val client = new HttpClient()\r\n      val method =\r\n          new GetMethod(\"http://twitter.com/statuses/public_timeline.xml\")\r\n      method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, \r\n        new DefaultHttpMethodRetryHandler(3, false))\r\n      client.executeMethod(method)\r\n      val statusLine = method.getStatusLine()\r\n      if (statusLine.getStatusCode() == 200)\r\n      {\r\n        val responseXML =\r\n          XML.loadString(method.getResponseBodyAsString())\r\n        val statusListBuffer = new ListBuffer[Status]\r\n        for (n &lt;- (responseXML \\\\ \"status\").elements) statusListBuffer += (Status.fromXml(n)) statusListBuffer.toList } else { Nil } } } }\r\n</div>\r\n<p>\r\n	在实现功能全面的 Twiter 客户机之前，我们显然还有很长的路要走。但到目前为止，我们已经实现基本的行为。\r\n</p>\r\n<h2>\r\n	结束语\r\n</h2>\r\n<p>\r\n	构建 Scitter 库的工作进展顺利；目前，Scitter 测试实现相对比较简单，与产生 Scitter API 的探索测试相比时尤为如此。外部用户不需要担心 Twitter API 或者它的各种格式的复杂性，虽然目前测试 Scitter 库有点困难（对单元测试而言，依赖网络并不是个好方法），但我们会及时解决此问题。\r\n</p>\r\n<p>\r\n	注意，我故意在 Twitter API 中维持了面向对象的感觉，秉承了 Scala 的精神 — 因为 Scala 支持大量功能特性并不表示我们要放弃 Java 结构采用的对象设计方法。我们将接受有用的功能特性，同时仍然保留适用的 “旧方法”。\r\n</p>\r\n<p>\r\n	这并不是说我们在此处提供的设计是解决问题最好的方法，只能说这是我们决定采用的设计方法；并且，因为我是本文的作者，所以我采用的是自己的方式。如果不喜欢，您可以编写自己的库和文章（并将 URL 发送给我，我会在未来的文章中向您发起挑战）。事实上，在未来的文章中，我会将所有这些封装在一个 Scala “sbaz” 包中，并上传到网上供大家下载。\r\n</p>\r\n<p>\r\n	现在，我们又要暂时说再见了。下个月，我将在 Scitter 库中添加更多有趣的特性，并开始考虑如何简化它的测试和使用。\r\n</p>',NULL,'2014-05-31 14:44:54','2014-05-31 14:38:01',0,'面向 Java 开发人员的 Scala 指南: Scala + Twitter = Scitter',0),(138,'admin',30,'<p>\r\n	<span style=\"font-size:16px;\">刚给一个朋友解决他写的Discuz!插件的问题，说到MySQL的COUNT(*)的效率，发现越说越说不清楚，干脆写下来，分享给大家。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">COUNT(*)与COUNT(COL)</span><br />\r\n<span style=\"font-size:16px;\"> 网上搜索了下，发现各种说法都有：</span><br />\r\n<span style=\"font-size:16px;\"> 比如认为COUNT(COL)比COUNT(*)快的；</span><br />\r\n<span style=\"font-size:16px;\"> 认为COUNT(*)比COUNT(COL)快的；</span><br />\r\n<span style=\"font-size:16px;\"> 还有朋友很搞笑的说到这个其实是看人品的。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">在不加WHERE限制条件的情况下，COUNT(*)与COUNT(COL)基本可以认为是等价的；</span><br />\r\n<span style=\"font-size:16px;\"> 但是在有WHERE限制条件的情况下，COUNT(*)会比COUNT(COL)快非常多；</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">具体的数据参考如下：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">mysql&gt; SELECT COUNT(*) FROM cdb_posts where fid = 604;</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> | COUNT(fid) |</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> | 79000 |</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> 1 row in set (0.03 sec)</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">mysql&gt; SELECT COUNT(tid) FROM cdb_posts where fid = 604;</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> | COUNT(tid) |</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> | 79000 |</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> 1 row in set (0.33 sec)</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">mysql&gt; SELECT COUNT(pid) FROM cdb_posts where fid = 604;</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> | COUNT(pid) |</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> | 79000 |</span><br />\r\n<span style=\"font-size:16px;\"> +------------+</span><br />\r\n<span style=\"font-size:16px;\"> 1 row in set (0.33 sec)</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">COUNT(*)通常是对主键进行索引扫描，而COUNT(COL)就不一定了，另外前者是统计表中的所有符合的纪录总数，而后者是计算表中所有符合的COL的纪录数。还有有区别的。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">COUNT时的WHERE</span><br />\r\n<span style=\"font-size:16px;\"> 这点以前就写过，详细请看《</span><a href=\"http://www.ccvita.com/156.html\"><span style=\"font-size:16px;\">Mysql中count(*),DISTINCT的使用方法和效率研究</span></a><span style=\"font-size:16px;\">》：http://www.ccvita.com/156.html</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">简单说下，就是COUNT的时候，如果没有WHERE限制的话，MySQL直接返回保存有总的行数</span><br />\r\n<span style=\"font-size:16px;\"> 而在有WHERE限制的情况下，总是需要对MySQL进行全表遍历。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">优化总结，对于MyISAM表来说：</span><br />\r\n<span style=\"font-size:16px;\"> 1.任何情况下SELECT COUNT(*) FROM tablename是最优选择；</span><br />\r\n<span style=\"font-size:16px;\"> 2.尽量减少SELECT COUNT(*) FROM tablename WHERE COL = \'value\' 这种查询；</span><br />\r\n<span style=\"font-size:16px;\"> 3.杜绝SELECT COUNT(COL) FROM tablename WHERE COL2 = \'value\' 的出现。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span><span style=\"line-height:24px;\">原文链接：<a href=\"http://www.ccvita.com/347.html\">http://www.ccvita.com/347.html</a></span></span>\r\n</p>',NULL,NULL,'2014-06-03 10:40:46',0,'MySQL优化之COUNT(*)效率',0),(139,'admin',30,'<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">最近发现了一个Mysql快速导入数据方法load data infile，具体参考http://www.taobaodba.com/html/558_loaddata.html,这个文章。</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 下面用几条命令来给大家看看，效率结果。</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 简单说下：</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1.txt ,开始只有10万数据，后来用vim 添加到了2000万行，用Windows下的编辑器直接卡机的，Windows下安装Gvim可以的。</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 数据表类型Innodb，没做任何的索引优化。</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1.导入10万行记录不到1秒</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; load data infile \'./1.txt\' into table article (keywords);</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> Query OK, 107200 rows affected (0.96 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> Records: 107200&nbsp;&nbsp;Deleted: 0&nbsp;&nbsp;Skipped: 0&nbsp;&nbsp;Warnings: 0</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 2.导入2000万行的数据量</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; load data infile \'./1.txt\' into table article (</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> Query OK, 20000000 rows affected (5 min 53.02 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> Records: 20000000&nbsp;&nbsp;Deleted: 0&nbsp;&nbsp;Skipped: 0&nbsp;&nbsp;Warnings: 0</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 3.在9000万中统计数据，注意和第四个对比</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; select count(id) from article ;</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | count(id) |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> |&nbsp;&nbsp;92893775 |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1 row in set (1 min 28.86 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 4.查询1亿1千万的数据，比上一个明显的时间多了。</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; select count(id) from article ;</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | count(id) |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | 112893775 |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1 row in set (5 min 18.83 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 5.用count(*)时间减少了25秒左右。</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; select count(*) from article ;</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | count(*)&nbsp;&nbsp;|</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | 112893775 |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1 row in set (4 min 5.53 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 6.用count(1)直接节省1分40秒</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; select count(1) from article ;</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | count(1)&nbsp;&nbsp;|</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | 112893775 |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1 row in set (3 min 36.59 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 2011年3月19日添加新的测试</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> MYISAM引擎</span><br />\r\n<br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> mysql&gt; select count(1) from test;</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | count(1)&nbsp;&nbsp;|</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> | 326039962 |</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> +-----------+</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 1 row in set (0.08 sec)</span><br />\r\n<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"> 过多的话，我不说了，大家看结果吧。</span>',NULL,'2014-06-03 12:14:54','2014-06-03 12:14:37',0,'MySQL优化--1亿条数据效率COUNT(*) ',0),(140,'admin',30,'<p>\r\n	<span style=\"font-size:16px;\">在处理一个大数据量数据库的时候</span><br />\r\n<span style=\"font-size:16px;\"> 突然发现mysql对于count(*)的不同处理会造成不同的结果</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">比如执行</span><br />\r\n<span style=\"font-size:16px;\"> SELECT count(*) FROM tablename</span><br />\r\n<span style=\"font-size:16px;\"> 即使对于千万级别的数据mysql也能非常迅速的返回结果</span><br />\r\n<span style=\"font-size:16px;\"> 而对于</span><br />\r\n<span style=\"font-size:16px;\"> SELECT count(*) FROM tablename WHERE.....</span><br />\r\n<span style=\"font-size:16px;\"> mysql的查询时间开始攀升</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">仔细查阅累下手册,发现当没有WHERE语句对于整个mysql的表进行count运算的时候</span><br />\r\n<span style=\"font-size:16px;\"> MyISAM类型的表中保存有总的行数,而当添加有WHERE限定语句的时候Mysql需要对整个表进行检索</span><br />\r\n<span style=\"font-size:16px;\"> 从而得出count的数值</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">突然又想起来看到的不少新兴的php程序对于count的处理并没有很好的意识到这点</span><br />\r\n<span style=\"font-size:16px;\"> 记录下</span><br />\r\n<span style=\"font-size:16px;\"> 顺便提下mysql的DISTINCT的关键字有很多你想不到的用处</span><br />\r\n<span style=\"font-size:16px;\"> 1.在count 不重复的记录的时候能用到</span><br />\r\n<span style=\"font-size:16px;\"> 比如SELECT COUNT( DISTINCT id ) FROM tablename;</span><br />\r\n<span style=\"font-size:16px;\"> 就是计算talbebname表中id不同的记录有多少条</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">2,在需要返回记录不同的id的具体值的时候可以用</span><br />\r\n<span style=\"font-size:16px;\"> 比如SELECT DISTINCT id FROM tablename;</span><br />\r\n<span style=\"font-size:16px;\"> 返回talbebname表中不同的id的具体的值</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">3.上面的情况2对于需要返回mysql表中2列以上的结果时会有歧义</span><br />\r\n<span style=\"font-size:16px;\"> 比如SELECT DISTINCT id, type FROM tablename;</span><br />\r\n<span style=\"font-size:16px;\"> 实际上返回的是 id与type同时不相同的结果,也就是DISTINCT同时作用了两个字段，必须得id与tyoe都相同的才被排除了,与我们期望的结果不一样</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">4.这时候可以考虑使用group_concat函数来进行排除,不过这个mysql函数是在mysql4.1以上才支持的</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">5.其实还有另外一种解决方式,就是使用</span><br />\r\n<span style=\"font-size:16px;\"> SELECT id, type, count(DISTINCT id) FROM tablename</span><br />\r\n<span style=\"font-size:16px;\"> 虽然这样的返回结果多了一列无用的count数据(或许你就需要这个我说的无用数据)</span><br />\r\n<span style=\"font-size:16px;\"> 返回的结果是 只有id不同的所有结果和上面的4类型可以互补使用,就是看你需要什么样的数据了</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\">PS:</span><br />\r\n<span style=\"font-size:16px;\"> 越来越发现有很多细节是需要去探究的,</span><br />\r\n<span style=\"font-size:16px;\"> 越来越发现自己写文字真的很杂乱,</span><br />\r\n<span style=\"font-size:16px;\"> 有空研究下DISTINCT的效率</span>\r\n</p>\r\n<p>\r\n	原文链接：<a href=\"http://www.ccvita.com/156.html\">http://www.ccvita.com/156.html</a>\r\n</p>',NULL,NULL,'2014-06-03 12:15:59',0,'Mysql中count(*),DISTINCT的使用方法和效率研究',0),(141,'admin',1,'<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">用wget指令直接下载libevent：# wget http://www.monkey.org/~provos/libevent-1.2.tar.gz</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">然后，在配置时需要指定一个安装路径，即./configure –prefix=/usr；然后make；然后make install；</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">详细的方法如下：</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># cd /tmp</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># wget http://www.monkey.org/~provos/libevent-1.2.tar.gz</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># tar zxvf libevent-1.2.tar.gz</span><br />\r\n<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># cd libevent-1.2</span><br />\r\n<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># ./configure –prefix=/usr</span><br />\r\n<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># make</span><br />\r\n<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"># make install</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">（注：在这里执行的时候出现错误：</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">1，no acceptable C compiler found in $PATH</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-size:15px;font-family:\'comic sans ms\', sans-serif;\">由于centos默认没有安装gcc，使用yum安装</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">#yum install gcc* make*</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">）</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">测试libevent是否安装成功：<br />\r\n# ls -al /usr/lib | grep libevent<br />\r\nlrwxrwxrwx 1 root root 21 11?? 12 17:38 libevent-1.2.so.1 -&gt; libevent-1.2.so.1.0.3<br />\r\n-rwxr-xr-x 1 root root 263546 11?? 12 17:38 libevent-1.2.so.1.0.3<br />\r\n-rw-r–r– 1 root root 454156 11?? 12 17:38 libevent.a<br />\r\n-rwxr-xr-x 1 root root 811 11?? 12 17:38 libevent.la<br />\r\nlrwxrwxrwx 1 root root 21 11?? 12 17:38 libevent.so -&gt; libevent-1.2.so.1.0.3<br />\r\n还不错，都安装上了。</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">以上参照http://www.cnblogs.com/yjf512/archive/2011/05/01/2033761.html 一切似乎很简单和很顺利，但是问题来了！！</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">当我写一个示例程序时（示例程序如下，程序参考：http://blog.csdn.net/robertkun/article/details/7885379）</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><img src=\"http://images.cnitblog.com/i/448111/201403/291019342033437.jpg\" alt=\"\" style=\"width:664px;\" /><img src=\"http://images.cnitblog.com/i/448111/201403/291019549699593.jpg\" alt=\"\" style=\"width:664px;\" /><img src=\"http://images.cnitblog.com/i/448111/201403/291020115477495.jpg\" alt=\"\" style=\"width:664px;\" /></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">当我编译以上程序的时候，出现了如下问题：</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><img src=\"http://images.cnitblog.com/i/448111/201403/291024207973081.jpg\" alt=\"\" style=\"width:664px;\" /></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">百度和Google都无果，再次确认安装好像也没有问题，以自己仅有的在linux下写C的经验，一般来说，可能是找不到libevent库，或者lbevent版本有问题，或者安装不完全，里面的代码一般是不会出现问题的，于是在想，是缺了什么，还是安装错了什么？</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">无意中看到一篇网上文章标题为：（http://www.codesky.net/article/201008/175058.html）</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong>CentOS安装php libevent &gt;= 1.4.11 could not be found</strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong>文章内容为：</strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">在安装php的时候出现如下错误</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">libevent &gt;= 1.4.11 could not be found</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">我的安装环境是</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">CentOS 5</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">php5.2.14</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">原因是如下的包没有安装</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">libevent-devel</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">把此包安装上去就好了</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">yum -y install libevent-devel</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong>虽然按照错误提示跟我的没有什么关系，它是的错误提示跟我的猜想有些问题，好吧，它的解决方法是安装缺少的包，那么对我来讲，应该是重新安装包了，反正就一个命令，yum完后奇迹出现了：</strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong><img src=\"http://images.cnitblog.com/i/448111/201403/291039285781049.jpg\" alt=\"\" style=\"width:664px;\" /></strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong>重新安装后，示例程序编译通过了</strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong><img src=\"http://images.cnitblog.com/i/448111/201403/291040219069122.jpg\" alt=\"\" style=\"width:664px;\" /></strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">查看一下进程，确实运行无误</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\"><strong><img src=\"http://images.cnitblog.com/i/448111/201403/291040092199033.jpg\" alt=\"\" style=\"width:664px;\" /></strong></span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">&nbsp;</span>\r\n</p>\r\n<p style=\"font-family:\'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:12.800000190734863px;background-color:#F5F5F5;\">\r\n	<span style=\"font-family:\'comic sans ms\', sans-serif;font-size:15px;\">至少，问题是解决了，但是问题的原因还是不怎么明白，希望接下来的学习可以解决这个疑问。</span>\r\n</p>',NULL,NULL,'2014-06-04 16:49:03',0,'Linux下libevent安装与示例',0),(142,'admin',30,'<p>\r\n	写在前面：索引对查询的速度有着至关重要的影响，理解索引也是进行数据库性能调优的起点。考虑如下情况，假设数据库中一个表有10^6条记录，DBMS的页面大小为4K，并存储100条记录。如果没有索引，查询将对整个表进行扫描，最坏的情况下，如果所有数据页都不在内存，需要读取10^4个页面，如果这10^4个页面在磁盘上随机分布，需要进行10^4次I/O，假设磁盘每次I/O时间为10ms(忽略数据传输时间)，则总共需要100s(但实际上要好很多很多)。如果对之建立B-Tree索引，则只需要进行log100(10^6)=3次页面读取，最坏情况下耗时30ms。这就是索引带来的效果，很多时候，当你的应用程序进行SQL查询速度很慢时，应该想想是否可以建索引。进入正题：\r\n</p>\r\n<p>\r\n	第二章、索引与优化\r\n</p>\r\n<p>\r\n	1、选择索引的数据类型\r\n</p>\r\n<p>\r\n	MySQL支持很多数据类型，选择合适的数据类型存储数据对性能有很大的影响。通常来说，可以遵循以下一些指导原则：\r\n</p>\r\n(1)越小的数据类型通常更好：越小的数据类型通常在磁盘、内存和CPU缓存中都需要更少的空间，处理起来更快。<br />\r\n(2)简单的数据类型更好：整型数据比起字符，处理开销更小，因为字符串的比较更复杂。在MySQL中，应该用内置的日期和时间数据类型，而不是用字符串来存储时间；以及用整型数据类型存储IP地址。<br />\r\n(3)尽量避免NULL：应该指定列为NOT NULL，除非你想存储NULL。在MySQL中，含有空值的列很难进行查询优化，因为它们使得索引、索引的统计信息以及比较运算更加复杂。你应该用0、一个特殊的值或者一个空串代替空值。<br />\r\n<br />\r\n1.1、选择标识符<br />\r\n选择合适的标识符是非常重要的。选择时不仅应该考虑存储类型，而且应该考虑MySQL是怎样进行运算和比较的。一旦选定数据类型，应该保证所有相关的表都使用相同的数据类型。<br />\r\n(1)&nbsp;&nbsp; &nbsp;整型：通常是作为标识符的最好选择，因为可以更快的处理，而且可以设置为AUTO_INCREMENT。<br />\r\n<p>\r\n	(2)&nbsp;&nbsp; &nbsp;字符串：尽量避免使用字符串作为标识符，它们消耗更好的空间，处理起来也较慢。而且，通常来说，字符串都是随机的，所以它们在索引中的位置也是随机的，这会导致页面分裂、随机访问磁盘，聚簇索引分裂（对于使用聚簇索引的存储引擎）。\r\n</p>\r\n<p>\r\n	2、索引入门<br />\r\n对于任何DBMS，索引都是进行优化的最主要的因素。对于少量的数据，没有合适的索引影响不是很大，但是，当随着数据量的增加，性能会急剧下降。<br />\r\n如果对多列进行索引(组合索引)，列的顺序非常重要，MySQL仅能对索引最左边的前缀进行有效的查找。例如：<br />\r\n假设存在组合索引it1c1c2(c1,c2)，查询语句select * from t1 where c1=1 and c2=2能够使用该索引。查询语句select * from t1 where c1=1也能够使用该索引。但是，查询语句select * from t1 where c2=2不能够使用该索引，因为没有组合索引的引导列，即，要想使用c2列进行查找，必需出现c1等于某值。<br />\r\n<br />\r\n2.1、索引的类型<br />\r\n索引是在存储引擎中实现的，而不是在服务器层中实现的。所以，每种存储引擎的索引都不一定完全相同，并不是所有的存储引擎都支持所有的索引类型。<br />\r\n2.1.1、B-Tree索引<br />\r\n假设有如下一个表：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					CREATE TABLE People (\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;last_name&nbsp;varchar(50)&nbsp;&nbsp;&nbsp; not null,\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;first_name varchar(50)&nbsp;&nbsp;&nbsp; not null,\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;dob&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; not null,\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;gender&nbsp;&nbsp;&nbsp;&nbsp; enum(\'m\', \'f\') not null,\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;key(last_name, first_name, dob)\r\n				</p>\r\n				<p>\r\n					);\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;其索引包含表中每一行的last_name、first_name和dob列。其结构大致如下：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-01.JPG\" width=\"671\" height=\"454\" />&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;索引存储的值按索引列中的顺序排列。可以利用B-Tree索引进行全关键字、关键字范围和关键字前缀查询，当然，如果想使用索引，你必须保证按索引的最左边前缀(leftmost prefix of the index)来进行查询。<br />\r\n(1)匹配全值(Match the full value)：对索引中的所有列都指定具体的值。例如，上图中索引可以帮助你查找出生于1960-01-01的Cuba Allen。<br />\r\n(2)匹配最左前缀(Match a leftmost prefix)：你可以利用索引查找last name为Allen的人，仅仅使用索引中的第1列。<br />\r\n(3)匹配列前缀(Match a column prefix)：例如，你可以利用索引查找last name以J开始的人，这仅仅使用索引中的第1列。<br />\r\n(4)匹配值的范围查询(Match a range of values)：可以利用索引查找last name在Allen和Barrymore之间的人，仅仅使用索引中第1列。<br />\r\n(5)匹配部分精确而其它部分进行范围匹配(Match one part exactly and match a range on another part)：可以利用索引查找last name为Allen，而first name以字母K开始的人。<br />\r\n(6)仅对索引进行查询(Index-only queries)：如果查询的列都位于索引中，则不需要读取元组的值。<br />\r\n由于B-树中的节点都是顺序存储的，所以可以利用索引进行查找(找某些值)，也可以对查询结果进行ORDER BY。当然，使用B-tree索引有以下一些限制：<br />\r\n(1) 查询必须从索引的最左边的列开始。关于这点已经提了很多遍了。例如你不能利用索引查找在某一天出生的人。<br />\r\n(2) 不能跳过某一索引列。例如，你不能利用索引查找last name为Smith且出生于某一天的人。<br />\r\n(3) 存储引擎不能使用索引中范围条件右边的列。例如，如果你的查询语句为WHERE last_name=\"Smith\" AND first_name LIKE \'J%\' AND dob=\'1976-12-23\'，则该查询只会使用索引中的前两列，因为LIKE是范围查询。\r\n</p>\r\n<p>\r\n	2.1.2、Hash索引<br />\r\nMySQL中，只有Memory存储引擎显示支持hash索引，是Memory表的默认索引类型，尽管Memory表也可以使用B-Tree索引。Memory存储引擎支持非唯一hash索引，这在数据库领域是罕见的，如果多个值有相同的hash code，索引把它们的行指针用链表保存到同一个hash表项中。<br />\r\n假设创建如下一个表：<br />\r\nCREATE TABLE testhash (<br />\r\n&nbsp;&nbsp; fname VARCHAR(50) NOT NULL,<br />\r\n&nbsp;&nbsp; lname VARCHAR(50) NOT NULL,<br />\r\n&nbsp;&nbsp; KEY USING HASH(fname)<br />\r\n) ENGINE=MEMORY;<br />\r\n包含的数据如下：<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-02.JPG\" width=\"236\" height=\"171\" /> \r\n</p>\r\n<p>\r\n	假设索引使用hash函数f( )，如下：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					f(\'Arjen\') = 2323\r\n				</p>\r\n				<p>\r\n					f(\'Baron\') = 7437\r\n				</p>\r\n				<p>\r\n					f(\'Peter\') = 8784\r\n				</p>\r\n				<p>\r\n					f(\'Vadim\') = 2458\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	此时，索引的结构大概如下：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-03.JPG\" width=\"500\" height=\"137\" />&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;Slots是有序的，但是记录不是有序的。当你执行<br />\r\nmysql&gt; SELECT lname FROM testhash WHERE fname=\'Peter\';<br />\r\nMySQL会计算’Peter’的hash值，然后通过它来查询索引的行指针。因为f(\'Peter\') = 8784，MySQL会在索引中查找8784，得到指向记录3的指针。<br />\r\n因为索引自己仅仅存储很短的值，所以，索引非常紧凑。Hash值不取决于列的数据类型，一个TINYINT列的索引与一个长字符串列的索引一样大。<br />\r\n&nbsp;<br />\r\nHash索引有以下一些限制：<br />\r\n(1)由于索引仅包含hash code和记录指针，所以，MySQL不能通过使用索引避免读取记录。但是访问内存中的记录是非常迅速的，不会对性造成太大的影响。<br />\r\n(2)不能使用hash索引排序。<br />\r\n(3)Hash索引不支持键的部分匹配，因为是通过整个索引值来计算hash值的。<br />\r\n(4)Hash索引只支持等值比较，例如使用=，IN( )和&lt;=&gt;。对于WHERE price&gt;100并不能加速查询。<br />\r\n2.1.3、空间(R-Tree)索引<br />\r\nMyISAM支持空间索引，主要用于地理空间数据类型，例如GEOMETRY。<br />\r\n2.1.4、全文(Full-text)索引<br />\r\n全文索引是MyISAM的一个特殊索引类型，主要用于全文检索。\r\n</p>\r\n<p>\r\n	3、高性能的索引策略<br />\r\n3.1、聚簇索引(Clustered Indexes)<br />\r\n聚簇索引保证关键字的值相近的元组存储的物理位置也相同（所以字符串类型不宜建立聚簇索引，特别是随机字符串，会使得系统进行大量的移动操作），且一个表只能有一个聚簇索引。因为由存储引擎实现索引，所以，并不是所有的引擎都支持聚簇索引。目前，只有solidDB和InnoDB支持。<br />\r\n聚簇索引的结构大致如下：<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-04.JPG\" width=\"659\" height=\"490\" /><br />\r\n&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;注：叶子页面包含完整的元组，而内节点页面仅包含索引的列(索引的列为整型)。一些DBMS允许用户指定聚簇索引，但是MySQL的存储引擎到目前为止都不支持。InnoDB对主键建立聚簇索引。如果你不指定主键，InnoDB会用一个具有唯一且非空值的索引来代替。如果不存在这样的索引，InnoDB会定义一个隐藏的主键，然后对其建立聚簇索引。一般来说，DBMS都会以聚簇索引的形式来存储实际的数据，它是其它二级索引的基础。\r\n</p>\r\n<p>\r\n	3.1.1、InnoDB和MyISAM的数据布局的比较<br />\r\n为了更加理解聚簇索引和非聚簇索引，或者primary索引和second索引(MyISAM不支持聚簇索引)，来比较一下InnoDB和MyISAM的数据布局，对于如下表：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					CREATE TABLE layout_test (\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;col1 int NOT NULL,\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;col2 int NOT NULL,\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;PRIMARY KEY(col1),\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;KEY(col2)\r\n				</p>\r\n				<p>\r\n					);\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;假设主键的值位于1---10,000之间，且按随机顺序插入，然后用OPTIMIZE TABLE进行优化。col2随机赋予1---100之间的值，所以会存在许多重复的值。<br />\r\n(1)&nbsp;&nbsp; &nbsp;MyISAM的数据布局<br />\r\n其布局十分简单，MyISAM按照插入的顺序在磁盘上存储数据，如下：<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-05.JPG\" width=\"180\" height=\"209\" /> \r\n</p>\r\n<p>\r\n	&nbsp;注：左边为行号(row number)，从0开始。因为元组的大小固定，所以MyISAM可以很容易的从表的开始位置找到某一字节的位置。<br />\r\n据些建立的primary key的索引结构大致如下：<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-06.JPG\" width=\"583\" height=\"246\" /> \r\n</p>\r\n<p>\r\n	&nbsp;注：MyISAM不支持聚簇索引，索引中每一个叶子节点仅仅包含行号(row number)，且叶子节点按照col1的顺序存储。<br />\r\n来看看col2的索引结构：<br />\r\n<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-07.JPG\" width=\"470\" height=\"247\" /> \r\n</p>\r\n<p>\r\n	&nbsp;实际上，在MyISAM中，primary key和其它索引没有什么区别。Primary key仅仅只是一个叫做PRIMARY的唯一，非空的索引而已。<br />\r\n<br />\r\n(2)&nbsp;&nbsp; &nbsp;InnoDB的数据布局<br />\r\nInnoDB按聚簇索引的形式存储数据，所以它的数据布局有着很大的不同。它存储表的结构大致如下：<br />\r\n<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-08.JPG\" width=\"658\" height=\"304\" /> \r\n</p>\r\n<p>\r\n	&nbsp;注：聚簇索引中的每个叶子节点包含primary key的值，事务ID和回滚指针(rollback pointer)——用于事务和MVCC，和余下的列(如col2)。<br />\r\n<br />\r\n相对于MyISAM，二级索引与聚簇索引有很大的不同。InnoDB的二级索引的叶子包含primary key的值，而不是行指针(row pointers)，这减小了移动数据或者数据页面分裂时维护二级索引的开销，因为InnoDB不需要更新索引的行指针。其结构大致如下：<br />\r\n<br />\r\n<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-09.JPG\" width=\"657\" height=\"248\" /> \r\n</p>\r\n<p>\r\n	&nbsp;聚簇索引和非聚簇索引表的对比：\r\n</p>\r\n<p>\r\n	&nbsp;<img alt=\"\" src=\"http://images.cnblogs.com/cnblogs_com/hustcat/mysql/mysql02-10.JPG\" width=\"665\" height=\"579\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	&nbsp;3.1.2、按primary key的顺序插入行(InnoDB)\r\n</p>\r\n<p>\r\n	如果你用InnoDB，而且不需要特殊的聚簇索引，一个好的做法就是使用代理主键(surrogate key)——独立于你的应用中的数据。最简单的做法就是使用一个AUTO_INCREMENT的列，这会保证记录按照顺序插入，而且能提高使用primary key进行连接的查询的性能。应该尽量避免随机的聚簇主键，例如，字符串主键就是一个不好的选择，它使得插入操作变得随机。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;3.2、覆盖索引(Covering Indexes)<br />\r\n如果索引包含满足查询的所有数据，就称为覆盖索引。覆盖索引是一种非常强大的工具，能大大提高查询性能。只需要读取索引而不用读取数据有以下一些优点：<br />\r\n(1)索引项通常比记录要小，所以MySQL访问更少的数据；<br />\r\n(2)索引都按值的大小顺序存储，相对于随机访问记录，需要更少的I/O；<br />\r\n(3)大多数据引擎能更好的缓存索引。比如MyISAM只缓存索引。<br />\r\n(4)覆盖索引对于InnoDB表尤其有用，因为InnoDB使用聚集索引组织数据，如果二级索引中包含查询所需的数据，就不再需要在聚集索引中查找了。<br />\r\n覆盖索引不能是任何索引，只有B-TREE索引存储相应的值。而且不同的存储引擎实现覆盖索引的方式都不同，并不是所有存储引擎都支持覆盖索引(Memory和Falcon就不支持)。<br />\r\n对于索引覆盖查询(index-covered query)，使用EXPLAIN时，可以在Extra一列中看到“Using index”。例如，在sakila的inventory表中，有一个组合索引(store_id,film_id)，对于只需要访问这两列的查询，MySQL就可以使用索引，如下：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					mysql&gt; EXPLAIN SELECT store_id, film_id FROM sakila.inventory\\G\r\n				</p>\r\n				<p>\r\n					*************************** 1. row ***************************\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: 1\r\n				</p>\r\n				<p>\r\n					&nbsp;select_type: SIMPLE\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table: inventory\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: index\r\n				</p>\r\n				<p>\r\n					possible_keys: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key: idx_store_id_film_id\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_len: 3\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows: 5007\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extra: Using index\r\n				</p>\r\n				<p>\r\n					1 row in set (0.17 sec)\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	在大多数引擎中，只有当查询语句所访问的列是索引的一部分时，索引才会覆盖。但是，InnoDB不限于此，InnoDB的二级索引在叶子节点中存储了primary key的值。因此，sakila.actor表使用InnoDB，而且对于是last_name上有索引，所以，索引能覆盖那些访问actor_id的查询，如：\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					mysql&gt; EXPLAIN SELECT actor_id, last_name\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;-&gt; FROM sakila.actor WHERE last_name = \'HOPPER\'\\G\r\n				</p>\r\n				<p>\r\n					*************************** 1. row ***************************\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: 1\r\n				</p>\r\n				<p>\r\n					&nbsp;select_type: SIMPLE\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table: actor\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: ref\r\n				</p>\r\n				<p>\r\n					possible_keys: idx_actor_last_name\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key: idx_actor_last_name\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_len: 137\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref: const\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows: 2\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extra: Using where; Using index\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	3.3、利用索引进行排序<br />\r\nMySQL中，有两种方式生成有序结果集：一是使用filesort，二是按索引顺序扫描。利用索引进行排序操作是非常快的，而且可以利用同一索引同时进行查找和排序操作。当索引的顺序与ORDER BY中的列顺序相同且所有的列是同一方向(全部升序或者全部降序)时，可以使用索引来排序。如果查询是连接多个表，仅当ORDER BY中的所有列都是第一个表的列时才会使用索引。其它情况都会使用filesort。\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					create table actor(\r\n				</p>\r\n				<p>\r\n					actor_id&nbsp;int unsigned NOT NULL AUTO_INCREMENT,\r\n				</p>\r\n				<p>\r\n					name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;varchar(16) NOT NULL DEFAULT \'\',\r\n				</p>\r\n				<p>\r\n					password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; varchar(16) NOT NULL DEFAULT \'\',\r\n				</p>\r\n				<p>\r\n					PRIMARY KEY(actor_id),\r\n				</p>\r\n				<p>\r\n					&nbsp;KEY&nbsp;&nbsp;&nbsp;&nbsp; (name)\r\n				</p>\r\n				<p>\r\n					) ENGINE=InnoDB\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'cat01\',\'1234567\');\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'cat02\',\'1234567\');\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'ddddd\',\'1234567\');\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'aaaaa\',\'1234567\');\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					mysql&gt; explain select actor_id from actor order by actor_id \\G\r\n				</p>\r\n				<p>\r\n					*************************** 1. row ***************************\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: 1\r\n				</p>\r\n				<p>\r\n					&nbsp;select_type: SIMPLE\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table: actor\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: index\r\n				</p>\r\n				<p>\r\n					possible_keys: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key: PRIMARY\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_len: 4\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows: 4\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extra:&nbsp;Using index\r\n				</p>\r\n				<p>\r\n					1 row in set (0.00 sec)\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					mysql&gt; explain select actor_id from actor order by password \\G\r\n				</p>\r\n				<p>\r\n					*************************** 1. row ***************************\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: 1\r\n				</p>\r\n				<p>\r\n					&nbsp;select_type: SIMPLE\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table: actor\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: ALL\r\n				</p>\r\n				<p>\r\n					possible_keys: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_len: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows: 4\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extra:&nbsp;Using filesort\r\n				</p>\r\n				<p>\r\n					1 row in set (0.00 sec)\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					mysql&gt; explain select actor_id from actor order by name \\G\r\n				</p>\r\n				<p>\r\n					*************************** 1. row ***************************\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: 1\r\n				</p>\r\n				<p>\r\n					&nbsp;select_type: SIMPLE\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table: actor\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: index\r\n				</p>\r\n				<p>\r\n					possible_keys: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key: name\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_len: 18\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows: 4\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extra:&nbsp;Using index\r\n				</p>\r\n				<p>\r\n					1 row in set (0.00 sec)\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;当MySQL不能使用索引进行排序时，就会利用自己的排序算法(快速排序算法)在内存(sort buffer)中对数据进行排序，如果内存装载不下，它会将磁盘上的数据进行分块，再对各个数据块进行排序，然后将各个块合并成有序的结果集（实际上就是外排序）。对于filesort，MySQL有两种排序算法。<br />\r\n(1)两遍扫描算法(Two passes)<br />\r\n实现方式是先将须要排序的字段和可以直接定位到相关行数据的指针信息取出，然后在设定的内存（通过参数sort_buffer_size设定）中进行排序，完成排序之后再次通过行指针信息取出所需的Columns。<br />\r\n注：该算法是4.1之前采用的算法，它需要两次访问数据，尤其是第二次读取操作会导致大量的随机I/O操作。另一方面，内存开销较小。<br />\r\n(3)&nbsp;&nbsp; &nbsp;一次扫描算法(single pass)<br />\r\n该算法一次性将所需的Columns全部取出，在内存中排序后直接将结果输出。<br />\r\n注：从 MySQL 4.1 版本开始使用该算法。它减少了I/O的次数，效率较高，但是内存开销也较大。如果我们将并不需要的Columns也取出来，就会极大地浪费排序过程所需要的内存。在 MySQL 4.1 之后的版本中，可以通过设置 max_length_for_sort_data 参数来控制 MySQL 选择第一种排序算法还是第二种。当取出的所有大字段总大小大于 max_length_for_sort_data 的设置时，MySQL 就会选择使用第一种排序算法，反之，则会选择第二种。为了尽可能地提高排序性能，我们自然更希望使用第二种排序算法，所以在 Query 中仅仅取出需要的 Columns 是非常有必要的。<br />\r\n<br />\r\n当对连接操作进行排序时，如果ORDER BY仅仅引用第一个表的列，MySQL对该表进行filesort操作，然后进行连接处理，此时，EXPLAIN输出“Using filesort”；否则，MySQL必须将查询的结果集生成一个临时表，在连接完成之后进行filesort操作，此时，EXPLAIN输出“Using temporary;Using filesort”。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	3.4、索引与加锁<br />\r\n索引对于InnoDB非常重要，因为它可以让查询锁更少的元组。这点十分重要，因为MySQL 5.0中，InnoDB直到事务提交时才会解锁。有两个方面的原因：首先，即使InnoDB行级锁的开销非常高效，内存开销也较小，但不管怎么样，还是存在开销。其次，对不需要的元组的加锁，会增加锁的开销，降低并发性。<br />\r\nInnoDB仅对需要访问的元组加锁，而索引能够减少InnoDB访问的元组数。但是，只有在存储引擎层过滤掉那些不需要的数据才能达到这种目的。一旦索引不允许InnoDB那样做（即达不到过滤的目的），MySQL服务器只能对InnoDB返回的数据进行WHERE操作，此时，已经无法避免对那些元组加锁了：InnoDB已经锁住那些元组，服务器无法解锁了。<br />\r\n来看个例子：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					create table actor(\r\n				</p>\r\n				<p>\r\n					actor_id&nbsp;int unsigned NOT NULL AUTO_INCREMENT,\r\n				</p>\r\n				<p>\r\n					name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;varchar(16) NOT NULL DEFAULT \'\',\r\n				</p>\r\n				<p>\r\n					password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; varchar(16) NOT NULL DEFAULT \'\',\r\n				</p>\r\n				<p>\r\n					PRIMARY KEY(actor_id),\r\n				</p>\r\n				<p>\r\n					&nbsp;KEY&nbsp;&nbsp;&nbsp;&nbsp; (name)\r\n				</p>\r\n				<p>\r\n					) ENGINE=InnoDB\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'cat01\',\'1234567\');\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'cat02\',\'1234567\');\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'ddddd\',\'1234567\');\r\n				</p>\r\n				<p>\r\n					insert into actor(name,password) values(\'aaaaa\',\'1234567\');\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					SET AUTOCOMMIT=0;\r\n				</p>\r\n				<p>\r\n					BEGIN;\r\n				</p>\r\n				<p>\r\n					SELECT actor_id FROM actor WHERE actor_id &lt; 4\r\n				</p>\r\n				<p>\r\n					AND actor_id &lt;&gt; 1 FOR UPDATE;\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;该查询仅仅返回2---3的数据，实际已经对1---3的数据加上排它锁了。InnoDB锁住元组1是因为MySQL的查询计划仅使用索引进行范围查询（而没有进行过滤操作，WHERE中第二个条件已经无法使用索引了）：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					mysql&gt; EXPLAIN SELECT actor_id FROM test.actor\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;-&gt; WHERE actor_id &lt; 4 AND actor_id &lt;&gt; 1 FOR UPDATE \\G\r\n				</p>\r\n				<p>\r\n					*************************** 1. row ***************************\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: 1\r\n				</p>\r\n				<p>\r\n					&nbsp;select_type: SIMPLE\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table: actor\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: index\r\n				</p>\r\n				<p>\r\n					possible_keys: PRIMARY\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key: PRIMARY\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_len: 4\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ref: NULL\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows: 4\r\n				</p>\r\n				<p>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extra: Using where; Using index\r\n				</p>\r\n				<p>\r\n					1 row in set (0.00 sec)\r\n				</p>\r\n				<p>\r\n					&nbsp;\r\n				</p>\r\n				<p>\r\n					mysql&gt;\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;表明存储引擎从索引的起始处开始，获取所有的行，直到actor_id&lt;4为假，服务器无法告诉InnoDB去掉元组1。<br />\r\n为了证明row 1已经被锁住，我们另外建一个连接，执行如下操作：\r\n</p>\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					SET AUTOCOMMIT=0;\r\n				</p>\r\n				<p>\r\n					BEGIN;\r\n				</p>\r\n				<p>\r\n					SELECT actor_id FROM actor WHERE actor_id = 1 FOR UPDATE;\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;该查询会被挂起，直到第一个连接的事务提交释放锁时，才会执行（这种行为对于基于语句的复制(statement-based replication)是必要的）。<br />\r\n如上所示，当使用索引时，InnoDB会锁住它不需要的元组。更糟糕的是，如果查询不能使用索引，MySQL会进行全表扫描，并锁住每一个元组，不管是否真正需要。\r\n</p>\r\n<p>\r\n	原文链接：http://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html\r\n</p>',NULL,NULL,'2014-06-04 23:36:54',0,'理解MySQL——索引与优化',0),(143,'admin',14,'<p>\r\n	原文地址：<a href=\"http://tutorials.jenkov.com/java-nio/nio-vs-io.html\" target=\"_blank\">http://tutorials.jenkov.com/java-nio/nio-vs-io.html</a> \r\n</p>\r\n<p>\r\n	作者：Jakob Jenkov &nbsp;&nbsp;译者：郭蕾 &nbsp; &nbsp;校对：方腾飞\r\n</p>\r\n<p>\r\n	当学习了Java NIO和IO的API后，一个问题马上涌入脑海：\r\n</p>\r\n<p>\r\n	我应该何时使用IO，何时使用NIO呢？在本文中，我会尽量清晰地解析Java NIO和IO的差异、它们的使用场景，以及它们如何影响您的代码设计。\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	Java NIO和IO的主要区别\r\n</h1>\r\n<p>\r\n	下表总结了Java NIO和IO之间的主要差别，我会更详细地描述表中每部分的差异。\r\n</p>\r\n<h1>\r\n</h1>\r\n<pre class=\"prettyprint lang-java\">IO                NIO\r\n面向流            面向缓冲\r\n阻塞IO            非阻塞IO\r\n无                选择器</pre>\r\n<br />\r\n<h1>\r\n	面向流与面向缓冲\r\n</h1>\r\n<p>\r\n	Java NIO和IO之间第一个最大的区别是，IO是面向流的，NIO是面向缓冲区的。&nbsp;Java IO面向流意味着每次从流中读一个或多个字节，直至读取所有字节，它们没有被缓存在任何地方。此外，它不能前后移动流中的数据。如果需要前后移动从流中读取的数据，需要先将它缓存到一个缓冲区。 Java NIO的缓冲导向方法略有不同。数据读取到一个它稍后处理的缓冲区，需要时可在缓冲区中前后移动。这就增加了处理过程中的灵活性。但是，还需要检查是否该缓冲区中包含所有您需要处理的数据。而且，需确保当更多的数据读入缓冲区时，不要覆盖缓冲区里尚未处理的数据。\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	阻塞与非阻塞IO\r\n</h1>\r\n<p>\r\n	Java IO的各种流是阻塞的。这意味着，当一个线程调用read() 或 write()时，该线程被阻塞，直到有一些数据被读取，或数据完全写入。该线程在此期间不能再干任何事情了。 Java NIO的非阻塞模式，使一个线程从某通道发送请求读取数据，但是它仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取。而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其他的事情。 非阻塞写也是如此。一个线程请求写入一些数据到某通道，但不需要等待它完全写入，这个线程同时可以去做别的事情。 线程通常将非阻塞IO的空闲时间用于在其它通道上执行IO操作，所以一个单独的线程现在可以管理多个输入和输出通道（channel）。\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	选择器（Selectors）\r\n</h1>\r\n<p>\r\n	Java NIO的选择器允许一个单独的线程来监视多个输入通道，你可以注册多个通道使用一个选择器，然后使用一个单独的线程来“选择”通道：这些通道里已经有可以处理的输入，或者选择已准备写入的通道。这种选择机制，使得一个单独的线程很容易来管理多个通道。\r\n</p>\r\n<h1>\r\n</h1>\r\n<h1>\r\n	NIO和IO如何影响应用程序的设计\r\n</h1>\r\n<p>\r\n	无论您选择IO或NIO工具箱，可能会影响您应用程序设计的以下几个方面：\r\n</p>\r\n<ol>\r\n	<li>\r\n		&nbsp;对NIO或IO类的API调用。\r\n	</li>\r\n	<li>\r\n		数据处理。\r\n	</li>\r\n	<li>\r\n		用来处理数据的线程数。\r\n	</li>\r\n</ol>\r\n<h2>\r\n	API调用\r\n</h2>\r\n<p>\r\n	当然，使用NIO的API调用时看起来与使用IO时有所不同，但这并不意外，因为并不是仅从一个InputStream逐字节读取，而是数据必须先读入缓冲区再处理。\r\n</p>\r\n<h2>\r\n	数据处理\r\n</h2>\r\n<p>\r\n	使用纯粹的NIO设计相较IO设计，数据处理也受到影响。\r\n</p>\r\n<p>\r\n	在IO设计中，我们从InputStream或 Reader逐字节读取数据。假设你正在处理一基于行的文本数据流，例如：\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">Name: Anna\r\nAge: 25\r\nEmail: anna@mailserver.com\r\nPhone: 1234567890</pre>\r\n</p>\r\n<p>\r\n	该文本行的流可以这样处理：<br />\r\n<pre class=\"prettyprint lang-java\">BufferedReader reader = new BufferedReader(new InputStreamReader(input));\r\n\r\nString nameLine   = reader.readLine();\r\nString ageLine    = reader.readLine();\r\nString emailLine  = reader.readLine();\r\nString phoneLine  = reader.readLine();</pre>\r\n</p>\r\n<div>\r\n	<div>\r\n	</div>\r\n</div>\r\n<p>\r\n	请注意处理状态由程序执行多久决定。换句话说，一旦reader.readLine()方法返回，你就知道肯定文本行就已读完， readline()阻塞直到整行读完，这就是原因。你也知道此行包含名称；同样，第二个readline()调用返回的时候，你知道这行包含年龄等。 正如你可以看到，该处理程序仅在有新数据读入时运行，并知道每步的数据是什么。一旦正在运行的线程已处理过读入的某些数据，该线程不会再回退数据（大多如此）。下图也说明了这条原则：<img alt=\"\" src=\"http://shellblog.sinaapp.com/upload/nio-vs-io-1.png\" style=\"height:auto;width:auto;\" />（Java IO: 从一个阻塞的流中读数据） 而一个NIO的实现会有所不同，下面是一个简单的例子：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">ByteBuffer buffer = ByteBuffer.allocate(48);\r\n\r\nint bytesRead = inChannel.read(buffer);</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	注意第二行，从通道读取字节到ByteBuffer。当这个方法调用返回时，你不知道你所需的所有数据是否在缓冲区内。你所知道的是，该缓冲区包含一些字节，这使得处理有点困难。<br />\r\n假设第一次 read(buffer)调用后，读入缓冲区的数据只有半行，例如，“Name:An”，你能处理数据吗？显然不能，需要等待，直到整行数据读入缓存，在此之前，对数据的任何处理毫无意义。\r\n</p>\r\n<p>\r\n	所以，你怎么知道是否该缓冲区包含足够的数据可以处理呢？好了，你不知道。发现的方法只能查看缓冲区中的数据。其结果是，在你知道所有数据都在缓冲区里之前，你必须检查几次缓冲区的数据。这不仅效率低下，而且可以使程序设计方案杂乱不堪。例如：\r\n</p>\r\n<div>\r\n<pre class=\"prettyprint lang-java\">ByteBuffer buffer = ByteBuffer.allocate(48);\r\n\r\nint bytesRead = inChannel.read(buffer);\r\n\r\nwhile(! bufferFull(bytesRead) ) {\r\n\r\nbytesRead = inChannel.read(buffer);\r\n\r\n}</pre>\r\n<br />\r\n</div>\r\n<p>\r\n	bufferFull()方法必须跟踪有多少数据读入缓冲区，并返回真或假，这取决于缓冲区是否已满。换句话说，如果缓冲区准备好被处理，那么表示缓冲区满了。\r\n</p>\r\n<p>\r\n	bufferFull()方法扫描缓冲区，但必须保持在bufferFull（）方法被调用之前状态相同。如果没有，下一个读入缓冲区的数据可能无法读到正确的位置。这是不可能的，但却是需要注意的又一问题。\r\n</p>\r\n<p>\r\n	如果缓冲区已满，它可以被处理。如果它不满，并且在你的实际案例中有意义，你或许能处理其中的部分数据。但是许多情况下并非如此。下图展示了“缓冲区数据循环就绪”：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://shellblog.sinaapp.com/upload/nio-vs-io-2.png\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p>\r\n	Java NIO:从一个通道里读数据，直到所有的数据都读到缓冲区里.\r\n</p>\r\n<p>\r\n	3) 用来处理数据的线程数\r\n</p>\r\n<p>\r\n	NIO可让您只使用一个（或几个）单线程管理多个通道（网络连接或文件），但付出的代价是解析数据可能会比从一个阻塞流中读取数据更复杂。\r\n</p>\r\n<p>\r\n	如果需要管理同时打开的成千上万个连接，这些连接每次只是发送少量的数据，例如聊天服务器，实现NIO的服务器可能是一个优势。同样，如果你需要维持许多打开的连接到其他计算机上，如P2P网络中，使用一个单独的线程来管理你所有出站连接，可能是一个优势。一个线程多个连接的设计方案如下图所示：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://shellblog.sinaapp.com/upload/nio-vs-io-3.png\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p>\r\n	Java NIO: 单线程管理多个连接\r\n</p>\r\n<p>\r\n	如果你有少量的连接使用非常高的带宽，一次发送大量的数据，也许典型的IO服务器实现可能非常契合。下图说明了一个典型的IO服务器设计：\r\n</p>\r\n<p>\r\n	<img alt=\"\" src=\"http://shellblog.sinaapp.com/upload/nio-vs-io-4.png\" style=\"height:auto;width:auto;\" /> \r\n</p>\r\n<p>\r\n	Java IO: 一个典型的IO服务器设计- 一个连接通过一个线程处理.\r\n</p>\r\n<p>\r\n	（全文完）如果您喜欢此文请点赞，分享，评论。\r\n</p>\r\n<hr />\r\n<ul>\r\n	<li>\r\n		原创文章转载请注明出处：<a href=\"http://ifeve.com/java-nio-vs-io/\">Java NIO系列教程（十二） Java NIO与IO</a> \r\n	</li>\r\n</ul>',NULL,NULL,'2014-06-05 06:46:29',0,'Java NIO系列教程（十二） Java NIO与IO',0),(144,'admin',15,'<p>\r\n	<img alt=\"0\" src=\"http://i7.hexunimg.cn/2014-06-06/165442616.jpg\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">炒股第一大忌是满时。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">所谓满时,指的是投资者一年四季,都始终不停地操作。</span><a href=\"http://c.hexun.com/\" target=\"_blank\"><span style=\"font-size:14px;line-height:2;\">炒股</span></a><span style=\"font-size:14px;line-height:2;\">最重要的：是研判大势。当大势向好时,要积极做多；大势转弱时,要空仓休息。有的投资者却不是这样做,他们不管股市冷暖,都不停地劳作,象勤劳的蜜蜂一样,为了蝇头小利而忙忙碌碌。他们这样做,不仅会劳而无功,而且还会因此遭遇到更多的风险。投资者在股市中,要学会审时度势,根据趋势变化,适时休息,这样才能在股市中准确地把握,应该参与的机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">炒股第二大忌是急于挽回损失。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">在暴跌市中投资者往往被套严重,帐面损失巨大,有的投资者急于挽回损失,随意的增加操作频率,或投入更多的资金.这种做法不仅是徒劳无功的,还会加重亏损程度。在大势较弱的情况下,投资者应该少操作或尽量不操作股票,静心等待大势转暖,趋势明朗后再介入比较安全可靠。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">炒股第三大忌是满利。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">满利是指投资者总想买在最低价和卖在最高价,一味地追求利润最大化。有的投资者喜欢追求暴利,总想把一只股票的所有利润全部拿下,结果是经常来来回回的做电梯。不要争取最大化的利润,而要争取最有可能实现的利润。稳步增长,才是赚钱之正道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p>\r\n	<p>\r\n		<img alt=\"-\" src=\"http://i2.hexunimg.cn/2014-06-06/165442617.jpg\" /> \r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">炒股第四大忌急于抢反弹。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">特别是在跌势未尽的行情里,抢反弹如同是“火中取栗”,稍有不慎,就有可能引火上身。在近期的市场环境下,不存在踏空的可能性,投资者千万不要因为贪图反弹的蝇头小利,而冒被深套的风险。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">炒股第五大忌是满仓。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">中国股市中的第一代大户中,其中大部分是因为过度满仓（透支）而被打穿的,最终落个被交易所强制平仓出局的下场。炒股和做人一样,凡事要留有回旋余地,方能进退自如。对于散户而言,投入股市的钱,如果都是养家糊口的养命钱,一旦满仓被套,巨大的心理压力下造成的忧虑情绪,必将影响对后市行情的分析判断,最后结果不言而喻。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">炒股第六大忌过于恐慌。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">恐慌是投资者在暴跌市中最常出现的情绪。在股市中,有涨就有跌,有慢就有快,其实这是很自然的规律,只要股市始终存在,它就不会永远跌下去,最终毕竟会有上涨的时候。投资者应该乘着股市低迷的时候,认真学习研究,积极选股,及早做好迎接牛市的准备,以免行情转好时又犯追涨杀跌的老毛病。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">炒股第七大忌是自满。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:2;\">有的投资者在刚进入股市的时候,还常常能有所斩获,等到变成老股民以后,因为赚了些钱,学了些指标,读了几本书,就渐渐的盲目自信起来,追涨杀跌,快速进出,结果,反而输多赢少,亏损严重。骄傲自满会阻碍投资者提高操作水平,会使投资者对股市的认识出现偏差。股市的发展是日新月异的,任何人如果骄傲自满,就会停滞不前,最终必将被股市所淘汰。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;line-height:28px;\">原文链接：<a href=\"http://money.hexun.com/2014-06-06/165442615.html\">http://money.hexun.com/2014-06-06/165442615.html</a></span>\r\n	</p>\r\n</p>',NULL,NULL,'2014-06-06 09:27:31',0,'读懂这7条规则 你就读懂了中国股市',0),(145,'admin',22,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">关于“Google在Android平台使用Java侵犯知识产权”一案，2014年5月，联邦法院判定Oracle获胜，这个结果完全出人意料，因为这样一来无异于打开了软件开发领域中API使用方式的潘多拉之盒。Android使用的Java API是基于Google自己开发的Dalvik虚拟机，Google也因此就侵权问题提出了自己的异议，因为他们用的根本就不是Oralce的Java虚拟机(JVM)。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管Java是一个开源平台，任何开发者都应该能够自由访问和使用，但是Oracle认为，这个开源条款不适用于API包（具体指API包的组织形式——译者注）。“对于Java编程语言的开源性是毋庸置疑的，任何人都能免费使用”，联邦法庭裁定中写道，“但是下列三项API包则不在这个开源范围之内，因为Google很明显能够使用Java语言 自己重写这些API包，但是他们没有这么做。相反，Google毋庸置疑地拷贝了7000多行的声明代码，并几乎复制了整体的代码结构，序列，组织形式，这些东西都是Oralce Java API中已经存在的……被指控侵权的37个Java API包都在声明的开头标注了版权保护说明。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">联邦法院的这一裁决推翻了下级法院在两年前做出的关于：“API不受美国版权法律保护”的判决，Google当时做为被告胜诉。其实上诉法庭现在的判决并不是已经判定了被控侵权的API已受到法律保护；其受到保护与否要根据初始法院再组织的新陪审团来进行判断。上诉法庭的判决实际上是说，这些API有可能会被版权法保护，两年前下级法院的“不被保护”的裁决是错误的。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如今法庭裁决“API可能受保护”这一结果，将可能导致技术工业领域一场全新的知识产权的战争。这些战争多半都是关于Android的——比如那些有年头的旧案子：“三星状告苹果侵犯专利权”——但是这一判决导致的指向性可能会影响到所有的开发者。一直以来，Oracle的法律官司都是业界的恐怖噩梦，很可能将Android和开源软件都拖入无底的泥淖。现在，这个噩梦部分地，成真了。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我不是律师，但是仅从一名开发者的角度来看，对API进行版权限制只会给软件开发的协作一体化带来摩擦和混乱，因为程序员无法使用API来完成任务了。”，Jeffery Hammonds（Forrester Research副总裁）表示，“开发者必须要担心API中潜在的侵权问题，而且供应商也必须要承担同样的风险。我不认为像这样制造恐惧和不确定性会对软件开发者有什么好处，尤其是对第三方服务来说，这更加糟糕。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“避免Java语言碎裂化，这是Oracle一直以来坚持追求的目标，这是有价值的，但是我们不认为给API加上版权会有利于实现这个目标。”，Ed Anuff(Apigee产品策略副总裁，Apigee是一家提供云端API接入的服务商）说，“相反这样做是起到了反作用，反而使得API不得不变得更加复杂，以此来规避那些政治或法律层面的问题。这样一来，会造成一个双输的局面，对参与者毫无益处可言。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">自然，Oracle的代理律师Josh Rosenkarz对这个裁决非常满意，他表示：“今天，联邦法院巡回法庭保证了创新者的利益能够得到保护。” 关于下级法院就此诉讼再次开庭前，Oracle是否会主动达成庭外和解的问题，Oracle目前还没有对此发表任何回复；Google对此也没有发表任何意见。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;line-height:22px;background-color:#FBFBFB;\">原文链接： </span><a target=\"_blank\" href=\"http://www.javaworld.com/article/2154542/java-android-developer/oracles-surprise-win-in-java-api-case-could-make-it-harder-for-developers.html/\" class=\"external\">Javaworld</a><span style=\"font-size:14px;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;line-height:22px;background-color:#FBFBFB;\"> 翻译： </span><a href=\"http://www.importnew.com/\">ImportNew.com </a><span style=\"font-size:14px;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;line-height:22px;background-color:#FBFBFB;\">- </span><a href=\"http://www.importnew.com/author/huangxiaofei\">黄小非</a> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><span style=\"color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:14px;line-height:22px;background-color:#FBFBFB;\">译文链接： </span><a href=\"http://www.importnew.com/11649.html\">http://www.importnew.com/11649.html</a></span> \r\n</p>',NULL,'2014-06-07 07:32:03','2014-06-07 07:29:06',0,'Oracle意外赢官司，程序员或过苦日子 ',0);
INSERT INTO `article` VALUES (146,'admin',4,'<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	这篇文章总结了一些关于Spring框架的重要问题，这些问题都是你在面试或笔试过程中可能会被问到的。下次你再也不用担心你的面试了，Java Code Geeks这就帮你解答。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	大多数你可能被问到的问题都列举在下面的列表中了。所有的核心模块，从基础的Spring功能(如Spring Beans)到上层的Spring MVC框架，文章中都会进行简短的讲解。看完这些面试问题，你应该看看我们的<a href=\"http://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/\" class=\"external\" target=\"_blank\">Spring教程</a>。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	我们开始吧！\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>目录</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring概述\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	依赖注入\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring Beans\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring注解\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring的对象访问\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring面向切面编程\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring MVC框架\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>Spring概述</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>1.什么是Spring？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring是一个开源的Java EE开发框架。Spring框架的核心功能可以应用在任何Java应用程序中，但对Java EE平台上的Web应用程序有更好的扩展性。Spring框架的目标是使得Java EE应用程序的开发更加简捷，通过使用POJO为基础的编程模型促进良好的编程风格。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>2.Spring有哪些优点？</strong>\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>轻量级：</strong>Spring在大小和透明性方面绝对属于轻量级的，基础版本的Spring框架大约只有2MB。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>控制反转(IOC)：</strong>Spring使用<a href=\"http://www.javacodegeeks.com/2011/08/what-is-dependency-inversion-is-it-ioc.html\" class=\"external\" target=\"_blank\">控制反转技术</a>实现了松耦合。依赖被注入到对象，而不是创建或寻找依赖对象。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>面向切面编程(AOP)：</strong>&nbsp;<a href=\"http://www.javacodegeeks.com/2011/01/aspect-oriented-programming-spring-aop.html\" class=\"external\" target=\"_blank\">Spring支持面向切面编程</a>，同时把应用的业务逻辑与系统的服务分离开来。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>容器：</strong>Spring包含并管理应用程序对象的配置及生命周期。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>MVC框架：</strong>Spring的web框架是一个设计优良的<a href=\"http://www.javacodegeeks.com/2011/02/spring-mvc-development-tutorial.html\" class=\"external\" target=\"_blank\">web MVC框架</a>，很好的取代了一些web框架。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>事务管理：</strong>Spring对下至本地业务上至全局业务(JAT)提供了统一的事务管理接口。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>异常处理：</strong>Spring提供一个方便的API将特定技术的异常(由JDBC, Hibernate, 或JDO抛出)转化为一致的、Unchecked异常。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>3.Spring框架有哪些模块？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring框架的基本模块如下所示：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Core module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Bean module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Context module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Expression Language module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		JDBC module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		ORM module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		OXM module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Java Messaging Service(JMS) module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Transaction module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Web module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Web-Servlet module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Web-Struts module\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Web-Portlet module\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>4.解释核心容器(应用上下文)模块</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	这是Spring的基本模块，它提供了Spring框架的基本功能。BeanFactory 是所有Spring应用的核心。Spring框架是建立在这个模块之上的，这也使得Spring成为一个容器。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>5.BeanFactory – BeanFactory 实例</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	BeanFactory是工厂模式的一种实现，它使用控制反转将应用的配置和依赖与实际的应用代码分离开来。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	最常用的BeanFactory实现是XmlBeanFactory类。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>6.XmlBeanFactory</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	最常用的就是org.springframework.beans.factory.xml.XmlBeanFactory，它根据XML文件中定义的内容加载beans。该容器从XML文件中读取配置元数据，并用它来创建一个完备的系统或应用。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>7.解释AOP模块</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	AOP模块用来开发Spring应用程序中具有切面性质的部分。该模块的大部分服务由AOP Aliance提供，这就保证了Spring框架和其他AOP框架之间的互操作性。另外，该模块将元数据编程引入到了Spring。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>8.解释抽象JDBC和DAO模块</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	通过使用<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/jdbc/spring-jdbctemplate-example/\" class=\"external\" target=\"_blank\">抽象JDBC和DAO模块</a>保证了与数据库连接代码的整洁与简单，同时避免了由于未能关闭数据库资源引起的问题。它在多种数据库服务器的错误信息之上提供了一个很重要的异常层。它还利用Spring的AOP模块为Spring应用程序中的对象提供事务管理服务。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>9.解释对象/关系映射集成模块</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring通过提供ORM模块在JDBC的基础上支持对象关系映射工具。这样的支持使得Spring可以集成主流的ORM框架，包括Hibernate, JDO, 及iBATIS SQL Maps。Spring的事务管理可以同时支持以上某种框架和JDBC。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>10.解释web模块</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/mvc/spring-mvc-hello-world-example/\" class=\"external\" target=\"_blank\">Spring的web模块</a>建立在应用上下文(application context)模块之上，提供了一个适合基于web应用程序的上下文环境。该模块还支持了几个面向web的任务，如透明的处理多文件上传请求及将请求参数同业务对象绑定起来。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>11.解释Spring MVC模块</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring提供MVC框架构建web应用程序。Spring可以很轻松的同其他MVC框架结合，但<a href=\"http://www.javacodegeeks.com/2012/09/spring-adding-spring-mvc-part-1.html\" class=\"external\" target=\"_blank\">Spring的MVC</a>是个更好的选择，因为它通过控制反转将控制逻辑和业务对象完全分离开来。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>12.Spring的配置文件</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring的配置文件是一个XML文件，文件包含了类信息并描述了这些类是如何配置和互相调用的。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>13.Spring IoC容器是什么？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring IOC负责创建对象、管理对象(通过依赖注入)、整合对象、配置对象以及管理这些对象的生命周期。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>14.IOC有什么优点？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	IOC或依赖注入减少了应用程序的代码量。它使得应用程序的测试很简单，因为在单元测试中不再需要单例或JNDI查找机制。简单的实现以及较少的干扰机制使得松耦合得以实现。IOC容器支持勤性单例及延迟加载服务。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>15.应用上下文是如何实现的？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>FileSystemXmlApplicationContext</strong>&nbsp;容器加载XML文件中beans的定义。XML Bean配置文件的完整路径必须传递给构造器。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>FileSystemXmlApplicationContext</strong>&nbsp;容器也加载XML文件中beans的定义。注意，你需要正确的设置CLASSPATH，因为该容器会在CLASSPATH中查看bean的XML配置文件。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>WebXmlApplicationContext：</strong>该容器加载xml文件，这些文件定义了web应用中所有的beans。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>16.Bean Factory和ApplicationContext有什么区别？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	ApplicationContext提供了一种解决文档信息的方法，一种加载文件资源的方式(如图片)，他们可以向监听他们的beans发送消息。另外，容器或者容器中beans的操作，这些必须以bean工厂的编程方式处理的操作可以在应用上下文中以声明的方式处理。应用上下文实现了MessageSource，该接口用于获取本地消息，实际的实现是可选的。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>17.Spring应用程序看起来像什么？</strong>\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		一个定义功能的接口\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		实现包括属性，setter和getter方法，功能等\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Spring AOP\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Spring的XML配置文件\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		使用该功能的客户端编程\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>依赖注入</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>18.Spring中的依赖注入是什么？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<a href=\"http://www.javacodegeeks.com/2014/02/dependency-injection-options-for-java.html\" class=\"external\" target=\"_blank\">依赖注入</a>作为控制反转(IOC)的一个层面，可以有多种解释方式。在这个概念中，你不用创建对象而只需要描述如何创建它们。你不必通过代码直接的将组件和服务连接在一起，而是通过配置文件说明哪些组件需要什么服务。之后IOC容器负责衔接。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>19.有哪些不同类型的IOC(依赖注入)？</strong>\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>构造器依赖注入：</strong>构造器依赖注入在容器触发构造器的时候完成，该构造器有一系列的参数，每个参数代表注入的对象。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>Setter方法依赖注入：</strong>首先容器会触发一个无参构造函数或无参静态工厂方法实例化对象，之后容器调用bean中的setter方法完成Setter方法依赖注入。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>20.你推荐哪种依赖注入？构造器依赖注入还是Setter方法依赖注入？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	你可以同时使用两种方式的依赖注入，最好的选择是使用构造器参数实现强制依赖注入，使用setter方法实现可选的依赖关系。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>Spring Beans</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>21.什么是Spring Beans？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/beans-spring/spring-3-bean-reference-example/\" class=\"external\" target=\"_blank\">Spring Beans</a>是构成Spring应用核心的Java对象。这些对象由Spring IOC容器实例化、组装、管理。这些对象通过容器中配置的元数据创建，例如，使用XML文件中定义的创建。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	在Spring中创建的beans都是单例的beans。在bean标签中有一个属性为”singleton”,如果设为true，该bean是单例的，如果设为false，该bean是原型bean。Singleton属性默认设置为true。因此，spring框架中所有的bean都默认为单例bean。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>22.Spring Bean中定义了什么内容？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring Bean中定义了所有的配置元数据，这些配置信息告知容器如何创建它，它的生命周期是什么以及它的依赖关系。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>23.如何向Spring 容器提供配置元数据？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	有三种方式向Spring 容器提供元数据:\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			XML配置文件\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			基于注解配置\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/beans-spring/spring-3-java-config-example/\" class=\"external\" target=\"_blank\">基于Java的配置</a>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>24.你如何定义bean的作用域？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	在Spring中创建一个bean的时候，我们可以声明它的作用域。只需要在bean定义的时候通过’scope’属性定义即可。例如，当Spring需要产生每次一个新的bean实例时，应该声明bean的scope属性为prototype。如果每次你希望Spring返回一个实例，应该声明bean的scope属性为singleton。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>25.说一下Spring中支持的bean作用域</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring框架支持如下五种不同的作用域：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>singleton</strong>：在Spring IOC容器中仅存在一个Bean实例，Bean以单实例的方式存在。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>prototype</strong>：一个bean可以定义多个实例。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>request</strong>：每次HTTP请求都会创建一个新的Bean。该作用域仅适用于WebApplicationContext环境。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>session</strong>：一个HTTP Session定义一个Bean。该作用域仅适用于WebApplicationContext环境.\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>globalSession</strong>：同一个全局HTTP Session定义一个Bean。该作用域同样仅适用于WebApplicationContext环境.\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	bean默认的scope属性是’<strong>singleton</strong>‘。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>26.Spring框架中单例beans是线程安全的吗？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	不是，Spring框架中的单例beans不是线程安全的。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>27.解释Spring框架中bean的生命周期</strong>\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			Spring容器读取XML文件中bean的定义并实例化bean。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			Spring根据bean的定义设置属性值。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			如果该Bean实现了BeanNameAware接口，Spring将bean的id传递给setBeanName()方法。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			如果该Bean实现了BeanFactoryAware接口，Spring将beanfactory传递给setBeanFactory()方法。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			如果任何bean BeanPostProcessors 和该bean相关，Spring调用postProcessBeforeInitialization()方法。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			如果该Bean实现了InitializingBean接口，调用Bean中的afterPropertiesSet方法。如果bean有初始化函数声明，调用相应的初始化方法。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			如果任何bean BeanPostProcessors 和该bean相关，调用postProcessAfterInitialization()方法。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			如果该bean实现了DisposableBean，调用destroy()方法。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>28.哪些是最重要的bean生命周期方法？能重写它们吗？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	有两个重要的bean生命周期方法。第一个是setup方法，该方法在容器加载bean的时候被调用。第二个是teardown方法，该方法在bean从容器中移除的时候调用。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	bean标签有两个重要的属性(init-method 和 destroy-method)，你可以通过这两个属性定义自己的初始化方法和析构方法。Spring也有相应的注解：@PostConstruct 和 @PreDestroy。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>29.什么是Spring的内部bean？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	当一个bean被用作另一个bean的属性时，这个bean可以被声明为内部bean。在基于XML的配置元数据中，可以通过把元素定义在&nbsp;或元素内部实现定义内部bean。内部bean总是匿名的并且它们的scope总是prototype。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>30.如何在Spring中注入Java集合类？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring提供如下几种类型的<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/beans-spring/spring-collections-list-set-map-and-properties-example/\" class=\"external\" target=\"_blank\">集合配置元素</a>：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			list元素用来注入一系列的值，允许有相同的值。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			set元素用来注入一些列的值，不允许有相同的值。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			map用来注入一组”键-值”对，键、值可以是任何类型的。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			props也可以用来注入一组”键-值”对，这里的键、值都字符串类型。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>31.什么是bean wiring？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Wiring，或者说bean Wiring是指beans在Spring容器中结合在一起的情况。当装配bean的时候，Spring容器需要知道需要哪些beans以及如何使用依赖注入将它们结合起来。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>32.什么是bean自动装配？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring容器可以<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/beans-spring/spring-autowire-example/\" class=\"external\" target=\"_blank\">自动配置</a>相互协作beans之间的关联关系。这意味着Spring可以自动配置一个bean和其他协作bean之间的关系，通过检查BeanFactory 的内容里没有使用和&lt; property&gt;元素。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>33.解释自动装配的各种模式？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	自动装配提供五种不同的模式供Spring容器用来自动装配beans之间的依赖注入:\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>no：</strong>默认的方式是不进行自动装配，通过手工设置ref 属性来进行装配bean。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>byName：</strong>通过参数名自动装配，Spring容器查找beans的属性，这些beans在XML配置文件中被设置为byName。之后容器试图匹配、装配和该bean的属性具有相同名字的bean。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>byType：</strong>通过参数的数据类型自动自动装配，Spring容器查找beans的属性，这些beans在XML配置文件中被设置为byType。之后容器试图匹配和装配和该bean的属性类型一样的bean。如果有多个bean符合条件，则抛出错误。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>constructor：</strong>这个同byType类似，不过是应用于构造函数的参数。如果在BeanFactory中不是恰好有一个bean与构造函数参数相同类型，则抛出一个严重的错误。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>autodetect：</strong>如果有默认的构造方法，通过 construct的方式自动装配，否则使用 byType的方式自动装配。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>34.自动装配有哪些局限性？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	自动装配有如下局限性：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>重写：</strong>你仍然需要使用&nbsp;和&lt; property&gt;设置指明依赖，这意味着总要重写自动装配。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>原生数据类型:</strong>你不能自动装配简单的属性，如原生类型、字符串和类。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>模糊特性：</strong>自动装配总是没有自定义装配精确，因此，如果可能尽量使用自定义装配。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>35.你可以在Spring中注入null或空字符串吗？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	完全可以。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>Spring注解</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>36.什么是Spring基于Java的配置？给出一些注解的例子</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<a href=\"http://www.javacodegeeks.com/2013/04/spring-java-configuration.html\" class=\"external\" target=\"_blank\">基于Java的配置</a>允许你使用Java的注解进行Spring的大部分配置而非通过传统的XML文件配置。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	以注解@Configuration为例，它用来标记类，说明作为beans的定义，可以被Spring IOC容器使用。另一个例子是@Bean注解，它表示该方法定义的Bean要被注册进Spring应用上下文中。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>37.什么是基于注解的容器配置?</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	另外一种替代XML配置的方式为基于注解的配置，这种方式通过字节元数据装配组件而非使用尖括号声明。开发人员将直接在类中进行配置，通过注解标记相关的类、方法或字段声明，而不再使用XML描述bean之间的连线关系。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>38.如何开启注解装配？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	注解装配默认情况下在Spring容器中是不开启的。如果想要开启基于注解的装配只需在Spring配置文件中配置元素即可。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>39.@Required 注解</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	@Required表明bean的属性必须在配置时设置，可以在bean的定义中明确指定也可通过自动装配设置。如果bean的属性未设置，则抛出BeanInitializationException异常。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>40.@Autowired 注解</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	@Autowired 注解提供更加精细的控制，包括自动装配在何处完成以及如何完成。它可以像@Required一样自动装配setter方法、构造器、属性或者具有任意名称和/或多个参数的PN方法。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>41. @Qualifier 注解</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	当有多个相同类型的bean而只有其中的一个需要自动装配时，将@Qualifier 注解和@Autowire 注解结合使用消除这种混淆，指明需要装配的bean。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>Spring数据访问</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>42.在Spring框架中如何更有效的使用JDBC？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	使用Spring JDBC框架，资源管理以及错误处理的代价都会减轻。开发人员只需通过statements和queries语句从数据库中存取数据。Spring框架中通过使用模板类能更有效的使用JDBC，也就是所谓的JdbcTemplate(<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/jdbc/spring-jdbctemplate-example/\" class=\"external\" target=\"_blank\">例子</a>)。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>43.JdbcTemplate</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	JdbcTemplate类提供了许多方法，为我们与数据库的交互提供了便利。例如，它可以将数据库的数据转化为原生类型或对象，执行写好的或可调用的数据库操作语句，提供自定义的数据库错误处理功能。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>44.Spring对DAO的支持</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<a href=\"http://www.javacodegeeks.com/2012/09/spring-dao-and-service-layer.html\" class=\"external\" target=\"_blank\">Spring对数据访问对象(DAO)</a>的支持旨在使它可以与数据访问技术(如 JDBC, Hibernate 及JDO)方便的结合起来工作。这使得我们可以很容易在的不同的持久层技术间切换，编码时也无需担心会抛出特定技术的异常。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>45.使用Spring可以通过什么方式访问Hibernate？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	使用Spring有两种方式访问Hibernate：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			使用Hibernate Template的反转控制以及回调方法\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			继承HibernateDAOSupport，并申请一个AOP拦截器节点\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>46.Spring支持的ORM</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring支持一下ORM：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		Hibernate\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		iBatis\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		JPA (Java -Persistence API)\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		TopLink\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		JDO (Java Data Objects)\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		OJB\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>47.如何通过HibernateDaoSupport将Spring和Hibernate结合起来？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	使用Spring的SessionFactory 调用LocalSessionFactory。结合过程分为以下三步：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			配置Hibernate SessionFactory\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			继承HibernateDaoSupport实现一个DAO\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			使用AOP装载事务支持\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>48.Spring支持的事务管理类型</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring支持如下两种方式的事务管理：\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>编程式事务管理：</strong>这意味着你可以通过编程的方式管理事务，这种方式带来了很大的灵活性，但很难维护。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			<strong>声明式事务管理：</strong>这种方式意味着你可以将<a href=\"http://www.javacodegeeks.com/2011/09/spring-declarative-transactions-example.html\" class=\"external\" target=\"_blank\">事务管理和业务代码分离</a>。你只需要通过注解或者XML配置管理事务。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>49.Spring框架的事务管理有哪些优点？</strong>\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			它为不同的事务API(如JTA, JDBC, Hibernate, JPA, 和JDO)提供了统一的编程模型。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			它为编程式事务管理提供了一个简单的API而非一系列复杂的事务API(如JTA).\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			它支持声明式事务管理。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			它可以和Spring 的多种数据访问技术很好的融合。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>50.你更推荐那种类型的事务管理？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	许多Spring框架的用户选择声明式事务管理，因为这种方式和应用程序的关联较少，因此更加符合轻量级容器的概念。声明式事务管理要优于编程式事务管理，尽管在灵活性方面它弱于编程式事务管理(这种方式允许你通过代码控制业务)。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>Spring面向切面编程(AOP)</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>51.解释AOP</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<a href=\"http://www.javacodegeeks.com/2014/02/applying-aspect-oriented-programming.html\" class=\"external\" target=\"_blank\">面向切面编程</a>,或AOP允许程序员模块化横向业务逻辑，或定义核心部分的功能，例如日志管理和事务管理。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>52.切面(Aspect)</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	AOP的核心就是切面，它将多个类的通用行为封装为可重用的模块。该模块含有一组API提供 cross-cutting功能。例如,日志模块称为日志的AOP切面。根据需求的不同，一个应用程序可以有若干切面。在Spring AOP中，切面通过带有@Aspect注解的类实现。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>53.在Spring AOP中concern和 cross-cutting concern的区别是什么？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Concern(核心逻辑)：表示在应用程序中一个模块的行为。Concern可以定义为我们想要实现的功能。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Cross-cutting concern(横向的通用逻辑)：指的是整个应用程序都会用到的功能，它影响整个应用程序。例如，日志管理（Logging）、安全管理（Security）以及数据交互是应用程序的每个模块都要涉及到的，因此这些都属于Cross-cutting concern。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>54.连接点(Join point)</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	连接点代表应用程序中插入AOP切面的地点。它实际上是Spring AOP框架在应用程序中执行动作的地点。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>55.通知(Advice)</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	通知表示在方法执行前后需要执行的动作。实际上它是Spring AOP框架在程序执行过程中触发的一些代码。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring切面可以执行一下五种类型的通知:\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			before(前置通知)：在一个方法之前执行的通知。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			after(最终通知)：当某连接点退出的时候执行的通知（不论是正常返回还是异常退出）。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			after-returning(后置通知)：在某连接点正常完成后执行的通知。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			after-throwing(异常通知)：在方法抛出异常退出时执行的通知。\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			around(环绕通知)：在方法调用前后触发的通知。\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>56.切入点(Pointcut)</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	切入点是一个或一组连接点，通知将在这些位置执行。可以通过表达式或匹配的方式指明切入点。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>57.什么是引入？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	引入允许我们在已有的类上添加新的方法或属性。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>58.什么是目标对象？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	被一个或者多个切面所通知的对象。它通常是一个代理对象。也被称做被通知（advised）对象。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>59.什么是代理？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	代理是将通知应用到目标对象后创建的对象。从客户端的角度看，代理对象和目标对象是一样的。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>60.有几种不同类型的自动代理？</strong>\r\n</p>\r\n<ul style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			BeanNameAutoProxyCreator：bean名称自动代理创建器\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			DefaultAdvisorAutoProxyCreator：默认通知者自动代理创建器\r\n		</p>\r\n	</li>\r\n	<li style=\"vertical-align:baseline;background-color:transparent;\">\r\n		<p style=\"vertical-align:baseline;background-color:transparent;\">\r\n			Metadata autoproxying：元数据自动代理\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>61.什么是织入？什么是织入应用的不同点？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	织入是将切面和其他应用类型或对象连接起来创建一个通知对象的过程。织入可以在编译、加载或运行时完成。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>62.解释基于XML Schema方式的切面实现</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	在这种情况下，切面由使用XML文件配置的类实现。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>63.解释基于注解方式(基于@AspectJ)的切面实现</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	在这种情况下(基于@AspectJ的实现)，指的是切面的对应的类使用Java 5注解的声明方式。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>Spring的MVC框架</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>64.什么是Spring的MVC框架？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring提供了一个<a href=\"http://examples.javacodegeeks.com/enterprise-java/spring/mvc/spring-mvc-hello-world-example/\" class=\"external\" target=\"_blank\">功能齐全的MVC框架用于构建Web应用程序</a>。Spring框架可以很容易的和其他的MVC框架融合(如Struts)，该框架使用控制反转(IOC)将控制器逻辑和业务对象分离开来。它也允许以声明的方式绑定请求参数到业务对象上。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>65.DispatcherServlet</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	Spring的MVC框架围绕DispatcherServlet来设计的，它用来处理所有的HTTP请求和响应。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>66.WebApplicationContext</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	WebApplicationContext继承了ApplicationContext，并添加了一些web应用程序需要的功能。和普通的ApplicationContext 不同，WebApplicationContext可以用来处理主题样式，它也知道如何找到相应的servlet。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>67.什么是Spring MVC框架的控制器？</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	控制器提供对应用程序行为的访问，通常通过服务接口实现。控制器解析用户的输入，并将其转换为一个由视图呈现给用户的模型。Spring 通过一种极其抽象的方式实现控制器，它允许用户创建多种类型的控制器。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>68.@Controller annotation</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	@Controller注解表示该类扮演控制器的角色。Spring不需要继承任何控制器基类或应用Servlet API。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<strong>69.@RequestMapping annotation</strong>\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	@RequestMapping注解用于将URL映射到任何一个类或者一个特定的处理方法上。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	好了，现在你可以去面试了！不要忘了访问我们的<a href=\"http://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/\" class=\"external\" target=\"_blank\">Spring教程</a>。\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;vertical-align:baseline;background-color:#FBFBFB;color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;\">\r\n	<span style=\"color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:14px;line-height:22px;background-color:#FBFBFB;\">原文链接：&nbsp;</span><a target=\"_blank\" href=\"http://www.javacodegeeks.com/2014/05/spring-interview-questions-and-answers.html\" class=\"external\">javacodegeeks</a><span style=\"color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:14px;line-height:22px;background-color:#FBFBFB;\">&nbsp;翻译：&nbsp;</span><a href=\"http://www.importnew.com/\">ImportNew.com&nbsp;</a><span style=\"color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:14px;line-height:22px;background-color:#FBFBFB;\">-&nbsp;</span><a href=\"http://www.importnew.com/author/mandy\">人晓</a><br />\r\n<span style=\"color:#191919;font-family:微软雅黑, Verdana, sans-serif, 宋体;font-size:14px;line-height:22px;background-color:#FBFBFB;\">译文链接：&nbsp;</span><a href=\"http://www.importnew.com/11657.html\">http://www.importnew.com/11657.html</a>\r\n</p>',NULL,NULL,'2014-06-07 07:37:03',0,'关于Spring的69个面试问答——终极列表 ',0),(147,'admin',15,'<p style=\"background-color:#F7F7F7;vertical-align:baseline;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	最近在stackexchange网站上看到了一个非常好的问答，有人问：你做过的最有效的提高你的编程水平的一件事情是什么?<span id=\"more-3886\" style=\"background-color:transparent;vertical-align:baseline;\"></span>\r\n</p>\r\n<blockquote style=\"background-color:#ECECEC;vertical-align:baseline;font-style:italic;color:#666666;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		回首作为一个程序员这些年来的生活和职业道路，我使用了很多种不同的方法来提高我的编程技能 —— 阅读代码，编写程序，阅读书籍，听讲座，看视频，等等。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		我的问题是：你做过的最有效的提高你的编程水平的一件事情是什么?对于那些想提高水平的程序员，你的建议是什么？\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		我希望你们提供的答案是各种各样的，并且不是那种“放之四海而皆准”的答案 —— 我希望得到适用于不同人的不同的答案。\r\n	</p>\r\n</blockquote>\r\n<p style=\"background-color:#F7F7F7;vertical-align:baseline;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	有很多人给出了自己的答案，在这里，我将其中最受认可的前三种答案选出来翻译给大家。\r\n</p>\r\n<h3 style=\"background-color:#F7F7F7;vertical-align:baseline;font-size:18px;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;\">\r\n	最受欢迎的回答：学无止境\r\n</h3>\r\n<blockquote style=\"background-color:#ECECEC;vertical-align:baseline;font-style:italic;color:#666666;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		没有特别的先后次序…\r\n	</p>\r\n	<ul style=\"background-color:transparent;vertical-align:baseline;\">\r\n		<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n			<strong>和比自己更聪明的人一起工作</strong>\r\n		</li>\r\n		<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n			<strong>永远乐意听取他人的意见，不管对方是低级水平，一般水平，资深，还是大师。职称头衔并不代表一切。</strong>\r\n		</li>\r\n		<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n			学习其它的框架/语言，学习它们是的工作原理和思想，拿它们跟你已知的技术做比较。\r\n		</li>\r\n		<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n			学习各种设计模式，最佳实践理论，然后用它们检查自己先前的知识，在需要的时候使用这些模式。\r\n		</li>\r\n		<li style=\"background-color:transparent;vertical-align:baseline;\">\r\n			结对编程\r\n		</li>\r\n	</ul>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		反对Joel说的一切。&nbsp;<img src=\"http://www.vaikan.com/wordpress/wp-includes/images/smilies/icon_wink.gif\" alt=\";)\" class=\"wp-smiley lazy \" />\r\n	</p>\r\n</blockquote>\r\n<h3 style=\"background-color:#F7F7F7;vertical-align:baseline;font-size:18px;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;\">\r\n	第二受欢迎的回答：成为多面手\r\n</h3>\r\n<blockquote style=\"background-color:#ECECEC;vertical-align:baseline;font-style:italic;color:#666666;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		<strong>争取成为一个‘多面手万事通’</strong>\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		在我职业生涯的早期，我在一种数据库和编程语言上是个专家。不幸的是，这种数据库在“数据库战争”中落败了，我才发现我的职业道路…很窄。在此之后，我下定决心以后决不能把自己封在一个小空间里。我开始学习所有手头上能接触到的东西：Windows，Unix，C，C++，Java，C#，Perl，Python，Access，SQL Server，Oracle，Informix，MySQL，等等。不管什么样的新的，不常见的工具或技术，我都成为“大拿” —— “去问克雷格(作者自己)，他要是不会，他会去学会的。”结果，我做了各种各样的项目，从为环境监测做嵌入式系统，到为导弹防御做命令和控制系统。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		我在各种的公司里唯一遇到的问题是：它们坚持要把我固定在一个专门的研究方向内，而我的专门研究是要成为一个多面手。<strong>[编辑：</strong>&nbsp;也叫做<a href=\"http://en.wikipedia.org/wiki/Polymath\">学识渊博的人</a>或多才多艺的人或多领域专家。<strong>]</strong>\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		有些事情需要留意 … 高科技界里知识的半衰期是多少？根据摩尔定律(Moore’s law)：18-24月内，半数你学到的知识都会过时。错误的遵循这种规律的专家会轻易的在这种技术发展的压力崩溃；一个多面手要做的事就是不断的丰富自己的技能，并从应用这些技能的经历中吸取教训。\r\n	</p>\r\n</blockquote>\r\n<h3 style=\"background-color:#F7F7F7;vertical-align:baseline;font-size:18px;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;\">\r\n	第三受欢迎的回答：不要跟臭棋篓子下棋\r\n</h3>\r\n<blockquote style=\"background-color:#ECECEC;vertical-align:baseline;font-style:italic;color:#666666;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		我一直认为自己在不错的程序员中也算是个“灌篮高手”。直到有个家伙——我们叫他艾伦——被招进团队。艾伦很显然在很多方面都比我优秀。也比我年轻。他让我认识到，在过去的这些年里，我没有多少长进。我是一个特定技术方向的程序员，而且是水平一般。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		这惊醒我<strong>应该自觉的不断提高自己的水平</strong>，特别是我写的代码的水平。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		艾伦引导我学会了很多东西。他告诉我，大部分我写的代码在今后的数年里都将一直维护和进行扩展，写代码时要将这点铭记在心。我应该为我的代码写自动测试程序。艾伦说代码的开发一定不能停止在第一版上，应该不断的重构，提炼，让它达到完美。我发现，我对这些语言和工具的使用都还有还很大的改进空间。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		从艾伦那我学到的最重要的一件事情是：永远不要停止学习。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		数年后，艾伦离开了公司。我的心里突然感觉空荡荡的。这些年与他为伴让我在技能上提升到了一个全新的水平，我知道现在我比团队里的其他人优秀很多。他们仍然写着糟糕的代码，犯着以前犯过的错误。我努力教育他们，但他们对此不感兴趣。事实上，他们讨厌有人这样傲慢自大的指出他们犯的错误。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		于是，几个月后，我也离开这这个公司。我去了一个很小的公司，在一个很出色的团队里工作。那里每个人都渴望学习更多知识，我喜欢这样的。\r\n	</p>\r\n	<p style=\"background-color:transparent;vertical-align:baseline;\">\r\n		我很幸运能遇到艾伦。没有他，我也许现在仍然待在那家死气沉沉的公司和那帮食古不化的家伙在一起，哪都去不了，想的全是自己的私利。\r\n	</p>\r\n</blockquote>\r\n<p style=\"background-color:#F7F7F7;vertical-align:baseline;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	这个讨论在stackexchange网站上的地址是<a href=\"http://programmers.stackexchange.com/questions/44177/what-is-the-single-most-effective-thing-you-did-to-improve-your-programming-skil\" target=\"_blank\">这里</a>。\r\n</p>\r\n<p style=\"background-color:#F7F7F7;vertical-align:baseline;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	从我个人而言，我觉得第三个答案对我最有价值，不知各位同行们有什么感受？请写在评论里与大家分享。\r\n</p>\r\n<p style=\"background-color:#F7F7F7;vertical-align:baseline;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, Lucida, Verdana, \'Hiragino Sans GB\', STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif, serif;font-size:16px;\">\r\n	原文链接：<a href=\"http://www.vaikan.com/what-is-the-single-most-effective-thing-you-did-to-improve-your-programming-skil/\">http://www.vaikan.com/what-is-the-single-most-effective-thing-you-did-to-improve-your-programming-skil/</a>\r\n</p>',NULL,NULL,'2014-06-11 16:12:44',0,'你做过的最有效的提高你的编程水平的一件事情是什么',0),(148,'admin',31,'<p>\r\n	翻译一篇技术评论社的文章，是讲memcached的连载。<a href=\"http://www.fcicq.net/wp/\">fcicq</a>同学说这个东西很有用，希望大家喜欢。\r\n</p>\r\n<p>\r\n	发表日：2008/7/2&nbsp;<br />\r\n作者：长野雅广(Masahiro Nagano)&nbsp;<br />\r\n原文链接：<a href=\"http://gihyo.jp/dev/feature/01/memcached/0001\">http://gihyo.jp/dev/feature/01/memcached/0001</a> \r\n</p>\r\n<p>\r\n	我是<a href=\"http://mixi.jp/\">mixi株式会社</a>开发部系统运营组的长野。 日常负责程序的运营。从今天开始，将分几次针对最近在Web应用的可扩展性领域 的热门话题memcached，与我公司开发部研究开发组的前坂一起， 说明其内部结构和使用。\r\n</p>\r\n<div>\r\n	<ul>\r\n	</ul>\r\n</div>\r\n<h2>\r\n	memcached是什么？\r\n</h2>\r\n<p>\r\n	<a href=\"http://www.danga.com/memcached/\">memcached</a>&nbsp;是以<a href=\"http://www.livejournal.com/\">LiveJournal</a>&nbsp;旗下<a href=\"http://www.danga.com/\">Danga Interactive</a>&nbsp;公司的<a href=\"http://www.bradfitz.com/\">Brad Fitzpatric</a>&nbsp;为首开发的一款软件。现在已成为&nbsp;<a href=\"http://mixi.jp/\">mixi</a>、&nbsp;<a href=\"http://www.hatena.ne.jp/\">hatena</a>、&nbsp;<a href=\"http://www.facebook.com/\">Facebook</a>、&nbsp;<a href=\"http://www.vox.com/\">Vox</a>、LiveJournal等众多服务中 提高Web应用扩展性的重要因素。\r\n</p>\r\n<p>\r\n	许多Web应用都将数据保存到RDBMS中，应用服务器从中读取数据并在浏览器中显示。 但随着数据量的增大、访问的集中，就会出现RDBMS的负担加重、数据库响应恶化、 网站显示延迟等重大影响。\r\n</p>\r\n<p>\r\n	这时就该memcached大显身手了。memcached是高性能的分布式内存缓存服务器。 一般的使用目的是，通过缓存数据库查询结果，减少数据库访问次数，以提高动态Web应用的速度、 提高可扩展性。\r\n</p>\r\n<div>\r\n	<img src=\"http://pic001.cnblogs.com/img/dudu/200809/2008092816494460.png\" alt=\"\" /><br />\r\n</div>\r\n<p>\r\n	图1 一般情况下memcached的用途\r\n</p>\r\n<h2>\r\n	memcached的特征\r\n</h2>\r\n<p>\r\n	memcached作为高速运行的分布式缓存服务器，具有以下的特点。\r\n</p>\r\n<ul>\r\n	<li>\r\n		协议简单\r\n	</li>\r\n	<li>\r\n		基于libevent的事件处理\r\n	</li>\r\n	<li>\r\n		内置内存存储方式\r\n	</li>\r\n	<li>\r\n		memcached不互相通信的分布式\r\n	</li>\r\n</ul>\r\n<h3>\r\n	协议简单\r\n</h3>\r\n<p>\r\n	memcached的服务器客户端通信并不使用复杂的XML等格式， 而使用简单的基于文本行的协议。因此，通过telnet 也能在memcached上保存数据、取得数据。下面是例子。\r\n</p>\r\n$ telnet localhost 11211\r\nTrying 127.0.0.1...\r\nConnected to localhost.localdomain (127.0.0.1).\r\nEscape character is \'^]\'.\r\nset foo 0 0 3     （保存命令）\r\nbar               （数据）\r\nSTORED            （结果）\r\nget foo           （取得命令）\r\nVALUE foo 0 3     （数据）\r\nbar               （数据）\r\n<p>\r\n	协议文档位于memcached的源代码内，也可以参考以下的URL。\r\n</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt\">http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt</a> \r\n	</li>\r\n</ul>\r\n<h3>\r\n	基于libevent的事件处理\r\n</h3>\r\n<p>\r\n	libevent是个程序库，它将Linux的epoll、BSD类操作系统的kqueue等事件处理功能 封装成统一的接口。即使对服务器的连接数增加，也能发挥O(1)的性能。 memcached使用这个libevent库，因此能在Linux、BSD、Solaris等操作系统上发挥其高性能。 关于事件处理这里就不再详细介绍，可以参考Dan Kegel的The C10K Problem。\r\n</p>\r\n<ul>\r\n	<li>\r\n		libevent:&nbsp;<a href=\"http://www.monkey.org/~provos/libevent/\">http://www.monkey.org/~provos/libevent/</a> \r\n	</li>\r\n	<li>\r\n		The C10K Problem:&nbsp;<a href=\"http://www.kegel.com/c10k.html\">http://www.kegel.com/c10k.html</a> \r\n	</li>\r\n</ul>\r\n<h3>\r\n	内置内存存储方式\r\n</h3>\r\n<p>\r\n	为了提高性能，memcached中保存的数据都存储在memcached内置的内存存储空间中。 由于数据仅存在于内存中，因此重启memcached、重启操作系统会导致全部数据消失。 另外，内容容量达到指定值之后，就基于LRU(Least Recently Used)算法自动删除不使用的缓存。 memcached本身是为缓存而设计的服务器，因此并没有过多考虑数据的永久性问题。 关于内存存储的详细信息，本连载的第二讲以后前坂会进行介绍，请届时参考。\r\n</p>\r\n<h3>\r\n	memcached不互相通信的分布式\r\n</h3>\r\n<p>\r\n	memcached尽管是“分布式”缓存服务器，但服务器端并没有分布式功能。 各个memcached不会互相通信以共享信息。那么，怎样进行分布式呢？ 这完全取决于客户端的实现。本连载也将介绍memcached的分布式。\r\n</p>\r\n<div>\r\n	<img src=\"http://pic001.cnblogs.com/img/dudu/200809/2008092816503963.png\" alt=\"\" /><br />\r\n</div>\r\n<p>\r\n	图2 memcached的分布式\r\n</p>\r\n<p>\r\n	接下来简单介绍一下memcached的使用方法。\r\n</p>\r\n<h2>\r\n	安装memcached\r\n</h2>\r\n<p>\r\n	memcached的安装比较简单，这里稍加说明。\r\n</p>\r\n<p>\r\n	memcached支持许多平台。\r\n</p>\r\n<ul>\r\n	<li>\r\n		Linux\r\n	</li>\r\n	<li>\r\n		FreeBSD\r\n	</li>\r\n	<li>\r\n		Solaris (memcached 1.2.5以上版本)\r\n	</li>\r\n	<li>\r\n		Mac OS X\r\n	</li>\r\n</ul>\r\n<p>\r\n	另外也能安装在Windows上。这里使用Fedora Core 8进行说明。\r\n</p>\r\n<h3>\r\n	memcached的安装\r\n</h3>\r\n<p>\r\n	运行memcached需要本文开头介绍的libevent库。Fedora 8中有现成的rpm包， 通过yum命令安装即可。\r\n</p>\r\n$ sudo yum install libevent libevent-devel\r\n<p>\r\n	memcached的源代码可以从memcached网站上下载。本文执笔时的最新版本为1.2.5。 Fedora 8虽然也包含了memcached的rpm，但版本比较老。因为源代码安装并不困难， 这里就不使用rpm了。\r\n</p>\r\n<ul>\r\n	<li>\r\n		下载memcached：<a href=\"http://www.danga.com/memcached/download.bml\">http://www.danga.com/memcached/download.bml</a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	memcached安装与一般应用程序相同，configure、make、make install就行了。\r\n</p>\r\n$ wget http://www.danga.com/memcached/dist/memcached-1.2.5.tar.gz\r\n$ tar zxf memcached-1.2.5.tar.gz\r\n$ cd memcached-1.2.5\r\n$ ./configure\r\n$ make\r\n$ sudo make install\r\n<p>\r\n	默认情况下memcached安装到/usr/local/bin下。\r\n</p>\r\n<h3>\r\n	memcached的启动\r\n</h3>\r\n<p>\r\n	从终端输入以下命令，启动memcached。\r\n</p>\r\n$ /usr/local/bin/memcached -p 11211 -m 64m -vv\r\nslab class   1: chunk size     88 perslab 11915\r\nslab class   2: chunk size    112 perslab  9362\r\nslab class   3: chunk size    144 perslab  7281\r\n中间省略\r\nslab class  38: chunk size 391224 perslab     2\r\nslab class  39: chunk size 489032 perslab     2\r\n&lt;23 server listening\r\n&lt;24 send buffer was 110592, now 268435456\r\n&lt;24 server listening (udp)\r\n&lt;24 server listening (udp)\r\n&lt;24 server listening (udp)\r\n&lt;24 server listening (udp)\r\n<p>\r\n	这里显示了调试信息。这样就在前台启动了memcached，监听TCP端口11211 最大内存使用量为64M。调试信息的内容大部分是关于存储的信息， 下次连载时具体说明。\r\n</p>\r\n<p>\r\n	作为daemon后台启动时，只需\r\n</p>\r\n$ /usr/local/bin/memcached -p 11211 -m 64m -d\r\n<p>\r\n	这里使用的memcached启动选项的内容如下。\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					选项\r\n				</td>\r\n				<td>\r\n					说明\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					-p\r\n				</td>\r\n				<td>\r\n					使用的TCP端口。默认为11211\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					-m\r\n				</td>\r\n				<td>\r\n					最大内存大小。默认为64M\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					-vv\r\n				</td>\r\n				<td>\r\n					用very vrebose模式启动，调试信息和错误输出到控制台\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					-d\r\n				</td>\r\n				<td>\r\n					作为daemon在后台启动\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p>\r\n	上面四个是常用的启动选项，其他还有很多，通过\r\n</p>\r\n$ /usr/local/bin/memcached -h\r\n<p>\r\n	命令可以显示。许多选项可以改变memcached的各种行为， 推荐读一读。\r\n</p>\r\n<h2>\r\n	用客户端连接\r\n</h2>\r\n<p>\r\n	许多语言都实现了连接memcached的客户端，其中以Perl、PHP为主。 仅仅memcached网站上列出的语言就有\r\n</p>\r\n<ul>\r\n	<li>\r\n		Perl\r\n	</li>\r\n	<li>\r\n		PHP\r\n	</li>\r\n	<li>\r\n		Python\r\n	</li>\r\n	<li>\r\n		Ruby\r\n	</li>\r\n	<li>\r\n		C#\r\n	</li>\r\n	<li>\r\n		C/C++\r\n	</li>\r\n	<li>\r\n		Lua\r\n	</li>\r\n</ul>\r\n<p>\r\n	等等。\r\n</p>\r\n<ul>\r\n	<li>\r\n		memcached客户端API：<a href=\"http://www.danga.com/memcached/apis.bml\">http://www.danga.com/memcached/apis.bml</a> \r\n	</li>\r\n</ul>\r\n<p>\r\n	这里介绍通过mixi正在使用的Perl库链接memcached的方法。\r\n</p>\r\n<h2>\r\n	使用Cache::Memcached\r\n</h2>\r\n<p>\r\n	Perl的memcached客户端有\r\n</p>\r\n<ul>\r\n	<li>\r\n		Cache::Memcached\r\n	</li>\r\n	<li>\r\n		Cache::Memcached::Fast\r\n	</li>\r\n	<li>\r\n		Cache::Memcached::libmemcached\r\n	</li>\r\n</ul>\r\n<p>\r\n	等几个CPAN模块。这里介绍的Cache::Memcached是memcached的作者Brad Fitzpatric的作品， 应该算是memcached的客户端中应用最为广泛的模块了。\r\n</p>\r\n<ul>\r\n	<li>\r\n		Cache::Memcached - search.cpan.org:&nbsp;<a href=\"http://search.cpan.org/dist/Cache-Memcached/\">http://search.cpan.org/dist/Cache-Memcached/</a> \r\n	</li>\r\n</ul>\r\n<h3>\r\n	使用Cache::Memcached连接memcached\r\n</h3>\r\n<p>\r\n	下面的源代码为通过Cache::Memcached连接刚才启动的memcached的例子。\r\n</p>\r\n#!/usr/bin/perl\r\nuse strict;\r\nuse warnings;\r\nuse Cache::Memcached;\r\nmy $key = \"foo\";\r\nmy $value = \"bar\";\r\nmy $expires = 3600; # 1 hour\r\nmy $memcached = Cache::Memcached-&gt;new({\r\n    servers =&gt; [\"127.0.0.1:11211\"],\r\n    compress_threshold =&gt; 10_000\r\n});\r\n$memcached-&gt;add($key, $value, $expires);\r\nmy $ret = $memcached-&gt;get($key);\r\nprint \"$ret\\n\";\r\n<p>\r\n	在这里，为Cache::Memcached指定了memcached服务器的IP地址和一个选项，以生成实例。 Cache::Memcached常用的选项如下所示。\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					选项\r\n				</td>\r\n				<td>\r\n					说明\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					servers\r\n				</td>\r\n				<td>\r\n					用数组指定memcached服务器和端口\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					compress_threshold\r\n				</td>\r\n				<td>\r\n					数据压缩时使用的值\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					namespace\r\n				</td>\r\n				<td>\r\n					指定添加到键的前缀\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p>\r\n	另外，Cache::Memcached通过Storable模块可以将Perl的复杂数据序列化之后再保存， 因此散列、数组、对象等都可以直接保存到memcached中。\r\n</p>\r\n<h3>\r\n	保存数据\r\n</h3>\r\n<p>\r\n	向memcached保存数据的方法有\r\n</p>\r\n<ul>\r\n	<li>\r\n		add\r\n	</li>\r\n	<li>\r\n		replace\r\n	</li>\r\n	<li>\r\n		set\r\n	</li>\r\n</ul>\r\n<p>\r\n	它们的使用方法都相同：\r\n</p>\r\nmy $add = $memcached-&gt;add( \'键\', \'值\', \'期限\' );\r\nmy $replace = $memcached-&gt;replace( \'键\', \'值\', \'期限\' );\r\nmy $set = $memcached-&gt;set( \'键\', \'值\', \'期限\' );\r\n<p>\r\n	向memcached保存数据时可以指定期限(秒)。不指定期限时，memcached按照LRU算法保存数据。 这三个方法的区别如下：\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					选项\r\n				</td>\r\n				<td>\r\n					说明\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					add\r\n				</td>\r\n				<td>\r\n					仅当存储空间中不存在键相同的数据时才保存\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					replace\r\n				</td>\r\n				<td>\r\n					仅当存储空间中存在键相同的数据时才保存\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					set\r\n				</td>\r\n				<td>\r\n					与add和replace不同，无论何时都保存\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<h3>\r\n	获取数据\r\n</h3>\r\n<p>\r\n	获取数据可以使用get和get_multi方法。\r\n</p>\r\nmy $val = $memcached-&gt;get(\'键\');\r\nmy $val = $memcached-&gt;get_multi(\'键1\', \'键2\', \'键3\', \'键4\', \'键5\');\r\n<p>\r\n	一次取得多条数据时使用get_multi。get_multi可以非同步地同时取得多个键值， 其速度要比循环调用get快数十倍。\r\n</p>\r\n<h3>\r\n	删除数据\r\n</h3>\r\n<p>\r\n	删除数据使用delete方法，不过它有个独特的功能。\r\n</p>\r\n$memcached-&gt;delete(\'键\', \'阻塞时间(秒)\');\r\n<p>\r\n	删除第一个参数指定的键的数据。第二个参数指定一个时间值，可以禁止使用同样的键保存新数据。 此功能可以用于防止缓存数据的不完整。但是要注意，set函数忽视该阻塞，照常保存数据\r\n</p>\r\n<h3>\r\n	增一和减一操作\r\n</h3>\r\n<p>\r\n	可以将memcached上特定的键值作为计数器使用。\r\n</p>\r\nmy $ret = $memcached-&gt;incr(\'键\');\r\n$memcached-&gt;add(\'键\', 0) unless defined $ret;\r\n<p>\r\n	增一和减一是原子操作，但未设置初始值时，不会自动赋成0。因此， 应当进行错误检查，必要时加入初始化操作。而且，服务器端也不会对 超过2&lt;sup&gt;32&lt;/sup&gt;时的行为进行检查。\r\n</p>\r\n<h2>\r\n	总结\r\n</h2>\r\n<p>\r\n	这次简单介绍了memcached，以及它的安装方法、Perl客户端Cache::Memcached的用法。 只要知道，memcached的使用方法十分简单就足够了。\r\n</p>\r\n<p>\r\n	下次由前坂来说明memcached的内部结构。了解memcached的内部构造， 就能知道如何使用memcached才能使Web应用的速度更上一层楼。 欢迎继续阅读下一章。\r\n</p>\r\n<p>\r\n	&nbsp;原文链接：<a href=\"http://kb.cnblogs.com/page/42731/\">http://kb.cnblogs.com/page/42731/</a>\r\n</p>',NULL,NULL,'2014-06-11 18:12:39',0,'memcached完全剖析–1. memcached的基础',0),(149,'admin',31,'<p>\r\n	<span style=\"line-height:1.5;font-size:16px;\"><strong>一、基本参数</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在我们第一次安装Memcached时，一般都是用过这个命令：</span> \r\n</p>\r\n<div>\r\n	<ol>\r\n		<li>\r\n			<span style=\"font-size:14px;\">memcached&nbsp;-m&nbsp;512&nbsp;-u&nbsp;root&nbsp;-d&nbsp;-l&nbsp;127.0.0.1&nbsp;-p&nbsp;11211 </span> \r\n		</li>\r\n	</ol>\r\n</div>\r\n<br />\r\n<span style=\"font-size:14px;\"> 我们先来解释这几个参数的含义吧。</span> \r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-m 指定缓存所使用的最大内存容量，单位是Megabytes，默认是64MB</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-u 只有以root身份运行时才指定该参数</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d 以daemon的形式运行</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-l 指定监听的地址</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-p 指定监听的TCP端口号，默认是11211</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>二、其他常用的参数</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-t 指定线程数，默认是4个</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-h 打印帮助信息</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-c 最大同时连接数，默认是1024.</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-U 指定监听的UDP端口号，默认是11211</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-M 内存耗尽时显示错误，而不是删除项</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">一开始说的“-d”参数需要进行进一步的解释</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d install 安装memcached</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d uninstall 卸载memcached</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d start 启动memcached服务</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d restart 重启memcached服务</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d stop 停止memcached服务</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">-d shutdown 停止memcached服务</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>三、更多参数</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">使用\"-h\"去了解吧～</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>四、使用服务软件的经验</strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">写到这里，最后说一句。在使用任何软件的时候，首先要去关注这样几点：</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1. 打印帮助信息：</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这个一般都是“-h”，当然也有需要“-help”才可以的。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2. 启动、停止、重启/重载配置的命令：</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">要注意，是同一个命令的不同参数来标识的，还是用不同的命令或脚本。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3. 配置</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">首先，启动是否需要配置文件。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其次，如果是比较大型的软件，一般都需要配置文件，那么默认的配置文件在哪里要清楚。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">再次，指定加载配置文件的命令格式如何。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">4. 指定使用内存容量、线程数、硬盘容量等</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">是否有这方面的配置参数需要指定，以及如何设置。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">5. 日志文件</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">首先，是否有日志文件需要存储。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其次，如果有日志文件，默认的存储目录是什么。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">最后，手动指定日志文件的命令格式如何。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">6. 最大连接数</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">首先，是否提供监听的连接服务。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其次，如果提供，默认的最大连接数是多少。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">最后，手动指定最大连接数的命令格式如何。</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">尊重知识，转载请注明本文来自：</span><a href=\"http://blog.csdn.net/poechant\"><span style=\"font-size:14px;\">编程艺术家Poechant的CSDN博客 http://blog.csdn.net/poechant</span></a> \r\n</p>',NULL,'2014-06-12 14:20:54','2014-06-12 14:20:08',0,'Memcached配置参数初解',0);
UNLOCK TABLES;
/*!40000 ALTER TABLE `article` ENABLE KEYS */;

--
-- Table structure for table `blog`
--

DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `article_num` int(11) DEFAULT NULL,
  `background` varchar(255) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `mail_notice` bit(1) DEFAULT NULL,
  `phone_notice` bit(1) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `banner_color` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `blog`
--


/*!40000 ALTER TABLE `blog` DISABLE KEYS */;
LOCK TABLES `blog` WRITE;
INSERT INTO `blog` VALUES (1,0,'248,248,255','如何从认识数据到喜欢数据','\0','\0','Eleword','211,224,243');
UNLOCK TABLES;
/*!40000 ALTER TABLE `blog` ENABLE KEYS */;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `article_number` int(11) DEFAULT NULL,
  `name` varchar(255) NOT NULL,
  `order_value` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `id` (`id`),
  KEY `article_number` (`article_number`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `category`
--


/*!40000 ALTER TABLE `category` DISABLE KEYS */;
LOCK TABLES `category` WRITE;
INSERT INTO `category` VALUES (1,4,'Linux命令',1),(2,15,'RESTful',2),(3,5,'Github',4),(4,13,'SpringMvc',3),(5,1,'Amazon',5),(6,21,'Storm',6),(7,5,'Maven',7),(8,0,'安全',8),(9,2,'技术活动',9),(10,2,'solr',10),(11,3,'工具箱',11),(12,14,'Java基础',12),(13,1,'大数据',13),(14,14,'Java NIO',14),(15,11,'生活随记',15),(16,5,'计算机人物',16),(17,6,'JVM虚拟机',17),(18,2,'Guava',18),(19,0,'Struts2',19),(20,1,'协议',20),(21,0,'OpenJdk',21),(22,2,'互联网',22),(23,1,'前端设计',23),(24,0,'Android',24),(25,2,'错误日志',25),(26,3,'设计模式',26),(27,1,'zookeeper',27),(28,6,'Quartz',28),(29,1,'nginx',29),(30,4,'mysql',30),(31,2,'memcache',31);
UNLOCK TABLES;
/*!40000 ALTER TABLE `category` ENABLE KEYS */;

--
-- Table structure for table `color`
--

DROP TABLE IF EXISTS `color`;
CREATE TABLE `color` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `code` varchar(255) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=152 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `color`
--


/*!40000 ALTER TABLE `color` DISABLE KEYS */;
LOCK TABLES `color` WRITE;
INSERT INTO `color` VALUES (1,'255,179,167','粉红，即浅红色。别称：妃色杨妃色湘妃色妃红色。','粉红'),(2,'237,87,54','妃红色：古同“绯”，粉红色。杨妃色 湘妃色 粉红皆同义。','妃色'),(3,'240,0,86','比大红浅的红色','品红'),(4,'244,121,131','桃花的颜色，比粉红略鲜润的颜色','桃红'),(5,'219,90,107','淡紫红色、较桃红色深一些，是非常妩媚娇艳的颜色','海棠红'),(6,'242,12,0','石榴花的颜色，高色度和纯度的红色','石榴红'),(7,'201,55,86','鲜红色','樱桃色'),(8,'240,86,84','银朱和粉红色颜料配成的颜色。多用来形容有光泽的各种红色，尤指有光泽浅红','银红'),(9,'255,33,33','正红色，三原色中的红，传统的中国红，又称绛色','大红'),(10,'140,67,86','紫中略带红的颜色','绛紫'),(11,'200,60,35','艳丽的深红','绯红'),(12,'157,41,51','1，女子装扮时用的胭脂的颜色。 2，国画暗红色颜料','胭脂'),(13,'255,76,0','朱砂的颜色，比大红活泼，也称铅朱朱色丹色','朱红'),(14,'255,78,32','丹砂的鲜艳红色','丹'),(15,'243,83,54','赤色','彤'),(16,'203,58,86','茜草染的色彩，呈深红色','茜色'),(17,'255,45,81','火焰的红色，赤色','火红'),(18,'201,31,55','深红，火红。泛指赤色、火红色','赫赤'),(19,'239,122,130','鲜艳的红色','嫣红'),(20,'255,0,151','色橘红','洋红'),(21,'255,51,0','引申为红色','炎'),(22,'195,39,43','本义火的颜色，即红色','赤'),(23,'169,129,117','绛色；浅绛色','绾'),(24,'195,33,54','即深红','枣红'),(25,'179,109,97','浅红色，浅绛色','檀'),(26,'190,0,47','发黑的红色','殷红'),(27,'220,48,35','像饮酒后脸上泛现的红色，泛指脸红','酡红'),(28,'249,144,111','饮酒脸红的样子。亦泛指脸红色','酡颜'),(29,'255,241,67','淡黄色','鹅黄'),(30,'250,255,114','小鸭毛的黄色','鸭黄'),(31,'234,255,86','淡黄色','樱草色'),(32,'255,166,49','成熟杏子的黄色','杏黄'),(33,'255,140,​​49','成熟杏子偏红色的一种颜色','杏红'),(34,'255,137,54','柑橘的黄色','橘黄'),(35,'255,164,0','橙的黄色。 （现代感比较强。广告上用得较多）','橙黄'),(36,'255,117,0','柑橘皮所呈现的红色','橘红'),(37,'255,199,115','橙的黄色。 （现代感比较强。广告上用得较多）','姜黄'),(38,'240,194,57','浅黄色','缃色'),(39,'250,140,​​53','界于红色和黄色之间的混合色','橙色'),(40,'179,92,68','一种比栗色稍红的棕橙色至浅棕色','茶色'),(41,'168,132,98','一种比哢叽色稍红而微淡、比肉桂色黄而稍淡和比核桃棕色黄而暗的浅黄棕色','驼色'),(42,'178,93,37','棕毛的颜色,即褐色。 1，在红色和黄色之间的任何一种颜色2，适中的暗淡和适度的浅黑','棕色'),(43,'124,75,0','深​​棕色','棕黑'),(44,'202,105,36','无','琥珀'),(45,'149,85,57','红色、赤红色。古人用以饰面','赭色'),(46,'211,177,125','干枯焦黄','枯黄'),(47,'226,156,69','一种落叶灌木，花黄绿色,叶子秋天变成红色。木材黄色可做染料','黄栌'),(48,'137,108,57','1，中常橄榄棕色,它比一般橄榄棕色稍暗,且稍稍绿些。 2，古以秋为金,其色白,故代指白色','秋色'),(49,'189,221,3','像刚长出的嫩叶的浅绿色','嫩绿'),(50,'120,146,98','竹子的绿色','竹青'),(51,'163,217,0','黄绿色，嫩黄色','葱青'),(52,'10,163,68','翠绿色,形容植物浓绿','青葱'),(53,'0,188,18','光润而浓绿的颜色。以上几种绿色都是明亮可爱的色彩','油绿'),(54,'12,137,24','深绿','绿沉'),(55,'27,209,165','1，青绿色。 2，青白色,浅蓝色','碧色'),(56,'42,221,156','鲜艳的青绿色','碧绿'),(57,'72,192,163','鲜艳的青蓝色','青碧'),(58,'61,225,173','1，翡翠鸟羽毛的青绿色。 2，翡翠宝石的颜色。 (注：C-Y≧30 的系列色彩，多与白色配合以体现清新明丽感觉，与黑色配合效果不好：该色个性柔弱，会被黑色牵制)','翡翠色'),(59,'64,222,90','绿而略黄的颜色','草绿'),(60,'0,224,158','1，一类带绿的蓝色,中等深浅,高度饱和。 3，本义是蓝色。 4，一般指深绿色。 5，也指黑色。 6，四色印刷中的一色。 2，特指三补色中的一色。','青色'),(61,'0,224,121','鲜绿','青翠'),(62,'192,235,215','白而发青,尤指脸没有血色','青白'),(63,'224,238,232','淡青灰色，极淡的青绿色','鸭卵青'),(64,'187,205,197','深灰绿色','蟹壳青'),(65,'66,76,80','鸦羽的颜色。即黑而带有紫绿光的颜色','鸦青'),(66,'158,208,72','浅黄绿色','豆绿'),(67,'150,206,84','浅青绿色','豆青'),(68,'123,207,166','淡灰绿色','石青'),(69,'46,223,163','玉的颜色，高雅的淡绿、淡青色','玉色'),(70,'127,236,173','绿色而微白','缥'),(71,'164,226,198','艾草的颜色。偏苍白的绿色','艾绿'),(72,'33,166,117','经冬松柏叶的深绿','松柏绿'),(73,'5,119,72','亦作“松花”、“松绿”。偏黑的深绿色,墨绿','松花绿'),(74,'68,206,246','三原色的一种。像晴天天空的颜色（注：这里的蓝色指的不是RGB色彩中的B，而是CMY色彩中的C）','蓝'),(75,'23,124,176','也叫“蓝靛”。用蓼蓝叶泡水调和与石灰沉淀所得的蓝色染料。呈深蓝绿色 （注：有些地方将蓝墨水称为“靛水”或者“兰靛水”）','靛青'),(76,'6,82,121','由植物(例如靛蓝或菘蓝属植物)得到的蓝色染料','靛蓝'),(77,'62,237,231','青蓝色','碧蓝'),(78,'112,243,255','类似晴朗天空的颜色的一种蓝色','蔚蓝'),(79,'75,92,196','鲜艳明亮的蓝色（注：英文中为RoyalBlue 即皇家蓝色，是皇室选用的色彩，多和小面积纯黄色（金色）配合使用。 ）','宝蓝'),(80,'161,175,201','一种近于灰略带蓝的深灰色','蓝灰色'),(81,'46,78,126','蓝而近黑','藏青'),(82,'59,46,126','蓝里略透红色','藏蓝'),(83,'74,66,102','青黑色的颜料。古代女子用以画眉','黛'),(84,'66,102,102','墨绿','黛绿'),(85,'66,80,102','深蓝色','黛蓝'),(86,'87,66,102','深紫色','黛紫'),(87,'129,84,99','浑浊的紫色','紫酱'),(88,'129,84,118','紫中略带红的颜色','酱紫'),(89,'76,34,27','檀木的颜色，也称乌檀色乌木色','紫檀'),(90,'0,51,113','纯度较低的深紫色','绀青'),(91,'86,0,79','黑红色','紫棠'),(92,'76,141,174','深蓝色','群青'),(93,'176,164,227','浅蓝紫色','雪青'),(94,'204,164,227','紫丁香的颜色，浅浅的紫色，很娇柔淡雅的色彩','丁香色'),(95,'237,209,216','浅灰而略带红的颜色','藕色'),(96,'228,198,208','浅紫而略带红的颜色','藕荷色'),(97,'117,135,138','即各种颜色掺入黑色后的颜色，如苍翠','苍色'),(98,'81,154,115','无','苍黄'),(99,'162,155,124','无','苍青'),(100,'115,151,171','无','苍黑'),(101,'209,217,224','无','苍白'),(102,'136,173,166','无','水色'),(103,'243,211,231','无','水红'),(104,'212,242,231','无','水绿'),(105,'210,240,244','无','水蓝'),(106,'211,224,243','无','淡青'),(107,'255,255,255','纯白，洁白，净白，粉白','精白'),(108,'255,251,240','乳白色','像牙白'),(109,'240,252,255','如雪般洁白','雪白'),(110,'214,236,240','淡蓝色','月白'),(111,'186,202,198','金属氧化后的色彩','老银'),(112,'167,142,68','无','乌金'),(113,'84,150,136','无','铜绿'),(114,'233,231,239','带银光的白色','银白'),(115,'234,205,118','平均为深黄色带光泽的颜色','金色'),(116,'深黑色、泛指黑色','无','65,85,93'),(117,'93,81,60','黑中带黄的颜色','黝'),(118,'57,47,65','深黑','乌黑'),(119,'22,24,35','非常黑的','漆黑'),(120,'240,240,244','铅粉的白色。铅粉，国画颜料，日久易氧化“返铅”变黑。铅粉在古时用以搽脸的化妆品。 （注：冷白）','玄青'),(121,'238,222,176','与像牙相似的淡黄色（注：暖白）','牙色'),(122,'128,128,128','黑色和白色混和成的一种颜色','灰色'),(123,'227,239,253','晶莹洁白','莹白'),(124,'252,239,232','似鱼腹部的颜色，多指黎明时东方的天色颜色','鱼肚白'),(125,'194,204,208','白色和黑色混杂的。斑白的 夹杂有灰色的白','花白'),(126,'233,241,246','白霜的颜色','霜色'),(127,'242,190,69','足金的颜色','赤金'),(128,'98,42,29','赤黑色，黑中带红的颜色，又泛指黑色','玄色'),(129,'117,138,153','即黑灰','墨灰'),(130,'102,153,204','浅蓝','浅蓝'),(131,'102,102,102','暗灰','暗灰'),(132,'102,153,102','柔和中绿','柔和中绿'),(133,'102,204,153','浅绿','浅绿'),(134,'255,2041,53','无','无'),(135,'255,204,153','无','无'),(136,'248,248,255','GhostWhite','GhostWhite'),(137,'181,181,181','grey71','grey71'),(138,'238,229,222','Seashell2','Seashell2'),(139,'119,136,153','LightSlateGray','LightSlateGray'),(140,'34,139,34','ForestGreen','ForestGreen'),(141,'224,238,224','Honeydew2','Honeydew2'),(142,'230,230,250','lavender','lavender'),(143,'139,131,134','LavenderBlush4','LavenderBlush4'),(144,'130,130,130','grey51','grey51'),(145,'156,156,156','grey61','grey61'),(146,'105,105,105','grey41','grey41'),(147,'0,139,139','DarkCyan','DarkCyan'),(148,'139,131,120','AntiqueWhite4','AntiqueWhite4'),(149,'47,79,79','DarkSlateGray','DarkSlateGray'),(150,'240,255,240','Honeydew','Honeydew'),(151,'220,220,220','Gainsboro','Gainsboro');
UNLOCK TABLES;
/*!40000 ALTER TABLE `color` ENABLE KEYS */;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `article_id` bigint(20) DEFAULT NULL,
  `comment_content` varchar(255) DEFAULT NULL,
  `comment_date` datetime DEFAULT NULL,
  `comment_nickname` varchar(255) DEFAULT NULL,
  `comment_user` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `comment`
--


/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
LOCK TABLES `comment` WRITE;
INSERT INTO `comment` VALUES (1,30,'mark 一下','2014-04-22 15:09:23','火凤',NULL,'huofeng@126.com'),(2,30,'http://w.deepsky.tv/index.php?title=Top_Tips_To_Find_The_Perfect_Pair_Of_Shoes\r\nCheap air jordan http://www.dkptracker.com','2014-05-13 04:27:51','Cheap air jordan',NULL,'cxklcnteuyp@gmail.com'),(3,134,'看完了， 学习了。','2014-06-06 10:19:55','明尚',NULL,'krisibm@163.com'),(4,134,'Mark一下','2014-06-06 10:20:15','明尚',NULL,'krisibm@163.com');
UNLOCK TABLES;
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;

--
-- Table structure for table `folder`
--

DROP TABLE IF EXISTS `folder`;
CREATE TABLE `folder` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `content` text,
  `create_time` datetime DEFAULT NULL,
  `ename` varchar(255) NOT NULL,
  `father_id` bigint(20) DEFAULT NULL,
  `level` int(11) DEFAULT NULL,
  `name` varchar(255) NOT NULL,
  `path` varchar(255) DEFAULT NULL,
  `sort` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `folder`
--


/*!40000 ALTER TABLE `folder` DISABLE KEYS */;
LOCK TABLES `folder` WRITE;
INSERT INTO `folder` VALUES (1,'<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\">个人资料：我是一名程序猿，擅长WEB 应用开发，喜欢新鲜的技术。好奇心驱使尝试学习各种东西</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\"> 喜欢做饭，热爱生活。由衷滴渴望互联网成就自己的价值。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:16px;\"> </span> \r\n</p>\r\n<hr />\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	叔度 (<a href=\"http://blog.zhuzhaoyuan.com/\">http://blog.zhuzhaoyuan.com</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	雕梁 (<a href=\"http://www.pagefault.info/\">http://www.pagefault.info</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	文景 (<a href=\"http://yaoweibin.cn/\">http://yaoweibin.cn</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	李子 (<a href=\"http://blog.lifeibo.com/\">http://blog.lifeibo.com</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	卫越 (<a href=\"http://blog.sina.com.cn/u/1929617884\">http://blog.sina.com.cn/u/1929617884</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	袁茁 (<a href=\"http://yzprofile.me/\">http://yzprofile.me</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	小熊 (<a href=\"http://dinic.iteye.com/\">http://dinic.iteye.com</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	吉兆 (<a href=\"http://jizhao.blog.chinaunix.net/\">http://jizhao.blog.chinaunix.net</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	静龙 (<a href=\"http://blog.csdn.net/fengmo_q\">http://blog.csdn.net/fengmo_q</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	竹权 (<a href=\"http://weibo.com/u/2199139545\">http://weibo.com/u/2199139545</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	公远 (<a href=\"http://100continue.iteye.com/\">http://100continue.iteye.com/</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	布可 (<a href=\"http://weibo.com/sifeierss\">http://weibo.com/sifeierss</a>)\r\n</p>\r\n<p style=\"color:#333333;font-family:Helvetica, arial, freesans, clean, sans-serif;font-size:15px;\">\r\n	<a href=\"http://hongjiang.info/\">http://hongjiang.info/</a> \r\n</p>\r\n<a href=\"http://hongjiang.info/\">http://hongjiang.info/</a> \r\n<p>\r\n	http://blog.csdn.net/z69183787/article/details/8290811\r\n</p>\r\n<p>\r\n	http://www.cnblogs.com/peida/\r\n</p>',NULL,'aboutme',0,0,'关于我',NULL,0,1,NULL,'2014-06-06 06:58:14');
UNLOCK TABLES;
/*!40000 ALTER TABLE `folder` ENABLE KEYS */;

--
-- Table structure for table `media`
--

DROP TABLE IF EXISTS `media`;
CREATE TABLE `media` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_date` datetime DEFAULT NULL,
  `name` varchar(512) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `url` varchar(512) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `media`
--


/*!40000 ALTER TABLE `media` DISABLE KEYS */;
LOCK TABLES `media` WRITE;
INSERT INTO `media` VALUES (1,'2014-04-25 10:11:23','36氪',1,'http://www.36kr.com/'),(2,'2014-04-25 10:11:43','腾讯科技',1,'http://it.qq.com/'),(3,'2014-04-25 10:12:36','搜狐IT',1,'http://it.sohu.com/'),(4,'2014-04-25 10:13:08','FreeBuf',1,'http://www.freebuf.com/'),(5,'2014-04-25 10:14:00','虎嗅网',1,'http://www.huxiu.com/'),(6,'2014-04-25 11:26:37','InfoQ',1,'http://www.infoq.com/cn'),(7,'2014-04-25 11:29:01','网易科技',1,'http://tech.163.com/'),(8,'2014-04-25 11:30:16','CSDN',1,'http://news.csdn.net/'),(9,'2014-04-25 11:31:07','PingWest',1,'http://www.pingwest.com/'),(10,'2014-04-25 11:38:08','新浪科技',1,'http://tech.sina.com.cn/'),(11,'2014-04-25 11:39:57','支点网',1,'http://www.topoint.com.cn/'),(12,'2014-04-25 11:41:51','盛大创新院',1,'http://in.sdo.com/'),(13,'2014-04-25 11:43:13','HTML5中国',1,'http://www.html5cn.org/'),(14,'2014-04-25 11:45:05','网界网',1,'http://www.cnw.com.cn/'),(15,'2014-04-25 12:14:07','CIO时代网',1,'http://www.ciotimes.com/'),(16,'2014-04-25 12:16:50','techcrunch中国',1,'http://techcrunch.cn/'),(17,'2014-04-25 12:18:30','wired',1,'http://www.wired.com/'),(18,'2014-04-25 12:19:08','Mashable Tech',1,'http://mashable.com/tech/'),(19,'2014-04-25 12:22:58','商业价值',1,'http://content.businessvalue.com.cn/'),(20,'2014-04-25 12:23:33','果壳网',1,'http://www.guokr.com/'),(21,'2014-04-25 12:25:38','engadget中文网',1,'http://cn.engadget.com/'),(22,'2014-04-25 12:35:57','速途网',1,'http://www.sootoo.com/'),(23,'2014-04-25 12:36:55','techweb',1,'http://www.techweb.com.cn/'),(24,'2014-04-25 12:38:26','爱范儿',1,'http://www.ifanr.com/'),(25,'2014-04-26 08:31:53','36大数据',1,'http://www.36dsj.com/'),(26,'2014-04-26 08:53:33','哈佛商业评论',1,'http://www.hbrchina.org/'),(27,'2014-04-26 09:22:35','数据新闻中文网',1,'http://djchina.org/'),(28,'2014-04-28 15:13:36','并发编程网',1,'http://ifeve.com/'),(29,'2014-05-01 06:49:39','21世纪网',1,'http://www.21cbh.com/'),(30,'2014-05-05 10:07:32','中国科技网',1,'http://www.wokeji.com/'),(31,'2014-05-15 04:38:55','鞭牛士',1,'http://www.bianews.com/'),(32,'2014-05-15 20:16:38','扯氮集',1,'http://weiwuhui.com/'),(33,'2014-05-15 20:17:15','3W-这就是互联网的圈子',1,'http://www.3wcoffee.com/'),(34,'2014-05-15 20:18:46','cnBeta.COM_中文业界资讯站',1,'http://www.cnbeta.com/'),(35,'2014-05-15 20:19:12','乌云社区',1,'http://www.wooyun.org/index.php'),(36,'2014-05-20 09:20:30','人人都是产品经理',1,'http://www.woshipm.com/'),(37,'2014-05-21 13:46:16','福布斯中文网',1,'http://www.forbeschina.com/'),(38,'2014-05-22 21:45:58','价值中国',1,'http://www.chinavalue.net/'),(39,'2014-05-22 21:46:17','科学网博客',1,'http://blog.sciencenet.cn/blog.php'),(40,'2014-05-23 09:37:18','toptal',1,'http://www.toptal.com/'),(41,'2014-05-23 09:38:26','mpd',1,'http://www.mpd.so/'),(42,'2014-05-25 15:06:10','科学网',1,'http://www.kexue.com/'),(43,'2014-05-25 15:11:45','中文互联网数据资讯中心',1,'http://www.199it.com/'),(44,'2014-05-25 15:16:04','中国数字科技馆',1,'http://www.cdstm.cn/'),(45,'2014-05-25 15:23:15','科学松鼠会',1,'http://songshuhui.net/'),(46,'2014-05-25 17:27:00','中国科普博览',1,'http://www.kepu.net.cn/gb/index.html'),(47,'2014-05-26 06:49:20','弯曲评论',1,'http://www.valleytalk.org/'),(48,'2014-05-27 00:27:19','码农场',1,'http://www.hankcs.com/'),(49,'2014-05-27 00:30:04','javaposse',1,'http://www.javaposse.com/'),(50,'2014-06-11 16:48:31','外刊评论',1,'http://www.vaikan.com/');
UNLOCK TABLES;
/*!40000 ALTER TABLE `media` ENABLE KEYS */;

--
-- Table structure for table `news`
--

DROP TABLE IF EXISTS `news`;
CREATE TABLE `news` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `content` text,
  `media` varchar(1024) DEFAULT NULL,
  `media_url` varchar(1024) DEFAULT NULL,
  `post_date` datetime DEFAULT NULL,
  `status` smallint(6) DEFAULT NULL,
  `thumbnails_url` varchar(1024) DEFAULT NULL,
  `title` varchar(1024) DEFAULT NULL,
  `user` varchar(1024) DEFAULT NULL,
  `author` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `id` (`id`),
  KEY `post_date` (`post_date`)
) ENGINE=InnoDB AUTO_INCREMENT=199 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `news`
--


/*!40000 ALTER TABLE `news` DISABLE KEYS */;
LOCK TABLES `news` WRITE;
INSERT INTO `news` VALUES (1,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">今天小编为各位推荐的是Shodan Chrome插件，它可以自动探测网站所属的国家、城市，谁是这个网站IP的主人以及其开放的服务和端口，包括FTP、DNS、SSH或者其他非主流服务。可谓渗透测试工程师居家旅行、杀人越货必备良药:)</span>\r\n</p>\r\n<p style=\"text-align:center;\">\r\n	<img src=\"http://image.3001.net/images/20140425/13984276919249.png!small\" title=\"shodan-chrome.png\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">FreeBuf科普：什么是Shodan</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">很多人可能认为谷歌的搜索引擎已经非常强大了，但是实际上还有一种比谷歌更可怕的搜索引擎，那就是Shodan。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Shodan的开发者约翰马瑟利（John Matherly）称：“人们在谷歌上找不到某些内容时，他们就认为没有人能够找到它。但那是不对的。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">与谷歌通过网址来搜索互联网的方式不同，Shodan通过互联网背后的通道来搜索信息。它就象是一种“黑暗”的谷歌，不断在寻找服务器、网络摄像头、打印机、路由器和其他与互联网连接及构成互联网的一切东西。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Shodan日夜不停地在运行着，每月可在互联网上搜索到大约5亿个连网设备和服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Shodan的搜索能力是极其惊人的。无数交通灯、安全摄像头、家庭自动化设备和加热系统都连接着互联网，Shodan可以很轻松地找到它们。</span>\r\n</p>\r\n<p style=\"text-align:center;\">\r\n	<img src=\"http://image.3001.net/images/20140425/13984282529342.png!small\" title=\"shodan-L.png\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"https://chrome.google.com/webstore/detail/shodan/jjalcfnidlmpjhdfepjhjbhnhkbgleap\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">下载地址</span></a>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">如文中未特别声明转载请注明出自：FreebuF.COM</span>\r\n</p>','FreeBuf','http://www.freebuf.com/tools/32993.html','2014-04-26 06:23:12',1,'/news/thumb/Shodan___System_Shock_II_by_BombingCat-220x150.jpg','黑暗搜索引擎Shodan Chrome插件','admin','phper'),(2,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯科技 孙实 4月25日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">近日，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">苹果</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">谷歌</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">)、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微软</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">科技界“四大天王”纷纷发布今年第一季度财报。腾讯科技从中摘取一些关键的数据进行分析、对比，或许会让你对这四家公司的运营状况有一个更为直观的认识。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">营收：苹果微软结构多元化</span>\r\n</p>\r\n<p style=\"text-align:center;\">\r\n	<img alt=\"国外科技巨头财报PK：谷歌净利润短期难超微软\" src=\"http://img1.gtimg.com/tech/pics/hv1/14/61/1576/102494969.jpg\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">2014年第一季度，四家公司营收对比图（单位：亿美元）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从图中可以看出，苹果的领先优势十分巨大，微软+亚马逊的营收总和，依旧不及苹果，而谷歌作为科技领域市值仅次于苹果的第二大公司，营收不及微软、亚马逊。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从业务角度看，苹果、微软的营收结构较为多元化。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">苹果营收主要来自以下几个部分：</span>\r\n</p>\r\n<p style=\"text-align:center;\">\r\n	<img alt=\"国外科技巨头财报PK：谷歌净利润短期难超微软\" src=\"http://img1.gtimg.com/tech/pics/hv1/181/61/1576/102495136.jpg\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">苹果各业务营收比例（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从图中可以看出，虽然iPhone占据了苹果营收的主要来源，但来自iPad、Mac等产品的营收也占有一定比例，即苹果并不完全依赖于iPhone。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微软同样如此：</span>\r\n</p>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"国外科技巨头财报PK：谷歌净利润短期难超微软\" src=\"http://img1.gtimg.com/tech/pics/hv1/193/61/1576/102495148.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微软各业务营收比例（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">相比之下，谷歌和亚马逊的收入来源则较为单一：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">谷歌第一季度来自互联网（主要为广告）的营收为157.2亿美元，总营收占比为93%。Android虽然是移动领域第一大操作系统，但却由于免费开源，谷歌从中并不能赚到授权费用，更多也只是依靠移动广告。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊第一季度来自电子产品和其它日用商品的销售额为130.17亿美元，总营收占比为69%，来自媒体产品的销售额为54.67亿美元，占比27.75%，其他业务则只拥有5%左右的份额。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">净利润：谷歌短期难超微软</span>\r\n</p>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"国外科技巨头财报PK：谷歌净利润短期难超微软\" src=\"http://img1.gtimg.com/tech/pics/hv1/9/62/1576/102495219.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">2014年第一季度，四家公司净利润对比图（单位：亿美元）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从净利润可以看出，苹果依旧是最赚钱的公司。此前有数据显示，苹果垄断了智能手机行业50%以上的利润，iPad地位虽然不断下降，但依然牢牢把握住了30%以上的市场份额，堪称恐怖。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">与营收形成鲜明对比的是，亚马逊的净利润仅仅为1亿美元，不到苹果的1%，利润率仅为0.6%。亚马逊CEO贝索斯通过持续巨资的投入，进入了很多新的领域，虽然现在是微利甚至亏损，但他能使投资人相信买亚马逊的股票能够在未来获得好收成。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">此外，亚马逊重视用户体验，通过投入巨资构建起超越竞争对手的用户体验，而这样的用户体验却只收很低的价格，这种反常让投资人坚信亚马逊未来会提价以获得收益。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">因此，亚马逊成就这样一个怪异的现象：亚马逊不断投入，始终徘徊微盈利或亏损之间，但投资人一直憧憬着亚马逊的未来，相信亚马逊会进入新的领域，开拓新的机会获得收益，哪怕亚马逊的财报数据很难看，但其股价依旧连连上涨。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">需要重新审视的是微软和谷歌两家企业：</span>\r\n</p>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"国外科技巨头财报PK：谷歌净利润短期难超微软\" src=\"http://img1.gtimg.com/tech/pics/hv1/31/62/1576/102495241.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微软、谷歌近七个季度净利润走势图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从两家近七个季度的净利润来看，双方净利润走势规律颇为相似，并且有着不小的差距。近几年，有关“微软末日帝国”的说法日嚣尘上，而谷歌则凭借在新兴领域的发力以及大肆收购，深受投资者青睐，因此市值也一举超越老牌巨头微软。但从双方业绩来看，谷歌的盈利水平距离微软还有较大差距，如果按照目前的情况发展下去，单从业绩上看，谷歌实现对微软的超越，尚需一段时间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">人均创造价值：109个亚马逊员工=1个苹果员工</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">计算方法：公司净利润/公司员工总数</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">苹果：净利润102.23亿美元，员工总数7.61万人，人均创造13.43万美元</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">谷歌：净利润34.5亿美元，员工总数5.39万人，人均创造美元6.4万美元</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微软：净利润56.6亿美元，员工总数9.4万人，人均创造美元6.02万美元</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊：净利润1.08亿美元，员工总数8.84万人，人均创造美元1221美元</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从数据来看，苹果员工每个人创造的价值最高，109个亚马逊员工才相当于1个苹果员工创造的财富。这或许会给企业提出一个思考：如何最大限度激发员工的潜能，从而产生更多的价值？</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140425/019408.htm','2014-04-26 06:38:33',1,'/news/thumb/102495136.jpg','国外科技巨头财报PK：1个苹果=102个亚马逊','admin','孙实'),(3,'<div style=\"text-align:center;\">\r\n	<img alt=\"富士康向谷歌出售大量通信技术专利\" src=\"http://img1.gtimg.com/tech/pics/hv1/2/128/1576/102512042.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">腾讯科技讯 4月25日消息，富士康今日宣布，已将大量通信技术专利出售给</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">谷歌</span></a><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">微博</span></a><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">)，但并未披露具体的交易金额。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">富士康以为</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">苹果</span></a><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">和索尼等科技公司代工而闻名，但鲜有人知，富士康一直都在研发新技术，并拥有大量技术专利。富士康今日在一份声明中称，公司在全球范围内已申请12.84万项专利，并已获批64300项。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">在竞争异常激烈的全球科技市场，为争取业绩标准，企业之间的专利大战在所难免。作为苹果公司在移动市场的主要竞争对手，谷歌一直都在通过并购来强化自己的专利实力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">例如，谷歌在2011年收购了</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MMI.N.htm\" target=\"_blank\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">摩托罗拉移动</span></a><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">。业内人士表示，该交易主要就是为了获得后者的大量专利，从而保护自己的Android生态系统，以避免遭到苹果和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">微软</span></a><span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">等对手的起诉。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">曼哈顿专利顾问公司Envision IP数据显示，2013年富士康是美国前20大专利持有公司之一。去年，富士康还曾向谷歌出售头戴式显示技术专利，交易金额同样未知。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">Envision IP常务董事茂林·沙哈(Maulin Shah)称：“凭借在美国和全球拥有的大量专利，富士康可以向其客户提供专利授权，还可以与代工合约相整合。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-family:\'Microsoft YaHei\';font-size:14px;\">富士康表示，公司还将继续在研发领域进行投资。(谭燃)</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140425/027146.htm','2014-04-26 06:39:50',1,'/news/thumb/102512042.jpg','富士康向谷歌出售大量通信技术专利','admin','谭燃'),(4,'<div style=\"text-align:center;\">\r\n	<img alt=\"新浪微博成功登陆纳斯达克 首日涨19.06%\" src=\"http://img1.gtimg.com/tech/pics/hv1/236/117/1570/102119321.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯科技 金铎 4月26日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">乌克兰局势再度恶化，评级机构标准普尔下调俄罗斯评级至仅高于垃圾级，引发了市场担忧情绪。美国股市周五收低，科技股再遭重挫，纳指大跌1.75%；中国概念股普跌，5只个股跌幅超过8%，其中</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/JOBS.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">前程无忧</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">大跌8.52%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">新浪</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微博股价跌破20美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">前程无忧2月份公布的财报显示，2013年第四季度，前程无忧总营收达到4.724亿元人民币（约合7800万美元），同比增长18.9%；净利润达到1.553亿元人民币（约合2560万美元），同比增长27.1%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">前程无忧本月初公布了总额1.5亿美元2019年到期高级可转债的定价。在30天时间内，初始认购方有权额外认购2250万美元可转债。这一可转债的年利率为3.25%，每年将两次付息，分别为4月15日和10月15日。首次付息将为2014年10月15日。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">最近刚上市的新浪微博跌6.02%，自上市以来收盘价首次跌破20美元；受其影响，新浪相应跌6.67%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">其它活跃个股，乐居跌8.41%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/VIPS.N.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">唯品会</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"> 跌8.35%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/DANG.N.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">当当网</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">跌8.07%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SFUN.N.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">搜房</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">网跌8.04%。中国概念股周五收盘行情如下：</span> \r\n</p>\r\n<p>\r\n	<img alt=\"隔夜中概股普跌 前程无忧大跌8.52%\" src=\"http://img1.gtimg.com/tech/pics/hv1/50/54/1433/93194645.jpg\" 蓝汛通信大跌8.86%?=\"\" 搜房网大涨10.62%?=\"\" 无锡尚德暴跌23.85%?=\"\" 四支个股跌幅超10%?=\"\" 麦考林大涨22.82%?=\"\" 58同城大近9%?=\"\" 股价再创新高?=\"\">\r\n</p>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"隔夜中概股普跌 前程无忧大跌8.52%\" src=\"http://img1.gtimg.com/tech/pics/hv1/142/152/1576/102518302.jpg\" /> \r\n</div>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"隔夜中概股普跌 前程无忧大跌8.52%\" src=\"http://img1.gtimg.com/tech/pics/hv1/143/152/1576/102518303.jpg\" /> \r\n</div>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"隔夜中概股普跌 前程无忧大跌8.52%\" src=\"http://img1.gtimg.com/tech/pics/hv1/144/152/1576/102518304.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">以上交易价格单位为美元；市值一列中，B代表10亿美元，M代表100万美元，K代表1000美元。返回</span><a target=\"_blank\" href=\"http://www.qq.com/\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯网</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">首页&gt;&gt;</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140426/001437.htm','2014-04-26 06:50:35',1,'/news/thumb/102119321.jpg','隔夜中概股普跌 新浪微博股价跌破20美元','admin','金铎'),(5,'<div style=\"text-align:center;\">\r\n	<img alt=\"猎豹移动IPO最高融资规模压缩33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/203/153/1576/102518618.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯科技 金铎 北京时间4月26日消息</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹移动公司（原金山网络，以下简称“猎豹”）今日再度更新招股书，将最高融资规模由之前的3亿美元压缩至2.001亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹移动此次拟发行1200万份美国存托股（ADS），发行价格预计在12.50美元到14.50美元之间。此外，猎豹还授予了承销商180万份ADS超额配售权，价格为发行价减去给予承销商的折扣。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">此前一次更新中，猎豹移动将股票交易代码确定为“CMCM”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹本月3日向美国证监会（SEC）提交了上市申请文件（IPO），申请在美国纽约证券交易所上市（NYSE），拟最高募资3亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">招股书显示，</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/03888.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">金山软件</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">直接持有猎豹已发行股份的54.09%，猎豹将向投资人发行及销售相当于其现时股本15%的新股本，金山软件股权将被摊薄到47%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">2013年6月，金山软件与腾讯共同增持猎豹，分别斥资522.23万美元、4698万美元，新增股份约占扩大后猎豹总股本10%，其中金山软件占1%，腾讯占9%。这意味着猎豹当时估值为5亿美元，这也意味着不到1年时间，猎豹估值增长超过400%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹公司2013年营收为7.499亿元人民币，同比增长160.4%；净利润为6200万元人民币，同比增长532.6%（2011年亏损3020万元人民币）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">摩根士丹利国际公司、摩根大通证券公司、瑞士信贷证券公司和麦格理资本(美国)公司担任猎豹此次IPO交易的承销商。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">各项运营数据公布</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">在上一次更新招股书的同时，猎豹移动公布了最新的用户数据。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">从整体来说，2014年2月，猎豹移动旗下所有应用的月活跃用户为3.407亿活跃用户；2014年3月，其移动应用的月活跃用户数为2.225亿；截至2014年3月31日，其移动端应用装机量已超过5.021亿。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹清理大师：截至2014年3月31日，装机量为2.373亿。2014年3月，月活跃用户为1.399亿，日活跃用户为7290万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">金山手机毒霸国际版：截至2014年3月31日，装机量为2560万。2014年3月，月活跃用户为2300万，日活跃用户为1150万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">金山电池医生：截至2014年3月31日，装机量为2.017亿。2014年3月，月活跃用户为5860万，日活跃用户为2620万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">金山手机毒霸：2014年2月，月活跃用户为1.241亿，日活跃用户为4840万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">相格（Photo Grid，2013年7月收购）：截至2014年3月31日，装机量为6270万。2014年3月，月活跃用户为2520万，日活跃用户为330万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹浏览器：2014年2月，月活跃用户为4630万，日活跃用户为1560万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">此外，针对平台产品，猎豹也更新了相关数据。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Duba.com个人起始页：2014年2月，月活跃用户数为5170万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">猎豹个性化推荐引擎：2014年2月，月活跃用户为4630万。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">游戏中心：截至2014年3月31日，共发行了570款游戏。与此前公布的2013年底数量相比，增长了42.5%。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140426/001625.htm','2014-04-26 06:52:20',1,'/news/thumb/102518618.jpg','猎豹移动IPO最高融资规模压缩33%','admin','金铎'),(6,'<div style=\"text-align:center;\">\r\n	<img alt=\"展望低于预期 亚马逊股价重挫10%\" src=\"http://img1.gtimg.com/tech/pics/hv1/10/153/1576/102518425.jpg\" />\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯科技 金铎 4月26日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">由于对前景的展望低于市场分析师预期，互联网巨头</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">股价周五大跌近10%，市值蒸发172亿美元。受亚马逊拖累，网络股当日普遍受挫，领跌美股市场，其中</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Facebook</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">跌逾5%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">雅虎</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">跌2.16%，EBAY跌2.04%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">谷歌</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">)跌1.71%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">除了亚马逊，福特和维萨等企业的一季报也令投资者失望，再加上乌克兰局势再度恶化，评级机构标准普尔下调俄罗斯评级至仅高于垃圾级，多种利空叠加引发了市场担忧情绪，美国三大股指当日全部收跌。</span>\r\n</p>\r\n<div style=\"text-align:center;\">\r\n	<img alt=\"展望低于预期 亚马逊股价重挫10%\" src=\"http://img1.gtimg.com/tech/pics/hv1/207/152/1576/102518367.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊股价当日走势（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊昨日公布的财报显示，2014财年第一季度财报。净销售额为197.41亿美元，与上年同期的160.70亿美元相比增长23%。净利润为1.08亿美元，与去年同期的8200万美元相比增长32%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">第一财季，亚马逊净利润为1.08亿美元，每股摊薄收益23美分，与汤森路透所调查分析师的平均预期一致。而上年同期为8200万美元，每股摊薄收益18美分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">净销售额为197.41亿美元，同比增长23%。其中，来自电子产品和其它日用商品的销售额为130.17亿美元，同比增长27%。来自媒体产品的销售额为54.67亿美元，同比增长8%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">展望2014财年第二季度，亚马逊预计销售额将达到181亿美元至198亿美元，中间值低于华尔街分析师平均预期的190.3亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊股价今日收报303.83美元，较上个交易日下跌9.88%。过去52周，该股股价最高上摸408.06美元，最低下探至245.75美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140426/001507.htm','2014-04-26 06:54:14',1,'/news/thumb/102518425.jpg','展望低于预期 亚马逊股价重挫10%','admin','金铎'),(7,'<div style=\"text-align:center;\">\r\n	<img alt=\"阿里巴巴或增加股票发行量 欲创IPO世界记录\" src=\"http://img1.gtimg.com/tech/pics/hv1/28/31/1576/102487333.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯科技讯 2月25日消息，据《华尔街日报》报道，</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">阿里巴巴集团</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">正在制定一项计划，该计划可能使该公司正在酝酿中的IPO成为有史以来最大的一次IPO。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">根据知情人士透露，阿里巴巴集团正在和投行讨论增加新的交易股票，此举将使该公司满足投资者需求之外也为自身募集资金。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">目前尚没有最终的决定，但增加新的股份将有助于推动阿里巴巴集团IPO筹集到逾200亿美元资金，有可能超过中国农业银行2010年在上海和香港上市时创下的221亿美元的记录。在美国，最大的一次IPO是维萨公司（Visa Inc）2010年的IPO,那次IPO筹集到197亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">一家中国公司或将创下全球历史上最大的一次IPO，这也可以看作是中国对全球投资者重要性在上升的又一迹象。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">尽管如此，不管是对阿里巴巴集团还是对华尔街来说，这次IPO的赌注都是很高的。</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">阿里巴巴</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">此次IPO将面向全球公众股票投资者。它的承销银行——瑞士信贷集团、德意志银行、高盛集团、摩根士丹利、摩根大通和花旗集团——还必须采取一些措施确保销售顺利。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">根据Dealogic的数据，美国IPO市场今年以自dot- com时代以来最快的步伐增长。但成长股近期的价格调整已经使该市场蒙上了一层阴影，包括中国</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">新浪</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">公司旗下微博公司（Weibo Corp）和乐居控股有限公司在内的一些公司的股票定价均低于其最乐观的预测。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">对于阿里巴巴来说，增加新的股票会产生额外的现金，以帮助该公司拓展中国以外的市场，并与财大气粗的竞争对手——如中国的腾讯公司，美国的互联网巨头</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">谷歌</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">)公司和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Facebook</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">公司——竞争。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">“阿里巴巴已经处在一个转折点上，在极端的增长之后，它将需要资金来取得另一个巨大的推进。” ClearPath Capital Partners合伙人Paul Boyd说。Boyd还表示，他会考虑为客户购买阿里巴巴股票。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">销售一些自己的股票，这让阿里巴巴可以直接影响交易的规模，虽然它不是唯一的杠杆。另一个关键因素是阿里巴巴目前的投资者将出售多少股票，包括持有阿里巴巴37％股份的日本软银集团和和持有阿里巴巴24 ％股份的</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">雅虎</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">公司。阿里巴巴此次IPO预计今年夏末在美国纽约州开始。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">股票销售直接为公司而非股东带来现在，所以更吸引新的投资者，因为这些钱通常可以投入业务发展中。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">截至去年9月，阿里巴巴有大约20亿美元的短期资产，虽然目前尚不清楚其中有多少是现金或现金等值资产。此外，这一数字并没有考虑公司的第四季度盈利。根据谷歌公司的年度报告，它在2013年底拥有590亿美元现金。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">尽管如此，通过创造更多的交易股票，阿里巴巴稀释了现有股东所持股份的价值，这是有风险的。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">最近的一项研究表明，当一个公司的股份只有比例较小的一部分在IPO中出售时，投资者往往会从中受益。出售较少的股票，往往意味着公司创始人、管理人员和早期投资者将更热衷于股票的未来表现，波士顿大学管理学院教授艾伦·米歇尔说，“当我想要购买IPO股票时 ，这是我要考虑的绝对主导因素。”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">知情人士透露，阿里巴巴早期员工也可能是此次IPO 的卖家，如果该公司决定允许他们这样做的话。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">目前尚不清楚阿里巴巴创始人</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">马云</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">)是否也是此次IPO的卖方。熟悉阿里巴巴的人表示，通过保留对公司董事会大多数成员人选的提名权，马云与一小群其他创始人、高管和老员工计划保持对公司的部分控制权。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">同时，阿里巴巴的代表正在与现有股东谈判，以决定哪些股东将在此次IPO中出售股票。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">小股东，包括美国私募股权投资公司 Silver Lake、General Atlantic LLC，新加坡淡马锡控股公司和中国投资有限责任公司，预计将只销售少量股票或者不出售股票。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">软银是不可能出售任何阿里巴巴股票，说人熟悉的日本公司的计划。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">雅虎公司此前已同意出售约10％阿里巴巴的股权，并保留约14 ％的股权。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">影响交易规模的另一个因素是公司市值。最近公布的分析数据显示，阿里巴巴目前的市值在1550亿美元至 2450亿美元之间，平均市值大约为1600亿美元。 而</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">公司目前的价值为1550亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">阿里巴巴的管理者和银行家们还没有决定阿里巴巴进行IPO时的市值定位。阿里巴巴预计将在接下来的几个星期中正式提交IPO申请文件，但该文件不太可能确定本次IPO的规模和组成。（谭思）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140425/015700.htm','2014-04-26 06:55:53',1,'/news/thumb/102487333.jpg','阿里巴巴或增加股票发行量 欲创IPO世界记录','admin','谭思'),(8,'<div style=\"text-align:center;\">\r\n	<img alt=\"揭秘国外社交网络僵尸粉：有钱就能买“好友”\" src=\"http://img1.gtimg.com/tech/pics/hv1/102/28/1573/102291567.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">腾讯科技 4月22日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">虽然只是一种新兴媒体形式，但社交网络已经成为了重要的舆论阵地，无论是名人还是企业都希望借此宣传对自己有利的信息。由此，便催生了专门兜售网络机器人（僵尸粉）的灰色业务。机器人的控制者不仅可以借助这些酷似真人的程序代码推广各种消息，甚至能够左右人们对某些事情的认知和观点。《纽约时报》专栏作家尼克•比尔顿(Nick Bilton)最近就撰文阐述了这一灰色链条背后的故事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">以下为文章全文：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">“有钱就能买朋友。”这句话用在最近的互联网上绝对没错。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">过去一周，我花了一杯咖啡的钱买了4000个Twitter收听者。我还花了5美元买了4000个</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Facebook</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">好友，又多加了几美元让他们中的一半给我在Facebook上分享的照片点赞。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">如果我愿意花3700美元，就可以在Instagram上拥有100万好友——没错，是100万！再花40美元，就能让其中的1万人给我拍摄的日落照片点赞。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">转发、点赞、评论、流量，所有这一切都能用钱买到。Swenzy、Fiverr以及各种各样数不清的网站都提供这类服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">我的很多新“朋友”都不住在美国，多数都来自印度、孟加拉国、罗马尼亚和俄罗斯——事实上，它们并非人类。它们是机器人，或者说是一串代码。但它们却在社交网站上伪装成了人类。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">网络机器人并不新鲜，多年前就已经有了，但它们原本很容易识别：它们会附带随机的头像(通常都是性感女郎)，使用电脑生成的姓名(例如Jen934107)，除了一味地分享内容(主要是色情网站的链接)，它们似乎什么都不会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">但如今的的机器人却能更好地隐藏自己的身份，而且拥有更加真实的姓名。它们保持着与人类相同的作息时间：午夜过后就会停止工作，早晨再重新上线。它们会分享照片，会开怀大笑，甚至会彼此对话。它们为数众多，以百万计。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">这些虚构的网民拥有令人惊讶的能力，它们可以虚增名人和企业的知名度，可以改变公众的文化和产品观念。在某些情况下，甚至可能左右政治议程。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">“我研究这些社交机器人很长时间了，它们现在与真人很像——尽管它们并不是真人。”Pacific Social Architecting Corporation首席科学家蒂姆•黄(Tim Hwang)说，该机构专门研究机器人和现代科技如何塑造人们的社交行为。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">开发机器人的方式多种多样，其中最流行的机器人管理工具是一款名为Zeus的程序。它售价700美元，可以提供一个简单的控制台，方便用户控制自己的机器人大军。(除了制作社交媒体机器人外，该程序还可以用于身份盗窃等不法目的。)一些技术更娴熟的程序员还会开发自己的“机器人农场”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">机器人经常使用它们的所有者反对的#话题标签，以此来迷惑他人或转移话题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">在2012年墨西哥总统大选期间，革命制度党被控使用数以万计的机器人淹没反对党在Twitter和Facebook上发布的消息。据悉，革命制度党使用了一些小把戏，利用文字来迷惑民众，使之无法真正理解反对党的观点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">在叙利亚，同样有众多的机器人向支持抗议者和反对派的网民，发出威胁和恐吓消息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Swenzy的经营者是一个自称“Simon Z”的人。这家公司位于美国，专门出售收听者、点赞、</span><a href=\"http://download.tech.qq.com/\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">下载</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">、浏览量、评论等各种指标。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">他还表示，这家公司可以使用人工智能和其他数字手段来躲避</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">谷歌</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">)、Facebook和Twitter等公司的追查。这些互联网巨头都在花费大量精力屏蔽网络机器人，有时的确很有效果——至少短期如此。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">在Twitter上市时，该公司在其平台上屏蔽了数以百万的机器人。最近几年，谷歌也从删除了来自机器人的数亿次YouTube视频观看量。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">“这其实是一个进化过程，随着企业开发的过滤器越来越好，机器人的智能性也越来越高。”蒂姆•黄说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Simon Z的机器人可以通过获取真实用户的信息将自己伪装成人类，包括头像、照片和其他对话内容。他表示，借助这些措施，它们便可“模拟人类行为”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">他还表示，他目前拥有10万个非常先进的机器人，它们都活跃在各大社交网络上，包括YouTube、Facebook、Twitter、Vine、Instagram和SoundCloud。当买家下了大单后，他还可以通过“地下供应商”调动更大的机器人农场。(制作或拥有网络机器人并不违法，关键要看如何使用。不过，多数社交网站都禁止使用这种程序。)</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Simon Z的客户包括想要虚增知名度的名人、歌手和政治人物。他透露，政府机构也会使用他的机器人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">“这都是为了争名夺利，这样的事情历来都有，只不过不是以数字形式呈现的。现在，你可以用它来做更多事情。”美国电脑安全顾问公司Support Intelligence CEO里克•维森(Rick Wesson)说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">现在，网络机器人只是用于迷惑和欺骗人们相信一些不那么流行的东西，或者推广某些信息。但维森认为，随着这种机器人越来越先进，它们还有可能用于实现更加肮脏的目的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">今年3月，以色列理工学院的两名学生开发了一群机器人，导致谷歌旗下导航软件Waze发布了虚假的交通拥堵信息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">这个项目虽然只是一个课程演示程序，但它却极其先进，足以让系统误以为它们真的来自在路上驾驶汽车的Android用户。Waze系统以此为根据指引用户前往其他道路，为的只是避开并不存在的交通拥堵。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">所以，请务必小心与你成为好友的是哪种机器人。它们可能会因为持有不同政见导致你在网上遭到攻击，还有可能因为散布不实的交通拥堵信息导致你迷路。（长歌）</span>\r\n</p>','腾讯科技','http://it.qq.com/a/20140422/007312.htm','2014-04-26 06:58:17',1,'/news/thumb/102291567.jpg','揭秘国外社交网络僵尸粉：有钱就能买“好友”','admin','长歌'),(9,'<div class=\"point\" style=\"background-color:#ECEEF1;padding:18px 18px 0px;font-size:15px;color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;\">\r\n	<h3 style=\"font-size:18px;font-weight:normal;\">\r\n		浓缩观点\r\n	</h3>\r\n	<ul class=\"part-ul\" style=\"color:#CACED5;\">\r\n		<li>\r\n			<p style=\"color:#46494C;\">\r\n				在Oracle创始人拉里·埃里森独特的IT世界观里，首先客户是懒的，要能带给客户它所需要的更全面的产品和服务，让客户自由挑选自己想要的，所以他把Oracle打造为一个企业级IT全能选手。其次，他很早意识到云是大势所趋，及早行动，打造全面的云战略。\r\n			</p>\r\n		</li>\r\n		<li>\r\n			<p style=\"color:#46494C;\">\r\n				Oracle很清楚环境的变化带来了对手的变化。马克·赫德最近表示，现在Oracle的竞争对手是那些未来重新改变行业、改变游戏规则的企业，譬如亚马逊、Salesforce等等，这些企业共同点都是很早的抓住了云计算趋势，改变了行业的游戏规则。\r\n			</p>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<div class=\"paragraph\" style=\"font-size:16px;color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;background-color:#FFFFFF;\">\r\n	<h3 style=\"font-size:24px;font-weight:400;\">\r\n	</h3>\r\n	<p>\r\n		“我们现在不太喜欢把Oracle和IBM这样的老派IT公司相提并论了，像IBM这样的老派IT公司已经不再是Oracle的竞争对手，而是合作伙伴。”Oracle公司总裁马克·赫德接受《商业价值》采访时表示。<br />\r\n根据 Gartner在2014年4月公布的2013年度全球十大软件供应商榜单显示：2013年，Oracle超越了IBM位列第二，软件收入为296亿美元，连续多年的老二的IBM公司却在今年掉队，排名第三。<br />\r\n2013财年Oracle实现收入372亿美元，净利润109亿美元，而2012财年和2011财年的净利润分别是100亿美元和85亿美元。截至2014年3月，在过去的12个月中Oracle也创造了150亿美元的历史新高的营业现金流。<br />\r\n企业IT级市场一直在保持迅速的变化。今天，越来越多的企业不再购买传统的软硬件业务，而是选择了云计算。 去年，亚马逊凭借云计算技术击败IBM赢得中情局的巨额订单，到今天已经成为稀松平常的旧闻。传统企业以越来越开放的态度面对“云”，根据2013年末中国最大的实名CIO社区ITValue的调研报告显示：43.52%的CIO将在企业里部署或者已经部署云计算。<br />\r\n互联网时代，传统IT面临着转型。传统IT就是企业采购各种各样的IT部件把它拼在一起，要消耗大量的人财物资源，去组装打造一套适合本企业的解决方案。但是现在市场已经发生了根本性的变化，现在全面向云端迁移。Oracle的观点是，变化正在发生，这也是个简化IT的过程。<br />\r\n但是就在这些巨大转型发生的同时，Oracle仍然以漂亮的业绩挺立，这要归功于Oracle创始人拉里·埃里森独特的IT世界观。首先，埃里森相信客户是懒的，要能带给客户它所需要的更全面的产品和服务，让客户自由挑选自己想要的，所以把Oracle打造为一个企业级IT全能选手；第二、很早意识到云是大势所趋，及早行动，打造全面的云战略。\r\n	</p>\r\n</div>\r\n<div class=\"paragraph\" style=\"font-size:16px;color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;background-color:#FFFFFF;\">\r\n	<h3 style=\"font-size:24px;font-weight:400;\">\r\n		企业级IT全能选手\r\n	</h3>\r\n	<div class=\"paragraph-img\" style=\"background-color:#F9F9F9;\">\r\n		<img src=\"http://businessvalue.qiniudn.com/images/thumbs/30770_who600_600_361.jpg?time=1398469326\" />\r\n		<h4 style=\"font-size:14px;font-weight:normal;text-align:justify;\">\r\n			Oracle公司总裁马克·赫德\r\n		</h4>\r\n	</div>\r\n	<p>\r\n		拉里·埃里森是硅谷极为罕见的从创业开始一直掌舵至今的创始人，他独有的IT世界观引领了Oracle 37年。<br />\r\n埃里森更愿意相信客户是懒的，应该带给客户它所需要的更全面的产品和服务。Oracle的企业级IT帝国的打造过程是漫长而有规划的 。从2004年开始，Oracle把Peoplesoft、Siebel、BEA、Hyperion、Retek等在各个专门领域顶尖的企业级软件公司悉数收入囊中，然后将这些收购来的应用软件全部基于云的架构重新设计，以此为基础打造成Oracle的SaaS。<br />\r\n2009年，Oracle对硬件公司SUN的收购将外界对埃里森的质疑引向高潮。质疑聚焦在原本一个纯软件企业如何整合消化好一个硬件企业。5年过去，在今天来看，收购SUN后，Oracle不仅获得了JAVA平台，更重要的是高性能的服务器和存储硬件技术。对SUN的收购是Oracle缔造自己企业级IT帝国极其重要、不可或缺的一环。<br />\r\n其实在收购SUN之前，Oracle已经和惠普合作开发出了第一代的Exadata软硬件一体机（数据库云服务器）。 但是总是依靠外部的硬件厂商去合作开发，太受制于人，只有完全拥有硬件团队之后，才能够真正按照自己的想法去实现预期的战略。通过收购SUN， Oracle从一家企业级软件公司转变成为了软硬件全面兼备的企业级IT公司。<br />\r\n获得SUN公司的服务器和存储技术基础上，Oracle又进行了一系列的创新，也就是软硬一体策略。将硬件产品的发展重点放到高附加值的软硬件一体化的产品上，推出了Oracle Exadata数据库云服务器、Oracle Exalogic中间件云服务器、Oracle Exalytics商务智能云服务器等产品。这一突破性的创新也使得Oracle可以提供IaaS解决方案。<br />\r\nOracle2014财年第三财季总收入增长4%，达到93亿美元，利润26亿美元，增长2%。云计算和软硬一体（集成系统）依然是甲骨文的最大亮点：云软件订购收入增长了25%，其中云应用软件增长60%；软硬一体收入增长30%。<br />\r\n近几年软硬一体被业界纷纷仿效，从SAP开始、到国内的浪潮，也都渐渐推出自己的软硬一体。仿效者大都没有Oracle如此全面的产品线，而且毕竟Oracle占尽了先机，所以仿效者们在软硬一体策略上目前还只能是跟随。<br />\r\n10年布局，埃里森从来不管外界如何议论，他心里早有蓝图，并我行我素。埃里森一手把Oracle打造成了企业级IT全能选手，很像一个“企业级的苹果公司”：从硬件到应用软件到云，一应俱全。具体来说，Oracle拥有数据库、中间件、ERP、CRM、HCM等等各种企业应用软件，把一系列的企业应用软件融合在硬件（终端机器）上，而且还可以在云上来取用它的应用，或者直接使用它提供的公有云。企业用户们可以去Oracle的“IT商店”里选择想要的应用，当然也包括融合应用，就像苹果的IT商店一样可以用信用卡支付。\r\n	</p>\r\n</div>\r\n<div class=\"paragraph\" style=\"font-size:16px;color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;background-color:#FFFFFF;\">\r\n	<h3 style=\"font-size:24px;font-weight:400;\">\r\n		全面的云战略\r\n	</h3>\r\n	<p>\r\n		Oracle起家于传统IT厂商，毕竟不像那些新兴的云公司一开始的基因就是“云”，但在传统IT厂商里，Oracle布局早并发展了有自己特色的云战略。大包大揽全面的产品线和布局也让Oracle成为目前业内唯一能够提供跨IaaS、PaaS和SaaS三个层面云计算产品的公司。<br />\r\n对于云时代的转型，Oracle起步很早，埃里森说：“从10年前开始，也就是我们启动一系列收购策略开始，我们把收购回来的那些企业应用软件基于云重写了一遍。而且我们可不是提供单个的云应用，而是战略性云应用套件包括Fusion ERP、Fusion HCM和Fusion CRM等等。”<br />\r\n埃里森所说的Oracle云计算起点是： Oracle从2004年开始收购 Peoplesoft、Siebel、BEA、Hyperion、Retek等在各个专门领域顶尖的企业级软件公司，再把这些收购回来的 CRM、HR和ERP等等传统应用软件基于云的架构重写，让这些传统应用软件能适于SaaS来提供服务。<br />\r\nOracle目前每个季度Oracle的SaaS领域的收入（云应用收入）已经接近3亿美元，年度营业收入则超过10亿美元。 尽管在快速增长，但是Oracle来自云应用的超过10亿美元年收入，相对于Oracle全年370亿美元的总收入也还是很少的一部分，但在传统的企业级IT企业里还是很亮眼的成绩。<br />\r\n不仅如此，拉里还让Oracle成为了业界第一家、目前是业内唯一能够提供跨IaaS、PaaS和SaaS三个层面云计算产品的公司。首先将自己的CRM、HCM和ERP等应用软件基于云架构重新设计，能适应于SaaS服务。也源于 Oracle拥有全球广泛应用的中间件、数据库和编程语言（JAVA）基础， Oracle构建了PaaS平台，这样也更好的支持Oracle的各类SaaS的应用 。Oracle还持续发力构建了IaaS，因为埃里森心目中认为“完整的云计算服务离不开IT基础架构的服务化，以便帮助用户将已有的应用系统逐渐转变为用云服务。” Oracle的IaaS服务由是集硬件、服务器、存储和基础软件为一体的软硬一体机开始的。&nbsp;<br />\r\nOracle很清楚环境的变化带来了对手的变化。马克·赫德最近表示，现在Oracle的竞争对手是那些未来重新改变行业、改变游戏规则的企业，譬如亚马逊、Salesforce等等，这些企业共同点都是很早的抓住了云计算趋势，改变了行业的游戏规则。但目前这些企业有的规模很小，有的则在中国等本土以外市场上还不够活跃，有的在某些领域还没有耕耘。<br />\r\nSalesforce这个1999年成立的小个头，以云端CRM起家，突然高速成长就蹿出了大家的视野。全球软件市场在过去5年发生了巨大变化，主要影响因素就是云计算服务，Salesforce以33%的高增长速度跻身前十就是这一市场变化的如实反映。Salesforce相对于Oracle 年轻、规模较小，更重要的是它从诞生开始就以云为基因。Oracle的优势是更大、产品线更齐全，容易形成规模作战优势，而且SaaS经过几年的持续经营，增长迅猛。<br />\r\n马克·赫德提及的另一个即将遭遇的对手亚马逊，现在是公有云领域最大的服务商。据 Macquarie 分析师的分析，2012年亚马逊 AWS 部门营收近 40 亿美元，成为IaaS领域的霸主。亚马逊AWS主要提供IaaS、PaaS。Oracle则是目前是业内唯一能够提供跨IaaS、PaaS和SaaS三个层面云计算产品的公司。Oracle和亚马逊的相比的优势是：Oracle能提供SaaS，还拥有多年的行业应用的经验。这样能和亚马逊形成强烈的差异化。<br />\r\nOracle并购的目标早已从传统的企业应用软件公司，转向了新兴的云公司。譬如最近这2年收购了RightNow、Taleo和Eloqua等起源云端的公司（RightNow提供客户关系云服务、Taleo提供人才管理云服务、Eloqua提供营销自动化和收入绩效管理云服务）。<br />\r\n现在Oracle的战略中，云仍是核心中的核心。马克·赫德表示，从去年到今年这2年，Oracle对研发的投入会增加到100亿美元以上，而投入的重点是云和软硬一体。<br />\r\n在拉里·埃里森的领导下，Oracle经历了37年的积累和几十笔大手笔的成功并购之后，已形成了从应用软件、中间件、数据库、开发语言（JAVA）、操作系统（linux和Solaris）到服务器、存储甚至CPU等硬件产品的完整产品线，产品线之全面，业界难寻第二家。 埃里森的IT世界观指引Oracle获得了市场的认可，取得漂亮的业绩，最近市值超过1820亿美元，在2014年一季度全球市值最高的25家IT、互联网企业榜单上名列第六。<br />\r\n虽然Oracle今天的业绩非常漂亮，但云时代到来也带来了新命题。随着云的深化应用，企业获取自己所需的IT应用和解决方案所需的成本会越来越低。而Oracle占据的主战场是高中端市场，更多依赖大中型企业客户提供高额利润，如何在IT的边际利润率日益收窄的趋势下保持竞争力和高增长，是值得Oracle思索和布局的下一个重要命题。\r\n	</p>\r\n</div>','商业价值','http://content.businessvalue.com.cn/post/30770.html','2014-04-26 07:45:30',1,'/news/thumb/30770_who600_600_361.jpg','Oracle的IT世界观','admin','丁娅琳 '),(10,'<div>\r\n	<h3>\r\n		<span style=\"font-size:14px;\">浓缩观点</span>\r\n	</h3>\r\n	<ul>\r\n		<li>\r\n			<p>\r\n				<span style=\"font-size:14px;\">去哪儿网CEO庄辰超称，为什么从2013年开始互联网金融在中国火爆？翻一下历史，全世界所有国家金融创新的高潮都来自一个词：去监管化。而去年正是中国金融行业“松动”的开始。同样的，众筹之所以讨论少，因为如果你众筹，证监会会找你去谈话，这部分还没有进行去监管化。</span>\r\n			</p>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<div>\r\n	<h3>\r\n	</h3>\r\n	<p>\r\n		<span style=\"font-size:14px;\">（本文由刘泓君根据去哪儿网CEO庄辰超在3W咖啡上的演讲整理）</span><br />\r\n<span style=\"font-size:14px;\"> 我几乎职业生涯都是在互联网行业工作的，始终在最前沿。我相信创新与机会其实都在历史里，引用格林斯潘在书里的一段话“去历史里寻找经验把经验应用与未来，这就是创新的机会”。</span><br />\r\n<span style=\"font-size:14px;\"> 为什么旅行公司要花这么多时间去做互联网金融？其实翻一翻历史，你会看到一切的创新全都在历史中：花旗银行（Citibank） 快破产的时候，被Travelers Group收购。Travelers Group实际上花旗银行很重要的股东，它是一个旅行公司，它是做旅行保险业务起家；花旗银行是全球最大银行之一，他非常大的业务是跟旅游业相关的。第二家公司是美运通（American Express），也是全球最大的商旅公司，他的第一个产品是旅行支票（Travelers Cheque），所以这就是旅行跟金融的关系。</span>\r\n	</p>\r\n</div>\r\n<div>\r\n	<h3>\r\n		<span style=\"font-size:14px;\">金融创新真正动因：去监管化</span>\r\n	</h3>\r\n	<p>\r\n		<span style=\"font-size:14px;\">从2013年开始，互联网金融在中国非常火爆，为什么在这个时间突然发生了？是互联网技术、移动技术达到一定高度，还是手机、Pad的渗透率达到某一个高度，所以互联网金融余额宝、支付宝突然爆发了？</span><br />\r\n<span style=\"font-size:14px;\"> 翻一下历史，全世界所有国家金融创新的高潮都来自一个词——“去监管化（Deregulation）”。其实真正的原因是，去年中国金融行业开始真正地“去监管化”。1970年左右，美国曾经经历过一次巨大的去监管化，就是美国储贷危机，类似中国的村镇银行去监管化，导致他们可以大范围扩张，进行利率竞争，这个时候美国金融创新是非常活跃。&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 现在为什么大家讨论最多的是P2P不是众筹？因为证监会还没有去监管化。到目前为止，如果你要众筹，那么证监会会找你去谈话，因为这个部分还没有进行去监管化；而利率放开、利率市场化是已明确了去监管化后的产物。对于P2P目前的监管是相对比较放松的状态，这才是互联网金融真正的起源。</span><br />\r\n<span style=\"font-size:14px;\"> 怎么看待在中国这个国情下，P2P发展的政策风险问题？这也可以从历史上找到经验，全世界所有国家包括欧洲、美国，对于社会化金融亏损问题都有严格的法律惩罚。</span><br />\r\n<span style=\"font-size:14px;\"> 美国P2P的最近的监管思路是“Qualified investor（合格投资者）”，概念和对冲基金一样，即如果投资人本身有自身行为能力、足够的资产和投资经验，并遵循一定的投资原则，就可以投资高风险产品，如对冲基金、P2P。监管就保证两件事：第一，人群越少，资产越高；第二，如果出现大规模的亏损，也不至于大批量的人“上街”了，因为“上街”就让这个事件从经济问题演变成政治问题了。</span><br />\r\n<span style=\"font-size:14px;\"> 这种风险控制其实是全世界都有的现象，跟中国的国情无关。有很多事情不是国情问题，全世界任何一个政治体、任何一个公司，遇到的问题在历史上是不断地在重演，都会采用相同的原则解决问题，只不过名字不一样、场景不一样而已。因此高度风险产品会产生的问题，美国在很多年前在对冲基金上已经遇到并解决了。</span>\r\n	</p>\r\n</div>\r\n<div>\r\n	<h3>\r\n		<span style=\"font-size:14px;\">P2P问题的核心：解决风险控制难题</span>\r\n	</h3>\r\n	<p>\r\n		<span style=\"font-size:14px;\">今天在国内的P2P的很多问题要怎么解决？有些公司做的比较激进，完全不顾监管，总在打法律的擦边球；但更好的思路是去向一些已经发生过类似问题的国家，是怎么解决这类的问题。举个例子：有一些P2P公司做法比较保守，比如要求投资人的投资行为要受监控，不能单笔投太大，必须分散投资等等，我认为这都是一些比较好的思路，让整个行业比较健康的发展。我个人是非常看好P2P，尽管在中国还会有很多风险和挑战，但是问题的解决思路完全可以从其它国家、历史上寻找出解决方案。</span><br />\r\n<span style=\"font-size:14px;\"> P2P将遇到最大的风险是什么？美国在70年代的储贷去监管化过程中发生了一个危机，结果产生了一场金融灾难，这就是后来FDIC(美国联邦存款保险) 公司成立的原因，就是解决存款保险的问题。</span><br />\r\n<span style=\"font-size:14px;\"> 在金融危机以前，你在美国存钱，用任何一个银行账户，是保证10万美元国家信用，如果银行倒闭了，国家赔你10万美金，在金融危机之后，这个数额提高到了25万的，这个问题就是当时的去监管化造成的。</span><br />\r\n<span style=\"font-size:14px;\"> 为什么去监管化会造成这么大的变化？银行的本质是吸储、风险对冲和放贷。去监管化的过程中，所有的银行为求扩张业务，就放宽借贷条件，比如：原来吸储的人，只需付十个点，现在付十二个点，就可以把资金吸纳进来，以达到快速放大规模。如果市场上有五百家公司进行赛跑，比谁付更高的利息、更大胆的借款，最终结果就是灾难。这个现象听着很耳熟，像不像P2P的市场?美国这场储贷开放竞争就是场灾难，导致很多银行倒闭，很多储货的钱都血本无归，最后国家介入。但是在这个过程中，也有很多公司做大了，原因就是风险控制。</span><br />\r\n<span style=\"font-size:14px;\"> P2P这个业务最终是有效果的，重点是风险控制。由此引到互联网金融的本质，互联网是一种工具，它并不能改变任何根本性的问题或提供根本性的解决方案，但是在互联网技术导致规模的扩大、渗透率的上升和效力的提升。甚至过去不能获得的数据现在都能够获得了。金融的根本问题实际是风险控制，所以我们要问自己两个问题：</span><br />\r\n<span style=\"font-size:14px;\"> 1、“我所设计的这款金融产品真的改变了风险控制吗？”</span><br />\r\n<span style=\"font-size:14px;\"> 2、“是如何改变风险控制的？”</span><br />\r\n<span style=\"font-size:14px;\"> 第一种可能性是在相同的风险下引用大数法则，让风险更分散。第二种可能性在交易数据，好比在国际上比较流行“特种借贷引擎”，即根据对数据的解读，设计相应的借贷产品，比如像京东、阿里的供应链金融，他们所掌握的数据是传统银行根本不能掌握的，同时，他们的风险监控能力也是传统金融机构不能做的。包括在旅游行业，我们也有人在做供应链金融，比如交易量非常大的机票，这当中潜在很多特殊的借贷产品。</span><br />\r\n<span style=\"font-size:14px;\"> 这个概念也可以运用到众筹和保险，旅游类的公司像去哪儿、携程都有保险牌照，我们在推很多针对旅游的特殊保险。根据“数据”，我们对于保险的消费者数据情况解读完全不同，了解情况也完全不同，所以能给出不同的风险值的计算，所以我们的保险定价也不同，甚至售卖方式也会发生变化。这也就是数据改变了风险议价的判断，决定了不同的定价。</span><br />\r\n<span style=\"font-size:14px;\"> CapitalOne是一家在前互联网时代商业上非常著名的公司，服务的是特殊的高风险客户群，是第一个引用大数据的概念，对风险值进行了很多分析，营销手段也进行了很多创新。他们服务了美国一家公司，这公司在过去传统计算模式是借不到钱的，但CapitalOne通过一些特殊得手段计算风险和利息，把钱借给这家公司，导致这个公司始终是高速发展。今天，CapitalOne已经是美国第四大银行，但只有15年历史，美国的大银行都有几百年的历史。</span>\r\n	</p>\r\n</div>\r\n<div>\r\n	<h3>\r\n		<span style=\"font-size:14px;\">创新机会：回归商业的本质</span>\r\n	</h3>\r\n	<p>\r\n		<span style=\"font-size:14px;\">整个创新的机会在哪里，回到历史上去找，然后不要去关注那些虚无的互联网思维，我认为商业的本质非常纯朴和简单的。</span><br />\r\n<span style=\"font-size:14px;\"> 零售的本质是什么？产品要全，价钱要低，送货要快，无论任何一种技术最终回到都是这个面。互联网金融的本质也是如此，借出去钱的人永远要的是高利息、高收益、低风险、方便，借款人则是底利息、放款速度快、还款条件要灵活。关键的问题是，在今天的场景下你用什么新技术、新使用场景、对环境进行极度优化，而不是关注那些非常虚无缥渺的概念。第一原则大家把最简单的思维贯彻在互联网金融里，这样才能找到机会。</span><br />\r\n<span style=\"font-size:14px;\"> 我个人认为互联网金融的业务不是一家通吃，关于这点可以从历史探寻。金融行业是全球发生并购最活跃的行业之一，而今天在这么庞大的传统金融行业，各种品牌的金融公司层出不穷，原因是金融的本质是风险控制，规模越大风险控制能力就越弱。金融是个非常虚拟的产品，业务做得越大，势必会做得越来越复杂，经济学上面的“代理人成本”就是下面的人利用佣金机制，采取一些成熟过渡风险换取过渡收益，这是一定会产生的。</span><br />\r\n<span style=\"font-size:14px;\"> 为了防范这类事情，大型的金融机构则必须加很多层监管。但是监管越多，运营效率就会越低，这一类的行业从市场消失了。金融行业有很多业务，先是有家小公司做起来被大公司买进去，越做越大之后或许出现一些问题，当政府介入之后就会带来了更多的监管之后，这些业务又会被分到小公司去做。比如：资源类产品的交易由于风险太高，所以很多国家政府对大型的银行机构的交易进行监管，就把资源剥离表外去，又产生一轮新的创新机会，所以我认为互联网金融不会是赢家通吃的行业，只要在任何一个细分领域做到一家独大，就有很多很的机会，或上市，或并购。所以我认为这个行业是充满机会和变化的。</span><br />\r\n<span style=\"font-size:14px;\"> 沃尔玛在零售领域几乎垄断了行业，但在世界任何一个地方都说不出一家银行是垄断所有，这是由金融的本质所决定的。关键在于了解行业的本质，忽略那些浮躁的传言，并且真正去理</span><span style=\"font-size:14px;\">解技术，把技术应用于场景，把一些很本源的问题解决并且提高，才能获得真正的创新。</span>\r\n	</p>\r\n</div>','商业价值','http://content.businessvalue.com.cn/post/30775.html','2014-04-26 07:50:47',1,'/news/thumb/172240phspzjjstkympp5p.jpg','庄辰超谈互联网金融：金融创新的动因在于“去监管化”','admin','刘泓君 '),(11,'<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<span style=\"font-size:14px;\"></span><img src=\"http://u.img.huxiu.com/portal/201404/26/001604dm4oddlqtl2iajtn.jpg\" alt=\"窗口期：还有哪些中国互联网公司可能在今年IPO？\" /> \r\n				<div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2014年，堪称中国互联网公司的又一个美股元年。4月17日，新浪旗下公司微博、乐居控股双双挂牌上市，首日股价大涨；京东商城、聚美优品、途牛网、猎豹移动也相继提交IPO申请，阿里巴巴赴美上市的声音更是不绝于耳。此外，更有众多意气风发的中国互联网新贵，正在排队赴美上市。下面投资潮为您盘点2014年下半年可能赴美上市的9家中国互联网公司。&nbsp;</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">阿里巴巴集团</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：阿里巴巴集团成立于1999年，英语教师马云与另外17人在中国杭州市创办了阿里巴巴网站，为中小型制造商提供了一个销售产品的贸易平台。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">阿里集团现有十二家全资公司，包括阿里巴巴B2B、淘宝网、天猫、支付宝、口碑网、阿里云、中国雅虎、一淘网、中国万网、聚划算、CNZZ、一达通。其中，支付宝等阿里金融业务被剥离，此前的物流公司“菜鸟网络”和近期投资的非全资子公司等也不在上市资产中。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值 ：1750亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/230521f94fff4f166897bk.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/230521f94fff4f166897bk.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：无论是阿里巴巴近期频繁大手笔的投资与收购，还是余额宝、支付宝的持续动作，以及阿里巴巴总额80亿美元堪称2014年亚洲最大规模的银团贷款，种种迹象表明，阿里巴巴整体上市正逐步临近。果然，3月16日消息，阿里巴巴官方微博发布公告：决定启动在美国的上市事宜，如果未来条件允许将积极回归国内资本市场。&nbsp;</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">全球投行界一直密切关注阿里巴巴集团究竟估值几何。在雅虎2012年提交给美国证监会(SEC)的文件中，规范了阿里巴巴集团未来上市的标准：市值需至少达到735亿美元，发行价不低于每股28.35美元;上周华尔街对阿里巴巴IPO的期待明显升温，此前雅虎的报告显示，阿里集团2013年第四季度的销售额同比增长66%，至30.6亿美元，净利润同比增长110%，至13.5亿美元。众多海外投资人认为，这些数据意味着阿里巴巴集团的估值有望达到2000亿美元。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">此前路透社曾报道称，阿里巴巴集团或在4月22日提交上市文件，为在美上市迈出重要一步。但目前，阿里巴巴集团仍在准备F-1上市文件，本周可能无法提交这一在美上市必需的文件。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">大众点评网</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：大众点评网于2003年4月由张涛成立于上海，是中国领先的本地生活信息及交易平台，也是全球最早建立的独立第三方消费点评网站。大众点评不仅为网友提供商户信息、消费点评及消费优惠等信息服务，同时亦提供团购、电子会员卡及餐厅预订等O2O交易服务。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">截至2013年第4季度，大众点评月综合浏览量(网站及移动设备)超过35亿，其中移动客户端的浏览量超过75%，移动客户端累计独立用户数超过9000万。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间： 2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：25~30亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231038x8o11xx0ooxvnxxx.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231038x8o11xx0ooxvnxxx.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：百度连接人与信息，腾讯连接人与人，阿里连接人与商品，人与服务之间即是第四个巨头的席位。2003年起，大众点评就为此辛苦积累，终于等到了移动互联网大爆发，将“人”和“服务”连接起来。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2014年2月，腾讯宣布与大众点评战略合作，腾讯持有大众点评20%股份。大众点评引入腾讯的战略投资，占据了微信本地生活服务类目的独家入口，可获得来自微信在用户和支付资源上的极大支持。若大众点评能牢牢占据本地生活服务“独家入口”的位置，其未来独立上市将更具想象空间。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">美国版大众点评网Yelp自 2012年3月2日在纽交所上市以来，股价已从发行价15美元上涨至64美元，上涨了近3倍，最高曾经接近100美元，比Yelp做得更早，同时又有微信支持的大众点评，有足够充分的理由获得资本市场的青睐。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">爱奇艺</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：爱奇艺原名奇艺，2010年4月22日，奇艺正式上线，2011年11月26日，奇艺正式宣布品牌升级，启动“爱奇艺”品牌并推出全新标志。爱奇艺由百度和普维投资联合创立，是国内领先的网络视频播放平台，专注于提供免费、高清网络视频服务。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2013年5月，百度宣布以3.7亿美元现金收购PPS视频业务，并将其与百度旗下视频网站爱奇艺合并。据爱奇艺援引艾瑞咨询的数据，合并后其全平台用户规模、时长均达到行业第一。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：20亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231106m06t6srshsr0rlel.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231106m06t6srshsr0rlel.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：2011年8月和11月，百度斥资2.83亿元收购爱奇艺39.13%股B轮可转换优先股，累计获得爱奇艺53%股权。2012年公布财报期间，百度宣布收购私募公司普维投资持有的爱奇艺股份，成为爱奇艺单一大股东。百度持续增持爱奇艺股份，并继续在资金、资源和团队激励方面加大对爱奇艺的支持力度，表明爱奇艺未来独立上市步伐正在加速。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">龚宇表示，爱奇艺并购PPS后会更加关注公司质量，包括市场规模，盈利能力及持续的发展能力。2012年，爱奇艺收入8亿元人民币;2013年9月2日，爱奇艺移动端流量首次超越PC端，全年移动视频广告收入高速增长，2013年第4季度，移动视频广告收入占广告总收入的20%以上。与PPS的资源整合可以加强爱奇艺的竞争力，使两者的用户时长和移动用户量均达到行业第一，已经对目前排名第一的优酷土豆(NYSE：YOKU)带来直接冲击，随时准备冲击上市是新爱奇艺的必然选择。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">迅雷</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：成立于2003年的迅雷，在创立之初就致力于为全球互联网提供最好的多媒体资源数据传输服务。凭借着下载领域的核心技术，集成了下载、在线播放、游戏等多种产品的迅雷平台，已经成长为中国覆盖范围最广、用户最多的网络平台之一。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2013年，迅雷在PC端的用户已超过4亿， 收入来看，2011年收入8800万美元，2012年收入1.69亿美元，年增长率100%，而且迅雷早在2009年就实现了盈利。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：15亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231132io3zzu2puduo135o.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231132io3zzu2puduo135o.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：2011年，迅雷IPO冲击上市不成，原因在于，第一，过于追究细节，导致错过了窗口期，原本可以当年4月份成功IPO，却错失了最重要的机会。第二，随后而来的中概股财务丑闻和VIE诚信危机，导致IPO融资大幅缩水。邹胜龙认为6亿美元估值过低，不愿意流血上市。邹胜龙表示，“基于对自身发展的信心，我们选择了推迟IPO。”</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">从2011年上市失利到现在，迅雷的业务已经发生了根本性转变，从“数字媒体内容消费互联网平台”变成“云加速平台”，而产品线也一直进行着密集调整,阉割了一系列产品，并砍掉了繁杂的旁枝，最终回归到“云”上。迅雷官网显示，目前迅雷旗下主要的产品包括3款：1、各平台的迅雷客户端;2、云播;3、迅雷看看，以及路由器、电视盒子等硬件产品，在收入模式上，主要依赖广告、迅雷会员和迅雷游戏。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2014年3月，有投行人士透露，迅雷已获得小米2亿美元的投资。若小米对迅雷的投资落定，迅雷有了雷军的背书，加上小米硬件带来的用户量，可以给自己的IPO之路增加更多筹码。迅雷方面对投资传闻不置可否，不过一系列调整背后已经证明了迅雷今年上市的决心。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">PPTV聚力</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：PPTV聚力是一家网络电视媒体服务商，前身是PPLive，是由上海聚力传媒技术有限公司开发运营的在线视频软件。PPTV聚力基于互联网视频云平台PPCLOUD通过PC网页端和PC客户端、手机和PAD移动终端向用户提供影视、体育、娱乐、资讯等各种热点视频内容。根据最新相关行业报告显示，2013年，PPTV聚力占有互联网视频直播市场超过60%的份额。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">数据显示，2013年PPTV聚力用户超过3亿，注册用户1.2亿，广告收入较2012年增长超过5倍，占视频领域广告份额的50%，并且实现了盈亏平衡。其中移动端的表现尤为强劲，移动端流量占比超过3成，月活跃用户超过7000万，2013年1季度移动端收入已超过2012年全年，整体移动收入过亿。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：10亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231213yqqmqe51eef1mhzf.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231213yqqmqe51eef1mhzf.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：公开数据显示，2013年第3季度，优酷土豆、新爱奇艺、搜狐视频分列中国网络视频市场广告收入的前三名。PPTV聚力在腾讯视频、乐视之后排名第六，属第二阵营。在IT业“前三法则”的背景下，第二阵营中的PPTV聚力，似乎不容易获得资本市场的青睐。2013年，随着PPS与爱奇艺合并，视频行业加快整合。PPTV被并购的传闻不绝于耳，先后传出PPTV与搜狐视频、阿里巴巴合并。但最终2013年10月， PPTV聚力选择了苏宁云商、弘毅投资4.2亿美元投资，其中苏宁云商投资2.5亿美元，占股44%，成为第一大股东。PPTV CEO陶闯表示，移动视频会将网络视频的整体价值放大三倍以上，随着大股东苏宁云商在家庭渠道的助力， PPTV聚力还将持续快速增长，“家庭娱乐市场空间+PC屏Pad屏手机屏TV屏四屏大战+移动端绝对优势”，PPTV的上市故事有很大的想象空间。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">陌陌</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：陌陌是北京陌陌科技有限公司于2011年8月起推出的一款基于地理位置服务的社交应用程序，主打陌生人交友。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2014年2月7日，陌陌CEO唐岩通过微博高调宣布，上线2年7个月，陌陌注册用户正式突破1亿大关，其中月活跃用户达到4000万，付费会员数近100万。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2013年11月，陌陌宣布用户达到8000万并第一次实现盈亏平衡。11月开始，陌陌陆续上线联运的移动游戏，包括陌陌泡泡兔，劲舞团，陌陌争霸等,由陌陌联运的第三款游戏陌陌争霸，正式联运1个月后，激活用户140万，月流水1200万。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：10亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231247oheio2okvo2skjot.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231247oheio2okvo2skjot.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：陌陌上线之初就被冠以“约炮神器”的称号，近期，更有媒体称陌陌已成色情交易重灾区。尽管如此，陌陌还是以其另类的方式迅速走红。在微信阴影下，陌陌一路爬上了1亿的用户规模。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">跟微信侧重熟人通讯相比，陌陌更是一个社交工具。对陌陌来说，“约炮”不是关键，重构陌生人的社交关系才是，比如基于会员与非会员的数据匹配，以及基于地理位置与兴趣“双重维度”的群组功能等。在陌陌的收入中，按比例依次是收费会员、游戏、表情贴纸，2014年陌陌的商业化更是围绕“社交”的会员、表情、广告、游戏展开，同时，陌陌还在探索LBS数据与商家广告结合的可能性。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">随着中概股IPO高潮到来，上亿用户规模的陌陌上市传闻也逐渐传开，有消息称陌陌将于2014年第2季度赴美上市。对于陌陌来说，得到资本市场认可，也许更有利于陌陌未来的商业化。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">VANCL(凡客诚品)</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：VANCL(凡客诚品)由卓越网创始人陈年创办于2007年10月, 以男士衬衫直销起家，自创立以来，业务发展迅速，产品种类由2008年的男装衬衫、POLO衫两大类几十款，发展到的男装、女装、童装、鞋、家居、配饰、化妆品等七大类。凭借极具性价比的服装服饰和完善的客户体验，凡客诚品已成为网民购买服装服饰的主要选择对象之一。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：10亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231316pl40gdghy08d2dp4.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231316pl40gdghy08d2dp4.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：2011年11月，凡客进入上市征途最后阶段，预定挂牌日期为12月8日。但在路演前一天，陈年与“金融大鳄”索罗斯交流后主动放弃IPO。接下来的两年里，凡客的重心由规模转向盈利。为了实现这一目标，陈年两次调整战略路线，2012年从电商渠道回归品牌，同时裁员、降低成本，当年第4季度首次实现季度盈利;2013年初，陈年向高管层下达必须盈利的指标，并再次调整策略为“自有品牌+零售渠道”。陈年披露2012年的销售额是65亿元，2013年披露该年前3季度销售额同比增长30%。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2013年12月，雷军领投、IDG、策源等公司联合投资凡客1亿美元，给出的凡客估值是约5亿-6.7亿美元，相比凡客上一轮30亿美元的估值，缩水了5/6。业内人士表示，这也许是陈年的最后一次机会。虽然，陈年对外宣称，只要凡客变成一个健康的公司强壮起来，上不上市并不重要。但陈年如此费尽心力的谋求盈利，其最终目标更多是为了上市。随着2014年海外资本市场的回暖，凡客必须抓住机会尽快上市。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">赶集网</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：赶集网成立于2005年，是一家分类信息网站，为用户提供房屋租售、二手物品买卖、招聘求职、车辆买卖、宠物票务、教育培训、同城活动及交友、团购等众多本地生活及商务服务类信息。赶集网总部位于北京，在上海、广州、哈尔滨、深圳设有分公司，并已在中国374个主要城市开通了分站，服务遍布人们日常生活的各个领域。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：10亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/2313421k3lkvk3d0fws2z1.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/2313421k3lkvk3d0fws2z1.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：自58同城2013年10月上市后，业界就一直关注与其业务模式类似的赶集网何时上市。而赶集网CEO杨浩涌目前并不急于上市，他表示“公司现在处在不太缺钱阶段，资本方面如果对公司有利我们会去做，上市也可以考虑。”杨浩涌透露，赶集网2013年已实现全年盈利，保守估计若2014年增长速度与去年持平，其利润有望达到数亿元。按艾瑞的预测，这是一个从2013年起，持续年平均增幅70%左右的行业。2013年行业营收总额是22亿，到2017年，营收总额会超过140亿，目前，这一市场主要由赶集网和58同城分享。分类信息市场并非纯粹资金方面的较量。赶集网是分类信息领域唯一增长份额的公司，而且在招聘领域领先优势在扩大。房产、服务、二手车等业务也增长迅速。可见其潜力巨大。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">杨浩涌对外宣称，赶集网将实现数亿元盈利，一方面是在说公司自身可以自力更生，同时也是在告诉外界，赶集网是有实力上市的。投资潮分析认为，赶集网以自有资金可以保持一定的发展速度，但面对有资本市场助力的58同城，赶集网若想赶超后者，上市仍是必行之路。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">万网</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">企业简介：万网创建于1996年，是一家基于云计算的互联网应用服务提供商，服务范围涵盖基础的域名服务、主机服务;企业邮箱、网站建设、网络营销、语音通信等应用服务;以及高端的企业电子商务解决方案和顾问咨询服务。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计时间：2014年</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计地点：美国</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">预计估值：5亿美元</span>\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">融资历程：</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<p>\r\n							<a href=\"http://img.huxiu.com/portal/201404/25/231406qvnhpvool4sllo66.jpg\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/25/231406qvnhpvool4sllo66.jpg\" /></a> \r\n						</p>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">投资潮点评：万网主要有四大盈利项目即云主机、域名、企业邮箱、网站建设，2002年实现盈利并保持增长，2011年实现营收4.46亿元。</span>\r\n					</div>\r\n					<div>\r\n						<br />\r\n					</div>\r\n					<div>\r\n						<span style=\"font-size:14px;\">2009年9月，阿里巴巴出资7906万美元收购万网99.67%股权，随后即明确承诺让万网未来五年内独立上市。2011年9月，阿里巴巴宣布分拆万网赴美上市，并已经上报相关证券监管机构进入审批流程，但公告过后尚无下文。随着控股母公司阿里巴巴集团上市一触即发，万网或也将递交正式的上市申请。</span>\r\n					</div>\r\n				</div>\r\n				<div>\r\n					<span style=\"font-size:14px;\">文章为作者独立观点，不代表虎嗅网立场</span>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','虎嗅网','http://www.huxiu.com/article/32646/1.html','2014-04-26 07:53:16',1,'/news/thumb/001604dm4oddlqtl2iajtn.jpg','还有哪些中国互联网公司可能在今年IPO？','admin','投资潮'),(12,'<div style=\"text-align:center;\">\r\n	<img border=\"1\" alt=\"微软第二财季净利润65.6亿美元 同比增长3%\" src=\"http://newtest.cnw.cn/resources/2014_04/2014_04_25/20140425090617_8388.jpg\" width=\"550\" height=\"367\" />\r\n</div>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	4月25日消息，<a href=\"http://tag.cnw.com.cn/tag/%CE%A2%C8%ED_1.shtml\" target=\"_blank\" class=\"keywordcss\">微软</a>今天发布了截至2014年3月31日的2014财年第三财季财报，这也是萨提亚·纳德拉(Satya Nadella)担任微软首席执行官以来首份季度财报。财报显示，微软第三财季营收达到204亿美元，与去年同期的204亿美元相当;净利润达到56.6亿美元，比去年同期的60.55亿美元下滑了6.5%。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	财报显示，由于PC销量持续下滑拖累了微软的消费者业务，因此微软第三财季净利润同比下滑，但却超过了业界分析师的预期。在此利好势头之下，微软当日盘后股价呈现上涨的局面。在周四的纳斯达克股市常规交易中，微软股价上涨0.17美元，报收于39.86美元，涨幅为0.43%;发布此财报后(截止发稿之时)，微软股价上涨0.97美元，达到40.83亿美元，涨幅为2.43%。在过去的52周，微软最高股价为41.66美元，最低股价为30.6美元，微软当前市值约为3308.7亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软首席执行官萨提亚·纳德拉(Satya Nadella)对此称：“第三财季的业绩展现了我们业务的实力，同时也展现了我们移动为先、云为先等战略的机遇。我们在必应、Office 365 Home等消费者服务方面也取得了良好的进展，与此同时，我们的客户继续使用我们的云解决方案。这两种结果都支持了我们的长期增长战略。我们仍在重点关注快速执行和发行用户喜欢使用的创新型产品。”\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软执行副总裁兼首席财务官阿米·霍德也称：“我们发布了强劲的财务结果，这主要得益于公司强劲的执行力和持续的成本控制措施。我们仍将继续重点利用我们的资源，来推动增长，并实现股东的长期价值。”\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<strong>财报详情：</strong>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季营收达到204.03亿美元，与前一年同期的204.89亿美元相当，同时也超出分析师预计的203.9亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季按照美国通用会计准则计量的运营利润达到69.74亿美元，比前一年同期的76.12亿美元下滑了8%。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季按照美国通用会计准则计量的净利润达到56.6亿美元，比前一年同期的60.55亿美元下滑了6.5%;按照美国通用会计准则计量的每股摊薄利润为0.68美元，比前一年同期的0.72美元下滑了6%，每股摊薄利润同时也超出分析师预计的0.63美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季设备和消费者产品营收达到83亿美元，同比增长12%;其中Windows OEM营收同比增长4%，Windows OEM Pro营收大幅增长19%;Office 365 Home服务现有440万订阅服务;Surface营收增长50%，达到5亿美元;Xbox游戏机销量为200万台，其中包括120万台Xbox One;必应美国搜索份额增到18.6%，搜索广告营收增长了38%。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季商业营收增长7%，达到122.3亿美元，其中Office 365营收增长了一倍多;Azure营收增长了150%以上;Windows总授权营收增长了11%;\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<strong>按照业务部门划分：</strong>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季设备与消费者授权营收达到43.82亿美元，前一年同期为43.52亿美元;毛利润为39.06亿美元，前一年同期为39.29亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季设备与消费者硬件营收达到19.73亿美元，前一年同期为14.02亿美元;毛利润为2.58亿美元，前一年同期为3.93亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季设备与其它消费者产品营收达到19.5亿美元，前一年同期为16.56亿美元;毛利润为5.41亿美元，前一年同期为4.30亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季商业授权营收达到103亿美元，前一年同期为99.79亿美元;毛利润为94.3亿美元，前一年同期为90.85亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季其它商业产品营收达到19.02亿美元，前一年同期为14.49亿美元;毛利润达到4.75亿美元，前一年同期为2.64亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	微软第三财季毛利润达到144.62亿美元，前一年同期为157.02亿美元。\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	截至2014年3月31日，微软持有的现金和现金等价物共计达到115.72亿美元。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140425/001875.htm','2014-04-26 08:16:59',1,'/news/thumb/20140425090617_8388.jpg','微软第三财季净利56.6亿美元 同比下滑6.5%','admin','悦潼'),(13,'<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span><strong>【CNW.com.cn 独家译稿】</strong>众多基于<a href=\"http://tag.cnw.com.cn/tag/Bigtable_1.shtml\" target=\"_blank\" class=\"keywordcss\">Bigtable</a>技术的开源项目正在通过不同的方式实现高扩展性、高灵活性、分布式及宽列数据存储等功能，<a href=\"http://tag.cnw.com.cn/tag/Cassandra_1.shtml\" target=\"_blank\" class=\"keywordcss\">Cassandra</a>和<a href=\"http://tag.cnw.com.cn/tag/HBase_1.shtml\" target=\"_blank\" class=\"keywordcss\">HBase</a>就是其中的代表。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>在<a href=\"http://tag.cnw.com.cn/tag/%B4%F3%CA%FD%BE%DD_1.shtml\" target=\"_blank\" class=\"keywordcss\">大数据</a><a href=\"http://bigdata.cnw.com.cn/bigdata-orginal/htm2014/20140409_295669.shtml#zhu\" class=\"zhu\"><sup>[注]</sup></a>这一全新的领域里，Bigtable数据库技术非常值得我们关注，因为这一技术是由谷歌的工程发明的，而谷歌是一家公认的非常擅长管理海量数据的公司。如果你对此非常了解，那么你一家知道也熟悉Cassandra和HBase这两个Apache数据库项目。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>谷歌在2006年的一份研究报告中首次对Bigtable进行了阐述。有意思的是，这份报告当时并没有将Bigtable作为数据库技术，而是将其作为一种“稀疏的分布式多维度”映射技术以存储拍字节级数据，并在商用硬件上运行它们。行先是以一种非常独特的方式被索引，随后Bigtable利用行键对数据进行分割，将它们分布到集群中。列可以被迅速地定义在行中，让Bigtable适用于大多数的非模式环境。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>Cassandra和HBase都在很大程度上借鉴了早期Bigtable的定义。实际上，Cassandra起源于Bigtable和亚马逊的Dynamo技术，HBase将自身定位为“开源Bigtable工具”。就其本身而论，这两个项目既有许多相同的特点，同时又有许多重大区别。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span><strong>同为大数据而生</strong></span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>Cassandra与HBase都是<a href=\"http://tag.cnw.com.cn/tag/NoSQL_1.shtml\" target=\"_blank\" class=\"keywordcss\">NoSQL</a>数据库。总体上看，这意味着用户无法使用SQL数据库。不过，Cassandra使用的是CQL（Cassandra 查询语言），其语法有明显模仿SQL的痕迹。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>两者都被设计用于管理非常大的数据集。HBase文件声称一个HBase数据库可以拥有数亿个，甚至是数十亿个行。此外，用户还被建议继续使用关系型数据库。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>两者都是分布式数据库，不仅仅是在数据的存储方式上，在数据访问方式上亦是如此。客户端可以与集群中的任意节点相连，并访问任意的数据。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>两者都宣称拥有近似于线型的扩展能力。想要管理两倍规模的数据吗？用户只需将集群中的节点扩展两倍即可。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>两者都是通过复制来防止集群节点故障而导致出现数据损失。被写入数据库的行主要由单个集群节点负责（行至节点映射取决于用户所使用的分区模式）。数据会被镜像到称之为冗余节点的其他集群成员当中（用户可配置的复制因子会显示数量）。如果主要节点出现了故障，那么数据仍然可以从另外的冗余节点中被读取。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>两者都被称之为列式数据库。由于它们的名字听起来像是关系型数据库，因此用户在接触中需要在思想上进行调整，这导致用户对它们的认知会出现混淆。最容易出现混淆的地方是，数据在表面上最初是由行进行排列的，表的主要键是行键。但是与关系型数据库不同，在列式数据库中，没两个行需要相同的列。正如上面所说的那样，在表被创建后，用户能够快速在行中加入列。实际上，你能够向一行中增加许多列。虽然最高上限值难以被准确地计算出来，但是用户几乎不可能达到这样的上限，即便他们加入大量列的情况下也是如此。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>除了这些源于Bigtable定义的特点外，Cassandra和HBase还有一些其他的相似之处。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>首先，两者都使用相似的写入路径，即首先将写入操作记录在日志文件中以确保持久性。即便出现写入失败的提示，保存在日志当中的操作记录可以被重新开始。随后，数据被写入内存缓存中。最后，数据被通过大量的一系列写入操作写入到磁盘中（实际上是将内存缓存的副本拷贝至磁盘中）。Cassandra和HBase所使用的内存和磁盘数据结构在某种程度上都是日志结构的合并树。Cassandra的磁盘组件是SSTable，HBase中磁盘组件的是HFile。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>两者提供JRuby语言的命令行外壳。两者都通过Java语言被大量写入，这是访问它们的主要编程语言，尽管在许多其他的编程语言中都有适合两者的客户端包。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<span>当然，Cassandra 和 HBase都是Apache软件基金会管理的开源项目，两者都可以通过Apache License version 2.0许可证免费获取。</span>\r\n</p>\r\n<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span><strong>相似与差别</strong></span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>尽管两者有着众多相似之处，但是它们之间还是存在着许多重大的区别。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>尽管<a href=\"http://tag.cnw.com.cn/tag/Cassandra_1.shtml\" target=\"_blank\" class=\"keywordcss\">Cassandra</a>和<a href=\"http://tag.cnw.com.cn/tag/HBase_1.shtml\" target=\"_blank\" class=\"keywordcss\">HBase</a>中的节点都是对称的，这意味着客户端能够与集群中的任意节点相连，但是这种对称是不完全的。Cassandra需要用户将一些节点作为种子节点，让它们在集群间通信中扮演集流点的角色。在HBase中，用户必须让一些节点充当主节点，它们的功能是监控和协调地区服务器的行动。为了确保高可用性，Cassandra采取方式是允许在集群中设置多个种子节点；HBase则是利用备用主节点，如果当前的主节点发生故障，那么备份主节点将成为新的主节点。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>Cassandra在节点间通信中使用的是Gossip协议。目前Gossip服务已经与Cassandra软件整合到了一起。HBase则依托完全独立的分布式应用Zookeeper来处理相应的任务。尽管HBase与Zookeeper一同出货，但是用户常常会使用预置在HBase数据库中的Zookeeper。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>虽然Cassandra和HBase都不支持实时交易控制，但是两者都提供了一定程度的一致性控制。HBase向用户提供记录级（也就是行级）的一致性。实际上，HBase在每行都支持ACID级语义。用户可以在HBase中锁定一行，但是这种行为并不被鼓励，因为这不仅影响到并发性，同时行锁定还会导致无法进行区域分割操作。此外，HBase还可以执行“检查与写入”操作，该操作在单个数据元上提供了“读取-修改-写入”的语义。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>Cassandra免费的DataStax社区版包含有一个DataStax 操作中心。该中心提供了集群监控与管理功能，它可以检测数据库模式，提示键空间是否能够被编辑，以及是否可以增加或删除列族。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>尽管Cassandra被描述为拥有“终极”一致性，但是读取和写入一致性可以在级别和区间方面进行调整。也就是说，你不仅可以配置必须成功完成操作的冗余节点数量，还可以设置参与的冗余节点是否跨数据中心。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>此外，Cassandra还在其计算机指令系统中增加了一些轻量级的交易。Cassandra的轻量级交易采用的是“比较与集合”机制，相当于HBase的“检查与写入”功能。不过，对于HBase的“读取-修改-写入”操作功能，Cassandra则缺乏相对应的功能。最终，Cassandra的2.0版本增加了单独的行级写入功能。如果一个客户端在一行中更新了多个列，那么其他的客户端将会看到所有未更新的部分，或所有更新的部分。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>在Cassandra和HBase当中，主索引是行键，但是数据被存储在磁盘中，这导致列族成员相互间非常接近。因此仔细规划列族组织非常重要。为了保持高查询性能，有着相同访问模式的列应该被放在在相同的列族当中。Cassandra允许用户创建关于列值的额外次索引。这一举措提升了对那些值具有高重复性的列（例如存储客户电子邮件地址中国家地区的列）的数据访问。HBase虽然缺乏对次索引的内置支持，但是它们有一些能够提供次索引功能的机制。这些都在HBase的在线参考指南和HBase社区博客中被提及。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>如前所述，两个数据库都有发布数据操作命令的命令行外壳。由于HBase和Cassandra的壳都是以JRuby壳为基础，因此用户可以编写一些脚本，让这些脚本能够调用JRuby壳的所有资源与数据库所提供的特定API进行交互。此外，Cassandra还定义了模仿自SQL的CQL。与HBase所使用的查询语言相比，CQL的功能更加丰富，并且可以在Cassandra的壳内直接执行。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>尽管Cassandra仍然支持Thrift API，但实际上Cassandra一直在推动让CQL成为数据库的主要编辑接口。Cassandra的文档列入了一些针对Java、C#和Python等使用CQL version 3的驱动。最终，Cassandra将可获得一个JDBC驱动。该驱动用CQL替代了SQL，将CQL作为数据定义与数据管理语言。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>HBase也支持Thrift接口和RESTful Web服务接口，不过HBase原生的Java API向编程人员提供了丰富的功能（如附图所示）。虽然HBase的数据操作命令没有CQL丰富，但是HBase拥有一个“筛选”功能，该功能可以在会话的服务器端执行，大幅提升了扫描（搜索）的吞吐量。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>HBase还引入了“协处理器”（coprocessors）这一概念，允许在HBase进程中执行用户代码。这基本上与关系型数据库中的触发和预存进程相同。目前，Cassandra还没有类似HBase协处理器的功能。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>Cassandra的文档较HBase的更加醒目，并且拥有更加扁平化的学习曲线。设置一个开发用的Cassandra集群比设置HBase集群要更加简单。当然，这仅对于开发与测试目的来说非常重要。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span><img border=\"0\" src=\"http://newtest.cnw.cn/resources/2014_03/2014_03_09/201403094771397027803273.jpg\" /><br />\r\n&nbsp;<br />\r\n<strong>附图 HBase主节点在60010端口上托管了一个Web接口。用户可以浏览包括节点执行历史、由节点管理的表、主节点域中的地区服务器等信息。</strong></span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span><strong>棘手之处</strong></span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>在必须为特定应用调整集群时，用户需要做一些工作。在指定数据集大小、创建与管理多节点集群（通常会跨多个数据中心）的复杂度后，调整工作将变得非常棘手。用户需要深刻理解集群的内存缓存、磁盘存储和节点间通信之间相互影响，仔细监控集群的活动。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>HBase对Zookeeper的依赖会带来一些额外的故障点。虽然Cassandra避开了这一问题，但这并不意味着Cassandra集群的调整难度会大幅下降。我们对两个数据库的集群调整难点进行了对比（如附表所示）。</span>\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<img border=\"0\" src=\"http://newtest.cnw.cn/resources/2014_03/2014_03_09/201403091801397027948242.jpg\" />\r\n	</p>\r\n	<p style=\"font-size:14px;font-family:宋体, Arial, sans-serif;color:#313131;text-indent:28px;background-color:#FFFFFF;\">\r\n		<span>需要说明的是，这里并没有确定谁是胜出者，谁是失败者。每个数据库的支持者都会找到一些证据来证明他们的系统优于对方。通常用户需要对两个数据库进行测试，然后才能确定它们执行目标应用的情况。那么从技术角度出发是否会有更好的办法呢？（范范编译）</span>\r\n	</p>\r\n</p>','网界网','http://bigdata.cnw.com.cn/bigdata-orginal/htm2014/20140409_295669.shtml','2014-04-26 08:24:29',1,'/news/thumb/ba3243242143242.jpg','Cassandra与HBase的大数据对决','admin','范范编译'),(14,'<h1 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:20px;\">\r\n	<span style=\"color:#33CCCC;\">十大开源技术：</span>\r\n</h1>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Apache HBase</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	这个大数据管理平台建立在谷歌强大的BigTable管理引擎基础上。作为具有开源、Java编码、分布式多个优势的数据库，Hbase最初被设计应用于Hadoop平台，而这一强大的数据管理工具，也被Facebook采用，用于管理消息平台的庞大数据。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Apache Storm</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	用于处理高速、大型数据流的分布式实时计算系统。Storm为Apache Hadoop添加了可靠的实时数据处理功能，同时还增加了低延迟的仪表板、安全警报，改进了原有的操作方式，帮助企业更有效率地捕获商业机会、发展新业务。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Apache Spark</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	该技术采用内存计算，从多迭代批量处理出发，允许将数据载入内存做反复查询，此外还融合数据仓库、流处理和图计算等多种计算范式，Spark用Scala语言实现，构建在HDFS上，能与Hadoop很好的结合，而且运行速度比MapReduce快100倍。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">Apache Hadoop</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	该技术迅速成为了大数据管理标准之一。当它被用来管理大型数据集时，对于复杂的分布式应用，Hadoop体现出了非常好的性能，平台的灵活性使它可以运行在商用硬件系统，它还可以轻松地集成结构化、半结构化和甚至非结构化数据集。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Apache Drill</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	你有多大的数据集？其实无论你有多大的数据集，Drill都能轻松应对。通过支持HBase、Cassandra和MongoDB，Drill建立了交互式分析平台，允许大规模数据吞吐，而且能很快得出结果。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">Apache Sqoop</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	也许你的数据现在还被锁定于旧系统中，Sqoop可以帮你解决这个问题。这一平台采用并发连接，可以将数据从关系数据库系统方便地转移到Hadoop中，可以自定义数据类型以及元数据传播的映射。事实上，你还可以将数据（如新的数据）导入到HDFS、Hive和Hbase中。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Apache Giraph</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	这是功能强大的图形处理平台，具有很好可扩展性和可用性。该技术已经被Facebook采用，Giraph可以运行在Hadoop环境中，可以将它直接部署到现有的Hadoop系统中。通过这种方式，你可以得到强大的分布式作图能力，同时还能利用上现有的大数据处理引擎。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Cloudera Impala</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	Impala模型也可以部署在你现有的Hadoop群集上，监视所有的查询。该技术和MapReduce一样，具有强大的批处理能力，而且Impala对于实时的SQL查询也有很好的效果，通过高效的SQL查询，你可以很快的了解到大数据平台上的数据。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">Gephi</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	它可以用来对信息进行关联和量化处理，通过为数据创建功能强大的可视化效果，你可以从数据中得到不一样的洞察力。Gephi已经支持多个图表类型，而且可以在具有上百万个节点的大型网络上运行。Gephi具有活跃的用户社区，Gephi还提供了大量的插件，可以和现有系统完美的集成到一起，它还可以对复杂的IT连接、分布式系统中各个节点、数据流等信息进行可视化分析。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>MongoDB</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	这个坚实的平台一直被很多组织推崇，它在大数据管理上有极好的性能。MongoDB最初是由DoubleClick公司的员工创建，现在该技术已经被广泛的应用于大数据管理。MongoDB是一个应用开源技术开发的NoSQL数据库，可以用于在JSON这样的平台上存储和处理数据。目前，纽约时报、Craigslist以及众多企业都采用了MongoDB，帮助他们管理大型数据集。（Couchbase服务器也作为一个参考）。\r\n</p>\r\n<h1 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:20px;\">\r\n	<strong><span style=\"color:#33CCCC;\">十大顶尖公司：</span></strong>\r\n</h1>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">Amazon Web Services</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	Forrester将AWS称为“云霸主”，谈到云计算领域的大数据，那就不得不提到亚马逊。该公司的Hadoop产品被称为EMR（Elastic Map Reduce），AWS解释这款产品采用了Hadoop技术来提供大数据管理服务，但它不是纯开源Hadoop，经过修改后现在被专门用在AWS云上。\r\n</p>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	Forrester称EMR有很好的市场前景。很多公司基于EMR为客户提供服务，有一些公司将EMR应用于数据查询、建模、集成和管理。而且AWS还在创新，Forrester称未来EMR可以基于工作量的需要自动缩放调整大小。亚马逊计划为其产品和服务提供更强大的EMR支持，包括它的RedShift数据仓库、新公布的Kenesis实时处理引擎以及计划中的NoSQL数据库和商业智能工具。不过AWS还没有自己的Hadoop发行版。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">Cloudera</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	Cloudera有开源Hadoop的发行版，这个发行版采用了Apache Hadoop开源项目的很多技术，不过基于这些技术的发行版也有很大的进步。Cloudera为它的Hadoop发行版开发了很多功能，包括Cloudera管理器，用于管理和监控，以及名为Impala的SQL引擎等。Cloudera的Hadoop发行版基于开源Hadoop，但也不是纯开源的产品。当Cloudera的客户需要Hadoop不具备的某些功能时，Cloudera的工程师们就会实现这些功能，或者找一个拥有这项技术的合作伙伴。Forrester表示：“Cloudera的创新方法忠于核心Hadoop，但因为其可实现快速创新并积极满足客户需求，这一点使它不同于其他那些供应商。”目前，Cloudera的平台已经拥有200多个付费客户，一些客户在Cloudera的技术支持下已经可以跨1000多个节点实现对PB级数据的有效管理。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Hortonworks</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	和Cloudera一样，Hortonworks是一个纯粹的Hadoop技术公司。与Cloudera不同的是，Hortonworks坚信开源Hadoop比任何其他供应商的Hadoop发行版都要强大。Hortonworks的目标是建立Hadoop生态圈和Hadoop用户社区，推进开源项目的发展。Hortonworks平台和开源Hadoop联系紧密，公司管理人员表示这会给用户带来好处，因为它可以防止被供应商套牢（如果Hortonworks的客户想要离开这个平台，他们可以轻松转向其他开源平台）。这并不是说Hortonworks完全依赖开源Hadoop技术，而是因为该公司将其所有开发的成果回报给了开源社区，比如Ambari，这个工具就是由Hortonworks开发而成，用来填充集群管理项目漏洞。Hortonworks的方案已经得到了Teradata、Microsoft、Red Hat和SAP这些供应商的支持。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">IBM</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	当企业考虑一些大的IT项目时，很多人首先会想到IBM。IBM是Hadoop项目的主要参与者之一，Forrester称IBM已有100多个Hadoop部署，它的很多客户都有PB级的数据。IBM在网格计算、全球数据中心和企业大数据项目实施等众多领域有着丰富的经验。“IBM计划继续整合SPSS分析、高性能计算、BI工具、数据管理和建模、应对高性能计算的工作负载管理等众多技术。”\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">Intel</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	和AWS类似，英特尔不断改进和优化Hadoop使其运行在自己的硬件上，具体来说，就是让Hadoop运行在其至强芯片上，帮助用户打破Hadoop系统的一些限制，使软件和硬件结合的更好，英特尔的Hadoop发行版在上述方面做得比较好。Forrester指出英特尔在最近才推出这个产品，所以公司在未来还有很多改进的可能，英特尔和微软都被认为是Hadoop市场上的潜力股。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">MapR Technologies</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	MapR的Hadoop发行版目前为止也许是最好的了，不过很多人可能都没有听说过。Forrester对Hadoop用户的调查显示，MapR的评级最高，其发行版在架构和数据处理能力上都获得了最高分。MapR已将一套特殊功能融入其Hadoop发行版中。例如网络文件系统（NFS）、灾难恢复以及高可用性功能。Forrester说MapR在Hadoop市场上没有Cloudera和Hortonworks那样的知名度，MapR要成为一个真正的大企业，还需要加强伙伴关系和市场营销。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Microsoft</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	微软在开源软件问题上一直很低调，但在大数据形势下，它不得不考虑让Windows也兼容Hadoop，它还积极投入到开源项目中，以更广泛地推动Hadoop生态圈的发展。我们可以在微软的公共云Windows Azure HDInsight产品中看到其成果。微软的Hadoop服务基于Hortonworks的发行版，而且是为Azure量身定制的。\r\n</p>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	微软也有一些其他的项目，包括名为Polybase的项目，让Hadoop查询实现了SQLServer查询的一些功能。Forrester说：“微软在数据库、数据仓库、云、OLAP、BI、电子表格（包括PowerPivot）、协作和开发工具市场上有很大优势，而且微软拥有庞大的用户群，但要在Hadoop这个领域成为行业领导者还有很远的路要走。”\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Pivotal Software</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	EMC和Vmware部分大数据业务分拆组合产生了Pivotal。Pivotal一直努力构建一个性能优越的Hadoop发行版，为此，Pivotal在开源Hadoop的基础上又添加了一些新的工具，包括一个名为HAWQ的SQL引擎以及一个专门解决大数据问题的Hadoop应用。Forrester称Pivotal Hadoop平台的优势在于它整合了Pivotal、EMC、Vmware的众多技术，Pivotal的真正优势实际上等于EMC和Vmware两大公司为其撑腰。到目前为止，Pivotal的用户还不到100个，而且大多是中小型客户。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<span style=\"color:#3366FF;\"><strong>Teradata</strong></span>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	对于Teradata来说，Hadoop既是一种威胁也是一种机遇。数据管理，特别是关于SQL和关系数据库这一领域是Teradata的专长。所以像Hadoop这样的NoSQL平台崛起可能会威胁到Teradata。相反，Teradata接受了Hadoop，通过与Hortonworks合作，Teradata在Hadoop平台集成了SQL技术，这使Teradata的客户可以在Hadoop平台上方便地使用存储在Teradata数据仓库中的数据。\r\n</p>\r\n<h2 style=\"font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-weight:normal;color:#555555;font-size:18px;background-color:#FBFBFB;\">\r\n	<strong><span style=\"color:#3366FF;\">AMPLab</span></strong>\r\n</h2>\r\n<p style=\"text-indent:2em;color:#555555;font-family:\'Microsoft Yahei\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size:16px;\">\r\n	通过将数据转变为信息，我们才可以理解世界，而这也正是AMPLab所做的。AMPLab致力于机器学习、数据挖掘、数据库、信息检索、自然语言处理和语音识别等多个领域，努力改进对信息包括不透明数据集内信息的甄别技术。除了Spark，开源分布式SQL查询引擎Shark也源于AMPLab，Shark具有极高的查询效率，具有良好的兼容性和可扩展性。近几年的发展使计算机科学进入到全新的时代，而AMPLab为我们设想一个运用大数据、云计算、通信等各种资源和技术灵活解决难题的方案，以应对越来越复杂的各种难题。\r\n</p>','36大数据','http://www.36dsj.com/archives/7452','2014-04-26 08:34:41',1,'/news/thumb/4435314532435.jpg','历数大数据领域内的十大开源技术、十大公司','admin','比特币'),(15,'<h1 style=\"text-align:center;\">\r\n	<img src=\"/upload/image/20140426/20140426085948_333.png\" alt=\"\" width=\"653\" height=\"433\" title=\"\" /><br />\r\n</h1>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a target=\"_blank\" href=\"https://slack.com/\"><span style=\"font-size:14px;\">Slack</span></a><span style=\"font-size:14px;\">是一个企业内部沟通协作平台，公司今天刚获得一轮 4275 万美元的融资，估值已达 2.5 亿美元。Social+Capital Partnership、Accel Partners、Andreessen Horowitz 和 Yelp CEO Jeremy Stoppelman 等参与了本轮融资。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为企业内部沟通协作平台，Slack 的目标是将分散的沟通方式聚集到一个地方，邮件、IM、短信、类似 Yammer 的工具、企业内网和 Wiki 等都能在 Slack 找到。除了整合沟通方式外，Slack 还整合了文件分享系统，公司内所有共享文件，包括上传到 Slack 上的、储存在 Google Doc 的 或者 Dropbox 里的，通过内置的搜索工具，都能进行全文检索。Slack 还整合了 Twitter、Zendesk、Crashlytics 和 Heroku 等服务，将他们的通知提醒、Bug 追踪等数据融入到公司内的信息流中。目的只有一个，做一个能解决公司内所有问题的工具。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在企业内部协作平台领域，Slack 是后起之秀，它的前辈 Yammer 在 2012 年被微软以 12 亿美元的价格收购。Slack 由 Flickr 联合创始人 Stewart Butterfield 亲手打造，产品于今年 2 月份才正式推出。目前，Slack 的日用户数为 6 万，付费用户数 1.5 万。Slack 的 iOS 和 Android 应用都已推出。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Butterfield 表示，进行此轮融资的主要原因在于投资者的强烈投资热情。目前，Slack 已经接近正现金流。公司打算利用这轮融资进一步扩充员工规模，同时也可能会收购一些小的团队。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">[本文编译自：</span><a href=\"http://recode.net/2014/04/25/workplace-communication-app-slack-raises-43m-at-250m-valuation/\" target=\"_blank\"><span style=\"font-size:14px;\">recode.net</span></a><span style=\"font-size:14px;\">]</span>\r\n</p>','36氪','http://www.36kr.com/p/211519.html','2014-04-26 09:00:23',1,'/news/thumb/6ca005024d8ab63194701a6e7e550a3b.png','正式推出不到三个月，企业内部沟通协作平台Slack就已融资4275万美元','admin','欧开磊'),(16,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Facebook放弃Cassandra之后，对HBase 0.89版本进行了大量稳定性优化，使它真正成为一个工业级可靠的结构化数据存储检索系统。Facebook的Puma、Titan、ODS时间序列监控系统都使用HBase作为后端数据存储系统。在国内公司的一些项目中也用到了HBase。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HBase隶属于Hadoop生态系统，从设计之初就十分注重系统的扩展性，对集群的动态扩展、负载均衡、容错、数据恢复等都有充分考虑。相比于传统关系型数据库，HBase更适用于数据量大、读写吞吐量非常高、对数据可靠性一致性及数据操作的事务性要求较低的应用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HBase使用HDFS作为存储层，HDFS屏蔽了底层文件系统的异构性，集群数据的负载均衡、容错、故障恢复都对上层透明。这使得HBase的结构极为简单清晰，集群扩展性非常突出。同时HBase使用ZooKeeper作为分布式消息中间件，管理集群运行时各节点状态，保证分布式事务的一致性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">通过使用HDFS和ZooKeeper，HBase要达到管理节点Master和服务节点Region Server运行时无状态的设计理念，服务节点Region Server中管理的MemStore和BlockCache等结构的本质意义都是缓存。系统运行时随时替换、添加或删除服务节点时不需要依赖之前服务节点保存的任何信息，负载均衡、集群扩展及失效时数据恢复的处理流程都极为简单，添加服务器或发现服务器下线之后对集群负载重新均衡等操作在不需要回滚日志的情况下都能在1分钟甚至几秒钟完成。HBase中的管理节点HMaster的工作则只是维护ZooKeeper中存储的集群状态变化的时序，充当WatchDog的角色。当管理节点出现异常情况时，Backup Master可以立即激活，不影响集群的正常使用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HBase的各种问题</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HBase也有众多用户诟病的不足，例如原生HBase不支持索引（众多NoSQL数据都把索引作为自己支持的基本功能，例如也有众多拥趸的MongoDB）查询方式单一，只支持基于主键的数据读写和范围查询，对非主键列的数据筛选只能通过过滤器低效完成，如果用户从客户端建立索引，则需要自己维护索引表与数据表的一致性，同时HBase也不支持跨行或跨表事务，操作冲突导致失败时数据回滚这些复杂逻辑都需要用户自己完成。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HBase底层使用HDFS作为持久化层，由于HDFS保持副本一致性的方式非常简单，一旦文件生成便不支持数据的修改。HBase不得不使用LSMTree结构通过刷写新文件并通过同时查询多个存储文件中的内容，然后按时间戳归并结果来模拟实时修改数据。所以在经历长时间数据写入之后会生成许多存储文件，传统机械硬盘每秒随机寻道次数非常有限，且随机寻道时间都在10ms左右，远大于HBase查找block等其他读取数据时必要操作的时间，从多个存储文件中查找数据会引发读取性能尤其是随机读取性能成倍下降。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在生成多个存储文件之后，HBase为了缓解数据读取性能的下降需要定期进行数据文件归并操作Compaction。由于Compaction一般情况下需要读取一个分区的所有存储文件，并将记录排序后重新写到一个新的存储文件中。执行期间会消耗大量系统网络带宽、内存、磁盘I/O以及CPU资源，非常容易造成系统过载。一旦带宽开销过大造成网络时延或者内存开销过大引发Region Server执行长时间的GC操作时，有可能导致其长时间对外停止服务。如果停止服务的时间维持到ZooKeeper租约超时，Master会认为此服务器宕机并通知其下线，然后重新将此Region Server上承担的数据分发到其他服务器上。这个过程通常会持续2~3分钟，而最坏情况下如果同时这台Region Server上正好有Meta表，就可能导致整个集群在此期间无法对外提供服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">此外，由于HBase底层使用列存储结构固化数据，处理非稀疏数据时会有较大的数据冗余造成数据膨胀。通常情况下，存入10列左右的数据，不计副本的膨胀率为3~5倍。想减少这种数据膨胀最为简单的办法是尽量减少行键、列簇、列的长度。最极端的情况下，我们曾经把数据都写在HBase表的RowKey中，以此减少膨胀率提高数据范围查询和随机读取的速度。这种方式将HBase退化为KeyValue存储来提升读写性能，但大多数应用还是希望数据存储结构尽量贴近应用的逻辑结构或尽量贴近关系表中表的结构，所以不得不使用Snappy等压缩算法对数据进行压缩或是采用HFile V2使用行前缀压缩来减少冗余。但这两种压方式特别是采用压缩算法后都会大幅度影响HBase随机读取的性能。压缩算法为了提高压缩效率通常需要维护一段合适的buffer，压缩时对buffer内的数据统一压缩成一个压缩块。HBase中存储文件的block默认大小为64KB，而Snappy压缩buffer为256KB，这会大大增加一次随机读取所需要处理的数据量，HBase本就不优秀的读取性能会进一步受到影响。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">推荐系统介绍与特点</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">搜狐推荐引擎系统是从零基础的状态下逐步成型的，经过非常紧张的开发。目前已接入几亿用户的行为日志，每日资讯量在百万级，每秒约有几万条左右的用户日志被实时处理入库。在这种数据量上要求推荐请求和相关新闻请求每秒支持的访问次数在万次以上，推荐请求的响应时延控制在70ms以内。同时系统要求10秒左右完成从日志到用户模型的修正过程。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">10秒左右的实时反馈成为目前系统的主要难点，为此我们需要维护几亿用户200GB的短期属性信息，同时依靠这些随用户行为实时变化的属性信息来更新用户感兴趣的文章主题，同时实时计算用户所属的兴趣小组，完成由短期兴趣主导的内容推荐和用户组协同推荐。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">用户短期兴趣属性需要根据用户每次的点击浏览和下拉刷新三种操作频繁更新和修改。一旦系统收到用户的日志需要查找出对应相关资讯的所有信息，同时还要找到用户相关的属性数据，根据操作属性，对所有相关属性进行加权或减权。加权操作大致包括点击、浏览时长、划屏；减权操作则主要是推荐曝光。这些数据都要实时回写到用户库中，同时每次推荐也会直接从库中获取用户短期兴趣模型，以此捕捉到用户当前的浏览阅读兴趣。除此之外，还有一些频率较低的操作，例如记录用户浏览历史、周期性计算热门文章。这些操作都是在HBase上完成的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">系统中最为苛刻的需求是处理每秒几万条左右的用户日志，单条日志对应的资讯属性约为5到10个，同时更新属性最简单的情况需要读出用户原有对应属性然后进行加权或减权后存回属性表。因此，存储系统处理日志时对应每秒随机读写次数约为几十万次。系统还需要处理每秒万次的推荐请求，这么多推荐请求都需要读取每个用户当前最新的短期模型，同时请求的返回时间需要控制在70ms以内，这样包括磁盘随机寻道甚至数据命中磁盘、JVM GC都成为存储系统需要尽力避免的问题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">满足苛刻的随机数据读写需求</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">目前整个系统承担压力的核心部分就是HBase，HBase读写最为频繁的数据是用户短期属性。而原生HBase最大的问题之一就是数据随机读写速度太慢。为了满足目前应用的需求，我们基于HBase开发了一套完全利用内存的数据存储系统。下面将分两部分介绍基于内存的存储系统和HBase如何承载前端巨大的数据增删改查的压力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">MemT承担系统核心压力</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">由于我们代码里将HBase上的内存数据存储系统的包名叫memtable，所以这里把这套东西简称为MemT。MemT目前单集群部署了10台服务器（10对10热备）主要存储200GB用户短期兴趣和最近30天文章的摘要信息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">MemT主要功能包括单服务器每秒支持近20万次增删改查操作，支持与HBase相同的行、列簇、列的表结构，支持TTL时间戳数据管理，支持HBase中所有Filter的数据过滤。同时还封装了一些系统常用函数，例如求一行数据中列或列值TopN、按时间平滑数据和计算衰减等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">为了保证系统的可用性，MemT在单个集群中会维护两张内存表互为备份，节点宕机时客户端会自动切换到当前可用的副本上，应用一般对宕机无感。同时MemT还利用了HBase自身的负载均衡（balancer）及宕机Region恢复策略来管理自己的内存数据分片。在单个副本不可用时，客户端会快速切换到可用副本上，所以不会出现HBase RS宕机时等待session超期的情况。宕机后停止服务的节点上所有数据会被分配到集群其他服务器上，收到新数据分片的服务器开始加载数据到内存中同时对外提供服务。集群内存中的各个备份之间通过HBase中一张日志表同步数据，客户端可以选择把数据写到日志表中，也可以强制刷写MemT各服务端的内存来同步数据。日志表被Hash为40个Region分布在集群中，某个服务器宕机之后，其数据也会被均分到集群的其他服务器上，由整个集群来恢复宕机服务器内存中的数据，所以数据恢复的速度非常快，恢复完近期日志中的数据后还需要恢复dump表中的内容。这个过程后面详细介绍。目前线上集群挂掉一台Server，从日志检查到恢复内存约20GB数据的时间不到1分钟。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">当内存中数据增长超过用户配置的阈值时（目前是25GB），系统会按Region大小排序后，从最大的Region开始按LRU规则把内存中的数据淘汰到对应HBase的dump表中，同时在内存里将该行dump标记置为true。当系统再次读取该行时，dump表里对应的内容会再次被加载到内存中按时间戳归并结果，同时修改dump标记为false。如果dump标志位为true，系统更新此行内的数据也会被直接放到dump表中来节约内存。dump表对应的HBase Region和MemT对应的数据分片会被分配到同一台服务器上，来保证其交互时的性能。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">系统日志表里的内容标记为6个小时过期，同时每4个小时系统会将内存中的数据做一份快照。快照流程与内存不足时将数据存放到dump表中的流程相似。不同的是快照不影响每行数据的dump标志位，当内存分片完成快照之后，恢复数据时快照之前的日志就可以丢弃并直接从快照中恢复数据。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">另外，系统要求每次推荐请求相应时延在70ms。为了让MemT在每秒上万次请求时不产生大量内存碎片而频繁GC，我们重新改写了HBase的RPC层，为其中Connection、Handler这些处理RPC并主要申请内存的类设计了缓存，当RPC请求及返回数据大小在一定时间内波动范围保持不变时，Connection和Handler几乎可以重用全部处理完废弃的数据结构，以此来消除内存垃圾的产生。我们曾经一度废弃RPC Reader这一角色，所有请求都由Handler接收处理并直接返回。这样内存占用处理的通量都会有所优化。不过缺少请求队列之后请求的前后关系无法保证，无法保证先到先服务，客户端会随机出现服务时延异常高的请求。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">使用HBase的情况</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">HBase使用原则如下。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">1. 规避事务类应用。HBase默认只保证多用户单行数据操作的数据时序和一致性。如果用户需要跨行甚至跨表事务支持则需要在客户端同时拥有多行数据的锁。当HBase支持高并发数据访问时，极可能由于客户端各种问题造成死锁同时影响数据访问。如果用户需要对表段甚至表进行加锁则需要通过Coprocessor或改动Region Server代码在服务端处理加锁请求。这样的操作十分危险，可能导致整个集群所有RS的Handler线程由于循环等待而耗尽，进而使全集群对外停止服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">目前基于HBase处理事务代价最小的方式是，数据版本通过不同操作申请不同的事务ID，同时读取数据时过滤未完成事务的数据版本来实现。总之，基于HBase处理事务类或强数据一致类的应用有些南辕北辙，违背HBase高扩展大并发高通量数据存取的设计理念。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">如果应用对事务要求较高，那么可以选用传统关系数据库或新兴的一系列NewSQL数据库。例如，内存数据库VoltDB，其使用处理线程与CPU及数据分片绑定的方式，所有数据修改操作先发送到多个副本中的主副本上，由主副本管理线程统一确定顺序再由各个副本分别执行操作。使通常需要多次加锁解锁的事务操作可以在完全无锁的状态下完成。同时实测的每秒事务处理量也远超一般关系型数据库，是OLTP类应用不错的选择。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">2. 避免长时间大量数据写入，同时均衡集群负载。由于HBase需要通过Compaction操作来合并写入的数据来优化数据读取性能，而Compaction操作十分消耗系统资源。为了使系统能稳定提供服务，最好手动控制数据表Compaction的时间，同时减少写入数据量来减少系统的I/O资源消耗，用户可以打开HFile的前缀压缩并且缩短行、列簇及列的长度，同时合理设计表主键将写入数据分散到所有服务器来缓解压力。同时停止系统自动，挑选低压时段，定时滚动触发。最后用户最好关闭HBase的split功能，同时在定义数据表时就预先划分数据分片，这样一方面可以避免新表由于分片数少，初期读写通量都较低的情况，另一方面可以避免split带来的多种问题。最后用户最好自己实现balance功能，例如按表粒度的balance，这样能使负载更快地分散到整个集群中。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">3. 保证Meta表可用性。HBase中所有用户表的Region都依赖Meta表来确定其当前位置，Meta表的可用性关系到整个集群能否正常对外提供服务。为保证Meta表可用，我们定期将Meta表移动到集群负载最轻、内存消耗最小的服务器上。同时移动Meta表会将最新修改刷写到文件系统，防止Meta出现数据丢失。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">4. 减轻ZooKeeper节点压力。HBase所有服务节点及数据分片调度操作时序、所有服务节点的生存期Session以及客户端查询服务节点地址等操作都是由ZooKeeper完成的。ZooKeeper节点之间也需要全量同步所有数据，因此降低节点负载、保证网络可达非常重要。通常在服务器资源充足的情况下，建议将Master、Backup Master和ZooKeeper节点部署在一起。同时不在节点上运行Region Server等资源消耗较多的进程。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">5. 避免随机读取，利用缓存减少热数据延时。目前推荐系统内读取、更改最频繁实时要求最高的用户数据短期兴趣数据被放到了MemT中，但还有一些数据量更大，但更新和修改并没有那么频繁的数据被存储在HBase中。例如，所有新闻资讯的原始数据，所有用户的长期兴趣模型等，这些数据基本入库之后就不会更新，同时前端推荐服务器读取一遍数据基本就可以把较热的部分数据缓存本地并很长时间不需要再次访问HBase，这些数据加速方式基本就是各应用使用本地Cache。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">6. 防止Region Server假死。通常情况下，Region Server进程由于GC或其他原因假死或退出时，ZooKeeper中维持的Session会超期，并由此引发Master的数据恢复流程。但极少数情况下，我们也遇到Region Server无法对外提供服务但Session并不超期的情况，这种情况会造成一部分数据一直无法访问。为了避免这种情况分生，我们的系统监控进程会定期读取每片Region的首行数据，在多次无返回或者超时的情况下调用脚本重启Region Server，快速发现服务节点异常，快速下线重新分配数据。此外，由于Region Server因为GC发生宕机的情况非常常见，我们会定时重启所有服务，使下线的Region Server重新启动，同时均衡集群负载。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">前面介绍了很多使用HBase需要注意的问题，其实实际使用中HBase大多数时间还是非常稳定并且有不错的性能。HBase上顺序Scan和数据写入速度都能达到上万次每秒。目前系统中还有很多类似数据仓库存储过程的数据整理操作，由于涉及的数据量比较大也被放到HBase上执行，例如各个源之间数据结构的转换、日志数据用户数据资讯数据的拼接以及文章热度发布量的计算等。这些操作大多都是利用HBase顺序读写，虽然处理的数据量稍大，但也没有对线上系统造成过度的压力。将这些操作直接在HBase上执行，简化了系统整体的复杂程度。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">总之，HBase能够利用大量廉价的PC Server提供非常出色的高并发且大流量的数据读写性能。即便不做细粒度的优化，简单增加服务器数量也能成倍提高读写通量增加系统的处理能力和稳定性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">系统的其他模块</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">目前系统其他模块还包括用作传递日志和其他消息的Kafka队列，离线计算用户模型的Hive、Pig、Mahout，和其他一些运维管控系统。Kafka消息队列的读写性能非常优秀，但会出现消息乱序以及消息重复发布的情况。系统目前所有统计指标数据都是通过Hive处理日志得出的。Hive的开发难度很低易于使用并且产量很高。Pig主要用于初期日志清洗，Mahout则用于用户模型计算等方面。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">结束语</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">内容推荐引擎系统集成了重多开源系统，是站在巨人的肩膀上摘到当前的成果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">对比其他NoSQL系统（例如Redis、MongoDB、Cassandra等），HBase基于HDFS不支持复杂事务、最初设计中最大的考量因素就是扩展性，其设计的初衷就是基于集群、扩展性好、故障恢复机制清晰高效、基于水平分片的负载分发模式易于调整。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">这些降低了我们设计系统的难度，良好的扩展性让我们不必担心由于系统用户量倍增长，不得不自己处理数据分片、调度、同步、可靠性等一系列问题。集群规模随用户规模同步线性扩展是最廉价的升组系统的方式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">同时HBase简单清晰的代码结构也让我们解决其各种问题或定制化二次开发成为可能。HBase中众多功能强大的组件，例如Bloom过滤器HFile和RPC等，也被拆解出来重新用于其他系统的开发。目前系统中的HBase以及基于HBase的一系列衍生系统已可以胜任大部分苛刻的需求，并且长期在低负荷稳定状态下对外提供服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">作者刘佳，曾参与过淘宝数据魔方的改造，腾讯广点通的系统升级等项目。目前于搜狐移动研发部负责移动内容推荐引擎系统的建设。《HBase权威指南》译者之一。</span>\r\n</p>','CSDN','http://www.csdn.net/article/2014-03-12/2818733','2014-04-26 09:08:58',1,'/news/thumb/hbase_logo.png','HBase在内容推荐引擎系统中的应用','admin','刘佳'),(17,'<div>\r\n	<h3>\r\n		<span style=\"font-size:14px;\">浓缩观点</span>\r\n	</h3>\r\n	<ul>\r\n		<li>\r\n			<p>\r\n				<span style=\"font-size:14px;\">如何像TED演讲者一样打动观众？在你思考如何通过建立情感联系来激励观众的时候，一定要谨记：在满足了生理健康和人身安全的需求后，人们还有四个基本需求。</span>\r\n			</p>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<div>\r\n	<h3>\r\n	</h3>\r\n	<p>\r\n		<span style=\"font-size:14px;\">在播放次数最多的10个TED演讲中，有7个都致力于激励人们更好地改造和提升自我价值。他们演讲的观点并无创新——太阳底下无新事，这7个演讲关注人类的观点，包括精神疾病、创新、领导力、幸福、激励、成功和自尊。</span><br />\r\n<span style=\"font-size:14px;\"> 其他三个播放次数最多的TED演讲则是在探讨促进人际交往和社会变化的话题。他们号召我们对公众健康，公共教育的多样性和差异性采取行动，或是改变自己以前的看法。</span><br />\r\n<span style=\"font-size:14px;\"> 这些演讲者并不是第一个针对这些课题发表演讲的人，也不会是最后一个。但他们从自身的角度去审视和思考这些问题，并且以此感动了我们。是他们让我们明白了为何这些事情很重要，我们怎样才能去改变现状。</span><br />\r\n<span style=\"font-size:14px;\"> 在你思考如何通过建立情感联系来激励观众的时候，一定要谨记：在满足了生理健康和人身安全的需求后，人们还有四个基本需求。</span><br />\r\n<span style=\"font-size:14px;\"> 这四个基本需求中的第一个就是爱和归属感。</span><br />\r\n<span style=\"font-size:14px;\"> 2011年年中，格尔达·格里姆肖（Gerda Grimshaw）在LinkedIn网站的TED讨论组发布了一个问题：“什么让你快乐？”格尔达是“Call Mom”的创始人，这项公益活动免费资助那些单身妈妈和他们的孩子，为他们提供自给自足所需要的生活资源和让孩子可以健康成长的教育资源。在超过100个被资助的家庭中，有92个愿意与别人分享他们幸福的源泉。虽然我的方法不能说非常科学，但为了更深入地理解这些幸福背后的秘密，我仍然对所有答案进行了分类。就像你将看到的，与他人交往中感受到的爱和归属感占据了主要地位：</span><br />\r\n<span style=\"font-size:14px;\"> □ 与家庭成员、朋友、宠物之间的互动（30.4%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 体验大自然（12%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 慈善机构和志愿者服务（10.9%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 完成工作的满足感（9.8%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 通过培训、指导和写作来激励他人（7.6%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 反思和学习（7.6%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 正念和“活在当下”（6.5%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 身体健康—尤其是在近期生病或患有慢性疾病的人群中（5.4%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 生理的愉悦和锻炼（5.4%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 自我表现（2.2%）；</span><br />\r\n<span style=\"font-size:14px;\"> □ 良好的财务状况（2.2%）。</span><br />\r\n<span style=\"font-size:14px;\"> 第二个根深蒂固的基本需求是欲望和私心。</span><br />\r\n<span style=\"font-size:14px;\"> 在上述列表中，生理的愉悦和锻炼、良好的财务状况都被划为欲望和私心这一组。老实说，这些需求出现在普通人的清单中的比例会相对高一些，但在LinkedIn网站上这些大多崇尚道德且不匿名的讨论组中还是比较少见。</span><br />\r\n<span style=\"font-size:14px;\"> 想一想玛丽·罗切在2009年分享的TED演讲《性高潮不可不知的十点》，还有海伦·费舍尔（Helen Fisher）2006年的TED演讲《恋爱中的大脑》，以及那些关于金钱的TED演讲，我们就能感受到，反映人的欲望和私心的演讲话题往往更受欢迎。</span><br />\r\n<span style=\"font-size:14px;\"> 促进个人发展是第三个基本需求，你可以借此来建立与观众的联系。</span><br />\r\n<span style=\"font-size:14px;\"> 每个人都想要不断学习和成长。我们对自身充满好奇，愿意迎接挑战并且最终克服自身的局限性。同样，我们对周围的世界也充满好奇。</span><br />\r\n<span style=\"font-size:14px;\"> 所以，如果你有一个能够设定并完成目标的方法，你就有了完成一个优秀TED演讲的基本素材。人们经常运用这种结构性话题，其实，小说就是用故事来讲述一个人从失败到吸取经验教训再到战胜逆境取得胜利的过程。</span><br />\r\n<span style=\"font-size:14px;\"> “希望与变革”这一口号是帮助巴拉克·奥巴马赢得2008年总统竞选的核心内容，这并非偶然。每一项群众运动的核心力量其实都来源于此，不管是社会活动，政治立场，还是宗教信仰。这是人类的第四项基本需求：吸引你的观众，帮助他们摆脱安于现状的心态，勇于展望明天，并让他们明白为了到达这一天，一切付出都值得。从某种程度上来说，每个人都或多或少体验过存在的无意义感。人们需要改变，当有人帮他们指出存在的意义时，他们就会在世界留下自己的印记。</span><br />\r\n<span style=\"font-size:14px;\"> 以上内容摘自《TED演讲的秘密：18分钟改变世界》</span><br />\r\n<span style=\"font-size:14px;\"> 作者：[美] 杰瑞米•多诺万(Jememey Donovan)&nbsp;</span><br />\r\n<span style=\"font-size:14px;\"> 出版社：中国人民大学出版社</span>\r\n	</p>\r\n</div>\r\n<div>\r\n	<h3>\r\n	</h3>\r\n	<div>\r\n		<img src=\"http://businessvalue.qiniudn.com/images/thumbs/30776_ted_600_360.jpg?time=1398550995\" /><span style=\"font-size:14px;\"></span> \r\n	</div>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<br />\r\n</div>','商业价值','http://content.businessvalue.com.cn/post/30776.html?s=b_home_recent','2014-04-27 06:31:44',1,'/news/thumb/30776_ted_600_360.jpg','TED演讲的秘密：4条与听众建立情感联系的纽带','admin','商业价值 '),(18,'<p style=\"text-align:center;text-indent:2em;\">\r\n	<img src=\"http://u.img.huxiu.com/portal/201404/26/231745sswdi8wi6o1ocwdb.png\" alt=\"贝索斯的大饼画不圆了？亚马逊股价大跌 10%\" /><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\"></span>\r\n</p>\r\n<div>\r\n	<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">（本文摘编自 腾讯科技、Quartz）</span>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">由于对前景的展望低于市场分析师预期，互联网巨头亚马逊股价周五大跌近10%，市值蒸发172亿美元。进入 2014 以来，亚马逊的股价累积已经下跌了 23%。上个图：</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<p style=\"text-align:center;\">\r\n			<a href=\"http://img.huxiu.com/portal/201404/26/230836adccqf2qa6c5hjdc.png\" target=\"_blank\"><img src=\"http://img.huxiu.com/portal/201404/26/230836adccqf2qa6c5hjdc.png\" width=\"624\" height=\"352\" title=\"\" align=\"\" alt=\"\" /></a> \r\n		</p>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">亚马逊昨日公布的财报显示，2014财年第一季度财报。净销售额为197.41亿美元，与上年同期的160.70亿美元相比增长23%。净利润为1.08亿美元，与去年同期的8200万美元相比增长32%。</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">Quartz 的</span><a href=\"http://qz.com/203266/suddenly-the-stock-market-is-worried-about-amazons-profit-free-business-model/\" target=\"_blank\"><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">文章</span></a><span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">指出，亚马逊投资者可能已经对该公司这种“利润换市场”的模式失去了耐心，即长久以来牺牲利润换取市场份额的做法。贝索斯一致都在向投资者解释亚马逊的这种模式，投资者看上去也很买账。</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style=\"font-size:14px;font-family:\'Microsoft YaHei\';\">和 1997 年 IPO 之时相比，亚马逊的股价已经上涨了 17 倍。是时候拿出一些有说服力的利润数据了，这次股价大跌的现象，值得关注。</span>\r\n	</div>\r\n</div>','虎嗅网','http://www.huxiu.com/article/32676/1.html','2014-04-27 06:36:54',1,'/news/thumb/231745sswdi8wi6o1ocwdb.png','贝索斯的大饼画不圆了？亚马逊股价大跌 10%','admin','John McDuling '),(19,'<p style=\"text-align:center;\">\r\n	<img alt=\"诺基亚总部换上微软标志\" src=\"http://i3.sinaimg.cn/IT/2014/0427/U10999P2DT20140427173250.jpg\" title=\"诺基亚总部换上微软标志\" />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">诺基亚总部换上微软标志</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">4月26日，在芬兰埃斯波市，工人在原</span><a href=\"http://stock.finance.sina.com.cn/usstock/quotes/NOK.html\" target=\"_blank\"><span style=\"font-size:14px;\">诺基亚</span></a><span style=\"font-size:14px;\">(7.27,&nbsp;-0.03,&nbsp;-0.41%)总部大楼外墙安装</span><a href=\"http://stock.finance.sina.com.cn/usstock/quotes/MSFT.html\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">(39.91,&nbsp;0.05,&nbsp;0.13%)的标志。芬兰通信公司诺基亚25日宣布完成向微软出售设备与服务部门的业务。</span>\r\n</p>\r\n<p style=\"text-align:center;\">\r\n	<img alt=\"诺基亚总部更换路牌\" src=\"http://i0.sinaimg.cn/IT/2014/0427/U10999P2DT20140427173345.jpg\" title=\"诺基亚总部更换路牌\" /><span style=\"font-size:14px;\"></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">诺基亚总部更换路牌</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这张拼版照片显示的是位于芬兰埃斯波市的原诺基亚总部换上微软标志前后的对比(上图摄于2013年9月8日，下图摄于2014年4月26日)。芬兰通信公司诺基亚25日宣布完成向微软出售设备与服务部门的业务。至此，这项历时近8个月，总额达50多亿欧元的交易最终尘埃落定。</span>\r\n</p>','新浪科技','http://tech.sina.com.cn/t/2014-04-27/17359347505.shtml','2014-04-27 20:15:13',1,'/news/thumb/U10999P2DT20140427173345.jpg','时代终结：原诺基亚总部换上微软标志','admin',' 新华网'),(20,'<p style=\"text-align:center;\">\r\n	<img src=\"http://photocdn.sohu.com/20140427/Img398870760.jpg\" alt=\"\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">铁哥的《腾讯已将微信开发公司逼到绝境》发表之后引起了业内一些反应，最近又有微信海程小永撰文回击铁哥观点。名为反击却充斥着赤裸裸的宣传自己公司的文字与数字，铁哥本不愿成为别人吹嘘自己的垫脚石想低调了事，但众多朋友建议还是回应下，免得被人误会心虚。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在此先声明：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">铁哥之前文章纯粹从自己观察角度出发，程小永同志用脚趾头都能想得到我是什么人写的，只能说明他太高估他的脚趾头了，如真能猜到他的脚趾头可以去编程了。贵圈真是个奇葩的圈子，当外界有异议不去反思自己业务模式，而是用脚趾头去想是哪些人哪样居心从而对作者进行有罪推论，听不得半点不利于自己的消息，关于企业未来我只能呵呵了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">声明完毕我们来分析下基于微信的第三方开发公司。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">微信刚放出开发者权限之初，有商业头脑的先行者就基于微信做出种种开发模块，诸如微商城微会员微官网之类，但总体而言只是把微信当做入口，跳转到第三方页面而已。而第三方页面本质也只是</span><a href=\"http://product.it.sohu.com/list/subcate_57_1.html\" target=\"_blank\"><span style=\"font-size:14px;\">手机</span></a><span style=\"font-size:14px;\">网站那么简单，其各种微产品的模块也只是将logo换一换，核心还是手机网站，部分产品可能有所谓微创新，但根本不变。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前第三方公司只是销售企业所需要的各种产品模板，</span><a href=\"http://product.it.sohu.com/list/subcate_31_1.html\" target=\"_blank\"><span style=\"font-size:14px;\">服务器</span></a><span style=\"font-size:14px;\">以及数据均在第三方公司手里。美名其曰托管服务。服务器以及数据牢牢攥在第三方手里，大大增加来年续约筹码。而由于第三方公司提供的基本都是模块化服务，除非有大企业光顾，一般企业很难得到第三方个性化服务，无个性化服务就很难接地气的为企业带来实际价值。举例子而言，铁哥看了几家第三方公司的数据分析功能，基本还停留在传统PC电商时代的路径来源分析，诸如点击关键词浏览页面排行等元素，但铁哥认为这种老套的数据分析模式已经很难适应移动互联网之下的大数据的发展要求。铁哥认为移动时代的数据分析，是应该建立数学模型，将具体消费者的消费习惯分析，将地域、年龄、消费频次、消费金额等元素按照一定算法进行排比，从而能够准确刻画该消费者的消费脸谱，利用微信等移动功能进行精准化营销。可能铁哥太超前，第三方公司真心没做。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其实就商业模式而言，第三方公司只是建站思维，与pc时代之下的互联网建站其实并无本质区别。多数企业使用第三方开发平台只是将其作为装点门面的工具（不要抬杠说偶尔的那几个成功案例），而未真正给企业带来价值。再举个例子，第三方为企业搭建微商城，流量从哪来，线下工作人员如何打破内部部门壁垒往线上导流等都是第三方开发公司不可能解决问题。目前企业只是图一时新鲜将第三方当成玩意玩玩而已，一般服务全年价格均在一万以下对企业也无任何负担。但如果第一年不带来价值，来年企业还会花一万买个面子吗？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外第三方公司目前销售模式还是采用各地代理制，基本所有第三方公司都在努力发展各地代理商，代理商利用自己手里资源进行第三方开发销售。用这种方式短期内业务扩张确实好看，如微信海公司号称每月营业额已经上三千万，但三千万是否包括代理商的代理金我还是打个问号的。从此销售模式我也敢断定，第三方公司绝不可能为企业提供个性化的定制服务，表面第三方公司是互联网公司，本质是家软件销售公司。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">至于程小永同志用大量篇幅来讲自己模式如何打败腾讯多项产品，铁哥不想不想多做评论，只是想提醒大家：此类公司为企业带来实际价值不明显，且建站的基本技术又无太高门槛，腾讯如果想扮演洪水猛兽，那恐怕连招架的能力都没有。铁哥并非耸人听闻，也未代表任何人任何团伙，只是对第三方的同情。只是程小永不识好人心罢了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">上篇文章铁哥呼吁投资人慎重考虑第三方公司，程小永同志也受到了投资方的疑问，也能想象程小永同志如何为了稳定投资者信心才撰文反击铁哥。铁哥撰文并非一味唱衰第三方公司，第三方公司在前期已经积累众多客户有了良好群众基础。面对腾讯的封闭如果第三方公司可以抛弃目前的只图量不图质的发展模式对企业进行定制精细化服务，不仅仅是建站而是真正为企业带来价值，那么第三方公司或许有可能在与腾讯的较量中胜出。铁哥当然希望第三方势力足够强大到能打破腾讯的垄断。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">程小永先生约铁哥在森林公园约架，铁哥脚趾头都表示出深深的鄙视，铁哥也劝微信海投资商：面对如此幼稚不成熟的合伙人，长点心吧！</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这是铁哥最后一次回应，程同志如不服用成绩给我们看吧。愿你脚趾头早日做出新贡献。</span>\r\n</p>','搜狐IT','http://it.sohu.com/20140427/n398870759.shtml','2014-04-27 20:19:09',1,'/news/thumb/Img398870760.jpg','面对腾讯封闭第三方公司如何突围？','admin','sohu'),(21,'<div>\r\n	<img alt=\"谷歌创始人兼CEO拉里·佩奇不为人知的故事\" src=\"http://img1.gtimg.com/tech/pics/hv1/184/56/1577/102558889.jpg\" />\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	BI中文站 4月26日报道\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2001年7月的一天，拉里·佩奇（Larry Page）决定解雇<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\">谷歌</a>(<a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\">微博</a>)的项目经理。所有的项目经理。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当时的拉里·佩奇还是一个年仅22岁的斯坦福大学研究生，这距离他半夜想到一个主意仅仅五年时间。根据这个主意，他可以<a href=\"http://download.tech.qq.com/\" target=\"_blank\">下载</a>整个互联网，查看不同页面上的链接，进而能够以一种全新的方式查看全世界的信息。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇当天晚上写成的代码成为一种算法的基础。他称之为PageRank，并将其用于支持一种全新的互联网搜索引擎BackRub。但这个名字并没有使用多久。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	到2001年7月，BackRub被更名为Google，而且发展得很好，拥有了数百万用户，获得了不少知名投资者青睐，另外还有400名员工，包括数名项目经理。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	解雇项目经理\r\n</p>\r\n<div>\r\n	<img alt=\"谷歌创始人兼CEO拉里·佩奇不为人知的故事\" src=\"http://img1.gtimg.com/tech/pics/hv1/185/56/1577/102558890.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	1999年谷歌员工合影\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	与大多数创业公司一样，在第一年的谷歌，公司CEO佩奇与工程师之间没有任何管理层级。但随着公司的发展，CEO与工程师之间新增了一层管理者，他们可以见到佩奇和谷歌其他高管，然后给工程师下达命令和截止时间。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇讨厌这种格局。他认为谷歌只应聘请最优秀的工程师，过多的监督层级不仅没有必要，而且会构成阻碍。他甚至怀疑谷歌的项目经理们引导工程师偏离对他个人非常重要的项目。例如，佩奇曾经制定计划，想要扫描世界上所有图书并使其在互联网上搜索可得，但几乎没有人从事这个项目。佩奇将其归罪于项目经理。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	他提出了一些大幅的精简措施。所有的谷歌工程师将不再向项目经理报告工作，而是向新聘请的工程副总裁韦恩·罗辛（Wayne Rosing）汇报，而罗辛将直接向佩奇汇报工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	道格拉斯·爱德华兹（Douglas Edwards）撰写的关于谷歌早期内部观点的著作《我很幸运》（I\'m Feeling Lucky）披露，当时谷歌的人力资源主管史塔茜·苏利文（Stacey Sullivan）是一位非常认真的女性，她认为佩奇的计划太疯狂了。“人们在遇到问题时需要有人去解决。”她说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇没有理会她。\r\n</p>\r\n<div>\r\n	<img alt=\"谷歌创始人兼CEO拉里·佩奇不为人知的故事\" src=\"http://img1.gtimg.com/tech/pics/hv1/190/56/1577/102558895.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇与布林\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	苏利文将自己的担心告诉了埃里克·施密特（Eric Schmidt）。那年3月份，施密特担任谷歌董事长。所有人都预计，只要他离开Novell CEO的全职工作，就会担任谷歌CEO。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	施密特同意苏利文的观点，佩奇的执行教练比尔·坎贝尔（Bill Campbell）同样如此。所有人都称坎贝尔为“教练”，是因为他曾经担任哥伦比亚大学的橄榄球教练，他仍然像在场边指挥比赛一样边走边说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	正如史蒂芬·列维在自己的作品《In the Plex》里所说，有天晚上，坎贝尔与佩奇就他的计划发生了争执。为了证明自己的观点，坎贝尔把工程师一位接一位地叫到佩奇的办公室，让他们表达自己的观点。一位又一位工程师告诉佩奇，他们确实要一位经理，这个人可以结束他们的分歧，并给团队指明方向。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但佩奇已经下定了决心。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	施密特可能是苏利文寻求帮助的最糟糕对象。佩奇从来没有支持聘请施密特或者任何一位CEO，只是谷歌投资者迫使他不得不这样做。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	不久之后，施密特似乎成为佩奇实施计划的障碍。但当时候是2001年7月，施密特尚未正式担任谷歌CEO，因此佩奇的计划得以实施。佩奇要求罗辛代表他宣布这个消息。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当天下午，大约130名工程师和数名项目经理聚集到一起。谷歌的办公室隔档错落有致，沙发等家具是从其他失败的创业公司里淘来的廉价货。这些人就站在佩奇办公室外面。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	最后，戴着眼镜、秃顶的罗辛开始说话。他解释说工程部门将进行重组：所有工程师将向他报告工作，所有的项目经理将被解雇。这个消息没有引起积极的反馈。项目经理们都惊呆了，他们事先没有得到任何警告，而且当着所有同事的面被炒了鱿鱼。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	工程师们要求一个解释。佩奇做出了解释。他脸上几乎没有任何表情，用标志性的平缓、机器人式的语调，佩奇解释说他不喜欢由非工程师来监督工程师。工程师们不应接受科技知识有限的经理们监督。最后，他说，谷歌项目经理们的工作也不能令人满意。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇说话的时候，他的眼神漂到别处，避免与他人直接接触。尽管他的身高高于平均水平，一头黑发令其外表英俊，但他在社交场合显得很腼腆。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这个消息遭到了大量的抱怨。最后，房间里一位名叫罗恩·道林（Ron Dolin）的工程师开始向佩奇发难。他说，全体大会并不是进行业绩评估的场合，佩奇的所作所为“非常荒谬”，“一点都不职业”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“太扯了，”一位当时在场项目经理后来说，“我感到很受侮辱。拉里当着全公司的面说我们不需要经理，说他不喜欢我们。他的话伤害了很多人。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	最后，裁员并没有进行下去。佩奇那天想要截掉的项目经理全都转到谷歌日益发展的运营部门，由乌尔斯·霍兹勒（Urs Hozle）领导。佩奇的重组也没有持续太久。尽管一些工程师在没有监管的情况下成果丰硕，但问题也随之而来。项目所需资源并没有保障到位。重复冗余问题出现。工程师希望得到反馈，并想知道他们的职业生涯会如何发展。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	最后，谷歌再次开始招聘项目经理。“我尽全力解释管理的真正价值，你可以为如何管理定一个基调。”史塔茜·苏利文在《我很幸运》一书里回忆说，“希望拉里可以从中吸取教训。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌的乔布斯\r\n</p>\r\n<div>\r\n	<img alt=\"谷歌创始人兼CEO拉里·佩奇不为人知的故事\" src=\"http://img1.gtimg.com/tech/pics/hv1/211/56/1577/102558916.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	到2001年8月，施密特卸到了自己在Novell的全部职责，成为谷歌CEO，也就是对佩奇和另外一位联合创始人谢尔盖·布林（Sergey Brin）进行所谓的成人监护。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	很长一段时间，拉里·佩奇感觉很不开心。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	每个人都知道史蒂夫·乔布斯（Steve Jobs）的故事，知道他被自己创立的<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>公司解雇，流亡几十年后又回归并拯救了公司。但很少有人理解苹果董事会和投资者当时解雇乔布斯是一个非常正确的决定。在职业生涯早期，乔布斯非常任性和自私，容易造成破坏。离开苹果之后，他才知耻而后勇，在Pixar取得了第二次成功，进而成为一名成熟的领袖。回到苹果之后，他带领苹果发展成为世界上最具价值的公司。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	拉里·佩奇就是谷歌的史蒂夫·乔布斯。与乔布斯一样，佩奇也有另外一位联合创始人谢尔盖·布林，但佩奇一直是公司真正的梦想家和推动力。就像苹果投资者将乔布斯扫地出门一样，谷歌投资者也没有满足佩奇的意愿，迫使他聘请一位CEO实施成人监护。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	后来，两个人都经历了长时间的迷失。史蒂夫·乔布斯的流亡形势更加严峻，但佩奇也在几年时间里没有涉足谷歌的日常工作。与乔布斯一样，只有在经历了长时间流亡后，佩奇才能够成熟起来，了解到自己的优点与缺点。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	后来，与乔布斯一样，佩奇带着雄心壮志与坚定决心回归公司。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	发明家特斯拉的故事\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1943年1月7日，尼古拉·特斯拉（Nikola Tesla）安静地躺在纽约客酒店的房间里，这是一家位于曼哈顿大街上方的33层酒店。突然间，特斯拉胸部剧痛，随后他的心脏停止了跳动。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	一天之后，酒店服务生决定忽略特斯拉房间门口“请勿打扰”的标识，打开房间，发现了他的尸体。这位优秀的发明家已经离世。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	特斯拉是一位克罗地亚移民，出生于1856年。他曾发明了当今世界上绝大多数电的发电方式，也曾构思和创造出无线通信。但是在去世之前的最后十年，他只能努力赚取养老金和喂养鸽子，无力说服投资者资助他最新的构想。直到去世的时候，他都坚信自己可以发明出结束所有战争的武器，发明出电能通过无线方式跨越大洋的方式，并计划从太空中收集能量。他去世的时候，寂寞一人，负债累累。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	特斯拉是一个聪明的人。他能够讲八种语言，有过目不忘的记忆力。他能够在脑海中构成出完整的发明。但是在商业方面，他极其糟糕。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1885年，他告诉自己的老板托马斯·爱迪生，他可以改进汽车和发电机。爱迪生说：“如果你做到了，给你5万美元。”特斯拉履行了自己的承诺，爱迪生却只给他加薪10美元。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	特斯拉愤而辞职，组建了自己的公司：特斯拉电灯与生产公司。但是不久后，他就与投资者就公司发展方向出现分歧，并被炒了鱿鱼。随后一年，特斯拉被迫挖沟谋生。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1900年，他说服摩根大通给另一家公司投资15万美元，但这些钱在1901年就用完了。特斯拉余生一直在给摩根大通写信，请求更多资金支持。但他再也没有拿到过一分钱。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	特斯拉去世后的第二年，也就是1944年，《纽约先驱导报》记者约翰·约瑟夫·奥尼尔（John Joseph O’Neill）撰写了一篇关于这位发明家的传记。二人过去曾是好友。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这篇传记题为《浪子天才：尼古拉·特斯拉的一生》。“在他<a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\">生命</a>的最后三十年，见到过他数千人当中，知道他是谁的很可能不超过10个人。”传记总结说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“即便媒体每隔一年就会头条报道特斯拉和他最新的<a href=\"http://tech.qq.com/science.htm\" target=\"_blank\">科学</a>预测，但没有人将这些报道与这个高高瘦瘦、衣着过时、每天喂鸽子的人联系起来。”“他就是那类奇怪的人群之一，他们能够以不同的方式，令城市里的人们生活更好。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这篇文章发表后41年，也就是1985年，一个12岁的密歇根男孩阅读了特斯拉的传记之后哭了。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	他就是拉里·佩奇。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇的父母都是密歇根州立大学的计算机科学教授，他从小就在一个杂乱的房子里长大。房间里不仅有计算机和电子设备，还有到处堆放的科技杂志。再加上佩奇父母专注的精神，这种氛围培养了佩奇的创造力和发明精神。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	从那一刻起，佩奇认识到，仅仅构思出创新的科技未来是不够的，重大理念并不足够，它还需要商业化。如果佩奇想要成为一个发明家，他就必须创立一家成功的公司。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	特斯拉的故事还教育佩奇要小心世界上托马斯·爱迪生这样的老板，他们会利用你实现梦想的愿望，去服务于自身的世俗目的。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	管理原则\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌成立于1998年9月4日，也就是佩奇在梦里构思出用内置链接进行网页排名的想法之后两年。他自己担任CEO，他最好的朋友谢尔盖·布林被任命为联合创始人。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	联合创始人经常被历史遗忘。史蒂夫·乔布斯在苹果有两位联合创始人，马克·扎克伯格在<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\">Facebook</a>有四位联合创始人。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谢尔盖·布林是一位与佩奇截然不同的搭档。他们在斯坦福大学相识，当时布林非常外向和精力充沛，教授们都知道他喜欢不敲门就直接进入办公室。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在佩奇的创业公司发展为国际科技公司的过程中，布林提供了谷歌必需、但佩奇缺乏的外向性格。布林擅长战略和品牌，以及发展谷歌与其他公司的关系。他是佩奇的合作伙伴，最后成为兄长。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	尽管谷歌经常被看作是布林和佩奇这两位计算机天才的产物，实际上谷歌是拉里·佩奇的创造物，谢尔盖·布林只是帮手。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇和布林为成立这家公司从好友和家里筹集了100万美元，并从斯坦福大学校园里搬到了租来的车库。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	到1999年2月，这家创业公司的发展规模已非车库能容纳，于是搬到了位于加州帕洛艾托（Palo Alto）一个自行车商店楼上的办公室里。七个月之后，这个办公室的规模也不再够，于是公司又搬到了山景城附近距离高速公路几英里的一个办公园区里一座毫无特征的楼上。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在这座楼外面的一片柏油停车场，有一个黄色警用胶带标识的区域，佩奇、布林和谷歌其他员工在这里玩滑轮曲棍球。他们的游戏是全身体接触，因此员工们都戴着护具，回到办公室的时候一定是汗流浃背，有时候还会有出血和淤肿。“在场上对抗创始人的时候，没有人会收敛一点。”道格拉斯·爱德华兹写道，“你玩得越激烈，赢得的尊重越多。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在这座褐色大楼内部，游戏要激烈得多。是的，这里为所有员工提供免费食物，以及一位现场按摩治疗师。另外还有色彩明亮的餐厅和沙发，整个区域看起来就像一个幼儿园和大一新生宿舍的混合体。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是对于佩奇的员工而言，在谷歌工作就像是一场无休止的论文答辩。放眼望去，到处都是饱读圣贤书的人才随时想要与你辩论。佩奇曾经每天与布林进行激烈的争论，这也是他们关系发展的方式。他们的辩论并不是相互争吵，而是一方陈述观点，然后另一方陈述，很少有打断对方的情况发生。佩奇会说布林的想法很愚蠢，布林则会说佩奇的主意太幼稚。他们相互都会称对方为混蛋。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇从来没有感觉到他与布林的关系因为这些争论而有所恶化，因此他也用同样未经任何修饰的方式与其他谷歌员工进行沟通。佩奇曾经对满屋子的谷歌首批营销员工说，他们的职业就是建立在说谎的基础之上。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇还喜欢用肢体语言来表达想法。如果他的眉毛会上扬，说明他认为你的想法很愚蠢。如果你说了一些让他感觉愤怒或不舒服的话，他会用更加平静的语调回应，而且说话的时候绝对不会看着你。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇因为缺乏社交技能而带来了不好的名声。产品演示时应用程序加载过慢也会令他咆哮如雷。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇鼓励公司高管像他和布林那样相互挑战。在新招聘员工的见面会上，两位联合创始人之一经常会挑起一场关于企业或产品决策的论战。然后他们就静静坐在一边，观看下属们相互之间的争论。只要任何一个论点说到了点子上，佩奇就会说：“我不想再听下去了。就这样做。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这并不是说他是个专制的统治者，而是说明他与人沟通靠的是想法，而不是感觉。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌早期的人力资源主管希瑟·凯恩斯（Heather Cairns）还记得有一次遇到佩奇在下班后与谷歌清洁工专心致志地聊天。随后她问佩奇，他们如此严肃地都聊了些什么。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	他回答说。“我想知道每个人工作的情况。”随后他详细回忆了这位清洁工的方法：把空垃圾袋放到垃圾桶底部，这样就可以方便地更换。“这种方法非常有效，”佩奇肯定地说，“他这样做可以节约时间，我也从中学到了东西。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在社交上，佩奇就像个孩子。在大学和研究生期间，他能够借外部事物与他人交流：对未来的构想，超酷的技术。在谷歌，他仍然用这个层面的东西与员工交流，却忽略了情感沟通。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在被问及他管理公司的方法时，佩奇曾经对一位谷歌员工介绍说，他解决复杂问题的方法就是将其简化到二选一，然后选择最佳答案。无论此举会带来什么附加损害，他都能接受。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇在获得密歇根州立大学的计算机科学学士学位之后，前往斯坦福大学就读硕士研究生。当时他认为自己需要在学术与创建公司之间二选一。选择前者意味着放弃成为发明家的机会，但创建公司将迫使他以自己不喜欢的方式与诸多人打交道。在谷歌的前几年，他在两个方面都游刃有余：既能开发出数百万人广泛使用的产品，又培养了专注于理念和成果，而非细微情感的人际文化。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	多年来，谷歌一直在这种管理方式下繁荣发展。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	对于很多员工而言，这种相互竞争的氛围是在一个目标真正明确的公司工作的合理代价。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	即便有时候这种环境造成伤害，最后也是有价值的理念获胜。在《In The Plex》一书中，史蒂芬·列维介绍说2000年时谷歌聘请了一位名叫韦斯利·陈（Wesley Chan）的产品经理助理，并指定他负责开发一款名叫谷歌工具栏的产品。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这款产品原本是希望用户无需打开<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\">微软</a>IE浏览器就进行搜索，但韦斯利·陈发现没有人使用这项功能，因为它没有任何特别之处。他决定将其转化为一款弹出广告的拦截工具。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在一次会议上，他向佩奇提出了这个想法。“这真是我听过的最愚蠢的想法！”佩奇回答说，“我们从哪把你招来的？”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	然而，韦斯利·陈并没有因此而退缩，他悄悄把改进后的工具栏安装到佩奇的电脑上。后来佩奇有一次在会上说他看到的弹出广告变少了，韦斯利·陈才把原因说了出来。于是，这款工具栏正式推出。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇后来总结了他的管理原则：\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	－不要推诿：亲自做事，加快进度。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	－如果不能增加价值，就不要干涉其中。让那些真正做事的人去相互讨论，你去做其他事情吧。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	－不要官僚主义。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	－想法比年龄重要。年龄小并不意味着他不值得尊重与合作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	－你所做的最糟糕的事情就是用一个“不”字就阻止别人做事。如果说出不，你就要帮助他们找到更好的方法。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	社交沟通时的琐碎并不是佩奇唯一不愿遵守的规则。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	例如，1999年，<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\">eBay</a>、<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\">雅虎</a>和谷歌这样的大型互联网公司扩大服务器的方法已经相当普及。他们购买服务器，然后将其安装到第三方所有的庞大仓储中心。这些仓储空间提供商支付电费确保服务器运行，购置空调为服务器降温，而网站所有者则根据面积支付费用。佩奇认为，既然谷歌要按每平方英尺的面积来付费，他就要在固定的空间里安装尽可能多的服务器。于是，他拆开服务器，寻找缩小服务器体积的方法。最先被佩奇砍掉的就是所有的关闭开关。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“你何必要关闭服务器？”他多次这样问。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	将没有用的零件去掉之后，再装到软木板里，防止线缆缠绕在一起，于是谷歌开发出了全新的轻薄型服务器。这些服务器外观丑陋，但不久之后，谷歌就用早期竞争对手Inktomi支持50台服务器的价格，支持了1500台服务器。因此，谷歌的搜索速度更快，而Inktomi与谷歌的其他搜索竞争对手一样，逐渐消失在尘埃里。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	尽管在前两年管理谷歌的过程中取得了诸多令人赞叹的成功，但或许正是因为这样，拉里·佩奇即将丢掉自己的工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	惨遭流放\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1999年上半年，谷歌经历了疯狂的增长，这种用户使用量的增长需要新的资金注入，购买更多的服务器，招聘更多的员工。但谷歌当时候还没有赚到一分钱。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇和布林开始寻找新的投资者的时候，佩奇提出了一个首要的条件：他和布林要保留公司的大多数投票股，并保持对谷歌的绝对控制权。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	最初，硅谷风投资本家们对这个想法嗤之以鼻。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着谷歌不断发展壮大，这种嘲笑也逐渐散去。不久之后，硅谷两家最知名的风投公司，Kleiner Perkins和红杉资本，同意向谷歌投资2500万美元，同时答应佩奇提出的条件。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但投资者仍然有自己的怀疑。作为允许佩奇和布林保留谷歌大多数股权的交换条件，他们要求年仅26岁的佩奇从CEO位置上退下来。他们要为他实行成人监护。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	正如史蒂芬·列维所写，Kleiner Perkins合伙人约翰·多尔（John Doerr）告诉佩奇说，一位世界级的CEO能够“干出更优秀的工作，打造出世界级的管理团队”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇接受了这个条件。谷歌确实需要这笔钱。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	然而，这笔协议达成之后几个月，投资者已经无法撤回资金的时候，佩奇打电话给多尔说，他和布林改变了主意。“事实上，我们认为我们两个人能够把公司管理得很好。”他说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	或许佩奇最初答应了多尔提出的条件，认为谷歌确实需要一位世界级的CEO，只是后来改变了主意。但也许并非如此。佩奇一直是一个控制狂。一位大学好友回忆说，早在密歇根大学时期，佩奇就是“控制狂和偏执狂”，因为“他想要把一切都做对、做好”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1998年，佩奇和布林决定带着谷歌的全部8名员工把公司搬到Lake Tahoe。他们租了一辆厢式货车之后，发现如果指定一位司机，可以每天节约2.5美元。佩奇决定自己担任司机。于是，他开着货车一路前行，其他人则在后面玩数学游戏。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	道格拉斯·爱德华兹说，这是天生的。“拉里不想把自己的生活交到任何人手里。”他说。真相就是，佩奇认为他不需要任何人帮助管理谷歌，至少是除了布林提供的帮助之外。他也把这个想法告诉了新的投资者。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	多尔大发雷霆。很显然，他认为佩奇并不适于领导一家大型公司，而且他表达观点的方式也令人沮丧。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	他建议佩奇与多位大型科技公司CEO见面，包括苹果CEO史蒂夫·乔布斯、<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/INTC.OQ.htm\" target=\"_blank\">英特尔</a>CEO安迪·葛洛夫（Andy Grove）、<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\">亚马逊</a>CEO杰弗·贝索斯（Jeff Bezos），并咨询他们关于工作的建议。多尔认为，佩奇回来的时候，肯定会认为自己需要帮助。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇很爽快地答应了。所有会见结束之后，他给多尔打电话，说出了令人惊讶的观点。佩奇认为，如果说谷歌真的需要一位CEO，那只有史蒂夫·乔布斯能够任胜。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	很显然，这是不可能的，但多尔很高兴听到佩奇认为世界上终究还是有人能够提供帮助。于是他们共同面试其他候选人。多尔向佩奇和布林推荐了Novell公司CEO埃里克·施密特。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇还算喜欢施密特。与大多数高管不同，施密特曾经是一名程序员。事实上，多年前他曾为一款软件编写过代码，而谷歌仍在使用这款软件。布林喜欢施密特是因为他是一个“火人”，也就是每年在内华达州沙漠里举行的“火人节”的参加者。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌聘请了施密特。2001年3月，他以董事长的身份加盟，8月份成为CEO。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇同意了这个安排，但却并不感到开心。他对自己在新权力结构里的地位感到不满，他的头衔是产品总裁。他甚至开始怀疑他是否在这家公司已经可有可无。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	就在这段不确定时期内，2001年7月，佩奇推动谷歌实施了那次设计拙劣的工程业务重组。此举立即向大多数观察人士证明，多尔一直以来都是正确的。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇这样做还有一个动机：摆脱那些向施密特报告工作的项目经理，这样就可以保持自己的控制权。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“我认为，谷歌内部没有比这更令人担心的事情，至少在工程部门如此。”前谷歌工程师、Gmail发明者保罗·布切海特（Paul Buchheit）对爱德华兹说，“人们在公司有一种主人翁的感觉，这是一个欢乐的大家庭。但突然之间，你的一些朋友就被扫地出门。你的感觉就像这样：‘这并非我所想，我原以为我们可以在一起。’”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在佩奇的领导下，谷歌已经在滑轮曲棍球和论文答辩的道路上走了很远。但是渐渐地，谷歌员工对于由一位更加灵活、更加体贴的人来管理公司感到越来越高兴。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	埃里克·施密特到来\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	接下来几年，谷歌成长为一家国际性的大型公司。施密特经常与佩奇和布林沟通，他把事情都摆在平面上。他聘请了一个高管团队，打造了一支销售团队，然后带领谷歌上市。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌内部每个人都将拉里·佩奇看作他们的终极老板。他批准了每一个招聘，谷歌IPO当天，也就是2004年8月19日，最后的签字人也是他。这次IPO创造了数百位百万富翁，佩奇自己则成为亿万富豪。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是佩奇渐渐成为一个遥远的人物。用谷歌早期的一个比喻，佩奇不再驾驶这辆货车，他已经聘请了一位司机，他只需要在后面做白日梦。这是一个渐进的过程。最开始几年，佩奇对谷歌的产品拥有绝对的控制权。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2001年8月施密特担任谷歌CEO之后，他的首要任务就是说服佩奇，谷歌需要聘请一位负责产品管理的副总裁。佩奇则认为这个角色是多余的。然而，施密特说服了佩奇，聘请了乔纳森·罗森伯格（Jonathan Rosenberg）担任这个职位。罗森伯格加盟谷歌之前，在一家获得很多投资的创业公司Excite@Home任职，但这家公司在上世纪90年代末期倒闭。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是罗森伯格加盟谷歌并担任产品管理副总裁，并不意味着佩奇会给他提供发挥才能空间。“参加员工会议的时候，我会带上自己的计划、我们所需的市场调研报告，一年或两年的路线图，但拉里总是嘲笑我和这些东西。”罗森伯格后来对记者说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	罗森伯格还很努力地招聘产品经理。他从哈佛大学和斯坦福大学MBA（工商管理硕士）项目上带来了很多顶级毕业生，但是均遭到了佩奇的拒绝。最后，罗森伯格问佩奇，他哪里做错了。佩奇告诉他，不要再告诉工程师们应该做什么，不要再招聘一些非工程师的员工来告诉工程师该做什么。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	玛丽莎·梅耶尔（Marissa Mayer）是佩奇在谷歌最亲密的朋友之一，也是谷歌冉冉升起的一位高管。她暗示罗森伯格说，不要再试图招聘MBA来担任产品经理，应当招聘一些对商业感兴趣的计算机科学专业毕业生。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	唯一有可能让佩奇放松控制，并允许他与谷歌工程师之间存在管理层级的方法，就是这个层级的员工全部由工程师担任。罗森伯格接受了这个建议，并据此行动。不久之后，谷歌就构建起一支产品经理团队。佩奇退让了一步。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	罗森伯格在谷歌任职几年之后，他遇到了拉里·佩奇的母亲。她的儿子正带着她在公司园区里参观。看到罗森伯格后，佩奇的母亲问道：“他是做什么的？”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“嗯，最开始我不太确定，”佩奇告诉她说，“但现在我发现，正是因为他的存在，我才能有一些自由时间。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	渐行渐远\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但这绝不意味着，佩奇会停止对谷歌推出的产品进行评估、批准，并为其做贡献。佩奇与布林一起控制着谷歌绝大多数的投票股。做产品相关工作比与人打交道更令他感兴趣，另外，他确实擅长这方面。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2004年谷歌推出Gamil之前，这款电子邮件服务的发明者保罗·布切海特将这款产品带到佩奇的开放式办公室，供他评估和审查。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	布切海特在佩奇的电脑上打开程序之后，老板做了个鬼脸。佩奇说：“太慢了。”布切海特并不这样认为，他说加载速度还不错。佩奇坚持说不，这个页面加载用了整整600毫秒。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“你不可能知道。”布切海特说。但当他回到自己办公室，查看服务器记录，发现Gmail加载速度真的是整整600毫秒。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇仍然是谷歌重大战略措施的决定性人物，例如谷歌数十亿美元购买无线频谱，以及2006年以16.5亿美元收购视频分享网站YouTube。但对谷歌员工而言，佩奇似乎越来越少参与公司的日常管理工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	施密特召开谷歌运营委员会（简称OC）会议时，佩奇也会出席，但整个开会期间他面前的<a href=\"http://digi.qq.com/nbook/nbook.shtml\" target=\"_blank\">笔记本</a>电脑都会开着。布林同样如此。他们两人都没有真正参与会议，除非施密特做出“孩子们，请注意”这样的提醒。然后佩奇或布林才会就刚才讨论的问题提出尖锐的意见。当然，佩奇说话的时候，仍然会标志性地看着房间里一个空无一人的角落。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	偶尔，佩奇会兴致勃勃地谈论下去，这时候施密特就会认真地打断他，说：“我们听到了，拉里。谢谢。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在有些问题上，佩奇的观点被完全忽略。例如，谷歌成为互联网领域最成功的广告公司之后，佩奇决定公司应当打破广告中介行业。在他看来，这显然是一个效率极低的系统，可以在科技的帮助下重新改造。但公司不仅没有进行这个话题的讨论，施密特和谷歌顶级广告高管，蒂姆·阿姆斯特朗（Tim Armstrong）和雪莉·桑德伯格（Sheryl Sandberg），还要全力确保谷歌的诸多重要广告客户不要受到佩奇观点的影响。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着时间的推移，佩奇越来越欣赏施密特的优点。佩奇的目标是发明一些令世界更加美好的东西，并使之商业化。谷歌搜索显然已经做到了前面这一点，但施密特在打造一家能够在财务上实现佩奇梦想的公司过程中发挥了关键作用。他与那些破坏了尼古拉·特斯拉生活的坏蛋们截然不同。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着他与施密特的关系升温，佩奇也进一步后撤。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2007年，他发现自己参加了太多的会议，于是开始拒绝这些参会请求。但需要他提供建议的谷歌高管们找到了一个捷径：直接把会议邀请发送到他的助理手中，助理则会尽职尽责地把大量的会议安排到佩奇的日程里。于是，佩奇解释了他的助理。这样，那些想要与佩奇见面的人必须直接来到谷歌的办公室。这种情况下，他长久以来的社交缺陷却变成了优势：他能够一边走，一边友好地点头，然后拒绝别人。他很擅长这样做。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	他还对接受采访感到厌倦。2008年，佩奇对谷歌公关团队说，他们一年要占用他多达八个小时的时间。他为何要与外部世界交谈？\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这应当是施密特的工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	更多项目\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1998年底的一天，谷歌首任人力资源主管希瑟·凯恩斯走到公司的车库办公室，发现拉里·佩奇和谢尔盖·布林正在玩乐高积木玩具。“你们到底在干什么？”凯恩斯用她那大声但却温和的声音问道。桌子上，佩奇面前摆放的奇异装置有机器人胳膊，尾部装有橡胶滑轮。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“我们在研究如何无需人手就能翻书。”佩奇解释说，“总有一天我们会把世界上所有出版物都放到互联网上，这样每个人都能够看到。”凯恩斯说：“当然，当然。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	之后不久，佩奇开着车，带着小型照像机在帕洛艾托转了一整天。他每行驶几英尺，就停下来拍一些照片。再行驶几英尺，停下来再拍照片。回到家之后，他把这些照片上传到电脑上。他所看到的一切令他坚信，最新的想法是可行的。谷歌可以在很多汽车上装大量的照相机，然后在世界各国的大街小巷上行驶，沿途进行拍照，进而在互联网上创造一个数字化的、可搜索的现实世界，或者是最相关的一部分。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在施密特时期，图书和照片项目都成为谷歌的流行产品。2003年推出的谷歌图书项目已经收集了2000万卷书籍，而且数字仍在增加。谷歌街景在2007年推出，到2014年已经采取了50个国家的每条大街图片，并可以通过浏览器查看。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	甚至在谷歌早期，佩奇就一直希望公司不要局限于基本的互联网搜索。由于他还是一个孩子，所以一直在梦想改变世界的计划。在密歇根大学学习期间，他建议学校用一种PRT（即个人快速通勤）系统取代公共交通系统，PRT实际上是一种无人驾驶的单轨式交通系统，每个乘客都有自己的汽车。后来在斯坦福大学，他提出的论文观点令导师特里·维诺格拉德（Terry Winograd）摸不着头脑。他当时的观点看似非常遥远，直到现在电动汽车公司特斯拉才提出了类似的部分计划。其中一个观点就是，打造一条从地球表面直通太空的超级长的环形轨道，使得物体进入太空更加便捷。另外一个提议是能从太空中吸收能量的太阳能风筝。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	打造Android\r\n</p>\r\n<div>\r\n	<img alt=\"谷歌创始人兼CEO拉里·佩奇不为人知的故事\" src=\"http://img1.gtimg.com/tech/pics/hv1/74/57/1577/102559034.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌已经可以从广告中获取大量收益，施密特对公司的管理也进入了稳步发展阶段，佩奇开始认识到，他终于可以去实现自己的理想了。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	到2005年，佩奇的其中一个理想是研发手持计算机，它可以把谷歌服务装到地球上每个人的口袋里。因此，当年佩奇要求谷歌企业开发部门收购一家拥有同样梦想的小型创业公司。这家创业公司名叫Android，公司CEO和联合创始人名叫安迪·鲁宾（Andy Rubin），他曾是苹果高管，他曾经开发出风靡一时，但最终失败的互联网电话Sidekick。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	收购Android是拉里·佩奇一手促成的。佩奇没有将这笔花费5000万美元的交易告诉施密特，直到交易完成。布林知道这笔交易，但他没有丝毫兴趣。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇将Android定为一个独立的实体，它只是名义上属于谷歌。因此，鲁宾可以有很大的经营自主权，不必受到母公司的干涉。Android甚至有自己的办公楼，普通谷歌员工戴着工作证也无法进入。施密特就当这个部门根本不存在，因为对于当时坐拥大量资产的谷歌来说，5000万美元花得值不值根本不必担心。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇把Android当作一个热心的项目，他大量的时间都是与鲁宾在一起，甚至因为对谷歌其他方面关注不够而感到愧疚。再一次，这应当是施密特的工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	接下来两年里，鲁宾开发出了自认为技术水平最高的移动操作系统。不久之后，2007年前往拉斯维加斯时，鲁宾在出租车上打开自己的笔记本电脑，看到史蒂夫·乔布斯发布了苹果的互联网手机。这就是iPhone，相当有魅力的产品。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	鲁宾心想，老天爷，我们要重新做自己的手机。他让出租车停下来，以便更好地观看乔布斯接下来的演示。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	大约一年之后，2008年9月，T-Mobile推出了第一款使用鲁宾团队开发的移动操作系统的手机G1。这款操作系统就像iPhone的翻版，但却是一个不错的翻版，而且可以免费提供给手机生产商安装。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	手机生产商想要追赶苹果，运营商想要与iPhone在美独家运营商AT&amp;T保持同步，于是谷歌的这款操作系统迅速普及。2009年第二季度，Android手机占手机总销量的1.8%，到2010年第二季度，Android销量已经占到了17.2%的市场份额，超过了苹果的14%，这也是Android首次超越苹果。不久之后，Android成为世界上最受欢迎的手机操作系统。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	到2010年，佩奇已经在打造两项随处可见的科技方面发挥了关键作用，这两项科技都改善了世界上人们的生活。谷歌，这家最初从论文答辩开始的公司，使得互联网成为日常生活中一个更加强大的工具。后来，在没有任何成人监护的情况下，佩奇维持了Android的发展。现在，Android已经使智能手机成为日常生活用品，世界上所有人都可以用计算机连接互联网只是时间问题。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	实现如此巨大的二次成功，而且是作为一名经理取得成功，大大提升了佩奇对自己的管理能力的自信心。佩奇也认识到自己职业生涯早期的错误。他很高兴能够与鲁宾合作取得成功。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇一直存在信任别人的问题，但这个问题正在改变，或许是因为他有了家庭。在2009年5月密歇根大学的毕业演讲上，佩奇谈到了自己的父亲、母亲、新婚妻子露茜·索斯沃斯（Lucy Southworth）和他们的孩子。“和我一样，你们的家人把你送到这里，你又把他们带回到这里。”他说，“请靠近他们，要记住：他们是你生命中真正重要的人。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	问题接踵而至\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	就在Android普及和佩奇逐渐成熟的同时，谷歌基于搜索和广告的核心业务也在施密特的管理下不断发展。到2010年，谷歌市值达到1800亿美元，拥有2.4万名员工。真是一家大公司。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	它也遇到了一些大公司特有的问题。《纽约时报》记者克莱尔·凯恩·米勒（Claire Cain Miller）在2010年11月的一篇题为《谷歌发展壮大，但要保持灵活思维》的文章中详细剖析了这些问题。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在这篇报道中，米勒援引了多位谷歌员工和前员工的话，他们称这家公司过于官僚和膨胀。她写道，谷歌过去将工程师所从事的项目限制为10个，但近年来已经增加到20个，甚至40个项目。更糟糕的是，“工程师称公司鼓励他们更少地开发新产品，而是专注于现有产品的改进。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	一位项目经理透露，他觉得是时候从谷歌辞职了，原因就是他需要在电子邮件里添加抄送很多人。他说：“我认为有不少人会离开这个赚钱容易的地方，因为他们对大公司的办事程序感到不满。”另外一位项目经理告诉米勒说，他考虑离职是因为在谷歌工作意味着自己研发的产品公众曝光度太低。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	米勒甚至援引施密特的话说，他对这种形势感到担忧。报道援引施密特的话说：“曾几何时，谷歌三个人就可以开发出世界级的产品，但这个时代已经过去。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	米勒的文章发表后，施密特勃然大怒。一位谷歌女发言人致电《纽约时报》，要求米勒撤下这篇文章。（但她并没有撤。）\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	除了官僚主义，到2010年时施密特领导下的谷歌还要应对另外一个大公司问题。它不再是硅谷的新兴巨头，Facebook才是。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2007年，一位名叫贾斯汀·罗森斯泰恩（Justin Rosenstein）的产品经理从谷歌辞职，加盟了Facebook。随后，他给自己在谷歌的同事写信，称Facebook就是“昨日的谷歌，一家正在改变世界的公司，一家规模仍然很小、每名员工都能对公司发挥巨大影响力的公司”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	到2010年，Facebook公司1700名员工当中，有142名从谷歌而来。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在谷歌高管当中，公司的老化以另外一种方式呈现出来。施密特从来没有真正改变佩奇时代形成的做决策时激烈争论的做法。十年之后，反复的冲突使得高管成为对手，甚至不愿彼此共事。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2010年秋天，佩奇感受到了谷歌的这些问题。他还感受到另外一个令他更加担心的问题。在施密特较为成功的任期内，该公司的进取心反而有所退步。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2009年，谷歌实现了65亿美元的利润，拥有2万名员工。佩奇看着这些数字想，我们有这么多钱，这么多人，为什么不做更多的事情？他禁不住想，为什么谷歌最近所做的最大项目就是Android，是一个施密特并不感兴趣的项目。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	婚后淡出公众视野的佩奇很享受自己作为谷歌幕后梦想家和领袖的生活，但他开始思考，施密特是否是谷歌未来的正确领导者？\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当年晚些时候，佩奇接受了史蒂芬·列维的采访。列维问佩奇，他是否希望再次担任CEO。佩奇给出了似是而非的回答。“我很享受自己所做的事情，”他说，“我觉得自己能够在很多事情上发挥积极影响，这让我感觉良好，我觉得这不太可能变化。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随后，他就走出了房间，采访随之结束。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是一分钟后，佩奇又回来了。他问列维：“我觉得人们并没有从事具有影响力的工作。”他说，谷歌在有些事情的快速执行和规模发展方面做得并不够好。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇承认，谷歌搜索广告业务带来了巨大的利润和持续的发展，这就像一个吸金机器，他心目中的英雄尼古拉·特斯拉就是缺少这样的机器来支持自己的梦想。现在，他有机会做不同的事情。看到谷歌做一些进取心不足的事情，令他感到担心。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这种沮丧之情在他2009年发表密歇根大学毕业演讲时也能听得出来。他对毕业生讲到了他和妻子几年前在印度的经历。他们访问了一个非常贫穷的村庄，那里污水遍地，而且污水都感染了脊髓灰质炎，与夺走他父亲生命的病一样。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“如果脊髓灰质炎仍然持续，他会非常担忧，尽管我们已经有了疫苗。”佩奇说，“人类即将消灭脊髓灰质炎，今年到目前为止只有328人感染。我们让这一切来得快一些吧。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2010年秋天，佩奇在一次产品评估会上公开表达了自己的沮丧之情。埃里克·施密特、布林、佩奇，谷歌的顶级高管，以及他们的代表共同出席会议。与平常一样，佩奇安静地坐在那里看手机。一开始，一位高管介绍了一款帮助用户找到恰当的线下购物商店的新产品。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这位高管正在介绍，突然佩奇打断了他。“不，”佩奇直接说，“我们不做它。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	整个房间陷入一片沉静。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“我们要开发的产品，应当是利用科技解决数亿人面临的大问题。”他继续说，“看看Android，看看Gmail，看看谷歌地图，看看谷歌搜索。这才是我们应该做的。我们要开发出你生活中不可或缺的产品。而这并不是。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇并没有大声说话，他不需要这样做。他所表达的信息已经足够嘹亮和明确。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	那年12月，佩奇、布林和施密特坐到一起进行了一次讨论。在2011年1月20日的谷歌电话会议上，施密特宣布他将结束谷歌CEO生涯，这个职位将由拉里·佩奇重新担任。施密特将转任谷歌执行董事长。当天晚些时候，他发了一条Twitter消息：“成人监护再无必要。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	重新出山\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇带着快速执行的决心重新担任CEO。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	首先，他对公司高级管理层进行了重组，亲自负责了公司的大多数重要产品部门，包括YouTube、广告和搜索，并且在每个部门顶层任命一位类似于CEO的经理。佩奇希望复制他和鲁宾在Android取得的成功。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随后，佩奇和谷歌终于对Facebook的威胁做出了回应，推出了自己的社交网络Google+。到第一年夏天为止，谷歌依据统一、连贯的界面重新设计了所有产品。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2012年，佩奇斥资120亿美元收购了摩托罗拉，这主要是为了收购该公司旗下的大量专利，保护Android不受苹果和其他公司的诉讼困扰。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌进入了硬件领域，推出了Chromebook，这是一款基于谷歌操作系统的超轻薄笔记本电脑，以及用户可以佩戴的计算设备，例如谷歌眼镜。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	到2012年底，谷歌开始在堪萨斯城安装超高速光纤网络，为城市里所有人提供免费的互联网连接，而且速度比宽带快100倍。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这些举措震惊了世界，但没有惊到那些了解佩奇的人。他还是个孩子的时候，就是一个心怀大梦想的人，而且尽自己的努力，尽可能快地实现自己的梦想。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是，不久之后，那些与佩奇关系最密切的人才发现，远离尘世的这段时间，佩奇发生了多少改变。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2013年2月，谷歌顶级高管们从世界各地来到Carneros Inn，这是一个位于纳帕谷山区的度假圣地，他们来参加谷歌每年一度、为期两天的顶级高管会议。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	与会者当中，包括负责谷歌广告业务的苏姗·沃西基（Susan Wojkicki）、负责Android业务的安迪·鲁宾、YouTube部门CEO萨拉·卡曼格尔（Salar Kamangar）、Chrome部门负责人桑达尔·皮采（Sundar Pichai），以及Google+主管维克·贡多特拉（Vic Gundotra）。每位高管都带着自己手下的高级管理者。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	会议第一天，所有人聚集到Carneros Inn白色的纳帕大厅听佩奇的演讲。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇用沙哑的声音对与会者说，谷歌的理想非常远大，如果在场的各位不停止相互斗争，那么谷歌永远无法实现这些目标。从现在开始，谷歌将“对斗争实行零容忍”。佩奇承认，这家公司在年轻时曾要求领导者相互竞争，他自己或许是最具侵略性的那个。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但那时候，谷歌的问题是显性问题。例如，谷歌旗下所有产品都要扩大市场份额，从零扩大到有竞争力，再到获胜。现在，谷歌在产品领域领先着世界，面临的问题也成为佩奇所称的n次方问题。谷歌需要以10倍的速度发展，需要创造全新的市场，以尚未想象到的方式解决问题。要解决n次方问题，谷歌高管必须学会合作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这次演讲令谷歌高管们感到惊讶，尤其是资深的公司高管。过去佩奇和布林把自己不喜欢的每个观点都称为“愚蠢”，甚至是“邪恶”，斗争就是谷歌完成工作的方式。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	其中一些人还记得，2001年7月，佩奇当着所有同事的面，侮辱和解雇了多位项目经理。但那一天，Carneros Inn大厅里所有人看着佩奇，他们看到的是一个与在自己宿舍里打造谷歌首台服务器的人截然不同的佩奇。佩奇的头发已经泛白，他的腰围和脸上也呈现出中年人的样子。由于患声带麻痹症，他的声音也变得沙哑。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	理解每一个需求\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2014年3月19日，拉里·佩奇在温哥华TED大会期间接受了采访。他和采访者查理·罗斯（Charlie Rose）坐在台上的高椅上，两人之间有一张桌子。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	采访原本是提前准备好台词的。佩奇，他的首席公关高管拉切尔·维特斯通（Rachel Whetstone），以及谷歌首席营销官洛莱尼·图希尔（Lorraine Twohill）提前一天在温哥华酒店的房间里为这次采访做准备。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	现在，佩奇和罗斯坐在台上，背后有一面大屏幕，上面是一款拳击视频游戏，一位拳击手把他的对手逼迫到角落里，无情地击打对方。获胜的拳击手由谷歌研发的人工智能计算机程序控制。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇向罗斯解释说，这就是谷歌的未来。佩奇指出，谷歌的人工智能能够像人类玩家一样，以同样的清晰度“看到”屏幕上的内容，它可以自己学习如何玩游戏。佩奇说，看看它干得多么漂亮。想象一下，如果这种智能投入到你的工作。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	罗斯听得很兴奋，但却有些困惑。台下观众也是如此，他们不知道佩奇在说什么。之前的彩排一点都没有派上用场，但这并不怪维特斯通和图希尔。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在与人打交道方面，自从2001年7月那个尴尬的一天之后，拉里·佩奇已经取得了很大的进步，但他仍然不擅长在公众面前讲话。所有的内容都涉及到了，但却淹没在大量不完整的句子里。佩奇不是史蒂夫·乔布斯，也不是马克·扎克伯格。因此，公众根本不了解谷歌和拉里·佩奇最近要做什么。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	随着佩奇重新执掌谷歌进入第四年，这家公司也处于极佳的状态。股价已经涨到700美元以上，不难想象总有一天谷歌将是一家年营收超过千亿美元的公司。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	然而，佩奇认为，谷歌仍然面临着一个存在意义的问题。继搜索之后，谷歌还能否开发出另一项伟大的业务？通过谷歌搜索和Android，佩奇和谷歌可以说创造了两个全世界几十亿人都在使用的科技平台。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但谷歌免费授权Android使用，因此Android对于谷歌业绩的意义仅在于它把谷歌搜索和谷歌搜索广告装进了世界上数千万用户的口袋。在这个意义上，它并不是谷歌的全新业务，仅仅是谷歌主要业务的拓展。谷歌仍然有90%的收入来自广告，其中总收入的70%来自搜索广告。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌面临的一个危险在于，最终－－不是今年，也不是这个十年，但不可避免－－谷歌会发展得极其巨大，并获取世界上所有企业在广告方面的几乎所有支出。听起来虽然疯狂，但并非遥不可及。谷歌营收已经超过了广告主在杂志和报纸上投放的广告支出的总额。谷歌已经主导了在线广告市场。谷歌搜索已经走出家门继续发展。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	对于佩奇而言，这意味着，他现在经常要问自己，未来是什么样的，我们如何创造未来？他产生了很多想法，现在他负责谷歌，可以让工程师们投入足够的时间来完成他的梦想。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	他从来没有放弃曾经向密歇根大学提出的公共交通系统建议，所以现在谷歌正在研发无人驾驶汽车。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	还有人工智能。除了统治视频游戏，谷歌的人工智能还能够观看YouTube视频，从经验中学习，还会画猫。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌还有一家名叫Calico的子公司，它正在研发老龄化和死亡相关问题的解决方法。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	谷歌的另外一家子公司名叫Google Fiber，它用比宽带快100倍的互联网连接堪萨斯城的家庭。Google Fiber可能会在不久后扩大到另外九座城市，包括菲尼克斯、夏洛特和波特兰等。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2013年，佩奇把安迪·鲁宾从Android主管位置挪开，问他是否愿意开发机器人。佩奇幻想着这样一个世界，机器人可以完成很多工作，包括照顾老人，把杂物和家庭生活用品装到无人驾驶汽车上，等等。2013年底，谷歌收购了一家名叫Boston Dynamics的公司，后者可以生产仿人类和仿动物机器人，其中一些可以投入军事使用。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	同样是在2013年，佩奇与前苹果高管托尼·法德尔（Tony Fadell）见面，这个家伙曾经设计过iPod播放器。佩奇说服他将自己新成立的公司Nest以32亿美元的价格出售给谷歌。Nest可以生产连接互联网的恒温器。就在这个月，谷歌又收购了一家公司Titan Aerospace，它可以生产无人机。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在谷歌，他们将最大胆的想法称为登月。这种想法很多，包括用热汽球为世界落后地区提供互联网服务，以及生产基于Android操作系统的手表。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇承认，大量想法的多样性令公司的一些投资者感到担忧。他们担心谷歌能否保持专注？或者谷歌会不会像过去的大量科技巨头一样，把战线拉得太长，追求过多的狂野梦想？确实，有谁需要一台能够在视频游戏里击败人类的计算机？\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇对这些担忧的回答分为两个方面。首先，他坚信谷歌完成登月式的项目比从事普通研究更容易。他的逻辑是：这方面竞争更少。另外，最优秀的人才愿意为谷歌工作，因为最优秀的人才希望从事最有野心的项目。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	其次，佩奇认为，所有这些项目都能够为世界带来更好的搜索。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这些年来，佩奇一直在给谷歌搜索总结一个宽泛的定义。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2012年，他对一名记者说，“完美的搜索引擎应当理解你的任何需求，它可以深入理解世界上的一切，并给你提供你所需的一切。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在2013年一次谷歌会议上发表主题演讲时，佩奇表示，长远来看，他希望谷歌的软件能够“理解你哪方面知识丰富，哪方面知识缺乏，以及如何构建世界，以便解决重要问题”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	所以，在佩奇看来，如果你回到家感觉有些冷，你的谷歌手表将会进行搜索，进而理解这种感觉。搜索结果就是打开基于谷歌软件的恒温器进行加热升温。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	与此类似，如果你的牛奶喝完了，家里基于谷歌软件的电冰箱就会通知同样基于谷歌软件的无人驾驶汽车，带着谷歌机器人到附近的商店买一些牛奶回来（当然，用的是谷歌钱包进行支付），这都是搜索的功能。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	理解谷歌登月项目的关键在于理解佩奇对“完美搜索”的观点，他认为只有与你互动的一切产品都相互兼容，才能实现完美搜索。例如，谷歌当前最先进的搜索产品Google Now能够做很多事情。如果Android用户要赶飞机，Google Now就会发出提醒，告诉用户该出发了。但这需要读取Android用户的收件箱、谷歌地图、谷歌航班搜索、谷歌日程，当然还有用户的智能手机。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	所以，尽管谷歌进入汽车、恒温器、机器人、电视等看似杂乱无章的领域，但背后有一个共同的目标。佩奇理想的世界，是我们触及的一切都能够通过人工智能计算机连接和理解，这种计算机还能总结我们的活动规律，预测我们的需求，甚至比我们自己还要早知道。佩奇曾多次说，总有一天，这种人工智能将与大脑直接相连，或许可以通过移植来实现。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	如果佩奇的表达更清楚，其中一些想法会令人们害怕。毕竟，他每年都会把数十亿美元投入到快速实现这些梦想的努力中。他曾多次表示，谷歌应当聘请100万名工程师。谷歌有这么多资金，这并非不可能。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	佩奇希望创造出普遍连接的人工智能，并理解和满足我们的需求。但是这样做的目的并不针对人类，对于世界而言，这是一个好消息。从内心来讲，佩奇是一个热情的乌托邦主义者，他坚信科技已经极大改善了人们的生活，并将继续改善。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在2013年谷歌大会的问答环节，佩奇对与会者说，未来人们回顾今天的生活，就像我们回顾老祖宗每天用大量的时间来打猎和农耕一样，感觉非常“疯狂”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2014年，佩奇的生活，与他12岁时所看的尼古拉·特斯拉传记中的晚年生活截然不同。他并没有生活在贫穷与漠视中，年仅41岁的佩奇，将在他的后半生投入数十亿美元和无数的时间，完成他最狂野的梦想。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“你所想象到的任何事都有可能是可行的，”佩奇在2012年对谷歌投资者说，“你只需要想象，然后为此努力。”（小贝 编译）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140427/007952.htm','2014-04-28 08:46:45',1,'/news/thumb/102558889.jpg','谷歌创始人兼CEO拉里·佩奇不为人知的故事','admin','小贝'),(22,'<div>\r\n	<img alt=\"Spotify称赶超苹果只是时间早晚的事\" src=\"http://img1.gtimg.com/tech/pics/hv1/58/62/1577/102560293.jpeg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯&nbsp;4月26日消息 在过去四个月中，流媒体音乐服务Spotify在英国又新增了逾100万个活跃用户。它正致力于赶超<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>iTunes，立志做欧洲最大的数字音乐服务。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	迅猛的发展态势\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“我们的一些合作伙伴称，在整个欧洲大陆，Spotify每个月产生的营收现已超过了iTunes。” Spotify欧洲唱片公司关系主管凯文-布朗（Kevin Brown）说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“在<a href=\"http://download.tech.qq.com/\" target=\"_blank\">下载</a>销量下跌的背景下，Spotify的发展速度算得上是非常快的，尤其是在英国。在整个欧洲，Spotify超过iTunes只是时间早晚的事。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	布朗补充说，在这100万个新增英国Spotify用户中，“大多数”用户均是付费订阅，而不仅仅是聆听含有广告的免费版音乐。Spotify与沃达丰和《周日时报》（Sunday Times）的合作有效地促进了这一增长。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“由于这些合作导致曝光率增加，一些新的用户成批成批地涌了过来。我们在英国的发展速度非常迅猛。”布朗说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在2013年3月，Spotify声称，它的全球用户用户数量已达到了2400万，其中包括600万个付费用户。从那以后，该公司就再也没有更新过它的统计数字。但是，据业内知情人士透露，该公司希望等到付费用户达到1000万的时候再公布新的统计数字；它可能会在接下来几个月中达到这个新的里程碑。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	英国是Spotify最大的市场之一。去年11月，该公司的英国分公司已公布了2012年的财报结果。它在英国创造了9260万英镑的营收，其中包括6480万英镑订阅服务营收和910万英镑广告营收。在2012年，Spotify在英国创造的营收占其全球营收的四分之一。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	而据行业监测机构BPI的统计数字，在2013年，该流媒体音乐服务在英国创造了1.03亿英镑营收。该机构表示，在2013年，英国音乐爱好者在线收听歌曲的频次达到了74亿人次，约为2012年的两倍。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在2013年，流媒体音乐仅占英国全部唱片音乐营收的10%，略超过10亿英镑。但是，布朗表示，Spotify公司预计这个比例在2014年有望达到33%左右。但是，尽管Spotify扬言要超过苹果iTunes，但是它面临的更大威胁似乎来自另一家科技巨头。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	努力消除艺人的误解\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“我认为iTunes并不是我们的主要竞争对手。我们的主要竞争对手是YouTube。”布朗说，他批评唱片公司宁可与iTunes签署独家唱片经营协议，也不愿将其唱片交给Spotify。“很多唱片公司仍然把我们与iTunes归为一类，然后，他们把唱片交给了YouTube。这让我很抓狂。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Spotify即将超越iTunes的势头，让很多音乐人和词曲作者感到忧心忡忡。他们担心流媒体服务的崛起会威胁到他们的音乐事业。用户从iTunes每下载一首歌须支付99美分，苹果会将其中的69美分给版权所有者。而Spotify给版权所有者支付的版权费平均为0.35到0.5美分。在这两种情况下，版权所有者再从版权费中提取一定比例的费用给音乐创作人。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Atoms for Peace乐队的主唱汤姆-约克（Thom Yorke）曾有一句很出名的话，他形容Spotify是“一个垂死之人放出来的最后一个响屁。”他还建议“作为音乐人，我们应该抵制Spotify这类的东西。”音乐人大卫-拜恩（David Byrne）也在《卫报》上撰文称，“在未来，如果艺人只能依靠这些流媒体服务来获得收入，那么他们不出一年就会甩手不干了。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Spotify则声称，流媒体音乐服务向音乐人支付的是长期费用，即用户每播放一次歌曲，艺人就会获得一次版权费。这不同于iTunes下载模式中的一次性支付版权费的做法。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在2013年12月，Spotify建立了一个专门针对艺人的网站，解释了它向艺人支付版权费的计算方法，并列出了当前每个月给一系列唱片支付版权费的情况——从独立小唱片的3300美元到全球热门唱片的42.5万美元不等。它还预计了如果该公司达到4000万个付费用户艺人们将会获得多少收入。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	该公司还试图说服艺人们不要将其唱片的独家经营权给苹果，而将Spotify和其他流媒体音乐服务拒之门外。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	像碧昂斯等艺人从授权iTunes独家经营其唱片中获得了不菲的收入。但是，Spotify现在则拿加拿大新晋辣妹Kiesza说事。她的单曲《Hideaway》在该流媒体服务上放了三周时间，才开始销售。它很快就跃居iTunes排行榜和英国官方单曲排行榜。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	现在，Spotify和iTunes之间的竞争明显已成为了流媒体音乐服务和iTunes之间的较量。但是，苹果已在少数几个国家推出了其流媒体广播服务iTunes Radio，而且还准备今年晚些时候推出完全类似Spotify的“点播式”流媒体服务。在未来几年内，这两家公司很可能会展开更为直接的竞争。（乐学）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140427/008497.htm','2014-04-28 08:48:47',1,'/news/thumb/102560293.jpeg','Spotify称赶超苹果只是时间早晚的事','admin','乐学'),(23,'<div>\r\n	<img alt=\"逆潮流而动！耐克为何会放弃研发可穿戴设备\" src=\"http://img1.gtimg.com/tech/pics/hv1/249/89/1577/102567369.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	耐克可能放弃研发可穿戴设备(腾讯科技配图)\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯 谭思 4月28日消息\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在新兴的可穿戴式健身追踪器市场开发出一种领先产品，这对耐克来说是一件非常有意义的事情。在这方面，耐克的Nike + FuelBand腕带已经作了尝试。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是，CNET最近的一份报告称，耐克公司已经决定结束这一切。据报道，耐克解雇了FuelBand团队大部分成员，并计划停止生产可穿戴硬件产品，包括计划在秋季推出的一个Nike + FuelBand精简版本。耐克公司已经向Re/Code网证实了其数字运动部门的少量裁员。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	耐克公司的一个发言人拒绝透露耐克是否将在FuelBand SE之后继续推出新产品。“我们将继续支持硬件的当前迭代，”该发言人在电话中说，并补充说耐克将在未来几周内推出新颜色的FuelBandSE。“这就是我们正在做的事情。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当被问及在FuelBand SE后是否推出其他设备时，他回答说：“关于这一点我无可奉告。”由于没有明确承诺未来还会推出新的可穿戴式产品，耐克似乎可能确实将放弃它。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这听起来让人感到沮丧，尽管可穿戴产品在过去几年中一直不温不火。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	健身追踪器开发的困难包括：让顾客在使用产品三个月后还没有将它封存在抽屉里，让设备看起来够时尚得令人垂涎。作为一个具有良好的消费者行为洞察力（许多硅谷的科技巨头缺乏这一点）的公司，耐克似乎在可穿戴领域大有可为。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	然而，因为耐克每年销售1.2亿双鞋子，2013年营收250亿美元，该公司可能已经发现，FuelBand是一种代价高昂贵的尝试心。还有其他三个因素可能动摇了耐克公司管理层的意志：\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	1 ）一场即将到来的战斗：作为一种挑战性业务，“可穿戴”领域吸引了其他强劲对手的参与，这是令耐克感到恐惧的事情。市场普遍预计<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>公司今年晚些时候将推出智能手表iWatch ，其核心就是健康跟踪。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	苹果CEO蒂姆·库克也是耐克公司的董事会成员。你可以猜测，耐克与苹果公司保持着密切的联系。根据CNET报道，耐克公司已经重新定向，转向软件领域。而且，相比耐克自己的硬件产品，iWatch很可能会是一个更大，更好的平台。 “与苹果公司在硬件上竞争是一个很不明智的事情。” Canalys Research公司分析师 Daniel Matte说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	精品投资银行Rutberg ＆CO的Rajeev Chand对此表示同意。“事情变得非常有竞争性……大家都在观望苹果公司将要做的事情。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2) 一个高度复杂的业务：在技术、供应链和营销方面，鞋和健身追踪器是完全不同的业务。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	耐克深知如何将鞋子的设计与市场营销融合起来，但可穿戴产品的开发包含许多与此截然不同的因素：软件堆栈，用户界面设计，特别是数据管理。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Fitbit公司聪明地发现了将自己的跟踪器收集的数据转变成分析仪表的方法。这意味着，一个大公司批量购买Fitbit健康跟踪器后，其人力资源部门就可以整体监控员工的健康状况和活动。这是Fitbit业务中增长最快的部分之一，但没有迹象表明耐克公司已经在将自己的腕带销售给企业方面取得了类似的成功。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	一个使用Fitbit来处理健身数据的数据管理公司表示，它已经拒绝了多种健康跟踪设备，原因包括它们糟糕的数据管理。RE/ Code在报道中援引了耐克公司内部人士的话，耐克公司“得到很多数据，只是不知道处理。他们无法开拓市场。 “\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	3 ）人才之战：如果耐克公司热衷于提高其健康跟踪器的性能，它需要找到硬件、软件、云计算和大数据方面的有才华的工程师。“这些人都很难找到，也很难留住在俄勒冈州。”风险投资顾问Chander Chawla说。毫不奇怪，在过去的几年中，Intel和苹果公司已经挖走了一些耐克的一些FuelBand顶级设计师。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	总之，可穿戴市场与iPod之前的MP3市场没有什么不同，像耐克这样英勇的先驱可能只是缺乏后劲。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140428/002412.htm','2014-04-28 08:50:29',1,'/news/thumb/102567369.jpg','逆潮流而动！耐克为何会放弃研发可穿戴设备','admin','谭思'),(24,'<div>\r\n	<img alt=\"微软证实IE曝严重安全漏洞 所有版本受影响\" src=\"http://img1.gtimg.com/tech/pics/hv1/54/115/1577/102573804.jpg\" /> \r\n</div>\r\n<p>\r\n	腾讯科技讯 谭燃4月28日消息\r\n</p>\r\n<p>\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\">微软</a>上周六晚证实，在所有版本的IE浏览器中发现一处新的零日漏洞，允许黑客通过执行远程代码获得系统控制权，从而发动有针对性的攻击。\r\n</p>\r\n<p>\r\n	互联网安全公司Fire Eye最早于上周五发现了该漏洞，微软周六对此给予证实，称该漏洞影响IE 6至IE 11的所有版本IE浏览器。调研公司NetMarketShare数据显示，上述受影响到IE浏览器在全球浏览器市场的份额高达55%。\r\n</p>\r\n<p>\r\n	微软还表示，公司目前正在紧急开发该漏洞的补丁程序。但由于微软本月初已经宣布，彻底技术对Windows XP的技术支持，这意味着届时Windows XP用户将无法获得该安全更新。Fire Eye预计，全球约15%至25%的PC仍运行Windows XP。\r\n</p>\r\n<p>\r\n	Fire Eye还称，该漏洞已经被黑客利用，并对一些美国公司发动了攻击。但Fire Eye并未透露黑客身份，也没有公布哪些企业遭受攻击，称调查仍在继续之中。\r\n</p>\r\n<p>\r\n	FireEye在一封电子邮件中称：“黑客攻击目标似乎针对美国公司，目前主要是国防和金融机构，具体动机还不得而知。”FireEye并未透露其他更多细节内容，但表示更换浏览器是免遭攻击的方法之一。\r\n</p>\r\n<p>\r\n	微软表示，该漏洞允许黑客完全控制受影响的系统，然后可删除数据、安装恶意软件，或创建给予黑客所有权限的系统账户。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		互联网安全公司首席技术官维伍·拉夫(Aviv Raff)称：“微软应该迅速行动，这就好比是一个雪球，越滚越大。”拉夫还特别提到了对Windows XP用户的担忧，而微软建议，Windows XP用户应升级到Windows 7或Windows 8。\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140428/005964.htm','2014-04-28 08:51:46',1,'/news/thumb/102573804.jpg','微软证实IE曝严重安全漏洞 所有版本受影响','admin','谭燃'),(25,'<p style=\"text-align:center;text-indent:2em;\">\r\n	<img src=\"/upload/image/20140430/20140430061113_880.jpg\" alt=\"\" width=\"700\" height=\"438\" title=\"\" align=\"\" /><span style=\"font-size:14px;\"></span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据&nbsp;</span><a target=\"_blank\" href=\"https://www.theinformation.com/Google-Takes-Aim-iPhone-Silver-Program\"><span style=\"font-size:14px;\">The Information</span></a><span style=\"font-size:14px;\">&nbsp;获得的消息称，Google 正在花重金打造一条全新的产品线，这个名为 Android Silver 的系列将会取代目前的 Nexus 系列。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从描述中可知，Android Silver 设备将是由 Google 严格控制软硬件体验的高端产品。Google 将花高达十亿美元重金来扶持该计划。这笔资金将被用在市场推广，运营商补贴以及对硬件产商的财政与技术支持上，以刺激各方面对这个新产品系列的兴趣。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">投入如此巨额资金之后，Google 希望在用户体验方面获得更大的控制权，具体来说，Google、运营商和硬件产商三方的合作将会让 Android Silver 产品提供更为标准与一致的安卓体验，这包括了更加迅速和可靠的系统升级、受到严格控制的预装第三方软件（或者给予用户卸载这些应用的选择），甚至是特别设计的店内零售环境。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在其它方面，Google 也会投入一定资源来帮助生产伙伴打造更好的硬件配置，比如防水等提供附加值的功能。总之，从软件到硬件再到语音控制等交互手段，Android Silver 将是更加符合 Google 指定标准的高端产品，这有点像苹果的一贯做法。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与 Google Play Editions 为 “忠于原汁原味安卓体验的发烧友” 提供另一种选择的目的不同，Silver 是一个瞄准整体市场的全新系列，只不过定位高端的 Silver 在取代中端产品 Nexus 系列之后，该空间的空白该如何弥补仍是未知数。多家媒体均认为 Silve 用意一部分在于削弱三星在安卓设备市场越来越趋近于一家独大的地位。作为最大的安卓 OEM，三星正在试图降低其对安卓的依赖程度，电子产品战略团队高级负责人 Yoon Han-Kil&nbsp;</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211241.html\"><span style=\"font-size:14px;\">近日表示</span></a><span style=\"font-size:14px;\">韩国人自己开发的 Tizen 系统将于今年二季度发布，预计年出货量会达到其手机出货总量的 15% 左右，而在今年的 MWC 上，三星新发布的两款智能手表产品也是搭载了 Tizen 系统。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前比较确定会参与此计划的 OEM 包括 LG 与 摩托罗拉。该计划最快可能与明年率先于美国、德国及日本等发达市场亮相。</span>\r\n</p>','36氪','http://www.36kr.com/p/211612.html','2014-04-30 06:11:55',1,'/news/thumb/8a29c7c61ac80b2eb935ec8b6732db93.jpg','传 Android Silver 系列将取代 Nexus，Google 欲斥重金打造全新高端产品线','admin','Xingyu Chen'),(26,'<p style=\"text-indent:2em;\">\r\n	<span style=\"line-height:1.5;font-size:14px;\">有人说，创业是条不归路，回看时荆棘满布。每段创业历程其实都可以算作一本书，书里有经验教训，有梦想与现实的博弈，也记录了创始人和团队成员一路走过风雨与阳光相伴的日子，在心态和思维方式上的改变和成熟。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今天，在36氪和微软创投联合举办的 WISE Talk 活动上，我们请到了 4 位来自不同垂直领域的创业者：赵勇，“格灵深瞳”创始人，专注于智能计算机视觉；</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211420.html\"><span style=\"font-size:14px;\">李天放</span></a><span style=\"font-size:14px;\">，“</span><a target=\"_blank\" href=\"http://www.36kr.com/p/210786.html\"><span style=\"font-size:14px;\">课程格子</span></a><span style=\"font-size:14px;\">”创始人，从课程表 App 切入，想做大学生入口；李冠志，“速来网”创始人，解决蓝领工人、农民工的招聘就业问题；许泽玮，</span><a target=\"_blank\" href=\"http://www.36kr.com/p/207157.html\"><span style=\"font-size:14px;\">91金融</span></a><span style=\"font-size:14px;\">创始人，做在线金融导购，也联合金融机构做产品。同时，我们还请到了真格基金合伙人、新东方联合创始人</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211579.html\"><span style=\"font-size:14px;\">王强</span></a><span style=\"font-size:14px;\">。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与他们并肩而坐，让我们一起来听听 4 位创业者的故事：他们在创业路上都曾遇到过哪些困难？他们又是如何解决的？创业过程中，被每日琐碎的杂事牵扯精力，他们对于思考之深度又有怎样的理解？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">也许，正如过来人王强所说，由年轻人引领的崭新的创业时代和精神，可以用 19 世纪美国著名小说家</span><a target=\"_blank\" href=\"http://baike.baidu.com/link?url=UAu064pj7pTXYAFhSoyHGWBec9PMkTV_k5ElInZHZ7y3A6lgqrNB2B912JFaT2530PTMlzLyRpqaod8OtgYu2a\"><span style=\"font-size:14px;\">Henry James</span></a><span style=\"font-size:14px;\">《中年》（The Middle Years）中的一段话来完美诠释，那就是：“我们在黑暗中摸索劳作，我们竭尽所能，我们倾己所有。我们的怀疑等同于我们的激情，我们的激情成就了我们肩负的任务。”（We work in the dark - we do what we can - we give what we have. Our doubt is our passion, and our passion is our task.）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【创业路上遇到的困难：招人，不变之痛点】</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：大家平时谈论趋势、机会比较多，谈论创业过程中遇到的困惑却比较少，可否请几位从自己所在的行业出发，聊一聊你们所面对的困难和解决之法？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">赵勇：我创业到现在遇到的困难其实挺少的。如果说有的话，那其实有两方面：第一个困难是，自我判断与现实经验之间总会存在偏差。我过去是做研究的，对世界真实面的接触比较少，有很多幻想。但刚创业那会儿，很多人会告诉我很多经验，他们会告诉我，产品根本不重要，关系更重要，好多事情碰到政府、央企，是怎么行不通的。但今天我回过头去看，我可以很确定地跟大家说，这些经验都是很教条的东西，如果你有一个很好的产品，这些东西都不存在。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我举个例子吧，有一个最大的渠道商的一把手带领这个公司做到了政府渠道的第一名，他每两年和公司签一个新的合同，每签一个合同就给他 1000 万奖金。他看了我们做的东西，崩溃了，说不想干现在的工作了，他于是立刻辞职，辞职时赔了 600 万，自己又去卖两套房子，成立了一家新的公司，唯一的要求是希望我们把我们的产品在这个领域的独家代理权给他。他觉得和我们一起做这件事，是在推动工业往前进。他做了一个选择，成了一个创业者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外一个困难，是人才不好招。在硅谷参加一个创业公司是很酷的事情，然而，虽然北京已经是中国创业氛围最好的城市，我们吸引人才时，他们还是有很多顾虑，他们觉得在 BAT 会非常好。我们只好去美国说服美国的优秀学生加入我们，比我们说服北大清华的学生容易一点。现在，我们团队里面来自斯坦福、麻省理工的人，要超过我们在本土招的人。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/65c374147e0059a79933e55fb0e83fc6.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">李天放：关于招人的问题，我想的最多的一件事情，是要平衡自信和低调之间的关系。首先，你要自信，你得给大家一种希望，让人明白并相信你这个东西是有前途的；此外，你还需要低调，你需要真实地和大家说明公司的情况，说明我们真的挺需要你的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其实我们这个度把握得非常不好。我不能说我过于低调，但我会把所有的问题说出来，外界可能对我们评价还不错，但我脑子里永远都是“哦，还有 25 个 bug 没有修复”，我会把这些事情告诉大家，会把我们不擅长的东西和盘托出。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">解决方法嘛，有时候你需要顺其自然，太急着去找能弥补自己缺点的人，价值观又会不一样。我原来在美国那家公司，他们真的把公司的文化当做一种信仰，像传教士一样代代相传，公司诞生的故事，从第一个员工到最后一个员工都能背下来。公司文化是一种信仰，你需要找到有同样信仰的人，又要找到可以互相弥补的人。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/ea58b937098c7b5c57eb15c6e5e3330c.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">李冠志：招人的难题我们同样也有，现在大部分创业者眼睛盯着的都是中端和高端用户，但是我们的目标客户是蓝领阶层、农民工群体，所以我们面临的最大问题是：目标客户究竟怎么才能找到？你怎么吸引到他们？怎么让他们知道你的产品？这非常难解决。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们没有什么高招，做法很苦逼，那就是扫街。这些中低端人士，他们白天要工作，你只能晚上去找。大家知道服务员什么时候有空么？告诉大家，晚上 10 点之后去找，效果最好。这其实就造成了我们下一个灾难性难点：我们的人非常难招。曾经有个兄弟到我们公司，觉得很高大上，老板是博士，进来一天以后就离职了，原因就是晚上 10 点拉着他去扫街，冬天零下 5 度，冻两个小时，就等着服务员下班，跟他们聊我们的产品，这我能受的了，可是他们受不了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我是一个创业者，做这件事是我全部的梦想。但是我也知道，你不可能把这种观点灌输给公司里的所有人，我的方法是，你要让公司里的人理解你所认同的东西和看准的方向，让他们知道你是在真真正正地解决一个问题。就我们这个团队来说，当我们所有人都明白农民工招聘就业这个需求是非常大的，这是一个蓝海市场，我们是在解决供需双方的信息不对称问题，这个时候，我们就有潜力成为一家很伟大的公司。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/8c6701985504fd6f0d5ab706561aa255.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">许泽玮：金融是个非常现实的行业，我身处其中，那在我的世界里，用户数据不是最重要的，收益高低才是。没办法，这是现实。但是我们跟每位 VC 都没法聊这个事情，他们一方面总会指望我们颠覆些什么，但另一方面，我成立的第一个月就需要有收入，第一年就要算利润有多少，这是逃不掉的。投资者总希望你给世界带来什么改变，我一直觉得不一定是这样的，你把你的事情做好了就是改变这个世界，把公司经营好就是最重要的。我们开董事会简单得不得了，就说一下你这次又翻了多少倍，然后，会议就结束了（台下笑。。。）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第二个事情说招人，我们也很难，而且更难。我们所在的不是一个技术创新型产业，只是商业模式有所创新。我们这个行业当然也希望招到技术大牛，招到有很多资源的人（资源对做我们这一行相当重要），但是你招人时，去大谈特谈我们是个“技术创新型企业”来忽悠技术牛人？去跟人家说我们这边“拼的就是资源”？如何平衡这两方面的需求，把它结合到我们的团队里，这个需要好好琢磨。另外，我没法从金融机构里挖人，因为付不起他们那么高的薪酬。最后，我选人就只剩一条标准：我看着顺眼，价值观一致。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/669f8418ff1a1818e51387e79c73bfc7.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【关于“深度思考”：思考深度是创业团队的核心竞争力】</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：王强老师刚才演讲时说到了“相对速度”和“绝对速度”，前者涉及你拥有的资源、你产品的功能等，这些复制起来都比较容易，后者则是指你这个团队，或者说团队创始人思考的深度，这是创业团队的核心竞争力，决定了公司的进退、存亡。创业者应该垂直向下想得非常深，才有可能把一个公司做成伟大的公司。我们作为创业者，每天会接触各种各样的信息，很多人已经没有心思真正去往特别深的地方去想了，这会不会成为大家在创业路上的一个障碍？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王强：无论有意识还是无意识，创始人和团队成员不思考，企业还能优秀，打死我也不信。当年我们办新东方，没有天天在想新东方能不能上市，我们天天想的是，把英语切成0-99份，每一份可以做到什么样？我们切成99份，竞争对手只切一半的话，想的力度肯定没我们好。如果我们天天在99份上不断思考深度，就有可能在任何一个细分领域引领当年培训行业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">新东方上市的时候是一家 50 亿美元的公司，融了 1.2 亿美元，至少能玩 4 年。不过老俞可能一个人没时间往深度方面想了，现在新东方正在被各个竞争对手强力追赶，这是老俞要去思考的问题——好吧，我在隔空对他喊话。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/5559cbbf2ac9d8b6dc8c44b6f03b8fcf.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">许泽玮：我想的跟生意有时候没什么关系，我希望中国能更强大。我自己没有任何海外的经验，刚才我也不知道大家口中谈论的普林斯顿意味着什么，我听过的美国大学只有那么几所，我最远到过香港，也不会说英语。我想得挺简单的，你做一个事情，要能给这个国家带来点什么，让这个国家更强大，我们团队和大家在一起聊，到最后聊的都是这一件事，你会为了这个国家的成长而高兴。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">李冠志：刚才说到，公司的“快”与“慢”都是相对的。我就从历史发展的角度，聊聊我们在做的蓝领阶层、农民工群体招聘就业这件事儿。我们做的这个行业，在中国可以说已经存在了不是几十年，而是几百年。为什么很早就有“</span><a target=\"_blank\" href=\"http://baike.baidu.com/link?url=j6TWiSX9BQHvY5nqssuxdBV-eBv_QESNxM3gvG7OWcNLVaeQ1RKBDe3PvogNH0pN3Fc6TMxijlHACY7bWmROZq\"><span style=\"font-size:14px;\">人牙子</span></a><span style=\"font-size:14px;\">”，把人卖到不同地方赚取佣金？这个行业从远古时代就已经有了，一直到今天，社会上还存在着劳务外包、劳务派遣，没有理由否认这是一个朝阳行业。既然这个行业存在已久，那现在的问题是：我们怎样能够——用当下非常流行的一句话来说——怎样能够用互联网的方法改造它？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我觉得，由于我们之前对这个行业了解得都不够深，所以当我们以“互联网思维”切入这个行业时，我们需要慢下来，只有慢下来才能把所有概念理清楚，才能把所有问题想清楚，为以后高速发展做积累。如果你在启动之前有很好的积累，你已经比那些跑得很快的企业跑在前面了。快与慢永远是相对的。我坚信，把所有东西积累好，你才可以快速发展。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">李天放：我们做课程格子的时候，一开始没有想太多，如果想得太多的话，我们会瞻前顾后，觉得这个模式门槛太低，兴许就不会做了，这是我们幸运的一点。当时，我们团队在丽江团建，想法一出来，两周内就写了，市场反响是不错的，用户增长状况也挺好，我们当时完全没有去想什么“大学生市场”，什么“所谓的蓝海”、“所谓的空白”、“所谓的切入点”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是后期，也因为想得不够多，成了我们最大的错误之一。不管我们多快，你如果不往前想，你在做的永远是应付市场上发生的事情。假如你把事情多想一想，你可以不用应付它，你可以提前预测它，凭借高效的执行力处理它，这就赶在了竞争对手的前面。我发现，同夜以继日的加班相比，把事情想清楚更累，累的是心，把事情想清楚是一件很孤独、很费脑子的事儿，也是我们做的还不够好的地方，我们也是在创业过程中才意识到它的重要性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">赵勇：1975 年到 1976 年有 4 个千亿美元的公司产生，微软、苹果、甲骨文、思科。大家可能会问，为什么？我自己的观察是这样，英特尔在 1975 年把成品率从 30% 提高到 99%，让计算机变的更有可能。这个世界总会出现一些关键点，当它出现时，行业就会快速发展。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在过去一年里，我深刻感觉到有3件事情值得好好想一想。第一个是“道”，就是说你这个业务做的好不好，你的团队好不好，产品好不好；第二个是“术”，这是指你做事情采用的方式和手段；第三个是“势”，即你做的事情在未来是否有巨大潜力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“势”比“道”更深一个层次。如果你选择正确的方向，你在很早之前就比别人先意识到，你做的这个事情在以后是有前景的，做一件有创新价值的东西本身就有幸福感，就算失败了也会感觉人生特别有意思。我稍微提一下我以前在 Google 做 Google Glass 的时候，当时周围有很多怀疑之声，但我们相信 Google Glass 可以让用户在使用设备的时候把眼睛和手解放出来，我们觉得这个事充满了想象空间，这是做正确事的时候的一种幸福感。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王强：赵勇说的“道”、“术”、“势”是合三为一的东西。“势”是实现“道”的场域，“术”是实现“道”的工具/手段。如果团队具备这三样东西，那“猪”都准备好了，“风”也等来了，就可以飞了啊。任何一个企业的发展我看都符合这套逻辑。</span>\r\n</p>','36氪','http://www.36kr.com/p/211606.html','2014-04-30 06:15:20',1,'/news/thumb/8b24785ad624d82e93501274855b3f8f.jpg','【WISE Talk-圆桌】创业者在面对什么：招人是不变的痛点，思考深度是创业团队的核心竞争力','admin','coldsummer17'),(27,'<p style=\"text-align:center;text-indent:2em;\">\r\n	<img src=\"/upload/image/20140430/20140430061739_385.png\" alt=\"\" width=\"645\" height=\"337\" title=\"\" align=\"\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管智能硬件依然是个尚处于早期的市场，不断向新领域扩张的 Amazon 明显不想错过这个机会。近日，Amazon 上线了一个专门展示智能手表、各类手环以及同健康医疗相关设备的页面</span><a target=\"_blank\" href=\"http://www.amazon.com/b?ie=UTF8&amp;node=9013937011\"><span style=\"font-size:14px;\">“Wearable Technology”</span></a><span style=\"font-size:14px;\">&nbsp;。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Amazon 显然也不只是想做一个专门兜售硬件产品的页面，在 Wearable Technology 上，用户不仅可以查看各类可穿戴产品，同时也可阅读 Amazon 的编辑推荐栏目、查看购买指南信息，以及观看硬件设备的宣传视频。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在设备的选择方面，Amazon 也没有将目光局限在三星、Sony、Fitbit 等时下热门的硬件产品上，它还罗列了不少并不知名的小厂商的产品，比如 Narrative 和 Bionym 等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随着可穿戴设备越来越热，苹果预计今年会推出的 iWatch 也势必带动整个生态的发展速度，Amazon 类似垂直导购网站的 “Wearable Technology”页面，其热度未来也会持续升温。</span>\r\n</p>','36氪','http://www.36kr.com/p/211613.html','2014-04-30 06:18:30',1,'/news/thumb/4862e1d224e0e3af998ad8f2633e4feb.png','Amazon 上线可穿戴设备页面，功能不仅仅是售卖硬件产品','admin','果子'),(28,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今天下午36氪和微软创投加速器联合举办的</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211273.html\"><span style=\"font-size:14px;\">WISE Talk世界在发生什么</span></a><span style=\"font-size:14px;\">活动中，亮点多多，微软创投全球合伙人 Rahul Sood 和真格基金的王强老师，还有众多投资人、创业者的精彩分享以外，最激动人心，给我们惊喜的就是我们的“一分钟 demo”环节。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“一分钟 demo”就是在一分钟的时间，向投资人介绍自己的项目，从 2012 年的36氪开放日开始，我们设立了这个环节，为了给来到现场的每一位优秀创业者展示自己的机会，这次，我们也搬到了 WISE Talk 的舞台上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本次现场有 30 多个项目报名 demo，36氪从中选出了 9 个最优秀的初创项目，其中有五个项目获得了微软创投加速器的一对一约谈卡，有机会入驻到微软创投加速器。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其中一个创业项目获得了真格基金的王强老师关注，在投资人点评环节当场拍板说，“这个项目真格基金投了”。在 WISE Talk 结束后的 ONE NET 创始人酒会上，真格基金总经理方爱之继续与这位创始人聊项目细节，一个小时内，双方签订了 TermSheet，金额在百万级美元左右。并且这次签约真格基金是使用了新版 Term Sheet，现在还没有公布细节，但是这个 TermSheet 只有一页纸，对创业者来说非常贴心简洁。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其实之前我们的36氪开放日就一直在做针对早期初创项目的活动，根据我们</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211505.html\"><span style=\"font-size:14px;\">近期的回访统计</span></a><span style=\"font-size:14px;\">，参加开放日时大部分项目未进行融资或者只完成天使轮；参加完开放日后，现今完成 A 轮以上的项目占据了 65%，其中完成 B 轮的项目也接近 10%，少量项目甚至完成了 C 轮融资，有很多项目都是在开放日现场获得融资的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">欢迎大家关注我们的活动，可以关注我们的微信号 wow36kr，我们的活动都会通过这里通知大家。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/813e76044b8619327066b06415535501.jpg\" alt=\"\" style=\"height:auto;\" width=\"736\" height=\"491\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本次一分钟 demo 的项目分别是：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1、&nbsp;</span><a target=\"_blank\" href=\"http://www.36kr.com/p/210699.html\"><span style=\"font-size:14px;\">相亲管家</span></a><span style=\"font-size:14px;\">——基于地理位置的相亲应用</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2、 朗昇通信——加一块屏幕把机械手表变为智能手表</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3、&nbsp;</span><a target=\"_blank\" href=\"http://www.36kr.com/p/210835.html\"><span style=\"font-size:14px;\">客赞</span></a><span style=\"font-size:14px;\">——立等可取式的三分钟让用户找到当地向导</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4、 购优游——以品牌为主的出境旅游购物向导</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5、 有 WiFi——通过为长途车站提供免费 WiFi 做应用分发和广告投放</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6、 家家易——软硬件结合的智能家居服务</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">7、 patplan——宠物生活用品的按月订购服务</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">8、 哈图——用拍照 + 恶搞贴图生成的图片做成拼图游戏的图片社交产品</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">9、 Project Flow——新一代操作系统雏形</span>\r\n</p>','36氪','http://www.36kr.com/p/211605.html','2014-04-30 06:20:17',1,'/news/thumb/4278b8765efe4090805032c57dc61ee2.jpg','36氪WISE Talk一分钟demo项目当场获得真格基金百万级美元投资','admin','插着翅膀的女'),(29,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今天，三星发布了今年第一季度财报，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">也在上周发布了今年的首份成绩单。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为全球消费电子的两大霸主，三星和苹果在智能手机、平板电脑等领域进行着激烈的竞争。因此，双方每个季度的财报，都格外引人关注。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技摘取其中的关键数据进行对比、解读。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">营收：三星整体规模领先 第四季度苹果火力强大</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本季度，三星营收53.7万亿韩元（约520.7亿美元，）同比增长1.5%；苹果营收456.46亿美元，同比增长4.7%，</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从数字上看，三星、苹果营收增速都不约而同地开始放缓，同比增幅均在5%以下，告别了过去高增长时代。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" src=\"http://img1.gtimg.com/tech/pics/hv1/9/8/1579/102676524.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星近七个季度营收走势图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以三星为例，从上图可以清晰地看到，三星近七个季度的营收同比增长有一个明显的下滑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">路透社记者在今年世界移动通信大会（MWC）结束后撰文称：“手机行业目前正瞄准100美元以下低端智能机的增长需求，因高端智能机市场已经饱和，入门级智能手机现在代表了该行业实现增长的最大希望。” 前</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NOK.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">诺基亚</span></a><span style=\"font-size:14px;\">CEO埃洛普也表示，100美元左右的智能机是个巨大的机会，这一市场现在的增速是其它市场的五倍。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">正是由于高端智能手机市场开始饱和，使得三星、苹果开始放慢规模扩张的脚步。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">再来看一下三星、苹果两家公司的营收对比：</span>\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" src=\"http://img1.gtimg.com/tech/pics/hv1/130/9/1579/102676900.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星苹果近七个季度营收对比图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从图中可以看出几个特点：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">•绝大多数情况下，三星营收领先苹果</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">•三星营收较为平缓，而苹果明显受季度波动影响较大</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">•第四季度，受国外传统感恩节、圣诞节购物季影响，苹果营收高于三星</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星和苹果在产品结构方面有很大差别。三星是一家垂直整合的全电子产品厂商，除了在智能手机、平板电脑等领域与苹果直接竞争外，还拥有家电等传统电子产品以及芯片、显示屏等元器件多条产品线，因此整体规模要大于苹果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，从三星最新财报可以看出，三星整体营业利润为8.5万亿韩元，移动设备营业利润为6.43万亿韩元，这意味着，除去移动设备，其他业务仍占三星整体业务的25%左右，而这些产品与普通消费者关系不大，受季节影响较小。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" width=\"422\" height=\"400\" src=\"http://img1.gtimg.com/tech/pics/hv1/133/16/1579/102678688.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2014年第一季度苹果营收构成（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">相比之下，苹果则以新兴消费电子产品为主，从上图可以看出，其中iPhone、iPad占据苹果74%的份额，而这些产品往往在西方传统的感恩节、圣诞节购物季成为热销产品，所苹果在2012年和2013年的第四季度，营收达到当年峰值，并赶超三星，而从这点或许可以看出：假期到来之际，在消费电子产品领域，消费者更青睐苹果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">净利润：三星盈利能力再被苹果甩开</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本季度：三星净利润73亿美元，同比增长5.9%，苹果净利润102.23亿美元，同比增长7.1%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同营收一样，受困于高端智能手机市场的饱和，三星、苹果整体净利润增长开始放缓。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">接着看两家公司的对比：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a target=\"_blank\" href=\"http://tech.qq.com/a/20130108/000109.htm\"><span style=\"font-size:14px;\">去年1月，腾讯科技曾预测过</span></a><span style=\"font-size:14px;\">，从苹果、三星这两年的走势图来看，三星与苹果的利润规模越来越接近，如果三星能继续保持增长势头，很有可能在今年（2013年）秋季前，实现利润赶超苹果。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" src=\"http://img1.gtimg.com/tech/pics/hv1/141/10/1579/102677166.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星苹果近七个季度净利润走势图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">后来的发展，印证了腾讯科技的猜想，去年第三季度，三星净利润赶超苹果，而这也是在移动时代，三星第一次实现对苹果营收、净利润的双重赶超。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但从图中也可以看出，在接下来的第四季度，随着苹果刚刚发布的iPhone 5s和iPhone 5c上市，加之三星在这期间推出的Galaxy Note 3不如预期，使得三星和苹果的净利润再一次被拉大。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" src=\"http://img1.gtimg.com/tech/pics/hv1/252/12/1579/102677787.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星、苹果近七个季度净利润增长图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">看上面这个图或许更为直观：近七个季度，三星净利润的增长速度，总体上是呈下滑趋势，但在前半阶段，苹果的下滑趋势更为明显，这给三星赶超苹果创造了良好的条件。但在去年第三季度之后，苹果净利润增速开始回暖，而三星继续下滑，这也就意味着，两家公司的盈利能力再次开始拉大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">智能手机</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">由于三星财报中并未给出智能手机具体的销量、营收，因此，我们选取第三方机构Strategy Analytics给出的数据进行比较</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本季度：全球智能手机出货量达到2.85亿部，同比增长33%，其中三星出货量为8900万部，市场份额为31%，苹果出货量为4370万，市场份额为15%。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" src=\"http://img1.gtimg.com/tech/pics/hv1/112/13/1579/102677902.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星、苹果近七个季度全球智能手机份额趋势图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从双方近七个季度的智能手机份额趋势图可以看出，双方联手垄断了全球智能手机市场近50%的份额，而且格局相当稳定，未出现大的波动，这也就意味着，很难再有手机厂商挑战三星、苹果的地位。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但再从这两家公司来看，双方份额差距也较为明显，由于苹果手机产品线单一的缘故，市场份额始终未能超越三星。但有一点值得注意：每次第四季度，苹果份额上升，三星份额下降，这也印证了上面营收的结论：在购物季，消费者似乎更青睐苹果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">平板电脑</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同样，由于三星财报中并未给出平板电脑具体的销量、营收，因此，我们选取第三方机构IDC给出的数据进行比较。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"两巨头财报PK：三星盈利能力再次被苹果甩开\" src=\"http://img1.gtimg.com/tech/pics/hv1/196/13/1579/102677986.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星、苹果近七个季度全球平板电脑份额趋势图（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从双方近六个季度的平板电脑份额趋势图可以看出，与智能手机一样双方联手垄断了全球平板电脑市场超过50%的份额，双寡头格局已经形成。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有一点不同，在平板电脑领域，苹果扮演者大哥的角色，始终压制着三星。但随着三星开始加入这一市场，推出多种产品，导致苹果下滑的趋势十分明显，而三星则在稳步增长，或许有一天，三星在这一领域，将完成对苹果的逆袭。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140429/022471.htm','2014-04-30 06:24:14',1,'/news/thumb/102678093.jpg','两巨头财报PK：三星盈利能力再次被苹果甩开','admin','honestsun'),(30,'<div style=\"text-align:center;\">\r\n	<img alt=\"eBay第一财季净亏损23亿美元 同比转亏\" src=\"http://img1.gtimg.com/tech/pics/hv1/52/88/1579/102696967.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 4月30日消息，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">eBay</span></a><span style=\"font-size:14px;\">今天发布了2014财年第一财季财报。报告显示，eBay第一财季净营收为42.62亿美元，比去年同期的37.48亿美元增长14%；净亏损为23.26亿美元，去年同期净利润为6.77亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在截至3月31日的这一财季，eBay的净营收为42.62亿美元(分析师预期为42.3亿美元)，比去年同期的37.48亿美元增长14%；按照美国通用会计准则，eBay第一财季运营利润率为20.6%，低于去年同期的21.3%；按照美国通用会计准则，eBay第一财季净亏损为23.26亿美元，去年同期净利润为6.77亿美元；按照美国通用会计准则，eBay第一财季每股摊薄亏损为1.82美元，去年同期的每股摊薄收益为0.51美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不按照美国通用会计准则，eBay第一财季运营利润率为26.9%，低于去年同期的27.4%；不按照美国通用会计准则，eBay第一财季净利润为8.99亿美元，比去年同期的8.29亿美元增长8%；不按照美国通用会计准则，eBay第一财季每股摊薄收益为0.70美元，比去年同期的0.63美元增长11%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay第一财季运营现金流为12亿美元，自由现金流为9.68美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay第一季度业绩中计入了30亿美元的一次性税收支出。不计入这项支出及其他特殊项目，eBay第一季度业绩超出华尔街分析师预期。财经信息供应商FactSet调查显示，分析师平均预期eBay第一季度调整后每股收益为67美分，营收为42.2亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财务分析</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网络拍卖服务：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay网络拍卖服务净营收为21.55亿美元，比去年同期的19.57亿美元增长10%。eBay网络拍卖平台第一财季总交易额为205亿美元，比去年同期的183亿美元增长12%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网络支付服务：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay网络支付服务PayPal的净营收为18.45亿美元，比去年同期的15.48亿美元增长19%。PayPal第一财季的总支付金额为520亿美元，比去年同期的410亿美元增长27%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">企业部门：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay旗下企业部门净营收为2.69亿美元，比去年同期的2.48亿美元增长8%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其它财务数据：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按照美国通用会计准则，eBay第一财季有效税率为366%，相比之下去年同期为16%；不按照美国通用会计准则，eBay第一财季有效税率为21%，高于去年同期的20%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，eBay持有的现金、现金等价物以及非股票投资总值为119亿美元，低于截至2013年12月31日的128亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">股票回购：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay第一财季回购了3310万股普通股，总回购价格约为18亿美元。截至2014年3月31日，eBay已获批股票回购计划的剩余金额为38亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业绩展望</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay预计2014财年第二财季净营收为43.25亿美元到44.25亿美元；按照美国通用会计准则，第二财季每股摊薄收益为0.51美元到0.53美元；不按照美国通用会计准则，第二财季每股摊薄收益为0.67美元到0.69美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">eBay预计2014财年全年净营收为180亿美元到185亿美元；按照美国通用会计准则，2014财年每股摊薄收益为0.04美元到0.09美元；不按照美国通用会计准则，2014财年每股摊薄收益为2.95美元到3.00美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">股价变动：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当日，eBay股价在纳斯达克市场的常规交易中上涨0.90美元，报收于54.54美元，涨幅为1.68%。在随后截至美国东部时间16:30（北京时间30日4:30）的盘后交易中，eBay股价下跌1.66美元，至52.88美元，跌幅为3.04%。过去52周，eBay的最高股价为59.70美元，最低股价为48.06美元。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140430/002149.htm','2014-04-30 06:26:48',1,'/news/thumb/102696967.jpg','eBay第一财季净亏损23亿美元 同比转亏','admin','瑞雪'),(31,'<div class=\"mbArticleSharePic \" style=\"text-align:left;margin:0px auto;padding:0px;\">\r\n	<img alt=\"Twitter第一季度营收2.5亿美元\" src=\"http://img1.gtimg.com/tech/pics/hv1/236/86/1579/102696641.jpg\" />\r\n</div>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	腾讯科技讯 4月30日消息，微型博客服务Twitter今天发布了截至3月31日的2014年第一季度财报。财报显示，Twitter第一季度实现营收2.5亿美元，同比增长119%；净亏损达到1.3236亿美元，去年同期为净亏损2703万美元 。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	财报显示，由于移动广告业务吸引了更多用户的回应，Twitter第一季度营收和不按照美国通用会计准则计量的每股摊薄利润都超过了业界分析师的预期。Twitter第一季度营收2.5亿美元，好于分析师预期的2.4147亿美元，每股摊薄利润为0美元，好于分析师预期的亏损0.03美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	截至2014年3月31日，Twitter单月平均活跃用户为2.55亿人，较上年同期增长25%，也比前一季度的2.41亿人增长了6%，不过却略弱于分析师预期的2.57亿人。受此影响，Twitter当日盘后股价大幅下跌。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在周二的美国股市常规交易中，Twitter股价上涨1.89美元，报收于42.62美元，涨幅为4.64%。但在发布财报之后（截至北京时间5点），Twitter股价下跌3.98美元，到38.60美元，跌幅为9.43%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<strong>主要业绩：</strong>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Twitter第一季度营收达到2.5亿美元，同比增长119%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	净亏损达到1.32亿美元，每股摊薄亏损为0.23美元；去年同期净亏损为2700万美元，合每股摊薄亏损0.21美元。今年第一季度不按照美国通用会计准则计量的净利润为18.3万美元，合每股摊薄利润0美元；去年同期该亏损为1052万美元，合每股摊薄亏损0.08美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	经调整后的税息折旧及摊销前利润（EBITDA）达到3700万美元，去年同期为1175万美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Twitter CEO迪克·科斯特洛（Dick Costolo）称：“今年第一季度我们表现强劲，用户数量增长以及参与度的增长拉动了我们的营收同比大幅增长。我们将继续加快拓展服务的地域范围和规模。随着MoPub，我们现在的每月iOS和 Android用户数量已经超过10亿，这让我们成为全球最大的应用移动广告交易供应商之一，而且也是唯一一个能提供应用内原生广告供应商。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<strong>第一季度运营数据：</strong>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	截至2014年3月31日，Twitter月平均活跃用户为2.55亿人，较上年同期增长25%；\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	移动业务月平均活跃用户为1.98亿人，较上年同期增长31%，占据了总月平均活跃用户的78%；\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	用户时间轴（Timeline）流量为1570亿次，较上年同期增长了15%；\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	每千次用户时间轴流量换取的广告营收为1.44美元，较上年同期增长96%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<strong>第一季度业绩分析：</strong>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	营收\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	总营收达到2.5亿美元，较上年同期的1.14亿美元增长119%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	广告营收达到2.26亿美元，较上年同期增长125%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	移动广告营收占据了总广告营收的80%以上。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	数据授权和其它营收达到2400万美元，同比增长76%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	国际业务营收达7000万美元，较上年同期增长183%。Twitter第一季度国际营收占据了总营收的28%。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	净亏损\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	净亏损为1.32亿美元，上年同期净亏损为2700万美元。Twitter第一季度净亏损当中包括了1.26亿美元的股权奖励支出。Twitter第一季度每股摊薄亏损为0.23美元，上年同期每股摊薄亏损为0.21美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	不按照美国通用会计准则，Twitter第一季度净利润为18.3万美元，上年同期净亏损为1100万美元。不按照美国通用会计准则，Twitter第一季度每股摊薄收益为0美元，上年同期每股摊薄亏损为0.08美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	调整后的EBITDA，即未计入利息、税费、折旧和摊销之前的净利润为3700万美元，上年同期为1200万美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	资本支出和现金\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	用户购买物业和设备的支出为5000万美元。截至2014年3月31日，Twitter持有的现金、现金等价物和有价证券总额大约为22亿美元，截至2013年12月31日也为22亿美元。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	业绩展望：\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Twitter预计，2014年第二季度营收将介于2.7亿美元到2.8亿美元之间，业界分析师的平均预期为2.73亿美元；调整后的EBITDA，即未计入利息、税费、折旧和摊销之前的净利润将介于2500万美元到3000万美元之间；股权奖励支出将介于1.7亿美元到1.8亿美元之间。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Twitter预计，2014年全年营收将介于12亿美元到12.5亿美元之间，略弱于业界分析师平均预期的12.4亿美元；调整后的EBITDA，即未计入利息、税费、折旧和摊销之前的净利润为1.8亿美元到2.05亿美元之间；资本支出将介于3.30亿美元到3.90亿美元；股权奖励支出将介于6.4亿美元到6.9亿美元之间。（悦潼）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140430/002135.htm','2014-04-30 06:28:29',1,'/news/thumb/102696641.jpg','Twitter第一季度净亏1.32亿美元 同比亏损扩大','admin','悦潼'),(32,'<div style=\"text-align:center;\">\r\n	<img alt=\"苏宁云商第一季度净亏4.34亿元 营收同比降16%\" src=\"http://img1.gtimg.com/tech/pics/hv1/239/86/1579/102696644.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 4月30日消息，苏宁云商发布的第一季度业绩报告显示，第一季度营收228.69亿元，同比下滑16%；净亏损4.34亿元，上年同期为盈利4.93亿元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苏宁云商称，一季度宏观经济增速放缓，消费景气度持续低迷，企业发展面临较大的外部压力。此外，由于2013年一季度节能补贴激励政策施行，收入基数相对较高。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苏宁云商第一季度营收为228.69亿元，较去年同期的272.01亿元下滑16%，其中主营业务收入同比下降16.15%，可比店面（指2013年1月1日当日及之前开设的店面）销售收入同比下降13.40%，线上业务实现销售收入33亿元，同比下降26.65%。归属于上市公司股东的净亏损为4.34亿元，上年同期为盈利4.93亿元。综合毛利率15.80%，较去年同期下降0.53个百分点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第一季度，苏宁云商大陆市场公司新开店面12家，关闭调整店面32家。截至本报告期末，苏宁云商在中国大陆、香港地区、日本市场共计拥有连锁店面1604家。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">由于外部环境不佳，苏宁云商加强了费用的管控，运营费用绝对值环比有所下降，但由于同店销售收入较大幅度的下滑，公司运营费用率同比增加3.58个百分点。另由于2013年11月份发行公司债券募集资金35亿元到位以及收购PPTV使用并购贷款，使得报告期内计提公司债券利息以及银行贷款利息有所增加，带来财务收入-净额较去年同期减少92.34%，由此带来报告期内公司三项费用率较去年同期增加3.83个百分点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苏宁云商预计，2014年二季度销售收入将会扭转下滑趋势，实现同比持平或者略有增长，由此带来二季度在毛利率、费用额相对平稳的前提下，归属于上市公司股东的净利润亏损额收窄至2.5亿元至3.5亿元。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140430/002134.htm','2014-04-30 06:30:52',1,'/news/thumb/dd86cd654441f93fded803b1f1127c74_m.jpg','苏宁云商第一季度净亏4.34亿元 营收同比降16%','admin','jimmonzang'),(33,'<div>\r\n	<img alt=\"硅谷传奇：穷小子云计算创业暴富成功报复前老板\" src=\"http://img1.gtimg.com/tech/pics/hv1/121/151/1578/102648076.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 4月29日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">好好活着就是最好的报复，没有其他人的经历比布加里（AbtinBuergari）更好的证明了这一道理。目前，他是美国科技新创公司Modus-eDiscovery的创始人兼CEO。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这是一个从穷人到富翁的传奇故事，他出生于穷人家庭，上了法学院，希望好好工作，但却被老板炒了鱿鱼，并告上法庭。随后他创建了自己的科技公司，五年之后，他的公司销售收入达到1800万美元，获得了1000万美元的风险投资，公司创办六年之后，他的公司拥有200多名员工和12个分支机构。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在读法学院时期，布加里在外兼职律师助理，他受雇于一家名为“电子发现”（eDiscovery）的公司，主要是接受客户委托，在电子邮件、即时通信记录和其他网络文档中搜寻可以用于诉讼的材料和信息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国爆发卡特里娜飓风灾害之后，引发了大量针对保险公司和联邦政府的诉讼，布加里参与了这样的一宗诉讼。布加里的客户是一位律师，他要求布加里以最快和成本最低的方式，获得用于诉讼的材料。在快速查询文档方面，他有了一些新想法，并且告诉了“电子发现公司”的老板，不过老板并未加以重视。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于律师行业而言，电子发现公司的文档阅读和扫描服务十分昂贵。根据美国法律行业媒体报道，美国司法部门在每一宗诉讼中，用于文档阅读和人工扫描方面的支出高达300万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布加里称，因为收入的原因，电子发现公司并不希望以更快速和更低成本的方式，人工扫描法律文件。他告诉老板，自己可以辞去律师助理的工作，转而成为一名顾问，帮助公司提高文档扫描的效率。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我不仅被解雇了，而且还被告上法庭。”布加里说。他的老板指控他企图“盗窃”客户和商业机密。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">由于没有了工作，布加里离开了法学院。他决定自己创办科技公司，把过去的想法变成现实。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当年在电子发现公司工作时，有一位客户曾经以支票方式支付了1250美元的个人费用，他没有取现，后来，随着公司发展，他获得的支票数目越来越大，从1000美元到一万美元，再到十万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他推出自己的eDiscovery软件以及云存储服务，客户公司可以把文档保存在云中，随时调用查阅。今天，布加里的工作，为全球的大公司和律师行，处理了高达几个TB的海量数据。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年，Modus-eDiscovery依靠1800万美元的收入（远远高于前年的150万美元），成为“Inc.5000”的增长最快的公司，去年他也获得了1000万美元的风险投资。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得一提的是，创业的过程中，还有一个前公司的诉讼困扰着他。相关法律文件已经证明了这一诉讼。不过布加里表示，艰难的经历，其实是一种“乔装打扮的祝福”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布加里说道，他出生于穷人家庭，母亲从事两份工作，自己从小由外祖母养大，他现在准备把妹妹送入大学，另外帮助父母，显然父母的退休养老已经没有问题。（晨曦编译）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140429/009841.htm','2014-04-30 06:32:14',1,'/news/thumb/102648076.png','硅谷传奇：穷小子云计算创业暴富成功报复前老板','admin','shulaiyang'),(34,'<p style=\"text-indent:2em;\">\r\n	<img alt=\"央行：互联网金融需适度监管\" src=\"http://img1.gtimg.com/tech/pics/hv1/250/93/1579/102698440.jpg\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本报北京4月29日电 （记者田俊荣）中国人民银行今天发布的《中国金融稳定报告（2014）》提出，我国互联网金融还处于发展的观察期，需要处理好鼓励创新与消费者权益保护、风险防范之间的关系，按照“鼓励创新、防范风险、趋利避害、健康发展”的总体要求，对其予以适度监管。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">《报告》认为，我国互联网金融监管应遵循五大原则。一是互联网金融创新必须坚持金融服务实体经济的本质要求，合理把握创新的界限和力度。互联网金融中的网络支付应始终坚持为电子商务发展服务和为社会提供小额、快捷、便民的小微支付服务的宗旨；个体与个体之间通过互联网平台实现的直接借贷和众筹融资要坚持平台功能，不得变相搞资金池，不得以互联网金融名义进行非法吸收存款、非法集资、非法从事证券业务等非法金融活动。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">二是互联网金融创新应服从宏观调控和金融稳定的总体要求。包括互联网金融在内的一切金融创新，均应有利于提高资源配置效率，有利于维护金融稳定，有利于稳步推进利率市场化改革，有利于央行对流动性的调控，避免因某种金融业务创新导致金融市场价格剧烈波动，增加实体经济融资成本，也不能因此影响银行体系流动性转化，进而降低银行体系对实体经济的信贷支持能力。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三是要切实维护消费者的合法权益。互联网金融企业开办各项业务，应有充分的信息披露和风险揭示，任何机构不得以直接或间接的方式承诺收益，误导消费者。开办任何业务，均应对消费者权益保护作出详细的制度安排。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">四是要维护公平竞争的市场秩序。在线上开展线下的金融业务，必须遵守线下现有的法律法规，必须遵守资本约束。不允许存在提前支取存款或提前终止服务而仍按原约定期限利率计息或收费标准收费等不合理的合同条款。任何竞争者均应遵守反不正当竞争法的要求，不得利用任何方式诋毁其他竞争方。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">五是要处理好政府监管和自律管理的关系，充分发挥行业自律的作用。抓紧推进中国互联网金融协会的成立，充分发挥协会的自律管理作用。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140430/002786.htm','2014-04-30 06:34:25',1,'/news/thumb/102698440.jpg','央行：互联网金融需适度监管','admin','田俊荣'),(35,'<p style=\"text-align:left;font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<img src=\"http://upload.service.mix.sina.com.cn/dfdd6e46a2b68a3cc28e83e29ffbe8f1.jpg\" title=\"61e61e8cgw1efvbbxr4iyj20qo0k0tao.jpg\" /> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	文/王哲玮\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	被称为中国互联网四巨头的BAT3，一直没有同时在同一市场正面交锋过。如今，这个战场终于选定了。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	移动搜索的玩家们该焦虑了，因为新的巨头玩家正在加入。今天下午，阿里巴巴曲线进入移动搜索市场，打前锋的是新晋盟友UC。双方合作的形式是成立合资公司，共同推出的移动搜索——神马。名字很神气，广告词都有现成的：神马都知道。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	目前，在移动搜索市场，百度一家独大，腾讯搜狗正发起新一轮进攻，360低调布局移动端的三级火箭模式。阿里UC的加入，将成为移动搜索市场第四股强大力量。这也是BAT3首次在同一市场短兵相见。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<strong> 入口和信息之争</strong> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	BAT3首次正面交锋战场为何选定在移动搜索市场？答案得从入口说起。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	传统互联网有三个公认入口：一是网络，掌握在运营商手里；二是浏览器；三则是搜索引擎。到了移动互联网，入口增加两个，一是在网络前面的硬件，另一个则是和浏览器并行的超极App，比如微信。用户上网的目的是获取信息。在这些入口中，硬件最接近用户，而搜索最接近信息。搜索最喜欢信息分散化，信息越分散，搜索越有价值。搜索的竞争，说到底是信息的竞争。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	和PC端相比，移动端的信息存在诸多不同：一是更多基于手机产生的信息越来越多，这些信息具有更多新特性，比如基于地理位置和本地服务等；二是和传统PC互联网相比，移动互联网更加不平坦，硬件、操作系统、网络制式和应用服务的多样化导致信息产生和组织方式发生巨大变化——信息被深深割裂开。除了传统PC互联网延伸过来的信息，还有很多信息藏在App中，分发渠道控制App。基于这样的结构，基于传统PC互联网内容的手机搜索发挥空间局限在传统PC互联网延伸过来的信息，打破分发渠道乃至APP之间信息内容“孤岛状态”移动搜索就显得更为重要。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	说到这，就不得不提移动互联网入口最大的争论——App和Web，哪个究竟才是未来趋势？这个问题在移动搜索中将得到解答。由于移动搜索具有基础服务属性，可以通过多样化的实现途径提供更为开放的服务。多样化的途径包括页面搜索、App搜索和应用内搜索。基于App的搜索能很好解决App搜索和应用内搜索问题，但如何承载搜索内容以及进行页面搜索，目前没看到特别好的形式。基于Web的搜索则可以将三者进行整合，不仅可以直接搜到传统PC端延伸过来的信息，还有轻应用以及Native App。更重要的是，随着App持续发展，App长尾效应会突显，长尾App推向给用户的成本和建设成本居高不下，此时Web会成为各个长尾App更优选择。实际上，不管是百度、搜狗还是其他搜索厂商，Web搜索仍是主流，而浏览器则是最重要的载体。两年前360推出了PC端搜索，并取得超过20%份额，核心优势就是通过客户端来绑定搜索，封闭流量，同样的战略在移动互联网上必然会重演。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	说到底，移动搜索的本质是信息和入口之争，玩家们决胜于对“信息源”的覆盖，而始于对“端”的控制。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<strong> BAT3的新游戏</strong> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	如今的移动搜索市场热闹得很，而不管是BAT3，还是豌豆荚等其他厂商，都想依靠自身渠道手段来驱动市场。但如今搜索市场，由于重量级巨头纷纷加入，人力、渠道和设备成本水涨船高，这个市场注定是巨头的游戏。未来移动搜素市场格局如何莫测？从上述的两个角度——“信息源”和“端”的控制力，我们可以来看看BAT3的颠覆力。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<strong> 1、百度：一家独大局面将结束</strong> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	在移动搜索市场，百度凭技术基础、品牌效应和先发优势，已经具备护城河。根据易观数据，2013年百度的移动搜索市场份额达到71.8%，其他人遥遥落后，只能分食余下为数不多的市场。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	这是百度目前最大的优势，但其对“信息源”和“端”的控制力度不足，将留给后来追赶的机会。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	首先是信息源的控制。这要从百度移动搜索发家史说起。伴随着2004年中国移动互联网兴起，第一批市场探索者，如宜搜、易查、悟空、SOSO纷纷进入移动搜索。早期移动搜索的信息90%以上还是来源于传统互联网，所谓移动搜索只不过是PC上的延伸，做好交互、适配、抢夺入口级的客户端就可以了。也正因如此，PC巨头的鲨鱼阴影始终存在。2009年百度凭借其在PC端的品牌效应和技术基础进军移动搜索，这些早期的探索者无一例外都成为了“刻在烈士碑的英雄”。2010年初，易查跑到日本了，悟空转型了，SOSO心思不在无线了，坚持在移动搜索路上走下去的只剩下宜搜，但市场份额少得可怜。2010年以后，移动搜索正式进入百度一家独大的时期。这样的发展历程让百度的移动搜索深深打上PC烙印，一个表现是信息源更多来自传统PC互联网，另一个表现便是商业模式的迁移。搜索在PC端的经典商业模式是CPC，但很遗憾，照搬到手机上后，广告投放的位置太少，接通率太低，客户付费意愿差……后果便是移动端收益只有PC上的1/5左右。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	二是缺少强势客户端。百度移动搜索这一弱点也是从PC端延续过来的。和PC端类似，当年百度在移动搜索攻城陷阵时，便是采用和强势客户端合作的方式进行市场拓展，比如UC和QQ浏览器，而自己一直未建立起强势的客户端。直到2012年，360通过浏览器绑定取得超过20%的PC搜索市场份额，百度才意识到客户端尤其是浏览器对搜索市场的影响，并开始有意识布局移动客户端市场，包括浏览器、手机助手等。在手机助手领域，百度拿下不少份额，但在对移动搜索最重要的移动浏览器市场，UC浏览器份额超过65%，而百度份额始终难以突破个位数。根据百度的数据，手机浏览器是其移动搜索流量的贡献大头，UC浏览器贡献率超过三成，QQ浏览器贡献率虽低一些，但也不少。考虑到阿里 UC、腾讯搜狗已经大举进攻移动搜索市场，百度基于UC浏览器和QQ浏览器的流量将成为不确定市场。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	也正是百度这两个弱点的存在，给移动搜索市场后来者留下了机会。即便如此，百度依然不容小觑。去年以19亿美元巨额将91助手纳入麾下，并借此成为中国最大的应用分发渠道，再加上传统页面信息，百度在移动信息源上具有一定话语权。虽然危机已然四伏，但瘦死的骆驼比马大，在移动端，百度不会像PC端具有绝对垄断地位，但短期内依然能保持市场份额第一的地位。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<strong> 2、阿里+UC：凭手机浏览器冲第二？</strong> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	阿里增股UC后，双方将会有什么合作，一直是业界关注热点。半个月前UC推双方共同打造的PC浏览器时，笔者就想，仅仅就是这玩意儿吗？果不其然，重点还在后头，双方图谋的是更火热的移动搜索市场。此前有消息称，阿里巴巴计划对淘宝进行大调整，改善淘宝的导航，在其移动应用中加入更多交互功能，并借此降低淘宝对外部搜索流量的较高依赖，因为随着阿里在多个市场与搜索巨头百度展开竞争，这可能成为阿里面临的一个越来越大的风险，拥有一个强势的搜索对阿里来说很关键。联想到之前阿里推迟提交F-1上市文件，不知是否是为了等神马移动搜索出来，改善资本市场对阿里的态度呢。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	当然，资本市场态度改善的前提是神马的确能在移动搜索市场占据一定市场份额，而最大变量则来自UC。目前UC手机浏览器全球用户超过5亿，国内市场份额超过65%。其在浏览器上得天独厚的优势是其他三股力量所不具备的。根据百度数据，UC浏览器对百度移动搜索流量的贡献高达31%。如果UC和阿里能将这部分流量转化为自身流量，那么将能一举获得超过20%的市场份额。从360在PC端的成功经验来看，这是完全有可能做到的。如果神马能实现20%市场份额，或将成为移动搜索市场老二。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	阿里对神马的贡献是什么？人才、信息源和商业模式资源。人才上，阿里贡献了原一搜搜索的团队和产品；在信息源上，淘宝的电商平台信息将向神马打开，神马也是目前唯一能与淘宝深度合作的综合搜索引擎；商业模式上，借助阿里，神马的商业化模式估计更偏向电商、支付等。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	这个组合同样存在弱点。和百度、腾讯搜狗、360在PC端打滚多年的经历相比，阿里 UC的组合算得上是搜索市场里最没有积累和经验的。阿里在PC端曾有过“一搜”，不过那是雅虎遗留下的，阿里一直没有大力发展。UC则是做浏览器起家，后来将其业务拓展到应用分发、游戏等领域，四年前推出过搜索大全，算得上这个组合在移动搜索的雏形。阿里和UC显然也看到这一不足，听说去年神马不仅整合了阿里巴巴的“一搜”技术团队和业务，还将原百度的一支技术团队消化了，并吸收了来自Google、微软、雅虎、360等公司的搜索引擎产品技术专家。看得出，阿里 UC在移动搜索上不遗余力。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	不过今天UC俞永福接受采访时将这个劣势定义为优势。用俞永福的话说，从经验来看，在PC端取得成功的企业在移动端常常受阻，原因便是原有的PC思维限制了其在移动端发展。移动搜索对阿里的重要性无需赘言，选择UC来担此重任，除了其5亿用户，其纯移动的优势是阿里看中的？\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<strong> 3、腾讯搜狗：千年老三的宿命</strong> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	PC搜索市场十多年，搜狗进入并不晚，但始终摆脱不了千年老三的位置。雅虎没败走麦城前，中国搜索市场排名是雅虎、百度、搜狗，后来雅虎衰落，谷歌进来，市场排名演变成百度、谷歌和搜狗；谷歌走后360来了，搜狗依然是老三。而在移动端，搜狗的排名更靠后。在市场竞争者酣战时，王小川始终认为春天很短暂。想进入时，这个市场已经没有搜狗什么事儿了。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	当年搜狗在PC端做搜索的“三级火箭”模式其实很有想象力。通过输入法带浏览器，再带动搜索，最后在搜索变现。然而“三级火箭”在搜狗手里没有成功，反而在360手里实践了。从产品看，虽然搜狗输入法拥有3亿用户，但输入法毕竟是轻应用，无法给浏览器疏导流量。如今做移动搜索，搜狗换了个说法——“三箭齐发”，实际上就是传统的输入法、浏览器以及搜索的无线化。为什么叫三箭齐发？因为在移动端，搜狗只有输入法，逐步构建三级火箭太慢，于是变了招式，三级同时做。然而在移动端，输入法变得更轻，用户感知度太低，根本无法支撑起浏览器，从而导致搜狗浏览器始终没有起色。浏览器尚没搞定，移动搜索就别提了。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	如果就以前的搜狗，几乎可以断定，移动搜索没它什么事儿，可以洗洗睡了。但如今不同，搜狗抱住腾讯大腿，不仅有QQ浏览器、手机QQ，还有微信。虽然QQ浏览器的市场份额比不上UC的65%，但也超过两成。仅是依靠QQ浏览器，搜狗所获得的移动搜索市场份额就不少。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	基于QQ浏览器控制“端”，基于微信打通“信息源”，这是目前搜狗最有可能逆袭的策略。对于搜狗来说，目前最大的问题是，依靠腾讯，市场份额应该能上去，但可能还逃不了老三的宿命。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	<strong> 4、360：继续复制三级火箭模式</strong> \r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	干了三次搜索都悲剧收场的老周，没想到却凭安全成功了。然而虽因安全成名，搜索依然是老周的情结，依靠安全卫士，捆绑浏览器，然后在浏览器上搭载搜索，最终曲线完成了搜索梦。如今360搜索在PC端的份额已经超过20%，很大程度上就是靠它浏览器的渠道优势。互联网数据研究机构Hitwise公布的2013年6月的搜索市场份额数据显示，360搜索有82%流量来自于其导航和浏览器产品，360搜索如果除去其导航和浏览器的流量，用户的主动需求份额只占2%左右，渠道优势一览无遗。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	不过在手机端， 360的安全类产品无法再像PC端那样拥有垄断性的优势。360手机助手和360手机卫士两大移动端产品帮助360成为第二大应用分发渠道商，但目前对其移动搜索的提振作用不大。去年第四季度的财报显示，360在移动端搜索的营收仍为零。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	于是乎，我们看到向来不重视移动浏览器的老周态度骤变，大量资源向移动浏览器铺开，并在半个月前推出了手机浏览器新版本。360发力手机浏览器不难理解，它需要在移动端重新打造其“安全浏览器搜索”的三级火箭模式。而现在它要做的便是制造一个新的概念——中国最安全的手机浏览器，然后在这个基础上打造中国最安全的移动搜索。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	然而手机浏览器的渠道和PC端完全不同，无法通过和安全产品进行捆绑安装。老周这个“中国最安全的手机浏览器”恐难在短期内取得可观市场。如今移动搜索大战一触即发，老周都准备开炮了，火药没准备好怎么行？于是老周在内部下了死任务，手机浏览器一定要做起来。听说360手机浏览器的人抱怨压力很大，以前老板太不重视，如今老板太过重视了。手机浏览器没做起来之前，老周也不会干等。据说360与正在主流App谈判，希望能抓取到App内部的数据的阶段，希望能够形成一个App调用的开放平台，并和360手机卫士和手机助手结合。这实际上是此前百度提出的应用内搜索，不过百度提出后一直没怎么推。此前老周在PC端成功实践过搜狗提出的“三级火箭”。如果这次又成功实现百度提出的“应用内搜索”，360移动搜索的机会还是有的。\r\n</p>\r\n<p style=\"font-size:14px;color:#333333;font-family:\'Microsoft YaHei\', 微软雅黑, SimSun, 宋体;background-color:#FFFFFF;\">\r\n	从上述分析上看，BAT3挑战和机遇同在。不过，很多时候优势并不能保证企业成为最后的胜利者，优势有时候也是一种负担和牵绊，搜索不改变产品形态、合作方式、在商业模式上创新，很难有未来。目前移动搜索尚未定型，一切皆有可能。可以预见的是，随着巨头玩家准备就绪，移动搜索市场一家独大的局面即将结束了。\r\n</p>','新浪科技','http://tech.sina.com.cn/zl/post/detail/i/2014-04-29/pid_8449719.htm','2014-04-30 06:46:26',1,'/news/thumb/dfdd6e46a2b68a3cc28e83e29ffbe8f1.jpg','巨头首次正面交锋 移动搜索难再一家独大','admin','王哲玮  '),(36,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">文/新浪财经欧洲站站长 郝倩</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">时过境迁，当年的承诺再不作数。按照麦当劳给新浪财经的官方回复，这一次是供应商施压，称若麦当劳还坚持采用非转基因饲料，养殖户就没法养活所有麦当劳在欧洲需要消费的鸡。这迅疾被坚决抵制转基因食品的绿色和平组织斥责为“唯利是图”。</span>\r\n</p>\r\n<p>\r\n	<img alt=\"麦当劳取消不使用“转基因”的承诺(图片来源：adinavlad.wordpress.com)\" src=\"http://i1.sinaimg.cn/cj/2014/0429/U10563P31DT20140429090721.jpg\" title=\"麦当劳取消不使用“转基因”的承诺(图片来源：adinavlad.wordpress.com)\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">麦当劳取消不使用“转基因”的承诺(图片来源：adinavlad.wordpress.com)</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在许下“在欧洲市场上避免转基因饲料”的承诺13年之后，麦当劳</span><a href=\"http://weibo.com/mcdonaldsworlds?zw=finance\" target=\"_blank\"><span style=\"font-size:14px;\">[微博]</span></a><span style=\"font-size:14px;\">欧洲公司的“转基因食品”大坝被撕了个豁口。该公司对新浪财经书面确认，从今年4月开始，在欧洲大部分地区的麦当劳餐厅出售的鸡肉食品将可能由转基因饲料饲养。这迅疾被坚决抵制转基因食品的绿色和平组织斥责为“唯利是图”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2001年，麦当劳曾在全欧洲范围内要求供应商不使用转基因饲料，一时成为餐饮业“标兵”。时过境迁，当年的承诺再不作数。按照麦当劳给新浪财经的官方回复，这一次是供应商施压，称若麦当劳还坚持采用非转基因饲料，养殖户就没法养活所有麦当劳在欧洲需要消费的鸡。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与美国几乎毫无底线不同，欧盟在转基因食品问题上一直有所保留。到底是转基因食品已经吞噬了大半个地球，让肉鸡们再没非转基因的谷子可吃，还是仅仅成本上完胜，让越来越多的零售商倒戈？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不要以为转基因离你很远。国内首位勇于承认采用转基因饲料的是</span><a href=\"http://finance.sina.com.cn/realstock/company/sz000876/nc.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">新希望</span></a><span style=\"font-size:14px;\">(11.93,0.32,2.76%)集团董事长刘永好，在去年底接受媒体采访时，他坦言越是大型饲料生产企业，越倾向于使用转基因玉米。新希望本身在2010年前就从国家获取了一定的转基因玉米进口配额，用于生产猪饲料。对于目前国内转基因饲料的使用广度，目前还没有具体的统计数字。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谁攻破了麦当劳的防线？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从严格抵制转基因到开始默认转基因的存在，麦当劳经过了怎样的心路历程？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在英国，麦当劳从2000年底便开始正式宣传他们的非转基因理念，这在当年各大报章上了头条，一时成为极具商业道德的餐饮零售行业典范。麦当劳一直立志重塑的健康食品形象，例如餐厅中所售的牛肉汉堡，可以保证都是100%牛肉。同时，该公司解释说，既然麦当劳宣布不使用有任何转基因成分的食物，不使用转基因饲料也就自然而然成为政策延续。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在解释为什么不采用转基因食品作为饲料时，当年的麦当劳公司说，英国人对转基因食品是否健康有担忧，他们则希望打消消费者的顾虑。于是他们要求所有供应商不使用转基因饲料。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当年，麦当劳的鸡肉供应商们主要采用产自巴西的豆质饲料，而这些饲料当时基本为非转基因。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此次“转基因”风波的部分促因，是德国家禽养殖协会发布了公告，称不再保证养殖中使用非转基因饲料。德国是麦当劳欧洲肉质供应的一个主要供货商。麦当劳随之表态，称不能保证他们的鸡不吃转基因饲料。在给绿色和平组织的书面说明中，麦当劳解释说这是因为“经济上可接受的”非转基因饲料供给不足。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">之后，总部在伦敦的麦当劳欧洲总部对新浪财经官方回复称：麦当劳欧洲公司依然承诺在食物中使用非转基因成分。但是，牵扯到动物养殖，到今年3月为止，麦当劳将不再要求欧洲养殖户用非转基因大豆和玉米养鸡。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">麦当劳欧洲公司确认说，欧洲范围内麦当劳所需要的肉食大部分都是在欧洲喂养，但养殖用的饲料，尤其是大豆，主要来自巴西。由于巴西的非转基因大豆越来越少，供货商们“确认”从今年三月底以后，他们将不再保证有足够的非转基因饲料来满足麦当劳在欧洲市场的鸡肉需求。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在声明中，麦当劳欧洲公司只字未提“成本”问题，而是强调非转基因饲料不足，虽然按照其官方说辞，这十多年来，喂鸡的饲料依然大多来自巴西。但巴西本身转基因玉米的泛滥，已经到了威胁亚马逊</span><a href=\"http://weibo.com/amazonchina?zw=finance\" target=\"_blank\"><span style=\"font-size:14px;\">[微博]</span></a><span style=\"font-size:14px;\">雨林的地步。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“与其他主要零售商类似，从2014年第二季度开始，我们(麦当劳)也将放开在欧盟大部分国家，对供货商只用非转基因饲料喂鸡的禁令”。麦当劳公司回应说。事实上，即使在14年前，麦当劳也坦言几乎不可能保证所有的动物饲料都不含转基因，因为这是个“行业问题”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">环境组织绿色和平测算，不使用转基因饲料喂养的肉鸡，每个鸡肉汉堡的成本也仅增加1欧分(约9分人民币)。对此，麦当劳并没有予以回应。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">总之，反观整个事件，作为甲方，麦当劳曾要求肉质供货商要求养殖户仅采用非转基因饲料，但这一次，看起来是供货方倒戈，将了麦当劳一军。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">欧洲的底线</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于“转基因”是否有害这个争议性话题，麦当劳从未有过明确表态。转基因是否有害健康，就如同一笔扯不清的烂账，任何一种明确的表态，都可能直接牵扯到一些大受益方的利益。在提及“转基因食品”，环保组织用到频率最高的词是“贪婪”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在欧美，转基因食品还有个别称，叫“弗兰肯食品”，有时也被译作“人类自毁食品”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“弗兰肯食品”的说法最初来自弗兰肯斯坦(Frankenstein)，英国小说家玛丽-雪莱小说中的一位主人公，这位疯狂的科学家，用许多碎尸块拼成了一个怪物，而这个怪物最终毁灭了他。这种隐喻或许极端，但科学家的确担心，转基因食品，例如转基因玉米可能含有某种蛋白质，而这种成分又会引发人体系统的某种紊乱。更令人忧心的是，玉米几乎无处不在，从袋泡茶，果汁，到外带咖啡杯和塑料袋。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然转基因食品从诞生之日起一直充满争议，但麦当劳还是坚称公司政策改变不会影响麦当劳餐厅的食品质量。麦当劳欧洲公司对新浪财经举例说：欧洲饲养生产商联盟( The European Feed Manufacturers’ Association )估计：去年，欧洲的饲料中90%都是转基因。而世卫组织(WorldHealth Organisation)则表示，转基因的动物饲养对于与此相关的肉蛋奶的品质没有任何影响。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">麦当劳说的也没错：根据美国食品安全中心的数据，在转基因食品泛滥的美国，加工食品中70%到75%含转基因成分；超过90%的玉米和大豆都是转基因作物。在美国，至今只有三个州通过了转基因标识法案，根据食品与药物管理局(FDA)的报告，鉴于没有科学证据能证明转基因有害，就没有必要给转基因食品贴标签。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与北美和南美不同，欧盟对于转基因食品的接受度低，至少还有底线。在整个欧洲，对转基因饲料的使用和标识有严格的要求。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在欧盟，来自美国的廉价玉米饲料多次被禁止入境。在以农业为荣的法国，用这种饲料养鸡就是违法。官方的理由是这些玉米加工中出现的副产品鱼龙混杂，很难保证不含转基因成分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在法国家乐福，两根明确标注“非转基因”的玉米可以卖到3.99欧元。在优质散养鸡或是鸡蛋的包装中，除了“散养鸡”的标识，“非转基因谷物喂养”的标识也很普遍。相比而言，英国超市更钟爱标示“散养鸡”以及“谷物喂养”。对于是否为转基因谷物，鲜有提及。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在转基因这个问题上，英国几大商超Tesco乐购，Sainsbury\'s，M&amp;S玛莎早就全军覆没，唯一坚持不卖转基因食品的只剩下硕果仅存的Waitrose。当然，在一些含糊的解释中，也有说法是所有超市中在售的有机食物(标注Organic)可以保证不含转基因成分或是饲料。当然，价格也相差一倍。在英国超市Sainsbury\'s，一只普通英国肉鸡按只卖，一只4.5镑(一公斤3.33英镑)；但有机鸡按斤卖，一公斤6.59英镑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">英国的中产超市Waitrose在官网中有承诺说，超市中所出售食物没有任何涉及转基因成分。所有的肉食，鸡蛋，包括冰冻三文鱼和新西兰羊肉也都是由非转基因饲料饲养，无论是谷物还是玉米。需要补充说明的是，Waitrose在英国是中产最为亲睐的超市，食品价位也是高于类似乐购之类的大众超市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">欧洲也有专家表态，随着转基因谷物和非转基因谷物的异花授粉，所谓纯正的非转基因食品早就不复存在。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然努力保住底线，欧盟的压力可想而知。一边是反转基因食品环保组织；一边是贸易商们强大的游说团体。而欧盟对转基因食品“零容忍”的底线早在2012年就已经被攻破，部分源于美国人的转基因玉米大豆全球泛滥，仅凭欧盟单方筑起的防线根本招架不住。此次麦当劳的“非转基因饲料”失守，不过是转基因食品完胜的一场小战役罢了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">(本文作者介绍：新浪财经欧洲站站长。工作10年，从社会新闻到财经新闻，从上海到伦敦，从第一财经日报到新浪财经。)</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本文为作者独家授权新浪财经使用，请勿转载。所发表言论不代表本站观点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','36氪','http://finance.sina.com.cn/zl/international/20140429/091318957920.shtml','2014-04-30 06:50:42',1,'/news/thumb/U10563P31DT20140429090721.jpg','谁攻破了麦当劳的转基因底线？','admin','郝倩'),(37,'<p style=\"color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;font-size:16px;background-color:#FFFFFF;\">\r\n	<a href=\"http://bvm.bz/72c\" target=\"_blank\"><img src=\"http://w3.geekpark.net/assets/uploads/files/14113-300_250.jpg\" alt=\"Informatica\" border=\"0\" /></a>\r\n</p>\r\n<div class=\"paragraph\" style=\"font-size:16px;color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;background-color:#FFFFFF;\">\r\n	<h3 style=\"font-size:24px;font-weight:400;\">\r\n	</h3>\r\n	<p>\r\n		昨天晚间，一则电信业重磅新闻放出：国家将成立一个由三大运营商共同持股的“国家基站公司”，注册资金达百亿左右。新成立的超级基站公司，在级别上将与目前的三大电信运营商平起平坐。<br />\r\n随后有短时质疑真实性的报道发出，也有消息源财经网方面肯定信息可信度的发声。今日，本刊也从中国移动内部人士方面得到了有关该消息的确认。这意味着自2008年电信重组以来，中国电信业再次迎来整体震荡。<br />\r\n成立国家基站公司究竟是谁的利好？<br />\r\n今天一早三家运营商的股价多少给出了反馈：中国移动最新报价72.8元，跌0.47%；中国联通最新报价11.44元，升1.77%；中国电信报价3.87元，升0.25%。直观来看，对于基站资源更为丰富的中国移动而言这并不算是利好，而反观中国联通和中国电信则是相对的利好消息。<br />\r\n这一次重组的大背景是4G牌照发放，电信业部分领域向民营资本开放。成立基站公司的用意显然是为了更为快速的推进基站建设，实现统一管理和维护，将运营商从中解放出来将精力放在业务运营方面。但是这一美好愿景究竟能否实现？<br />\r\n在基站建设方面，共建共享早在3G时代就已经提出，然而推行起来却颇难，最终拥有主导权的仍是基站的主要建设方。目前来看，对于基站资源不够丰富，特别是4G站方面进展较慢的中国联通和中国电信而言基站公司的成立是利好，然而作为独立的公司体系未来要租用基站仍然需要投入，基站公司不可能为了平衡三家运营商分配资源，究竟能否获得最佳的网络资源仍然取决于资金实力，这就与2G、3G时代没有任何分别：过去是出资购买设备，往后是租用基站。<br />\r\n上一次的电信重组并没有真正的改变整体市场格局，在“看得见的手”强有力的干预下并没有实现大逆转，强者恒强，甚至所谓的平衡也没能实现，反而产生了不少“副作用”，简单举一个例子：尽管联通倚仗网络和终端优势获得了一定的市场份额，但仍无法避免大批中国移动iPhone在网用户，用着3G手机跑在2G网上，这个现象背后是最佳终端、最优网络、最强运营商始终无法被消费者自由选择和搭配。<br />\r\n迫于国家战略，TD-SCDMA是唯有中国移动才能担起的使命，但是电信服务又是极为市场化的，二者之间的矛盾令中国移动度过了拧巴的3G时代。已经拥有了大批建成和在建4G基站的中国移动（预计今年年内将建成50万个4G基站，这个数字是足以令联通和电信望其项背的），也许不会心甘情愿交出自己的基站，因此在基站公司建立和筹建过程中避免不了遭遇各种博弈，而这种非市场化的博弈与竞争显然会距离组建基站公司的初衷越来越远。<br />\r\n如果是为了给运营商“减负”抵抗OTT，那么很可能这只“看得见的手”又伸错了地方：创新和转型是任何外部调整和政策力量无法敦促的，从国际上来看，运营商创新也几乎没有借助国家力量的先例，一切还要靠整个运营商体系内部的调整和转型。<br />\r\n至于一家垄断了网络资源的新公司本身是不是会生出其它问题？“副作用”恐怕不可避免。或许假以时日又为了避免垄断拆分出了南方、北方公司，这样的先例并非没有。\r\n	</p>\r\n</div>\r\n<div class=\"paragraph\" style=\"font-size:16px;color:#46494C;font-family:\'Open Sans\', \'Helvetica Neue\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', sans-serif;background-color:#FFFFFF;\">\r\n	<h3 style=\"font-size:24px;font-weight:400;\">\r\n		回放2008年电信重组方案：\r\n	</h3>\r\n	<div class=\"paragraph-img\" style=\"background-color:#F9F9F9;\">\r\n		<img src=\"http://businessvalue.qiniudn.com/images/thumbs/30802_%E6%B5%8B%E8%AF%95_600_263.png?time=1398897847\" />\r\n		<h4 style=\"font-size:14px;font-weight:normal;text-align:justify;\">\r\n			2008年电信重组方案\r\n		</h4>\r\n	</div>\r\n</div>','36氪','http://content.businessvalue.com.cn/post/30802.html','2014-05-01 06:48:04',1,'/news/thumb/14113-300_250.jpg','电信业再重组，国家基站公司成立谁的利好？','admin','张思'),(38,'<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	<strong>21世纪经济报道</strong>&nbsp;4月28日晚，携程旅行网宣布战略投资同程科技股份有限公司。至此，两家在线旅游公司结束了在景区门票领域的长期“战争”，化敌为友。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	随后同程网CEO吴志祥在一份内部邮件中确认了该消息，邮件显示，通过此次投资，携程将成为仅次于同程管理层团队的第二大股东，并将景点门票的现付业务接入同程。此次交易以现金方式完成，涉及金额超过2亿美金，携程依然支持同程独立IPO。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	携程方面在接受21世纪经济报道记者采访时确认，此次投资完成后，携程将获得同程网30%的股份。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	几乎同一时间，21世纪经济报道记者独家获悉，携程斥资1500万美元认购正在谋求赴美上市的另一家在线旅游企业途牛网股份，并且将在途牛网未来的9人董事会中占据1席。途牛网CEO于敦德已经向全体员工宣布了这一消息，并表示，在此次上市过程中，还获得了包括DCM、红杉、奇虎360等在内的众多投资人的关注和参与。据悉，奇虎360认购了500万美金。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	对于股权结构，途牛网采取了与同程网类似的回应：“途牛将保持独立运营，创业团队仍然保持公司控制权。”\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	与去哪儿合并的消息逐渐散去，携程却在一日之内连下两城，为国内OTA市场格局再添变数。据一位业内知情人士向21世纪经济报道记者透露，携程与去哪儿网的合并卡在控制权的问题上，合作基本告吹，因此，携程网转身将同程和途牛纳入麾下。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	<b>合纵联横抢占市场<b></b></b>\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	同程网CEO吴志祥接受21世纪经济报道独家专访时表示，“我也很惊讶能够在如此短的时间内促成这次合作。” 吴志祥在其微信朋友圈也自爆了此次合作的一些细节，包括整个合作在两个小时内确定，一周内完成了合约的起草签订。但他告诉21世纪经济报道记者，4月19日，双方见面前，一切充满不确定，没有人会想到是这个结局，也没有人会想到这么快能签约完成。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	两家公司同处华东，相距不过半个小时车程，三个月前还曾在全国多个景区发动“双程大战”，21世纪经济报道在 《携程同程火拼背后：在线旅游市场重新洗牌 》一文中也曾独家调查两家公司存在的“挖角”问题，当时吴志祥还表示，接受腾讯第二轮投资也是为即将开始的价格战储备弹药。不过100天的时间，180度大转弯的确让市场大跌眼镜。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	据了解，此次合作由携程先提出，吴志祥考虑后也曾和各大股东商量。在其股权结构中，除了管理团队控股外，早期进入的元禾控股和两轮投资的腾讯均占有相当大的股权比例。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	至于此次携程获得的30%股份是增发、预留股份还是有原股东退出，上述知情人士表示，没有股东退出，原股东对此次投资还是非常支持的，目前在线旅游市场竞争已经进入白热化阶段，加上国内互联网行业瞬息万变，仅凭同程网自己的力量，短时间内很难做大，如果合纵连横，干掉一部分竞争对手，抢占市场，有利于同程网的发展，自然对股东有益。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	同处华东的途牛网正在谋求上市，由于携程等投资者此次认购，4月29日凌晨，其更新了招股说明书，与同程的战略投资不同，携程对途牛网的投资为财务投资。两家公司没有像“双程大战”激烈，但在国际旅游细分领域存在竞争，途牛网是一家以国际游业务为主的OTA，而携程近期也在积极发力海外旅游市场。两家“联姻”同样抢占了国际游这一细分领域的大部分市场份额。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	<b>三方利益各得其所<b></b></b>\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	艾瑞的一份报告预测，2013-2016年在线休闲旅游交易额的年复合增长率在35.6%左右，高于酒店预订21.0%以及机票预订20.9% 的复合增长率。同时在线休闲旅游仍只占据中国整体休闲旅游市场中7.7%的份额，预计该比例在2016年将达到13.2%，规模达到750亿元。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	但如此巨大的市场空间也吸引了其它巨头们的注意，玩家越来越多，竞争也日趋激烈。去哪儿网背后有百度，而佰程网、在路上、穷游网投靠了阿里巴巴，腾讯也陆续投资了艺龙和同程，途牛网正在积极谋求IPO。目前几家公司的产品和服务各有侧重，但在战略布局上，均将在线休闲旅游市场作为未来的目标。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	如此背景下，合纵连横不仅让携程这样的巨头依然保持市场龙头地位，同时让后起之秀凭借外力进行扩张。携程与去哪儿的合并传闻曾让市场认为在线旅游市场将出现巨头，中小OTA发展将受到压制，但此次携程“抛弃”去哪儿，同时投资认购途牛与同程，将改变外界对OTA市场的预期。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	梁建章回归后，在稳定机票酒店单品业务的同时，已将休闲旅游作为携程的重要战略方向之一。但在在线旅游入口级产品景区门票占据优势的同程网通过一轮激战对其造成不小的冲击，阿里投资的佰程网和途牛网在国际旅游方面也对其形成围攻，加上这些后起之秀背后的巨头，携程必然感觉到压力。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	而通过此次与两家的合作，按照规划，携程的现付景区门票业务将接入同程网，使得前者弥补了在该领域的短板。据21世纪经济报道记者了解，在景区门票品类中，同程网的票量是携程的5倍，景区覆盖是携程的2倍，其中两家均以现付业务为主。并且双方均表示，未来将根据市场变化逐步在机票、酒店等更多领域展开合作。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	而对于途牛的投资，则在国际游方面形成互补和合力。于敦德在邮件中表示，“我们与携程在业务上存在着明显的差异：我们是在线跟团第一，携程在自助游领域规模更大；我们开放采购，携程主要自己生产。两种业务的合作将覆盖更大消费市场。”就目前而言，携程的认购显然对其在美国IPO有利，一定程度上，可以说是携程对途牛在线休闲度假细分领域的认可。\r\n</p>\r\n<p style=\"text-indent:2em;text-align:justify;color:#333333;font-family:宋体;font-size:14px;background-color:#FFFBE5;\">\r\n	从目前的格局来看，偏居苏州一隅的同程网似乎成立最大受益者。吴志祥之前接受记者采访时表示，2013年，同程网的营业收入近7亿元，利润6000万。但经过腾讯与携程的两轮投资，其获得的现金折算在18亿元人民币左右。同时，在业务上，与同为腾讯系的艺龙展开酒店业务合作，扩大其酒店单品的库存，并且借此将机票业务接入微信。而此次与携程合作，同程不仅避免了与之继续打价格战，更获得了携程的资金和流量等资源。（编辑卢爱芳）\r\n</p>','21世纪网','http://biz.21cbh.com/2014/4-29/wOMDA0MTVfMTE1MjQwOA.html','2014-05-01 06:52:26',1,'/news/thumb/Img399010210.jpg','携程一夜连下途牛、同程 在线旅游格局生变','admin','滑明飞'),(39,'<span style=\"font-family:SimSun;font-size:14px;\"><strong>&nbsp;研究结论</strong></span>\r\n<div>\r\n	<p>\r\n		1、携程、艺龙、去哪儿等大型OTA和交易平台仍然是销量最大的平台；\r\n	</p>\r\n	<p>\r\n		2、除了大平台，找准自身特色，不同酒店可以找到适合自己的在线预订模式；\r\n	</p>\r\n	<p>\r\n		3、结合移动互联网，酒店可以有更多新的玩法。\r\n	</p>\r\n</div>\r\n<div>\r\n	<h2>\r\n		<span style=\"font-size:14px;\">序五一假期，把酒店搬到网上吧！</span>\r\n	</h2>\r\n	<p>\r\n		五一小长假将至，出游成为了很多人的选择。对于酒店来说，五一小长假是上半年最重要的酒店销售时段。\r\n	</p>\r\n	<p>\r\n		通过在线渠道销售已经成为酒店业的常态。随着互联网的发展，在线下单成了人们预定酒店的便捷方式。但是在线销售渠道也有很多，有携程、艺龙等大型OTA，也有连锁酒店自己搭建的在线直销平台，另外，手机上还有各种酒店预定类应用。\r\n	</p>\r\n	<p>\r\n		在这种情况下，酒店需要结合自己的特点，选择适合自己的在线销售渠道。求大求全并不是性价比最高的选择，合理规划，一些特定渠道获得的客户群体可能会更精确。\r\n	</p>\r\n	<p>\r\n		当然，在利用互联网作为销售渠道的同时，酒店也可以充分利用互联网来做好客户服务，改进用户住店的体验，形成口碑传播，获得更多客户。\r\n	</p>\r\n	<h2>\r\n		<span style=\"font-size:14px;\">一大平台不可缺失</span>\r\n	</h2>\r\n	<p>\r\n		酒店对于销售渠道往往希望多多益善，任何酒店都不会无视当下最大的预定平台。这就好比做社交游戏不能无视Facebook、做移动游戏不能无视iOS和Android。\r\n	</p>\r\n	<p>\r\n		来自劲旅咨询的数据显示，2013年中国在线酒店市场交易额约为614.6亿元，其中，通过携程旅行网产生的酒店业务全年交易额约占在线酒店市场总交易额的28.7%，位居第一。艺龙旅行网占比约为14.1%，在在线旅行商(OTA)中排名第二。对酒店来说，接入这两个平台几乎就是必选项。\r\n	</p>\r\n	<div>\r\n		<img src=\"http://p.qpic.cn/ninja/0/ninja1398822108/0\" alt=\"\" title=\"\" /> \r\n	</div>\r\n	<p>\r\n		对大型连锁酒店来说，携程、艺龙这样的主流平台能为其带来在线预定的主要客源，同时也可以和这些平台进行多方面的合作，将自己的销量最大化。对于中小型酒店来说，其客源或更加分散，由于大型酒店繁多，中小型酒店接入后也能获取部分长尾客户。\r\n	</p>\r\n	<p>\r\n		一些中小型酒店没有能力开发自有在线直销平台，或者自己做会有困难，接入大平台也能解决这个问题，同时有大平台的背书，还能赢得消费者的信任。\r\n	</p>\r\n	<p>\r\n		事实上，大部分酒店就都接入了携程和艺龙。虽然一些酒店也有自有在线直销渠道，但是多接入一个渠道就能多获得一个客源入口。但对不同渠道，很多酒店都会有不同的价格。\r\n	</p>\r\n	<h2>\r\n		<span style=\"font-size:14px;\">二个性化更重要：商务+机票，休闲+游记</span>\r\n	</h2>\r\n	<p>\r\n		如果说接入大型在线酒店预定平台是体育比赛中的规定动作，那么选择更适合自己酒店定位的在线预订平台就是能大大加分的自选动作。尤其在移动互联网时代，出现了很多定位不同的旅行及酒店预定应用，酒店可以找到和自己定位相类似的移动应用进行差异化合作。\r\n	</p>\r\n	<p>\r\n		大平台很难对某一家酒店进行推广，但是在特定平台上，酒店更容易为自己争取到推广资源。由于用户群重合度高，因此往往能收到很好的效果。\r\n	</p>\r\n	<p>\r\n		对于偏商务类型的酒店，可以和机票、飞机时刻类应用合作（比如航班管家），这些应用的用户和商务酒店目标客户重合度较高。商务酒店在提供预订时，应该重点介绍酒店的商务功能，比如会议室等，突出自己的特色。\r\n	</p>\r\n	<p>\r\n		住商务型酒店的客户往往不会是在最后一分钟定酒店，因此这类酒店要利用互联网和移动互联网，尽早把营销推送到用户端，而不是当客户要住店那一刻才出现在其眼前。另外，这类酒店面向的客户往往是对价格不那么敏感的，如果和主打低价的酒店预定类应用进行合作可能不是一个好选择。\r\n	</p>\r\n	<p>\r\n		经济型连锁酒店可以尽可能多的选择第三方在线酒店预定平台，这类酒店数量众多，服务都非常标准化，面向的用户群也很广。更多拓展自己销售渠道同时，也要避免同一房间同时段被不同人重复预定的问题。事实上，从酒店预定类应用来看，很多应用面向的也是这类酒店，比如快捷酒店管家、今夜酒店特价、酒店达人等。\r\n	</p>\r\n	<p>\r\n		这些酒店的目标客户很多都是在需要住宿时才预定酒店，因此地理位置就格外重要。因此酒店在选择合作伙伴的时候应该注意对方在这方面是否有重点强调。\r\n	</p>\r\n	<p>\r\n		同时，这些酒店的客户往往对价格非常敏感，因此在选择在线酒店预定合作伙伴时，可以视合作方给于的支持程度和平台带来的客户质量，对不同合作方给于不同的价格。这类酒店往往有自己的在线直销平台（比如7天连锁酒店、如家快捷酒店等），也可以在价格上有所区分。\r\n	</p>\r\n	<p>\r\n		对休闲类酒店来说，最佳合作伙伴是在线旅游社区或者游记类应用，当然国内也有一些专门做度假休闲类酒店预定的应用，比如布拉旅行。由于客户以休闲度假为主，因此对酒店的价格并不会特别敏感，但会特别在意人们对酒店的评价，这是酒店在选择在线预订平台时需要注意的。\r\n	</p>\r\n	<p>\r\n		由于游客有游玩的需求，因此这里酒店也可以选择和周边游应用（比如周末去哪儿）合作。一方面能拓展销售渠道，另一方面也能通过这种合作为客户提供更多服务。\r\n	</p>\r\n	<p>\r\n		另外，团购对于酒店来说是另一个渠道，并且现在已经成为一个非常重要的渠道。这种合作非常适合中小型酒店。但在和团购网站合作时，酒店需要把控好入住人数，采取合理的定价策略，避免出现超定的情况。\r\n	</p>\r\n	<h2>\r\n		<span style=\"font-size:14px;\">三拥抱移动互联网：让用户成为粉丝</span>\r\n	</h2>\r\n	<p>\r\n		虽然现在很多酒店都意识到了在线渠道的重要性，但仅仅把互联网、移动互联网当成一个销售渠道是远远不够的。通过互联网和移动互联网，酒店可以和客户更好的连接起来。从这个角度来说，酒店在用户预定前、到店时和离店后都可以通过移动互联网为其提供更好的体验。\r\n	</p>\r\n	<p>\r\n		在客户预定前，酒店最重要的就是营销，通过营销来触达客户。目前营销的渠道已经很多，最重要的就是微博和微信，尤其是微信。由于订酒店是一个相对私密的行为（之前多家酒店订房记录泄漏就让很多人非常担心），而微信恰好能满足酒店和客户之间的私密交流。每家酒店都应该有自己的微信服务号。\r\n	</p>\r\n	<p>\r\n		在微信营销的过程中，酒店完全可以做到个性化。比如通过让客户回答问题来了解客户的出行习惯，记住客户对酒店的需求，并且为客户提供出行建议。这样当客户需要预定酒店时，就更容易想到这家酒店。\r\n	</p>\r\n	<p>\r\n		在获得了客户的预定信息后，酒店其实对客户已经有了一定的了解，比如姓名、手机号，甚至可能还有客户在社交网络上的信息。如果之前通过微信和客户有过沟通，那酒店就了解了更多客户需求。通过这些，酒店可以在客户到店时更好的协助其办理入住手续，提供更加贴心的服务。\r\n	</p>\r\n	<p>\r\n		现在一些酒店已经实行了在线预订到店直接入住，只需要通过手机进行简单的验证（比如扫描二维码），无需前台登记。这样的功能让用户在到店后即可享受到移动互联网的便利性。\r\n	</p>\r\n	<p>\r\n		过去酒店在客人离店后就几乎和客户失去了联系，但是现在通过社交网络酒店可以保持和客户的沟通，比如收集反馈意见以及二次营销，吸引客户下次入住。另外，社交网络的分享功能也有助于酒店品牌和口碑的传播，酒店可以为分享该酒店入住体验的客户提供减免房费等，刺激客户主动传播。这样，一位客户的离店也就是酒店下一轮营销的开始。\r\n	</p>\r\n</div>','腾讯科技','http://tech.qq.com/original/biznext/b013.html','2014-05-01 06:57:32',1,'/news/thumb/561.jpg','传统酒店玩转互联网攻略：  把顾客发展成粉丝','admin','朱旭冬'),(40,'<blockquote style=\"font-weight:bold;font-size:2rem;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<p style=\"font-weight:inherit;font-style:inherit;font-size:20px;font-family:inherit;vertical-align:baseline;background-color:transparent;\">\r\n		<strong>什么是中国的新创业时代？以王强、俞敏洪、徐小平 1996年回国创业的时间为界，到今天，两个时代之间发生了怎样的本质变化？在涌动的时代里，又有什么样本质的东西对创业者而言，是不会发生改变的？真格基金合伙人、新东方联合创始人<a target=\"_blank\" href=\"http://www.36kr.com/p/211579.html\">王强</a>在昨天的WISE Talk上做了分享：</strong>\r\n	</p>\r\n</blockquote>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	感谢大家，听完 Rahul Sood 站在世界的顶峰跟大家分享了现代新世界正在往哪走，我作为一个国内创业的过来人，现在又和小平一起做早期的投资，我想和大家分享一下，我们的年代到现在的年代，初创公司生态究竟发生什么样本质的变化？\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	从柳传志到马云到俞敏洪，作为我们那一代的创始人，当时跟着俞敏洪创业只为一个东西——让自己的物质生活变得和昨天不同。那个时候你要问柳传志他是为了将来收购 IBM？我想恐怕他做恶梦也不敢说，马云也不会想到要用阿里巴巴颠覆整个贸易文明。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	96 年我们从美国回来，做新东方做了 10 年，新东方以后，我和小平出来继续延续新东方另一半梦想——当时新东方提了两个口号，让新东方成为留学出国的桥梁，归国创业的彩虹。后来我们觉得既然当年我们在新东方有后面这个梦想，为什么不能实现一下呢？所以 2011 年我和小平决定做一个资助初创的创业者们来一起做梦的东西，我们就进入早期的投资领域。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<strong>新创业时代关键词：选择、应变、动机、回报</strong>\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	这两年通过跟早期创业的年轻人接触，我发现创业正在发生本质的变化。我称之为“中国新创业时代”的本质正在越来越凸显。它围绕着几个词——\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	第一，选择，你敢不敢于选择？Rahul Sood 说你是选择找一个安适高薪的庞大公司，到那里管走廊，拿着高薪，还是选择一个现在看来就如同雾霾一样的前途，看不到晴空万里？选择是非常痛苦的东西，为什么呢？莎士比亚当年的名著说生存还是毁灭，是人类的大问题。正是由于这个问题，问出了人类内心最深邃的潜意识的困难，它的结果就是你生存还是没法生存。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	我觉得大到人类的选择，小到生活刹那间的选择都非常重要，创业不仅要选择，选择完了以后还要面对残酷的市场搏杀，面对随时而来的挑战和回应。大家知道上个世纪英国大历史学家研究历史，研究结果涵盖了各种文明形态，总结出这些文明怎么出来了，怎么就繁荣了，最后怎么死掉的。上千类的文明，小到部落文明，大到国家文明，民族文明，分析来分析去就两个问题——挑战和回应的关系问题，所有死掉的文明都是在突如其来、没有准备好的各种挑战面前，它丧失了，在第一时间没有做出正确决定的回应，因此它就死掉了。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	所以我觉得创业第二步你的体验肯定是这样，面对惨烈的、各种突如其来的、你想象不到的情况，包括水军，一刹那决定错了，就可能全军覆没。所以创业者心里要迅速成长，迅速成熟。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	第三，我非常同意 Rahul Sood 的说法，如果为了钱千万别走进创业这行，抢银行更快。我始终认为金钱只是一种品德的延伸品。创业者究竟最后是靠什么赢得了市场、赢得了消费者？是靠优秀的品德。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	儿子说，爹你写诗写的这么好，能不能教我？不要专注于那些咬文嚼字的表面，我告诉你，真正学好诗，工夫在诗外。创业也一样，无论你进入哪个行业，真正要靠优秀把你所谓企业的深度做出来，当你的灵魂和别的企业不同的时候，这就是你最大的竞争壁垒。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	最后，创业者会有一个伟大的回报，这个回报是通过你的辛勤、你的专注、你的激情，通过带领团队一望无际的拼杀，通过 30 年、50 年拼出了完全不同的东西。我常常思考永恒是什么，为什么有人 30 岁死了，大家永远怀念他？这就是生命永恒和不永恒的区别，有些人活着他们已经死了，有些人死了他们却活着。如果创业者坚韧不拔地走下去，让你们的梦想从改变自身的物质生命开始，到改变自己精神生命，到感染一群人跟你奋斗人的生命，最后直接改变局部世界甚至整个世界，你的生命的永恒性就出现了，你其他的回报才有了。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	我觉得这是发生本质变化的东西。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<img src=\"http://a.36krcnd.com/photo/2014/a27ff4b31477c82644063c818c980b1b.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" />\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<strong>新创业时代创业者：Follow your dream</strong>\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	现在我简单再回顾一下真格基金这两年投的四类创业者，他们代表了现在我成为新创业时代的年轻人的风貌——2010 年 3 月之前，我们投了陈欧，陈欧是现在新一代偶像级的市场营销高手，他说：“我是陈欧，我为自己代言”，成为了前几年很红的陈欧体。陈欧从 2010 年 3 月开始走进垂直化妆品市场，我们没看好，说你连女朋友都没有怎么能熟悉化妆品呢？难道你们三个哥们互化吗？创业得有起码的真知，但陈欧说，“我对市场有敏锐的感觉”。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	当年小平慧眼，陈欧刚创业的时候投了 30 万美金，整整四年今年能够顺利在美国上市，这个公司整整四年，到今年是销售 100—120 亿，原本这样一个突飞猛进进来的公司本来不大可能成，因为有阿里巴巴、有腾讯在，怎么会短短的四年杀出这样一个东西？但是陈欧的狼性就体现在，为什么找那些人代言？他们代言还不如我，我是陈欧，我为我自己代言，这么一说反而在整个年轻一代间产生了巨大的反响，呼应了这种营销的速度，所以聚美突飞猛进。陈欧代表的是一类初创公司——创业成为自己生命存在的一种宣言。你们看吧，四年后他印证了。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	第二，我们投了一个叫季逸超的小孩，今年 21 岁，他是一个极客，19 岁就做了手机上的浏览器猛犸，19 岁的时候就是非常聪明的。他一辈子只是选择那些和直接现实没什么关系的事，他的口头禅就是找没用的事来做，这是我人生的乐趣。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	我们发现这也是现在新一代创始人的品质——做创业公司成为探索人生生命乐趣的一个极高表现、最终极表现，其他东西没法体现我对生命中的乐趣那种至高无上的探索。他并不关注我能不能上最好的大学，他是北大附小出来的，高考的时候他却不在乎，没进入北大，没进入清华，但是他在 19 岁做出了猛犸浏览器。真格投他的时候，其实也不觉得他能够直接做出什么有市场意义的东西，但我们投的时候从来不会问这个东西能够赚多少钱，实践来看，老天给我们的回报非常好。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	投资的工夫在投资之外，大家都在算数字的时候我就不算，你可能获得的就是大数字。你天天算小数字，加在一起也是非常有希望限的，人生和投资创业都是一样的道理。后阿里季逸超又发明了手机上的针对苹果的输入法，大家用了以后觉得很好，现在三星跟他在谈，能不能用他的产品。5 月份他即将要推出让我们眼睛一亮的一个东西，真是智能搜索的新的产品，真正颠覆了我们对搜索的全部实践。我现在不便透露，5 月份大家可以去他的发布会。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	第三个就是我们最自豪能投到的一位创始人，赵勇。赵勇他原来是 Google Glass 的主设计师之一，当时我们两次在硅谷和赵勇喝酒，感觉到赵勇内心涌动着一种东西。小平就开始使用他最杀手级的东西——“忽悠”，我们花了一年半左右的时间来忽悠，最后令我们没有想到的是，赵勇真的说我现在要回国了，离开 Google，我要让我的计算机识别的科学家梦想在中国实现。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	去年赵勇拎着皮箱告别 Google，回到小平的住处。回来之前，很多基金都非常兴奋，都说肯定投他啊。但当天晚上小平告诉赵勇，你现在没有产品，也没有什么方向，大家可能就不投了。赵勇说，不投我也回来了，他们不投我也已经辞了，小平就说，真格答应，如果他们不投，我们把答应好的全投了，你敢扔掉 Google 的年薪，为什么我们不敢扔我们的钱？后来我们非常快乐地走到了今天，赵勇公司的产品雏形将是令世界眼前一亮的东西，赵勇给我们描述，他说让摄像头带上人的眼睛和人的脑子，他的公司名字叫格灵深瞳，一闪谁都跑不了。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	所以赵勇代表着典型的工程师科学家改变世界的梦，就像 Google Glass，像 Google 自动驾驶车这样的级别，他要做世界级的东西，这是他这类人创业的目标。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<img src=\"http://a.36krcnd.com/photo/2014/b0970cc1e26ef3294494ba7eef78c41e.jpg\" alt=\"\" style=\"height:auto;\" width=\"720\" height=\"480\" title=\"\" align=\"\" />\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	后来真格又投了一家做丧葬用品的公司，刚开始看到这个 case 的时候，真格内部有人说别投这个，有点不吉利。我和小平眼睛一亮，觉得这是改变人类的。这个创始人带着家庭的痛苦，经历了母亲的离开，感觉到中国的丧葬业太黑了，太不光明了，里面要颠覆的东西太多了，为什么不能用真正高科技的手段做 O2O？我们感觉他有一种梦想，要用高科技的手段加上人文的关怀颠覆传统。让大家像对生一样来敬仰死亡，让大家像对生一样追求死亡的关怀、温情，把冰冷在每一个过程中融化，这就是改变世界的东西。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	总结一下，真格两年投资了 90 个公司，我们天天接触到崭新一代的创业者，他们都阳光，非常阳光。而且现在这个时代更需要阳光，不阳光外面就是雾霾，你自己都看不见，市场在哪更看不见，得自己充满阳光，有坚信的东西。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	我们投资的创业者，他们选择的行业都是他们在睡梦里也想实现的，他们早已经知道，我十年以后就是做这个，只不过提前到今天。并且他们都很有能力，非常专注。你想陈欧现在做了 100 亿，我们半夜两三点到他办公室，他还在那指挥，好像他们不需要睡觉，赵勇也天天领着他们公司日以继夜往前奔。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	你们说什么是企业发展的速度？大家都谈到速度，互联网时代，大家认为速度最重要，我认为其实有相对速度和绝对速度——相对速度就是大家有的你也有，他们有钱、你也有钱，他有的你也有的话，只能是相对。绝对速度是什么？就是一个企业的灵魂，看你想的多么深，如果你不能想的深，你只拥有表层的东西，你跑出来的概率不大的。就像当年我们读过的《乌兔赛跑》，我们津津乐道说乌龟太牛了，专注、不自傲，兔子有什么？本来应该第一，结果倒数第一。当年钱钟书先生说，这个前提只例举了兔子睡觉的情况，但如果兔子不睡觉，乌龟永远追不上它，这就是绝对速度和相对速度的辩证关系，如果你聪明、专注、有先机，又像兔子一样不睡觉，乌龟后发起来怎么能追得到你？\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	综合来说我，我想作为创业者都要在一个漫长的心态中，艰难地挺进。创业从疑虑开始，然后你不断地点燃你的激情，点燃别人的激情，只有这样化解成每天做的东西，才能一如既往地往前走。我们在黑暗中摸索，我们能给出什么就给出什么，我们现在的疑虑正应该是我们的激情，我们现在的激情正应该是我们真正做的任务，这就是我理解的崭新的创业时代和精神。\r\n</p>\r\n<p style=\"font-size:17.77777862548828px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	王强现场演讲视频如下：\r\n</p>\r\n<iframe height=\"498\" width=\"510\" src=\"http://player.youku.com/embed/XNzA1OTI4MDY0\" frameborder=\"0\" style=\"width:620px;\">\r\n</iframe>','36氪','http://www.36kr.com/p/211631.html','2014-05-01 11:04:54',1,'/news/thumb/d615d4745667c56abce8e5b4cace0d56.jpg','【WISE Talk-主题演讲】真格基金合伙人、新东方联合创始人王强：中国的新创业时代（附演讲视频）','admin','苑伶'),(41,'<p style=\"text-align:center;\">\r\n	<img src=\"/upload/image/20140501/20140501114455_740.jpg\" alt=\"\" width=\"615\" height=\"228\" title=\"\" /><span style=\"font-size:14px;\"></span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">现如今，在互联网这块大网络中，各类应用通过不同的 API，互相依赖着彼此的数据及服务。在这个大环境下，API 管理对于企业及开发者们来讲，变得越来越重要。与此同时，该领域也逐渐升温：从去年开始，先是</span><a target=\"_blank\" href=\"http://www.36kr.com/t/202684.html?preview=changweibo\"><span style=\"font-size:14px;\">API管理服务商Mashery被Intel收购</span></a><span style=\"font-size:14px;\">，随后另一家</span><a target=\"_blank\" href=\"http://www.36kr.com/p/202791.html\"><span style=\"font-size:14px;\">API管理服务商Layer7也被IT管理软件及解决方案提供商CA收购</span></a><span style=\"font-size:14px;\">。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而成立于 2004 年的老牌</span><a target=\"_blank\" href=\"http://www.36kr.com/p/205111.html\"><span style=\"font-size:14px;\">API管理平台Apigee</span></a><span style=\"font-size:14px;\">，也在今天宣布在新一轮融资中获 6000 万美元资金，由 BlackRock，Accenture 以及 Focus Ventures 领投。在此次融资后，Apigee 总融资达 1.71 亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与其他 API 管理商不同，除了帮助企业进行 API 的推荐和监控，Apigee 还提供更专业的管理服务，如 BaaS（后端即服务），以帮助客户搭建应用及软件来进行分析并预测。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">除此之外，Apigee 这几年一直在通过进行收购，来推出新功能。预测分析就是在其收购 InsightsOne 后推出的新功能。Apigee 还计划在从电信公司联盟（Wholesale Applications Community，WAC）收购移动通讯计费技术后，推出以电信相关的 API 管理服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在此次融资后， Apigee 可能还会考虑收购自己在 API 管理领域的竞争对手，如在</span><a target=\"_blank\" href=\"http://www.36kr.com/p/202843.html\"><span style=\"font-size:14px;\">一年前获得420万美元投资的3scale</span></a><span style=\"font-size:14px;\">。而据后者透露，3scale 也已经在 API 管理领域小有建树，客户数已经从去年的 180 家增加到了 300 家。</span>\r\n</p>','36氪','http://www.36kr.com/p/211634.html','2014-05-01 11:45:30',1,'/news/thumb/4e30c02a1db77e3394d4d70d0fa1e0b8.jpg','API管理平台Apigee再获6000万美元投资','admin','patrick'),(42,'<p style=\"text-indent:2em;\">\r\n	<a target=\"_blank\" href=\"http://www.36kr.com/p/209800.html\"><span style=\"font-size:14px;\">Facebook 190亿美金收购 WhatsApp</span></a><span style=\"font-size:14px;\">&nbsp;的案子吸引了人们的大量关注，但是这笔并购案除了价格以外并没有太多令人惊奇之处。其实从 2010 年以来，Facebook 的并购从来就没有停止过。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 平均每年收购 9 家公司，主要是为了扩充人才储备和推广产品。但是不同于 Google 在各个领域并购，Facebook 的并购主要专注于扩张和优化其在社交领域的核心业务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">潜在被并购方所关心的是 Facebook 并购策略的透明性。国际市场、新的社交群体、大量的用户和潜在的收入是市场竞争的决定因素。而且正如 WhatsApp 所向我们展示的一样：只要用户够多，钱并不是问题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随着</span><a target=\"_blank\" href=\"http://www.36kr.com/p/210673.html\"><span style=\"font-size:14px;\">Oculus VR</span></a><span style=\"font-size:14px;\">&nbsp;和 WhatsApp 被纳入麾下，今年可能会成为 Facebook 史上并购最多的一年。</span><a target=\"_blank\" href=\"http://exitround.com/facebooks-2013-ma-committed-core/?nsukey=F1gosQP1dJ8hmfQJVfy22FrZ5s1PaN7GIQCgWGTBp9DgMhgfkPFNWzHorsOs1YkHl0H1yCryJ5CehNzMPwBrMg%3D%3D\"><span style=\"font-size:14px;\">Exitround</span></a><span style=\"font-size:14px;\">根据现有公开数据和 SEC 的文件分析了 Facebook 2013 年的并购，并制作了一份报告。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">策略</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 2013 年的所有并购都旨在增强核心竞争力、获得新用户。并购主要在三个领域：社交和游戏、移动社交分析、移动服务平台。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">WhatsApp 的收购案很好地表现了 Facebook 的这一策略，WhatsApp 有着 5 亿活跃用户、以及超过 3.5 亿日活跃用户，用户增长速度比史上任何一个社交应用都快（包括 Facebook 本身），Whatsapp 用户有机的、快速的增长也扩展到新兴市场，包括俄罗斯、墨西哥和巴西，这也意味着在未来更多的新用户和新的收入。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年十二月收购的</span><a target=\"_blank\" href=\"http://www.36kr.com/p/208514.html\"><span style=\"font-size:14px;\">SportStream</span></a><span style=\"font-size:14px;\">也是个很好的例子。虽然最近的并购都是在加强用户日常的互动与沟通，SportStream 却在开拓一个新的领域。体育新闻是次要的，而在尽可能短的时间内获取更多更好地数据，能够帮助 Facebook 预测用户行为并带来更多的广告收入。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">支出</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 2013 年的并购案中只有三笔公布了并购金额，每一笔都在 1 亿美元左右。广告技术平台</span><a target=\"_blank\" href=\"http://www.36kr.com/p/201624.html\"><span style=\"font-size:14px;\">Atlas</span></a><span style=\"font-size:14px;\">的并购价格在 5000 万到 1 亿之间，移动开发后台服务商</span><a target=\"_blank\" href=\"http://www.36kr.com/p/202862.html\"><span style=\"font-size:14px;\">Parse</span></a><span style=\"font-size:14px;\">并购为 9000 万美元，以色列初创公司</span><a target=\"_blank\" href=\"http://www.36kr.com/p/206908.html\"><span style=\"font-size:14px;\">Onavo</span></a><span style=\"font-size:14px;\">的并购价格为 1.5 亿美金。相反地，其它大部分交易的价格都低于 5000 万美元或者尚未完成。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此前，</span><a target=\"_blank\" href=\"http://www.36kr.com/p/98250.html\"><span style=\"font-size:14px;\">10亿美金收购Instagram</span></a><span style=\"font-size:14px;\">是 Facebook 最大手笔的收购。然而 Oculus 和 WhatsApp 已经打破了这个记录，2014 年的收购价格可能会持续攀升。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">产品与人才</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 2013 年的并购的主要目的都在于获得人才和产品。9 起并购中有 5 起都是为了人才，其中 3 起尚未完成。唯一一家被收购后保持团队不变的公司是来自旧金山湾区的移动开发后台服务商 Parse。越来越多人几乎只用移动设备上网，Parse 可能会成为 Facebook 应对 Android 和 iOS 的良方。通过让 Parse 团队的自主研发，Facebook 可能很快会拥有一个竞争力十足的平台。而新的技术也可能成为 Facebook 新的竞争力。扎克伯格对于未来的平台曾说过：</span>\r\n</p>\r\n<blockquote style=\"text-indent:2em;\">\r\n	<p>\r\n		<span style=\"font-size:14px;\">移动是今天的平台，我们现在开始为未来做准备。对我来说，未来最令人兴奋的平台在于视觉呈现或者说改变你所看到的，创造一种更佳的体验。今天的收购（Oculus）便是对未来计算的赌注。</span>\r\n	</p>\r\n</blockquote>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">通过这些可以看出，Facebook 收购的策略在于更好地了解用户是如何获取社交信息的，如何联系的，不论在现在还是未来。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 收购的公司平均成立时长为 4 年。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">员工数量</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/3b4319cbf62c964decc34ebd577fae09.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">地理位置</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 的收购主要还是集中于美国本土，2013 年收购的 9 家公司中只有 2 家在海外，分别是以色列的移动数据监测平台 Onavo 和英国的代码漏洞检查软件开发商 Monoidics。但即使是 Monoidics 在西雅图也有办事处。虽然新兴市场潜力很大，但 Facebook 更倾向于购买本土的公司。更加有趣的是，即使在美国国内，Facebook 也更加愿意购买旧金山湾区的公司，可能是因为湾区的公司似乎更省心，而且有可能溢价出售。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/0dfc285106043d4fa24ab97b00060841.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<br />\r\n</div>','36氪','http://www.36kr.com/p/211629.html','2014-05-01 11:47:15',1,'/news/thumb/35179f6965f940a8e915fed07d49b688.png','用数据解析Facebook 2013年并购策略：致力于增强其核心竞争力、获得新用户','admin','Kryptoners'),(43,'<p style=\"text-indent:2em;\">\r\n	Facebook于美国当地时间周三，在旧金山市召开了F8开发者大会。在此次大会中，Facebook为每个人都准备了一点特别的东西，这点从其一系列以消费者和开发者为主题的产品发布就可以看得出。F8大会围绕打造应用(build)、推动增长(grow)和帮助盈利(Monetize)三个方面来帮助开发者。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在此次F8大会上，Facebook CEO马克·扎克伯格(MarkZuckerberg)为Facebook用户推出了全新的登陆方式，让用户们能够匿名登陆第三方应用，就是说，人们仍然可以使用Facebook账户登录第三方应用，只不过可以选择以身份保护模式进行浏览。对于广告商和以营利为目的的应用开发方，Facebook说到了自己的AudienceNetwork，这个众人期盼已久的移动广告网络现在已开放注册。至于Facebook的应用开发人员群体，这家社交网站则承诺不再打破原有的规则。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	对于12.8亿的Facebook用户来说，此次大会中最有意义的产品就是“匿名登陆”(AnonymousLogin)，其改变了标准Facebook登录选项，让用户能够在不分享任何Facebook个人信息的情况下，使用一款应用。扎克伯格在大会上表示，“今天，我们想要做更多事情，将控制权和支配力重新放回人们的手中。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	与Facebook标志性蓝色不同，匿名登陆按键采用黑色，该功能是为了在不需要用户名和密码的情况下，方便用户登陆应用，而没有“个人数据向不受信任来源提交”这样有时会令人感到不安的承诺。\r\n</p>\r\n<div>\r\n	<img src=\"http://img1.gtimg.com/tech/pics/hv1/141/68/1580/102756981.jpg\" alt=\"\" title=\"\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	不过，Facebook目前正在和部分应用开发方(如Flipboard等)这个新登录选项进行测试，也就是说，在未来数月里，用户或许不会在自己最爱的应用程序中看到那个黑色按键。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在Facebook此次开发者大会的的众多主题中，其中之一是“以人为先”，让人们能够更好的控制自己的数据，而Facebook推出匿名登陆选项一举，呼应了该主题。扎克伯格详细解释了这一概念，即：增进信任，让人们更放心地在第三方应用中使用Facebook。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	同样地，Facebook重置标准登陆选项，也是为了便于用户自由选择将哪些信息分享到所使用的应用中。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Facebook还希望与开发人员建立互信，而扎克伯格也就Facebook平台应用开发的稳定性和安全性方面，向开发者群体做出了一系列承诺。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“我们现在所关注的是，构建一个稳定的移动平台。”扎克伯格说道。他表示，Facebook想要构建一个“跨平台的平台”，来帮助开发者消除苹果、谷歌(微博)和微软等平台间所存在的差异。扎克伯格表示，Facebook的作用就是，构建起一座能够横跨“所有这些世界(指操作系统)”的稳定的移动“桥梁”。\r\n</p>\r\n<div>\r\n	<img src=\"http://img1.gtimg.com/tech/pics/hv1/144/68/1580/102756984.jpg\" alt=\"\" title=\"\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	正如预期的那样，Facebook此次大会进一步介绍了旗下移动广告网络AudienceNetwork，今年1月起，Facebook便与部分客户共同对该网络进行测试。周三，Facebook开放AudienceNetwork注册，并承诺，将会在自己100万名广告主的帮助下，帮助应用开发者从应用程序中获取收益。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	AudienceNetwork允许市场营销商将自己的广告从Facebook推到与其达成合作协议的应用程序中。广告商们可以自己选择横幅广告、弹出广告或者原生广告等Facebook广告模式，来刺激应用安装及其他行为，并利用Facebook的广告统计及分析工具。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	出于对Facebook大规模产品发布的期望，企业观察人士一直紧盯着Facebook AudienceNetwork移动广告网络未来能够为这家社交网络所带去的额外营收。但是，Facebook首席运营官雪莉·桑德伯格(SherylSandeberg)曾在上周警告称，该广告网络仍处于初期阶段，并不指望该产品今年能够为公司创造可观收入。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	就在此次开发者大会召开前一周，Facebook已向华尔街证明，自己的广告业务发展比以前更加健康。在2013年第一季度，这家社交网络的广告营收达到22.7亿美元，其中59%来自移动端动态消息上投放的广告。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	周二，Facebook股价报收58.15美元。周三，扎克伯格发表主题演讲时，Facebook股价上涨2%，当日报收于59.78美元，上涨2.8%。Facebook产品发布并未对该公司股价带来较大波动。\r\n</p>\r\n<h2 style=\"text-indent:2em;\">\r\n	以下为扎克伯格在F8大会上演讲要点：\r\n</h2>\r\n<p style=\"text-indent:2em;\">\r\n	1. 这将是一次不同的F8开发者大会。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	我们旨在帮助你们（开发者）建立自己的应用，帮助你们的应用成长并实现商业化。帮助你们最好的方法是，向你们提供一个稳定的移动平台。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2. 三年时间，Facebook转型成为一家移动企业。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	仅去年一年，Facebook就处理了30亿美元的移动支付交易。我们大部分业务都来自移动，但以移动为构建基础是件很麻烦的事情，因为移动太过独立。苹果、谷歌和亚马逊都游戏机的平台，但是却一直无法让自己的平台更好地发挥效应，以帮助人们建立能够在全部这些平台上运行的应用程序。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	3. 快速行动，突破传统。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这曾是Facebook的座右铭。我们容许一些小瑕疵出现，但是修复这些漏洞并非由让我们更快速的发展，反而拖累了我们的步伐。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	4.快速行动，稳定架构。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	所以，Facebook有了一个新的座右铭，虽然这个新座右铭没有之前那个上口，但是反映了我们现在的运作方式。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	5. Facebook立下两大承诺。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Facebook保证向开发者们提供两年稳定的应用程序接口(API)。Facebook承诺在48小时内修复所有重大故障。这是一项重大承诺，我们认为，我们有能力开发出一个更加稳定的平台。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	6. 以人为先\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Facebook另一个新座右铭。人们想要进一步控制信息分享方式，特别是应用内分享。我们非常重视这一点。我们要以人为先，为用户提供工具让他们能够登陆并信任应用。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	7. 信任Facebook。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	我们知道很多人都害怕点击Facebook登陆这个按键。为了开发人员和社区，网络需要有能力让用户信任Facebook和Facebook登陆系统。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	8. 改变权限。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	新的登陆系统让用户能够逐行控制自己在各个应用内所分享的内容。用户拥有了更多控制权，人们重拾对Facebook登陆的信心。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	9. 匿名登陆。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	我们从来不希望任何人因为自己在Facebook上分享的信息而吃惊。我们将能够实现匿名登陆。免去应用登陆和使用的麻烦。我们不会把你的信息告知应用，无所畏惧地去使用应用。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	10. 建立一种文化，关爱服务对象。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	我才和妻子庆祝完相识10周年纪念，Facebook也迎来了10周年纪念。Facebook让我们与很多不同的人连接在一起，但是黑客文化盯上的是我们，不是我们所服务的人。我想要建立一种文化，去爱那些我们所服务的人。\r\n</p>','腾讯科技','http://tech.qq.com/original/tmtdecode/t620.html','2014-05-01 11:55:09',1,'/news/thumb/0.jpg','F8大会不能错过的精彩看点：推新移动广告形式','admin','腾讯科技'),(44,'<p style=\"text-align:left;text-indent:2em;\">\r\n	<img src=\"/upload/image/20140501/20140501115758_885.jpg\" alt=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	通过刺激大脑特定区域，一名22岁的男子瞬间“回到过去”——他身处医院、睁眼看见的却是记忆中熟悉的家乡火车站。科学家称，这一发现有助于确定大脑存储视觉位置信息的部位，进而给治疗孤独症和老年性痴呆症带来突破。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	皮埃尔•梅格万在位于美国纽约的范斯坦医学研究所工作，他和同事们希望探明人类大脑如何存储、检索位置信息。为此，他们寻求一位癫痫症患者的帮助。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	据悉，治疗癫痫症时，医生会在病人的颅骨上钻一些小孔并插入5厘米长的电极，引导电极分布于大脑组织的特定位置。而借助病人脑内植入的电极，他的神经活动可以被记录下来。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	实验过程中，梅格万及其同事首先使用功能核磁共振扫描仪，观察病人看一些不同的特定物体和场景时大脑活动状况;随后，病人看另一组类似的图片，他脑内植入电极的活动轨迹被记录。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	研究人员发现，在这两种情况下，病人大脑海马体附近皮层的一个特定区域均对地点图像作出反应，但对人体部位或者其他工具的图像无动于衷。“相较于其他类型的物体，这个大脑组织的细微区域似乎更在意房屋和地点信息，”神经外科专家阿谢什•梅塔说。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	接下来，研究人员利用电极刺激该区域，致使病人出现一系列复杂的视觉幻像：他先是看见家乡的火车站，而后是家里的楼梯和蓝色的衣橱。当刺激行为重复进行时，同样的场景在病人眼前一再出现。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	而后研究人员转而刺激附近的颞下回皮层，这位22岁的受试者称现场所有医护人员的面孔变得模糊起来，他们的脸部特征不再清晰。当介乎大脑海马体附近皮层和颞下回皮层之间的大脑组织受到刺激时，病人看见的景象再度改变，他说医护人员突然变成在他家经营的披萨店里工作的意大利人，“他们都穿着围裙之类的东西”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	梅格万解释称，受试者出现视觉幻象是成千上万个神经元共同作用的产物，“可能一组特定的神经元构成了穿围裙披萨店员工的回忆图像，而另一组则构成了一个烤炉或者一条街道。所有这些组合起来，唤起了大脑深处的记忆”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	梅塔补充道，类似实验可以帮助因患上孤独症和老年性痴呆症而出现认知功能退化的人们，“如果我们能够绘制出大脑运作图，就可以利用研究成果找到治愈病症的非侵入性疗法”。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140501/004377.htm','2014-05-01 11:58:26',1,'/news/thumb/102763007.jpg','电极刺激大脑 会让你“回到过去”','admin','腾讯科技'),(45,'<p style=\"text-indent:2em;\">\r\n	<img src=\"/upload/image/20140504/20140504083700_168.jpg\" alt=\"\" width=\"724\" height=\"551\" title=\"\" align=\"\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	今天刚公布的交易数据显示，比尔盖茨在 4 月 30 日以每股 40.34 的价格抛售了 460 万股的微软股票，让手中持有的微软股票减为 3.301 亿股，低于鲍尔默所持有的 3.33 亿股，成为了微软的第二大个人股东。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	自从退休后，比尔盖茨平均每年卖掉 8000 万股的微软股票以支持比尔及梅琳达·盖茨基金会，一个力图改善全球健康卫生和基础教育的慈善机构。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	比尔盖茨在 2000 年卸任微软的 CEO 后，又在今年二月卸任了微软的董事会主席，不过他表示自己会作为微软的技术顾问，更积极的参与到微软的转型中。\r\n</p>','36氪','http://www.36kr.com/p/211672.html','2014-05-04 08:37:11',1,'/news/thumb/5fa7202bea193d742b3d4a72bf8d069b.jpg','比尔盖茨减持460万股微软股票，成为微软的第二大个人股东','admin','暮山'),(46,'<div class=\"mbArticleSharePic hover\" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"Airbnb引发非法经营争议 旧金山欲立法严管短租\" src=\"http://img1.gtimg.com/tech/pics/hv1/208/41/1582/102880213.jpg\" />\r\n</div>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">腾讯科技 王钟婉 5月4日旧金山报道</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	过去两年来，对于Airbnb的短租模式应不应该以及怎么规范，一直都属于台面下的讨论，但随着住房短缺的尖锐话题成为瞩目焦点，这场斗争也被带到了阳光下。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	从采取法律行动，到提案立法规范，再到放上选票让选民投票，以及上周在旧金山市府前的支持Airbnb游行，这场斗争的热度正在节节升高。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">旧金山：短租违法</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在旧金山一所学校担任特殊教育老师的杰夫．瑞卡兹，他在学校的薪水不高，为了补贴生活费，在自己的客厅摆了张床，透过Airbnb网站出租给想省下酒店钱的游客。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	上周他回家看到门上房东贴着的纸条后，简直快晕过去了。纸条上写着：”你非法使用这间公寓作为酒店，必须在48小时内搬离！”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	他联系Airbnb网站，他们表示爱莫能助。在七成居民都是租客的旧金山，势力庞大的租客联盟也明确地拒绝了杰夫瑞．卡兹的协助请求，“他们明确说了不喜欢Airbnb。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	租客联盟不喜欢Airbnb的原因很简单。旧金山有越来越多的屋主，把房客赶出去后，将公寓转成Airbnb的短租模式。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在有租金控制加上极度保护租客权益的旧金山，以一居室的公寓为例，正常市场价格租金为2500美元，如果遇到长期租客，在租金控制的限制下，房东只能收1800美元。以每晚房价平均150美元计算，一个月就可入袋4500美，夏天旅游旺季的收入甚至更高。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在原本住房就僧多粥少的情况下，有更多公寓从租屋市场撤下。四月底，旧金山市府律师丹尼斯．赫雷拉(Dennis Herrera)起诉了两名屋主违反了《艾利斯逼迁条款》(Ellis Acts)，原因是他们引用该条款将房客赶走，却将房子透过Airbnb、VRBO等短租网站出租。该条款允许屋主在收回房屋自用的理由下，要求房客迁出。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	杰夫瑞．卡兹研究后发现，在旧金山透过网站短期转租是违法的，有可能面对旧金山市都市规划部的罚款，还会因为非法经营酒店而被屋主驱逐。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	旧金山法律禁止所有30天以下的住宅出租，除非房东能取得一份特别许可执照。这个执照申请费昂贵，手续也很繁琐，所以几乎没有人申请。这项禁令规定，无论房东是自有还是自己本身是长期租客，不管入住的房客是每天换人，还是一年只来一次，也不论是出租一个房间还是整栋房子，只要是短租就是违法。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">获利庞大民众铤而走险</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Airbnb的房东现在出租房间得冒着被投诉的风险，特别是这些都被邻居看在眼内。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“如果你就住在隔壁或是附近，突然之间邻居的房子变成了酒店，各式各样的陌生人进进出出，多数居民都会有极大反感”，都市规划部执法经理克利斯丁．侯说。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	调查这些投诉也变得更加困难。部分网站与房东会故意不提详细的住址，某些房东还会故意将住址列在金门公园的正中央或太平洋。直到真正有意愿的住客写信跟他们联系后，才会告知确切的住址。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“由于短租对于业主来说实在太赚钱了，有些人即使平常很守法，也愿意冒着犯法的危险”，克利斯丁．侯说，“有些人会想尽一切办法不让人发现。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	她说，房东会填写假租约，或告诉房客有人问起时，就说自己只是房东的朋友，并非付钱的客人。有些人甚至还会雇人假装自己是长期租客。越来越多人钻空子，对执法的官员当然也越困难，毕竟要抓到房客带着行李箱退房的机会少之又少。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">遭房东逼迁房客求助无门</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	自从2012年开始，都市规划部就已经收到大量关于短租的投诉，多数都是来自邻居。现在该部门正积极地调查大约85人在Airbnb、VRBO和其他网站上出租房间的房东。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	一名代表租客的律师乔．托拜纳表示，近来Airbnb相关的驱逐通知，已经达到前所未见的程度。而请一名律师打官司，光是准备开庭文件和准备上庭前的律师费就会高达一万五千美金之多。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“这些人不是故意藐视法律”，乔．托拜纳说，“他们以为在Airbnb上出租房间是没问题的，因为Airbnb没跟他们说不行。Airbnb应该帮这些租客打官司，或者是他们应该公开说明在旧金山短租是违法的，可能会导致租客被赶出。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Airbnb在网站上的确告诉用户必须要查照当地法律与自己的租约。在旧金山的部分也说明短期出租的限制，并刊登相关法规的链结。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“很不幸的，我们无法对五十万名房东，向每一个人提供法律协助或检查他们的租约，但我们尽力帮助这些房东了解相关问题”，Airbnb全球公共政策部门负责人大卫．汉德曼(David Hantman)向旧金山纪事报表示，“我们只能尽力确保这些法律合理。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">华裔市议员推动新法</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	一群有力人士正在推动一项选票提案，要求短租只能在商业区内进行，同时还必须要有屋主或物业管理处的许可，同时还要求额外的保险，并提供奖金给举报的线人。提案的支持者认为，严格限制将有助于平衡旧金山住房短缺现象。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“短租市场快速成长，必须要有限制”，提案的凯文．威区（Calvin Welch）向媒体表示，“当发现住家旁边的房子居然变成酒店时，都感到非常不可思议。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	相对于严苛的选票提案，旧金山市议会主席、华裔的邱信福也提出折衷方案，让主要居住在该地点的住户有权出租，但要求必须在市府登记注册，同时要求一年内必须有四分之三的时间住在该地才有权出租。这个提案已经获得Airbnb与旧金山租客联盟的支持。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Airbnb上周决定，将开始从夏天收取14%的酒店税。Airbnb表示，希望屋主能对此事乐观其成，同时也希望一切活动符合当地法律。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">Airbnb必须证明其商业模式可行</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	被估计有100亿美元市值的Airbnb正面对艰困的十字路口，特别是如果这间创业公司最终想公开上市，其商业模式必须向大众证明是可行且合法。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	今年四月，Airbnb也被纽约州总检察长告上法庭，要求该网站公布有多少房东在纽约市出租房间，并指控这些人是在非法经营酒店业。旧金山与纽约都有相同之处：房租极贵且住房不易，加上大量来自全球的观光客，都让短租的机会蓬勃。因此官员正在研究如何规范这个以前从未接触过的市场。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Airbnb面对可能扼杀其商业模式的选票提案，也公开呼吁支持者站出来。在通知媒体将举行抗议活动的电子邮件中，其发言人大卫．欧文（David Owen)说：“这个选票提案的起草人希望在旧金山全面禁止短租。因此我们应该团结起来，告诉所有在旧金山的居民，我们是如何让这个城市成为一个无论在居住、工作与观光上都变得更好的城市，这点极为重要。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	大约有150名Airbnb的支持者，参与了旧金山市政府前的抗议行动。许多人举着标语，“让分享更公平”（Make it fair to share）和“让Airbnb顺其自然”（Airbnb：Let it be）。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	许多参与活动的房东担心被屋主、市政府或邻居发现自己从事短租，因此不愿意向媒体透露他们的全名。其中一名妈妈向腾讯科技表示，丈夫担任出租车司机的薪水微薄，加上Uber与Lyft的新兴模式竞争已经抢走不少客人。她自己长期请假照顾腿部刚开刀手术的四岁小儿子，透过Airbnb出租楼下的小房间，减轻了不少家里的经济负担。“Airbnb为劳工家庭提供了必要的协助”，她认为，“如果房子是你自己的，你就应该有权力决定要怎么处理。”\r\n</p>\r\n<br />','腾讯科技','http://tech.qq.com/a/20140504/011161.htm','2014-05-04 09:02:13',1,'/news/thumb/102880213.jpg','Airbnb引发非法经营争议 旧金山欲立法严管短租','admin','王钟婉'),(47,'<div class=\"mbArticleSharePic \" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"人人最新股权曝光：陈一舟持股25.7% \" src=\"http://img1.gtimg.com/tech/pics/hv1/149/44/1582/102880919.jpg\" />\r\n</div>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">腾讯科技 雷建平 5月4日报道</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<a class=\"a-tips-Article-QQ\" href=\"http://stockhtm.finance.qq.com/astock/ggcx/RENN.N.htm\" target=\"_blank\">人人</a>公司日前通过SEC披露20-F年报，曝光人人公司最近的股权情况。截止2014年2月28日，人人公司CEO<a class=\"a-tips-Article-QQ\" href=\"http://datalib.tech.qq.com/people/112/index.shtml\" target=\"_blank\">陈一舟</a>(<span class=\"infoMblog\"><a class=\"a-tips-Article-QQ\" href=\"http://t.qq.com/joechen-renren#pref=qqcom.keyword\" target=\"_blank\">微博</a></span>)持股25.7%，拥有47.2%的投票权。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	人人公司COO刘健持股3.2%，拥有0.9%投票权。整个管理层占股37.6%，投票权占50.6%，超过半数。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	当前人人公司最大股东为软银，软银通过旗下子公司SB Pan Pacific Corporation持有人人公司37.6%的股份，拥有42.4%的投票权，在投票权方面稍逊于陈一舟。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	人人公司股东、投资机构DCM持股8.2%，拥有2.3%的投票权。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div class=\"mbArticleSharePic \" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"人人最新股权曝光：陈一舟持股25.7% \" src=\"http://img1.gtimg.com/tech/pics/hv1/60/44/1582/102880830.jpg\" />\r\n</div>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-align:center;\">\r\n	<span style=\"font-size:12px;\">人人公司最近股权结构（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	资料显示，2008年4月，千橡（现名“人人公司”）与软银签署投资协议，根据协议，软银于当月向千橡注资100亿日元(约合9600万美元)，获得14%股份。注资1年后，软银行使300亿日元(约合2.88亿美元)的认股权证，持股比例增至40%。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	2011年1月31日，软银将其持有的千橡集团股份悉数转到旗下子公司SB Pan Pacific Corporation。SB Pan Pacific是一家注册于西太平洋岛群密克罗尼西亚的公司。SB Pan Pacific在人人公司IPO前持有39.6%股份，IPO后持股比例被少量稀释。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	当前人人公司拥有1,077,398,238股普通股，之所以陈一舟拥有的股权比软银低，投票权比软银高，根本原因在于人人公司拥有的AB股制度。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	截止2014年2月28日，人人公司拥有772,009,788股A类普通股和305,388,450股B类普通股，A类普通股一股拥有一票投票权，B类股一股拥有十票投票权。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	陈一舟拥有170,258,970股B类普通股，100,000,000股A类普通股，另9,253,125股A类普通股陈一舟可在2014年2月28日后的60天内行权。SB Pan Pacific拥有270,258,971股A类普通股，135,129,480股B类普通股。陈一舟拥有比SB Pan Pacific更多的B类普通股。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140504/011569.htm','2014-05-04 09:03:29',1,'/news/thumb/102880919.jpg','人人最新股权曝光：陈一舟持股25.7%','admin','雷建平'),(48,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><img src=\"/upload/image/20140504/20140504090806_486.png\" alt=\"\" /><br />\r\n</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">新华网重庆5月3日电(记者赵宇飞)世界知名信息安全厂商赛门铁克近日发布第十九期《互联网安全威胁报告》称，2013年为“大规模数据泄露之年”，全球有超过5.52亿条身份信息被泄露，泄露数据的数量是2012年的4倍。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">赛门铁克中国区安全产品总监卜宪录介绍，2012年至2013年间，全球大规模数据泄露事件从1起增至8起，每次泄露的身份信息都超过千万。“这也许只是冰山一角，真实泄露的数据次数和规模应该比这个还大。”卜宪录说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">信息安全专家、国际关系学院信息科技系副主任王标说，如此庞大的数据泄露意味着，黑客不仅知道他们的邮箱地址，还可能知道他们的家庭住址、电话号码、身份证号，甚至是信用卡号和银行账号，公民个人面临的风险将大大增加。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140504/013200.htm','2014-05-04 09:08:39',1,'/news/thumb/QQ截图20140504090748.png','去年超5亿条身份信息泄露 全球近10%人口中枪','admin','赵宇飞'),(49,'<div class=\"mbArticleSharePic \" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"LCD液晶显示屏发明人海尔迈耶去世 享年77岁\" src=\"http://img1.gtimg.com/tech/pics/hv1/77/60/1582/102884927.jpg\" />\r\n</div>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	腾讯科技讯 5月4日消息，据彭博社报道，液晶显示屏(LCD)发明人乔治<span style=\"background-color:navy;color:white;\"></span>·海尔迈耶(George Heilmeier)因中风去世，享年77岁。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	1968年，海尔迈耶研发出第一片液晶面板 (Liquid Crystal Display, LCD)，从此液晶便被广泛地应用在各种电子产品之上。近年来随著大尺寸面板的普及，液晶作为显示器之用，更得以挟其轻薄、省电等多方优点，逐渐完全取代传统CRT显示器。海尔迈耶曾断言：“布满梦想的壁挂式电视机只需数年就能实现。”\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	据悉，海尔迈耶在德州仪器负责过尖端技术项目，曾担任贝尔通讯研究所CEO，同时也是美国国家工程院、国防科技委员会、国家安全局咨询委员会的成员，他本人也获得过无数奖项，拥有15项专利。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	1991年，为表彰其在科技领域的突出贡献，美国总统布什（老布什）授予海尔迈耶国家<a class=\"a-tips-Article-QQ\" href=\"http://tech.qq.com/science.htm\" target=\"_blank\">科学</a>奖章。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140504/013033.htm','2014-05-04 09:09:57',1,'/news/thumb/102884927.jpg','LCD液晶显示屏发明人海尔迈耶去世 享年77岁','admin','腾讯科技'),(50,'<p>\r\n	<img alt=\"谷歌拆分云储存应用 大而全模式遭淘汰\" src=\"http://img1.gtimg.com/tech/pics/hv1/180/123/1582/102901095.jpg\" />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"></span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月4日消息，在国内，移动客户端出现了软件越来越大、功能越来越多、用户体验越来越差的趋势，但是在美国互联网行业，和大而全相背离的专业分工成为一种新趋势，在</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">取消客户端私信功能之后，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)日前也对涉及到云存储和文档编辑的客户端，进行了功能重组，APP定位更为独立清晰。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌拥有云存储Drive服务的移动客户端，之前具备在线编辑文档的功能。不过，最近谷歌对该客户端进行了升级，一部分用户失望发现，内置的文档编辑功能已经被剔除。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于希望编辑云存储文档的用户，谷歌将会给出提示，请</span><a href=\"http://download.tech.qq.com/\" target=\"_blank\"><span style=\"font-size:14px;\">下载</span></a><span style=\"font-size:14px;\">单独的办公文档编辑客户端，即字处理工具Docs和电子表格工具Sheets。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不久前，谷歌刚刚对在线文档编辑的客户端进行了调整，功能分离为三个独立的客户端，除了上述两个之外，面向演示稿制作的Slide客户端将会在近期发布。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据美国科技新闻网站TheVerge的报道，Drive客户端的上述改动，已经部署到了iOS版APP中，稍后安卓版的升级，也将保持一致。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于用户来说，Drive客户端的功能调整显得不太方便，不过对于谷歌而言，其希望未来不同的客户端拥有清晰的功能定位，不再追求大而全。其中Drive客户端关注云存储和文件管理，文档编辑交给谷歌的其他三个工具。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在各司其职之后，谷歌也纷纷加强了独立APP的功能。比如Drive客户端增加了对网盘文件的密码保护，另外电子表格客户端，开始支持离线表格编辑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在客户端功能重组上，最近Facebook的举动引起用户一片哗然。发送私信一直是Facebook社交网络的必备功能，但是在Facebook的客户端中，其最新版删除了私信功能，Facebook表示，如果需要手机聊天工具，建议用户下载安装Facebook专门推出的Messenger客户端。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一些用户质疑，Facebook为了提高聊天工具Messenger的装机量，牺牲了Facebook客户端老用户的体验。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">分析人士指出，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">、谷歌、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">等互联网巨头开始实现全面的移动化，各家公司旗下的客户端数量（包括面向不同尺寸硬件、面向不同操作系统）多达几十款甚至是上百款，以往的功能交叉重叠模式，将会引发用户混淆和产品开发管理的混乱，各司其职、独立下载安装将成为APP产品线管理维护的新趋势。（晨曦）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140504/017817.htm','2014-05-04 12:24:34',1,'/news/thumb/102901095.jpg','谷歌拆分云储存应用 大而全模式遭淘汰','admin','晨曦'),(51,'<p style=\"text-align:center;\">\r\n	<img alt=\"传统媒体抢食在线视频蛋糕：前景诱人 风险加剧\" width=\"600\" height=\"329\" src=\"http://img1.gtimg.com/tech/pics/hv1/47/237/1582/102930032.jpg\" style=\"width:500px;height:279px;\" /><span style=\"font-size:14px;\"></span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯科技 瑾瑜 5月5日报道</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“互联网是均衡财富的工具，” 英国广播公司(BBC)前总裁、纽约时报公司(The New York Times Company)现任首席执行官马克·汤普森(Mark Thompson)如是说道，“视频过去曾是广播公司的专利。”现在，此景不再。4月28日，汤普森在美国纽约曼哈顿的一个仓库里，向500名宾客展示了《纽约时报》在视频产业的活力。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">《纽约时报》将推出14个在线“频道”，并会以《纽约时报》的报纸专栏为蓝本制作小节目。比如，其中一个栏目名为“咬文嚼字”(Verbatim)，喜剧演员嘲讽美国庭审过程是该节目的特点。广告商所拍摄的视频也将出现在《纽约时报》网站。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其实，并非只有《纽约时报》一家想要成为在线电视台。在未来的一周，十多家企业将在NewFronts大会上亮相。AOL(美国在线)、康德纳斯(Condé Nast)、和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)等都将参加该大会，他们提供的视频内容将涵盖短片、30分钟剧集以及长篇纪录片等。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">将推出两部全新喜剧节目以及流媒体直播音乐会等内容。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">甚至连好莱坞都加入了竞争行列。今年3月，华特·迪士尼公司(Walt Disney Company)宣布将以至少5亿美元的价格收购YouTube内容制作商Maker Studio，后者曾制作YouTube视频短片系列《Epic Rap Battles of History》(史诗说唱战)等。互联网NewFronts大会相当于传统电视网络的Upfronts大会，在Upfronts大会上，各电视网络会展示自己的新节目以争取潜在广告商。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">全球最大媒体购买及规划代理机构群邑集团(GroupM)的首席投资官里诺·斯坎佐尼(Rino Scanzoni)表示，以每千人广告浏览费(cost per thousand views)角度讲，一些企业之所以制作在线视频，只是因为他们能够拿到非常不错的广告价格。在线视频的广告费用远高于在线横幅广告，有时甚至高于电视节目。另外，出色的原创节目也能帮助网站说服访问者停留更长时间，这样，他们就能够展示出更多的广告。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">不过，一些企业加入在线视频领域并非是为了广告营收。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">制作视频通过Xbox发布，是为了提升该游戏主机的销量。而对于热门政治剧《纸牌屋》(House of Cards)的制作方、以在线DVD租赁服务起家的流媒体网站Netflix，制作在线视频仅仅是为了提升自己的订阅用户数。Netflix没有广告。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">9年前，第一条视频上传至YouTube，这段仅有18秒的视频由YouTube联合创始人贾维德·卡里姆(Jawed Karim)在美国圣迭戈动物园所拍摄。这个视频很好的暗示了YouTube的特点，即低成本、用户提供内容，并且暗喻了YouTube想要驯服尚且野化互联网的决心。如今的网络视频用户，已经被优质选择宠坏。互联网视频越来越细腻，而人们也有时间去观看这些内容。市场研究机构eMarketer的数据显示，美国人平均每天花费4.5个小时看电视，花费接近一小时的时间观看在线观看视频。此外，在线广告市场表现也十分惊人。市场研究机构ZenithOptimedia预计，到2016年，美国在线视频广告规模将增至100亿美元左右。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">然而，虽然互联网视频广告市场不断增长，但是，广告商们用在电视节目的广告开支也在继续增加。许多媒体集团已经售出不少结合了电视节目和互联网的广告位套餐。相较于在线视频，电视仍吸引了较广的观众群，而广告商也觉得自己更懂电视。eMarketer的高级分析师大卫·海勒曼(David Hallerman)表示，在广告支出方面，是印刷业输给了在线视频。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">俗话说，一口吃不成胖子，投资原创内容并不会立刻为视频制作方带去高额的广告营收。很多人都是用智能手机和平板电脑观看视频，而一些广告模式并不能很好地适应这些屏幕较小的设备。在线视频的观众调查机制并未向电视那样，得到广泛认可，点击率也很难掌握。想出雷人原创想法是一回事，制作出人们真正想要观看的内容又是另一回事。在众多在线视频内容中，《纸牌屋》是其中为数不多享誉全球的互联网剧集，而该剧片名也暗示了当企业蜂拥新互联网潮流之时可能会出现的错误。(注：纸牌屋，house of cards, 英语固定习语，字面意思指用纸牌砌成的房子，引申义指危如累卵，一击即破。)</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140505/002385.htm','2014-05-05 08:48:12',1,'/news/thumb/102930032.jpg','传统媒体抢食在线视频蛋糕：前景诱人 风险加剧','admin','瑾瑜'),(52,'<div class=\"mbArticleSharePic \" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"施振荣6月卸任宏碁董事长 将亲自负责云服务\" src=\"http://img1.gtimg.com/tech/pics/hv1/246/195/1582/102919521.jpg\" /> \r\n</div>\r\n<p align=\"center\" style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:12px;\">宏碁创始人施振荣（腾讯科技配图）</span> \r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	腾讯科技讯（娄池）5月4日消息，据台湾媒体报道，宏碁创始人施振荣将于6月18日卸任董事长，并于5月8日提出新董事长人选，而他自己未来将担任宏碁自建云（BYOC）首席建构师。\r\n</p>\r\n<div class=\"relativeVideo clearfix\" id=\"invideocon\" style=\"margin:0px 0px 35px;padding:0px;color:#434343;font-family:微软雅黑, Tahoma, Verdana, 宋体;font-size:15.555556297302246px;background-color:#FFFFFF;\">\r\n	<div class=\"relInfo clearfix \" id=\"relInfo\" style=\"margin:0px;padding:0px;background-color:#F3F3F3;\">\r\n		<div class=\"relPic\" id=\"relPic\" style=\"margin:0px 18px 0px 0px;padding:0px;\">\r\n			<div class=\"relPicbg\" style=\"margin:0px;padding:0px;\">\r\n			</div>\r\n<a id=\"accessPlay\"><img src=\"http://vpic.video.qq.com/4243173924/p0013puucma_ori_2.jpg\" alt=\"施振荣：宏碁翻身需三年 短期内公司无大动作截图\" height=\"105\" width=\"140\" /></a> \r\n		</div>\r\n	</div>\r\n</div>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	施振荣称，今年6月董事长一职交棒后，他将继续为新宏碁服务，他还表示宏碁的传承接班已全面启动，希望目前的CEO陈俊圣，能在3年后身兼董事长一职。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	宏碁公司将于5月29日在台湾举行记者发布会，揭幕云体验中心，并公布宏碁在自建云开放平台的盟友，首波名单以台湾的国际大厂及国际品牌为主，未来会陆续与中国大陆、东南亚与欧洲等市场的云端服务商合作。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">据悉，因业绩问题，宏碁从2013年11月开始，经历了一系列人员变动：</span> \r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	2013年11月6日，宏碁董事长兼CEO王振堂将辞去CEO职位，总裁翁建仁继任CEO。当时宏碁声称，王振堂将继续担任宏碁董事长至第二年（2014年）6月底，即任期结束。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	2013年11月21日，总裁翁建仁辞职，创始人施振荣被选为公司新任董事长兼临时总裁，宏碁联合创始人黄少华加入宏碁管理团队，王振堂和翁建仁改任宏碁顾问；宏碁宣布CEO的角色将被取消，其职责将被转交至董事长或总裁。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	2014年1月1日，宏碁恢复CEO角色，宏碁全球业务及营销资深副总陈俊圣出任CEO和总裁。\r\n</p>\r\n<p style=\"font-size:15.555556297302246px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在经历一系列人事调整后，施振荣表示，不会效仿史蒂夫·乔布斯或是迈克尔·戴尔，他无计划长时间控制这家陷入困境的中国台湾PC制造商。他还强调，宏碁公司早已为新董事长确定了候选人人选，但需要获得2014年6月举行的董事会会议的通过。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140504/026203.htm','2014-05-05 08:51:09',1,'/news/thumb/102919521.jpg','施振荣6月卸任宏碁董事长 将亲自负责云服务','admin','娄池'),(53,'<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-align:center;\">\r\n	<img alt=\"移动通讯应用的成长灰色地带：依赖病毒式营销\" src=\"http://img1.gtimg.com/tech/pics/hv1/21/2/1583/102935106.jpg\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 瑾瑜 5月5日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年2月，一款名为Secrets的应用程序，如同</span><a href=\"http://tech.qq.com/virus/index.htm\" target=\"_blank\"><span style=\"font-size:14px;\">病毒</span></a><span style=\"font-size:14px;\">爆发一般，迅速走红。这款应用允许用户向自己的通讯录里的联络人或者附近的人发送匿名信息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">该应用的名称与私密社交应用软件Secret十分相似。只不过，借助用户良好口碑和众多媒体的关注，在用户群增长方面，后者比Secrets早了一个月，而作为山寨应用的Secrets则顺道沾了光。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">就在对用户群增长几乎感到绝望之时，Secrets开始强迫自己的早期用户，向他们所有的联络人发送邀请，让用户的好友也</span><a href=\"http://download.tech.qq.com/\" target=\"_blank\"><span style=\"font-size:14px;\">下载</span></a><span style=\"font-size:14px;\">安装自己的应用程序。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，当Secrets的下载量达到2000次时，问题就出现了，除了恼人的垃圾邮件以外，Secrets还造成了移动网络堵塞的问题。Secrets开始不停地向2382这样的号码发送邀请，致使当地的电信运营商因人们在通讯录中输入的异步传输模式（Asynchronous Transfer Mode.ATM）端口以及随之汹涌而来的信息，遭遇典型的分布式拒绝服务攻击（DDoS）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据研究移动垃圾信息的爱尔兰移动安全供应商AdaptiveMobile数据，有一位不知情的Secrets用户，曾在短短两天时间内，向通讯录中的无效号码发送了超过3万条邀请消息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Secrets最终修复了这个漏洞，其开发人员拒绝就此置评。虽然这件事堪称垃圾邮件的极端案例，但部分人士认为，造成该问题的部分原因还是由于增长。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随着</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">&nbsp;190亿美元收购移动实时通信软件公司WhatsApp，大笔新资金流入移动通信市场，于是，更多压力落在了那些还在通信领域边缘游走的应用程序身上，使得他们不计代价求扩张。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在应用开发领域，这个增长的过程是一个饱受争议的灰色区域，被称作Growth Hacking(注：是一种通过技术获得用户增长的方法)，社交网络Path、RapGenius及Glide等都曾使用过该技术。视频信息应用Glide的Android用户就抱怨称，在某种程度上，要想阻止应用程序向自己通讯录中所有人发送邀请，几乎是不可能的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">爱尔兰移动安全供应商AdaptiveMobile高管卡索·麦戴特(Cathal McDaid)认为，在这种侵略型移动营销行为中，移动通信应用的表现最为恶劣。他表示，在2013年9月至20143月期间，12款热门移动通信应用发出的强迫式邀请信息数量，增长了850%，而出现这种现象的很大一部分原因在于，这些应用“瞬间变得价值连城”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)就垃圾信息式营销行为向Android应用开发人员下了最后通牒，要求他们在4月16日之前停止这种营销手段。根据AdaptiveMobile的调查，就在谷歌截止日到达一周后，Glide每日应用邀请信息发送量减少了30%，Android即时通讯应用Tango的邀请发送数量减少了60%，而匿名通讯应用Meow更是减少了91%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这个结果很鼓舞人心，但麦戴特却认为，通讯应用会继续投机取巧，以人为手段实现膨胀式增长。虽然大部分顶尖通讯平台，比如Line、WhatsApp及微信等，都比较循规蹈矩，而小型通讯应用则是急于想要加入这个利润丰厚的行业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据移动行业分析及广告公司Flurry的数据显示，移动通讯应用在去年增长最快。就在不久前，日本电子商务巨头乐天9亿美元收购移动消息应用Viber，而</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">2.15亿美元投资社交应用Tango交易，更是让该平台市场价值超过10亿美元。这也就难怪风险投资人开始向初创企业施加更多压力去吸引用户。对于如此高的估值，惊人的用户数至关重要，哪怕只是注册用户。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">麦戴特表示，应用开发领域的灰色地带深处，还藏着另一款移动应用程序，那就是 Smug Messenger。为了让用户发送好友邀请，该应用会向用户提供游戏内奖品甚至</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">礼品卡等奖励。这确实是很高明的营收手段，但麦戴特认为，“这是未经请求的，是一种人为式增长。一些应用还在用户界面上动手脚，想要删掉发送邀请都难。这一切都在于有趣的社交工程。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">麦戴特还引用了另一个例子：拥有2亿注册下载量的移动通讯平台Tango，只要用户使用应用拍照，就会询问用户是否想要邀请好友加入。还有另一个通讯应用，其会立刻勾选用户的全部好友，一会后再取消。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">麦戴特认为，这种做法有明显的心理效应。他认为，在Growth Hacking策略方面，新贵通讯应用越来越有创意，偏爱“破窗效应”，并且在模仿前人的老路。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">具有讽刺意味的是，WhatsApp在其发展过程中并未使用人工增长战略。举例来说，2009年，WhatsApp作为当时免费通讯应用之一而成名，为了维持用户稳步增长，WhatsApp采取了第一年免费，其后每年收取0.99美分的策略。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">WhatsApp联合创始人简·库姆(Jan Koum)曾在2013年12月接受《福布斯》采访时说道，“我们想要确保，能够吸收用户加入我们的网络，并为他们提供应得的服务质量。相较于收到一百封邮件，我们选择10封，而且我们能够确保全部进行回复。从长期角度看，这种人为的网络压制事实上是有回报的，因为我们提供的服务质量和支持让人们更加开心。”WhatsApp联合创始人布莱恩·艾克顿(Brian Acton)表示，“相较于‘快速壮大’的标准思维模式，我们选择了一条慢速发展的道路。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今天，移动应用成了一个赢者通吃的市场，占据市场最上方就是占据了大部分营收，所以，要想模仿WhatsApp早期的发展战略获得成功很难。芬兰应用开发人员伊尔卡·泰伯(Ilkka Teppo)表示，“这就像是音乐市场，只有几家乐队能够成为一流团体，所有的钱都进了他们的口袋。”他表示，从多数通讯平台拒绝透露“活跃用户数”这一现象可以看出，让人们定期使用他们服务的难度。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">通讯应用的真正价值并不多在于注册用户数，因为很多人都是只下载但从不使用，而是在于所谓的“用户保留”量，人们打开和使用一项服务的频率。至少目前看来，这个数字是无法人造的。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140505/004967.htm','2014-05-05 08:52:56',1,'/news/thumb/102935106.jpg','移动通讯应用的成长灰色地带：依赖病毒式营销','admin','瑾瑜'),(54,'<p style=\"text-align:center;text-indent:2em;\">\r\n	<img src=\"/upload/image/20140505/20140505085808_491.png\" alt=\"\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1991年，他高中毕业后不久，创办了自己的公司VoodooPC，在加拿大卡尔加里市中心的一座复古老房子里，他和朋友们边打游戏边造出了炫酷的游戏电脑；16年后，他把VoodooPC卖给了惠普，当最初的共识演变成双方战略上的不合拍，他只得黯然离去；2010年底，他阴差阳错进了微软，在这所群英荟萃的“成年人大学”里，推动成立了助力创业孵化的Bing基金，逐渐找到了自己的位置；现在的他，是微软创投（Microsoft Ventures）的总经理和全球合伙人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与</span><a target=\"_blank\" href=\"http://www.linkedin.com/in/voodooftw\"><span style=\"font-size:14px;\">Rahul Sood</span></a><span style=\"font-size:14px;\">对坐而聊，你会发现他是个坦诚且自省能力很强的人，他会略带沮丧地说，卖掉VoodooPC是他做过的最艰难的决定，也会心怀感恩地表示，加入微软是他做过的最好的决定，在聊到中国的创业生态时，他也丝毫不掩自己的惊喜之情。他聊起自己创业路上遇到的坑，带着科普的意味；他站在相对宏观的视角上，比对中国和其他国家在创业生态上的不同。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：1991年，你高中毕业后进了加拿大卡尔加里的皇家山学院（Mount Royal College），主修计算机科学，但没几个月就全身而退，创办了自己的公司</span><a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/VoodooPC\"><span style=\"font-size:14px;\">VoodooPC</span></a><span style=\"font-size:14px;\">，当时选择走上创业这条路，动机是什么？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：每个人创业的动机都不同，我常跟人说，只为了钱而去创业的做法最要不得。我当时选择创业，因为我喜欢电脑，但是当时的电脑一来运行效率不够高，二来长得都一样，毫无美感可言。于是我当时就在想，有没有可能打造出既高效又漂亮的电脑，让它从货架上同质化程度如此之高的商品中脱颖而出，成为具有品牌溢价、消费者会打心里喜欢的奢侈品？基本上，这就是 VoodooPC 的缘起。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：VoodooPC是生产玩游戏专用的电脑的，怎么选择这个方向的？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：作为创业者，你要通过产品去满足不断变化的市场需求，于是一开始，我们除了生产电脑，还做了好多其他事情，像增值服务啦，运营网站啦；但是我们最终意识到，需要弄清楚我们的兴趣和优势所在，需要把资源投入到核心产品的打造上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当时，我们的工作室在卡尔加里市中心的一座复古老房子里，白天我们开门营业，下班后就围坐在一起打游戏，当时我们常玩的一款游戏叫</span><a target=\"_blank\" href=\"http://www.commandandconquer.com/en\"><span style=\"font-size:14px;\">Command &amp; Conquer</span></a><span style=\"font-size:14px;\">，我们还特地为此设置了奖惩规则，玩得不亦乐乎。团队氛围特别好，成员之间既是工作上的好拍档，也是私下里的好朋友。虽然我们挺贪玩儿的，但也没耽误创新，我们开始制作游戏电脑，并把工程机送给媒体测评，当时就把他们惊呆了，美国的许多杂志都给出了很高的评分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们因此确信，这个方向是对的。接下来，我们面临两个选择：一，砍掉其他业务，承担收入锐减的风险，把资源投入到游戏电脑的研发上；二，按照当时还不错的业务结构继续发展。我们最后选择了前者，现在看来是很明智的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：带着VoodooPC发展了15年，你在2006年把它卖给了惠普？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：准确地说，是 16 年。其实在惠普之前，戴尔先找到的我们。历经 16 年，VoodooPC 聚集起了一批粉丝，是有品牌溢价的。戴尔内部当时希望收购一个高端品牌，从而提升戴尔整体的品牌价值；与此同时，被收购的高端品牌也可以借助戴尔的生产线来扩大自身的生产规模，实现规模效益。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2005 年，戴尔找到我们，花了一个月的时间和我们谈细节。谈得还好吧，能见到</span><a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Michael_Dell\"><span style=\"font-size:14px;\">Michael Dell</span></a><span style=\"font-size:14px;\">这样的行业先锋人物也挺不错的。但是最后我们没有谈拢，原因是戴尔希望将我们的产品量产，以实现品牌规模化，然而我们更想做的，不是将品牌规模化，而是将创新规模化（We didn’t want to scale Voodoo, we wanted to scale innovation）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">后来，戴尔在 2006 年 3 月收购了我们最大的竞争对手</span><a target=\"_blank\" href=\"http://www.alienware.com/\"><span style=\"font-size:14px;\">Alienware</span></a><span style=\"font-size:14px;\">。3 个月后，惠普收购了我们。选择与惠普合作，是因为我们在创新这一点上很有共识。惠普有自己的 HP Lab，他们也很喜欢我们对创新的专注，并称会尊重 Voodoo 的发展策略。我们当时达成的共识是，我们会帮助惠普打造拥有 Voodoo 基因的高端产品，于是有了后来的</span><a target=\"_blank\" href=\"http://www.pcmag.com/article2/0,2817,2179613,00.asp\"><span style=\"font-size:14px;\">HP Blackbird</span></a><span style=\"font-size:14px;\">和</span><a target=\"_blank\" href=\"http://www.pcmag.com/article2/0,2817,2344009,00.asp\"><span style=\"font-size:14px;\">HP Firebird</span></a><span style=\"font-size:14px;\">两款很赞的游戏电脑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是接下来的合作就失控了。几个月后，惠普开始变得着急，他们希望我们的产品可以在全球量产，Voodoo 有个 3 年规划，他们则希望将其缩短至 6 个月。我们最终妥协了，在配合惠普计划的过程中，Voodoo 的品牌价值被削弱了。我们打造了</span><a target=\"_blank\" href=\"http://www.pcworld.com/product/43907/hp-voodoo-envy-133.html\"><span style=\"font-size:14px;\">Voodoo ENVY</span></a><span style=\"font-size:14px;\">笔记本电脑，惠普借用这个品牌上线了包括台式电脑、笔记本电脑、打印机等在内的一系列</span><a target=\"_blank\" href=\"http://shopping.hp.com/en_US/home-office/-/static/page-envy\"><span style=\"font-size:14px;\">HP ENVY</span></a><span style=\"font-size:14px;\">产品。我某天早晨起来，发现 HP ENVY 的商标竟然印到了打印机上，而我对此却无力干预，说实话，真的挺沮丧的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">于是，2010 年年底，我和惠普的合约到期后，我选择离开惠普，离开 Voodoo。我当时想的是，要再创办一家公司，不过最后阴差阳错地进了微软。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：我想很多创业公司大概都会面临你曾面对的状况，长远来看，在退出机制的选择上，是接受大公司的收购邀约，还是坚持独立发展、独立上市会更好些？这两条路有优劣之分么？创业者该如何选择？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：我觉得，在当下的中国，这两条路其实都前所未有得光明。赴美上市吧，市场上有专业机构能帮助创业公司走通整个流程，去美国股市销售 ADS 不再是什么难事。另一方面， BAT 在各个垂直领域的收购动作也愈发频繁。这都给了中国创业公司很好的发展机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：可是BAT这样的大公司也有自身的策略，创业公司决定被收购时，需要特别注意些什么，才不至于最后不欢而散？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：这取决于创业者自身，你是仅仅想成为某种功能的供给方，还是想创造一家有意义的公司？你对你自己的品牌，究竟有多在乎？接受大公司的收购邀约，能给你的品牌和公司带来什么？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Voodoo 2006 年被惠普收购之后，我实际上没有去惠普加利福尼亚总部，我还待在卡尔加里，因为我不想成为一座大机器的零部件。想在回想起来，这是个极大的错误。如果你被收购，你应该竭力与收购方完成资源整合，在双方策略中有共识的部分达成合作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">是的，大公司也有自身的策略。但我想说的是，永远不要低估一个伟大品牌的价值，如果你的品牌是有灵魂的，有自己的粉丝群体，用户与品牌同呼吸共命运，那么你公司的市值会成指数型增长，一个有溢价品牌的公司的市盈率要比一个名不见经传的公司高太多。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">举例来说，小米是真的在打造一个品牌，并</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211085.html\"><span style=\"font-size:14px;\">扩大其国际影响力</span></a><span style=\"font-size:14px;\">。而过去几十年以来，中国都是以制造业闻名，却罕见有成功走向海外的本土品牌。而</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211373.html\"><span style=\"font-size:14px;\">这正是mi.com在做的</span></a><span style=\"font-size:14px;\">，如果成功了，对中国来说都会是一个好故事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：品牌这个概念还是比较虚。感觉在中国，大家对品牌塑造的理解还比较狭隘，花很多精力在公关上，但公关不等同于品牌的全部。有什么打造品牌的“黄金法则”么？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：首先，品牌不是印在你T恤上的标签，品牌是一种文化生态。在这个生态中，你需要打造一个社区，你的目标消费群体、公司员工、供应商等都是这个社区的参与者，你需要与这些参与者一道打磨你的产品，让社区里的每个人都喜欢你的产品（即，粉丝经济的概念）。所以，品牌实际上是一种黏性很高的文化生态。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外，要打造一个有内涵的品牌，你还必须得有一个构造平衡的团队，以保证思想的多元性，团队里不能都是男性工程师。从职能上来看，你需要有创意十足的设计师、技术人员以及懂商务拓展的成员——这三类人一类也不能少。还有，女性创业者非常重要（我们一直在极力倡导这件事），你不是为了让团队的性别比例好看一些才去招女性创业者的，而是女性创业者能提供不同的分析视角，她们的思想能丰富品牌的内涵。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：说回你的个人经历吧，从惠普离开后，你阴差阳错进了微软，一开始是在微软的“互动娱乐集团”，你当时主要负责什么？因为Xbox是该集团下的产品，当时也有参与Xbox的研发？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：&nbsp;我在微软互娱集团里主要负责设计和策划。呃……你可以这样说吧，我本可以参与 Xbox 的研发。但是，说实话，我在微软互娱呆了 11 个月，但在那 11 个月里，我没有找到自己的定位。一方面，作为空降到微软互娱的管理人员，你要想在一群优秀的人面前获得他们的信任何其难，我自嘲自己并不是“微软互娱的总经理”，而是“微软门厅的总经理”；另一方面，我之前是创业者，做事情都是按自己的节奏来，但进入微软后你需要同公司的步调保持一致，我挺不习惯的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在那 11 个月里，我一直在琢磨哪里是自己的安身之所，答案是：我需要在微软工作的同时，保留我对创业的激情。我需要待在一个能够平衡这两者的地方。如果没有这样一个地方，那就自己创造。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：想来这是你从微软互娱离开，创办Bing Fund的原因吧？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：是的。我当时想要在微软内部成立一个帮助创业者的孵化器基金，在公司内部经过一番游说后，我的一个同事把我引介给了</span><a target=\"_blank\" href=\"http://baike.baidu.com/subview/1868576/5475536.htm?fromId=1868576&amp;from=rdtself&amp;fr=wordsearch\"><span style=\"font-size:14px;\">陆奇</span></a><span style=\"font-size:14px;\">，老陆是微软网络服务集团总裁，负责微软 Office、Bing 搜索、Skype 等诸多业务，直接向 CEO Steve Ballmer 汇报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我在一个周六的傍晚 6 点见了老陆。他一身休闲装，T 恤牛仔裤，靠在沙发上跟我说“tell me your idea”。我跟他讲我这个基金打算干嘛干嘛，才过了 15 分钟，老陆跟我说：“停，我们来聊聊 Voodoo，跟我讲讲你的创业经历，讲讲你对创业、品牌的理解……”，我们就这些与基金无关的话题聊了 45 分钟。我当时有些困惑，不知道这事能不能成，不过在谈话结束时，老陆跟我说：“我喜欢你的想法，这周就安排你与负责各业务的总裁见面会谈”。最后，他给了我成立 Bing Fund 的权限。那是 2012 年 3 月的事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，公司里也有一些和我类似的创业者在各地成立起创业孵化器。比如，</span><a target=\"_blank\" href=\"http://www.linkedin.com/pub/david-w-lin/1/970/36b\"><span style=\"font-size:14px;\">David Lin</span></a><span style=\"font-size:14px;\">在北京成立了孵化器， </span><a target=\"_blank\" href=\"http://baike.baidu.com/link?url=iSZUTCkbwSsTY1rSmP0AX-wKKjSR09xf0-C-_gwH4PF7Zpevh42cHOyNLaG4f-zF\"><span style=\"font-size:14px;\">张亚勤</span></a><span style=\"font-size:14px;\">也极力倡导，事实上亚勤是我们在大中华区设立孵化器的主因。同时，我们在印度、以色列也有成立孵化器。最后，我的 Bing Fund 还有这些孵化器在去年合并成了微软创投。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：你在惠普和微软都工作过，这两家公司的企业文化有何不同？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：因为我实际上没有在惠普呆过，所以评价可能不够客观。不过我想从两方面来说说企业文化。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第一，关于企业文化的传承。当你去思考谁是苹果的门面，你想到的是 Steve Jobs；当你去想谁是 Starbucks 的门面，你想到的是 Howard Schultz；当你去想谁是微软的门面，你想到的是 Bill Gates；但当你去思考谁是惠普的门面时，你能想到谁？我想说的是，当一家公司变得成熟，当 CEO 经历多次易主，公司很有可能患上“创始人综合症”（founder syndrome），也就是说，人们开始忘记什么是公司的准则和基础，忘记谁是公司的门面，这是大公司必然要经历的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1980 年，微软是一家价值 200 万美元的公司，33 年过去了，它现在是一家市值超过 3000 亿美元的公司，微软历史上一共有 3 个 CEO（Bill Gates, Steve Ballmer, </span><a target=\"_blank\" href=\"http://www.36kr.com/p/209864.html\"><span style=\"font-size:14px;\">Satya Nadella</span></a><span style=\"font-size:14px;\">）。2000 年，Bill Gates 把 CEO 的位置让给了 Steve Ballmer，之后成立了 Bill &amp; Melinda Gates 基金，将后半生投入到慈善事业中，为什么？“通过给予让世界变得更好”，这种文化也是微软内部一直在倡导的。Gates 现在又</span><a target=\"_blank\" href=\"http://www.36kr.com/p/209501.html\"><span style=\"font-size:14px;\">出任技术顾问</span></a><span style=\"font-size:14px;\">，并未离开微软，微软的公司准则和文化现在还在。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第二，关于如何通过企业结构来保证文化活性。微软的内部人员结构很扁平化，你的职位头衔不重要，重要的是你是否能够影响别人，把一堆人聚到一起去完成同一件事。在微软，你可以成为公司机器的一部分，也可以在内部捣鼓出属于自己的机器。微软像是一所成年人的大学，你与人形成不同的小组去创造东西，公司鼓励员工去承担风险，很酷。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：之前，你在回答是否会进行二次创业时说，不排除这个可能，如果创业的话，会依旧同游戏领域相关。有哪些具体的方向你想要去探索的么？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：关于游戏领域的创业，我有很多想法，不过不便透露太多啦。总体来说，我非常看好游戏和娱乐这一垂直领域。游戏一直以来都是一个能拓展创新边界的领域：游戏促进 Intel 和 AMD（超微半导体公司）造出更好的芯片，促进 Nvidia 推出为游戏而设的 GeForce 显卡系列和视频游戏控制器，促进硬件公司降低产品的热需求并制造出体积更小、噪音更低的产品，游戏也在不断拓展云计算能力的边界。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">PC 游戏一直被忽略，直到最近，人们才意识到原来 PC 游戏的体量要比主机游戏大很多。手游现在都在通过应用内付费的方式跑商业化，从某种程度上讲，这种“免费安装，为一部分用户提供增值服务”的模式正在损伤游戏体验，其实有很多事情是有待改进的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外，</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211159.html\"><span style=\"font-size:14px;\">虚拟现实</span></a><span style=\"font-size:14px;\">是很酷的探索方向，不仅局限在游戏领域，广义的娱乐领域也是如此。还有就是，软硬结合是关键。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：谈谈你们的微软创投加速器吧，你们现在北京、印度班加罗尔、以色列特拉维夫、柏林、伦敦、巴黎6个城市设有加速器，具体的组织架构是怎样的？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：微软创投（</span><a target=\"_blank\" href=\"http://www.microsoftventures.com/\"><span style=\"font-size:14px;\">Microsoft Ventures</span></a><span style=\"font-size:14px;\">）由几个部分构成，统一的愿景都是“发现优秀的创业团队，帮他们解决本地问题，实现业务扩张甚至国际化”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">首先，我们有“BizSpark 项目”，这个项目会在全球范围内征召创业公司来免费使用微软的软件和 Azure 云服务，现在已经有 3 万个团队从这个项目中毕业，另有 5.5 万个团队仍在项目中孵化成长。其次，我们在西欧、印度、巴西等一些欠发达的地区设有“微软创新中心”，为当地创业者提供技术支持和课程培训。此外，我们在全球还有一些孵化器合作伙伴，比如美国的</span><a target=\"_blank\" href=\"http://www.techstars.com/\"><span style=\"font-size:14px;\">Techstars</span></a><span style=\"font-size:14px;\">，</span><a target=\"_blank\" href=\"http://1776dc.com/\"><span style=\"font-size:14px;\">1776</span></a><span style=\"font-size:14px;\">，</span><a target=\"_blank\" href=\"http://www.1871.com/\"><span style=\"font-size:14px;\">1871</span></a><span style=\"font-size:14px;\">，</span><a target=\"_blank\" href=\"http://www.thinkbigpartners.com/\"><span style=\"font-size:14px;\">ThinkBig</span></a><span style=\"font-size:14px;\">，肯尼亚的</span><a target=\"_blank\" href=\"http://www.88mph.ac/\"><span style=\"font-size:14px;\">88mph</span></a><span style=\"font-size:14px;\">等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">然后，就是你说的这 6 个微软自己创办的孵化器。每个孵化器都由一个小团队在运维，并且直接向我汇报。</span><a target=\"_blank\" href=\"http://cn.linkedin.com/pub/frances-du/1/275/2b2?trk=pub-pbmap\"><span style=\"font-size:14px;\">Frances Du</span></a><span style=\"font-size:14px;\">是微软创投大中华区的主管；</span><a target=\"_blank\" href=\"http://in.linkedin.com/in/mmohan\"><span style=\"font-size:14px;\">Mukund Mohan</span></a><span style=\"font-size:14px;\">是印度区的负责人；</span><a target=\"_blank\" href=\"http://il.linkedin.com/pub/tzahi-zack-weisfeld/0/8b/705\"><span style=\"font-size:14px;\">Zack Weisfeld</span></a><span style=\"font-size:14px;\">是以色列区和欧洲区的负责人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：微软创投孵化器的入选几率和标准如何？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：每个微软创投孵化器每年招募两期学员，每期都会收到 500~1000 份申请，通常我们每期会录取 10~15 家创业公司。中国区的话，我们现在已经</span><a target=\"_blank\" href=\"http://www.36kr.com/p/209090.html\"><span style=\"font-size:14px;\">办了4期</span></a><span style=\"font-size:14px;\">，进驻过 66 家团队，每期孵化 6 个月。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们在选择进驻团队时，主要衡量三个方面：一，团队是否清楚地知道他们想要解决的问题，他们对问题的了解应该比我们更全面、理性；二，团队成员是否互补，他们是否善于倾听，是否具备同理心，是否个性谦和且自省意识强，是否创意十足，是否执行力足够强；三，微软是否能给这支创业团队带来价值，如果能，需要多快。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：从北京、班加罗尔、特拉维夫、柏林、伦敦、巴黎等地孵化器的进驻状况来看，你觉得哪里的创业氛围更浓厚？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：这个问题有点难。让我换种方式回答你。国家有别，每个国家的创业生态也不同。作为创业者，不管你来自哪里，你都需要去审度国际趋势。以色列只有 800 万人口，你如果从人均创业情况来看，以色列有很强的创业生态，人们常说“硅谷第一，以色列第二”就是这个意思。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有趣的是，中国的创业生态并没有很好地被外界所理解，中国的创业能量也被低估了。我前几天刚从欧洲的</span><a target=\"_blank\" href=\"http://thenextweb.com/conference/europe/\"><span style=\"font-size:14px;\">THE NEXT WEB大会</span></a><span style=\"font-size:14px;\">上回来，全球各地的优秀创业者可以在那里路演，说实话，没有一家创业公司惊艳到我。然后我来到中国，才呆了 3 天就感受到了这边活跃的创业氛围。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在中国，一方面，创业公司的发展速度比世界上任何其他地方都要快，你了解到创业公司以极快的速度从种子期融资过渡到A轮融资，产品的用户增长速度也十分惊人；另一方面，中国的VC环境也对创业者非常友好。在你们的</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211273.html\"><span style=\"font-size:14px;\">WISE TALK活动</span></a><span style=\"font-size:14px;\">上不是有个“一分钟 demo”环节么，有个项目我当时就很喜欢，希望它能有机会进驻微软孵化器，然后在当天晚宴的时候，听说真格基金的人跟那个团队的创始人聊了聊，随即</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211605.html\"><span style=\"font-size:14px;\">签了百万美元级别的term sheet</span></a><span style=\"font-size:14px;\">。我从来没在别的地方碰到这种情况，顺便说下，</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211621.html\"><span style=\"font-size:14px;\">那张term sheet是我见过的对创业者最友好的term sheet之一</span></a><span style=\"font-size:14px;\">。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">数据显示，在过去的 90 个月中，平均每个月都会诞生一个 10 亿美元市值的公司——这不包括中国。如果把中国的创业情况算进来，那情况会大大改变。我非常确信，在不远的将来，中国会出现许多 10 亿美元级别的创业公司。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">36氪：能否谈谈，在微软创投加速器覆盖的国家中，哪些垂直领域非常热门？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Rahul：微软创投加速器覆盖的垂直领域非常多元。在以色列，安全是很大的一块市场，医疗保健、云服务也是。印度市场现在并不成熟，不过移动领域也是一大热门，那边也有云服务及企业服务做得很好的创业公司，娱乐领域的一些创业团队也不错。印度的创业者很有天赋，但是当地的 VC 环境跟中国相比就差太多了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在中国，软硬结合（硬件 + 服务的模式）是一大趋势；医疗保健是很热门的创业方向；数据科学也是值得投资的领域，中国的数据科学领域有许多有趣的创业公司，比其他国家的都要好。</span>\r\n</p>','36氪','http://www.36kr.com/p/211676.html','2014-05-05 08:57:41',1,'/news/thumb/QQ截图20140505085655.png','微软创投全球合伙人Rahul Sood：永远不要低估一个伟大品牌的价值，外界还不理解中国的创业生态','admin','coldsummer17'),(55,'<p>\r\n	<br />\r\n</p>\r\n<p style=\"text-align:center;font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<strong><img src=\"/upload/image/20140505/20140505090052_765.jpg\" alt=\"\" /><br />\r\n</strong> \r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<strong>编者按：关于Twitter衰落的言论一直就没有停止过，Twitter真的要走下坡路了吗？著名风险投资家MG Siegler 发表在Medium的一篇<a target=\"_blank\" href=\"https://medium.com/five-hundred-words/6f3b7e9f38fa\" class=\"external\">博文</a>也许能给我们带来一些思考。</strong> \r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	就像讽刺剧 Porlandia 里讲的，当赶时髦的人发现，普罗大众开始做那些他们曾认为流行的事物，他们便会放弃曾经所爱。这正是对当今 Twitter 现状的最佳描述。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	一些早期用户声称 Twitter 已经玩完了，这一观点似乎<a target=\"_blank\" href=\"http://www.36kr.com/p/206697.html\">从去年Twitter上市</a>就开始发酵——Twitter 的服务开始成长起来，并开始盈利，但你瞧，Twitter 并不再是“我们的”了。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	不过，很难说 Twitter 到达了天花板。Twitter 可能犯了错，会被人们诟病，但在我记忆中，它是被人评论为“完蛋”次数最多的创业公司。这种认为 Twitter 要“完蛋”了的评论，自 2008 年至 2013 年每年都会出现。\r\n</p>\r\n<blockquote style=\"font-weight:bold;font-size:2rem;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	<p style=\"font-weight:inherit;font-style:inherit;font-size:20px;font-family:inherit;vertical-align:baseline;background-color:transparent;\">\r\n		要当心在 Twitter 上的那些关于 Twitter 衰败的讨论。\r\n	</p>\r\n	<p style=\"font-weight:inherit;font-style:inherit;font-size:20px;font-family:inherit;vertical-align:baseline;background-color:transparent;\">\r\n		——<a target=\"_blank\" href=\"http://www.36kr.com/davepell\" class=\"at_user\"><i>@</i>davepell</a> \r\n	</p>\r\n</blockquote>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	第一批（或者是喊得声音最大的）宣称“Twitter 达到天花板”的人，如今有了新武器：公开的财务数据。因为 Twitter 如今是上市公司，每季度都要公开财务数据，<a target=\"_blank\" href=\"http://www.36kr.com/p/211611.html\">有些财务数据并未像华尔街预想的那样增长迅猛</a>，这就导致 Twitter 的股价迅速跌到去年<a target=\"_blank\" href=\"http://www.36kr.com/p/207544.html\">IPO</a>时的发行价格。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	这种情况就更容易导致 Twitter 厄运论的出现，因为有上市后的数据。但不必介意，两年前 Facebook 上市，华尔街也曾有过关于其股价会大跌的担忧，如果仔细回想，人们就会发现，Facebook 股价确实也曾下跌到发行价之下，照这样说的话，Facebook 也“完蛋了”。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	如今，这种言论又卷土重来：“Twitter 完蛋了，因为它不是 Facebook”。看，博客圈就是这么烦人。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	事实上，Twitter 现在正被媒体诋毁，但以后媒体就能写出 Twitter 复兴的故事了，事情本质就是如此。为什么要创造一些无法推翻的东西呢？为什么要推翻一件无法复兴的东西呢？其实整个事情是三个片段。包括 Twitter 的上升，下降，以及回归。Twitter 的故事就是：漂白洗净，不断反复。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	一个讽刺而又扭曲的事实是，一些人宣称 Twitter“玩完了”是因为其对主流用户没有吸引，而赶时髦的人们却认为 Twitter 不够小众，所以也觉得 Twitter 完了。如果 2 亿的活跃用户还算不上主流。那什么是主流？他们的回答大概是数十亿用户才算主流吧。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	或者还有别的宣称 Twitter 完蛋的理由。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	而我所体会到的是：当我打开电视看任何一档体育节目，都会看到 Tweet、Twitter 的用户名，以及来自 Twitter 的消息。我不清楚每晚 SportsCenter 会有百分之多少的消息会与 Twitter 有关，但绝非是个小数字。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	同时，我在收看几个节目，包括 CNN 上 Anthony Bourdain 的脱口秀，以及 Netflix 播出的 Parts Unknown 节目，我看到了什么呢？一期关于利比亚的节目中 Bourdain 在访问那里的自由斗士，询问到底暴乱以及卡扎菲的下台原因，他们给出的答案是“Twitter”。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	我看到 Twitter 上，Bourdain 还在实时评论正在播出的一期 Parts Unknown。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	说到 CNN，当你换到这个台，你会看到 Twitter，Twitter， Twitter。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	Twitter 不是主流，完全不是。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	但者并不是说 Twitter 没有面临困难和挑战。我认为，这个产品就像一种大量尚未成熟实验的混合体。但在其产品内核中，始终包含着有趣，有活力，且十分重要的内容，只是需要有人能深入到产品中，进行整合优化，去除累赘，对于无用的内容 say no。\r\n</p>\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	总之我并不是很担心 Twitter 的发展。Twitter 将会走得很远。同样的故事最近几年反复出现。这一轮舆论对 Twitter 的诋毁，至少是 Twitter 第 20 几次“完蛋”了。\r\n</p>\r\n<hr />\r\n<p style=\"font-size:18px;font-family:\'Open Sans\', Arial, \'Hiragino Sans GB\', \'Microsoft YaHei\', 微软雅黑, STHeiti, \'WenQuanYi Micro Hei\', SimSun, sans-serif;vertical-align:baseline;background-color:#FFFFFF;color:#333332;\">\r\n	利益相关：我个人持有 Twitter 的股票，还投资了一些在 Twitter 董事会拥有席位的基金，或许我应该投资更多。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','36氪','http://www.36kr.com/p/211669.html','2014-05-05 09:01:05',1,'/news/thumb/b675eda23dfea2787069d1580f8d9df1.jpg','MG Siegler：“Twitter已死！”之声渐涨，Twitter真的衰败了吗？','admin','Kryptoners'),(56,'<div>\r\n	<img alt=\"移动搜索竞争加剧：UC欲重走360之路蚕食百度份额\" src=\"http://img1.gtimg.com/tech/pics/hv1/161/59/1584/103014806.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">UC优视董事长俞永福(</span><a href=\"http://t.qq.com/yu_yongfu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月6日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">成不了“恋人”或许就成“敌人”。UC与</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">这两个曾经的绯闻对象最近有了新摩擦。随着</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">和UC联合推出“神马”移动搜索，原本平静的移动搜索市场正呈现出混战局面。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">UC董事长俞永福昨日在全球移动互联网大会演讲时高调指责百度打压对手，称在百度发行体系里：百度搜索、91等市场里，搜索“UC浏览器”等精准词突然消失，这对神马有致命性打击。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“百度对UC进军移动搜索反应之激烈远远出乎我们意料。”俞永福说，期望每个人能维护互联网基本道义和公约。俞永福还掷地有声的说：2014年第一季度，神马搜索在整个中国用户渗透率已超过20%，因为UC浏览器在整个中国的市场份额超过50%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在俞永福看来，百度过去是PC搜索的代名词，但百度的品牌不会成移动搜索代名词。无论是百度还是神马搜索在移动搜索时代都占在相同的起跑线，这对于UC来说是巨大机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">UC在移动搜索上策略复制2012年360推出搜索的路径。当年360基于浏览器推出360搜索，逐步替换成默认搜索引擎，仅发布数天便取得10%市场份额，这给了俞永福很大信心。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，无论是UC发声明指责百度疑似利用垄断打击神马搜索，还是俞永福高调指责百度打压对手，百度始终泰然处之，无360涉足搜索时的强烈反应。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位搜索行业人士指出，UC所谓20%渗透率并非是20%的市场份额，神马搜索实际份额或仅有5%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而搜狗CEO</span><a href=\"http://t.qq.com/xiaochuanwang#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">王小川</span></a><span style=\"font-size:14px;\">向俞永福祝贺时也在微博指出，一周内UC沿用三级火箭模式，通过浏览器带动神马搜索，获得近5%移动网页搜索份额，超过360，位列百度、搜狗后成第三名。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">神马搜索吸纳阿里和360搜索资源</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">神马搜索挑战百度并非是弱小创业者挑战行业巨头的故事，其背景并不简单。今年4月，UC宣布与阿里巴巴组建合资公司，发布神马搜索，其中UC占股70%，阿里巴巴占股30%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">神马搜索启动之初，整合阿里巴巴的资产和团队，其前身可以追溯到360董事长周鸿祎(</span><a href=\"http://t.qq.com/zhouhongyi#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)在</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">中国做的一搜.，后期又吸纳了部分来自360搜索的资源。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当初360做搜索过程中使用A队与B队模式。360将内部搜索团队分为A队，将外部团队分为B队。A队、B队各有各的服务器。360对搜索的选用原则是将流量导入到A队、B队，谁的用户点击率高谁就胜出。周鸿祎曾透露，彼时360投资了数个外部搜索团队。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这也是很多公司通常的作法，百度内部经常就有这样的立项，通过不同团队竞争，最后选择最优的结果。360搜索采取这种模式希望达到他山之石，可以攻玉的战略目标。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技此前曾披露，360通用搜索是由360自有技术和另一家公司一同提供。这中间有一关键人物是原</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)中国研究员、机器学习博士张栋。张栋还曾为百度科学家，担任过凤巢系统架构师，其在机器学习领域有很深研究，后续带领几位原百度凤巢员工为360搜索效力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">360原本酝酿收购张栋的创业团队，并与360原有搜索团队并列发展，最终双方并未达成协议，360最终选择A队计划弃用B队计划，张栋转投神马搜索。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">做移动搜索底气：UC占百度移动搜索流量20%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">曾经UC和百度闹过持续一年的“绯闻”，UC在移动互联网上有卡位、团队和收入，还为百度移动搜索贡献了20%的流量，最终阿里巴巴搅局，加之百度决心不够导致交易失败。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴的卡位让UC和百度的关系打入锲子。作为移动互联网重要入口，百度丧失UC浏览器这一块的支持，会显得很难受。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当前UC并未全力推广神马搜索。俞永福称，UC仅仅动用50%渠道推广神马搜索。这种情况下，每个月活跃用户突破一个亿，在中国移动(</span><a href=\"http://t.qq.com/CMCC#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)搜索用户覆盖率超20%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福还放言，如果UC向全部用户推荐神马搜索引擎，移动搜索的天肯定会改颜色。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福做无线搜索的自信并非没有道理。与PC端存在一定类似，浏览器在移动端依然扮演重要角色，例如搜狗在获得腾讯资源支持后无线有24%的流量提升。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">搜狗CEO王小川就表示，搜狗跟搜搜合并后，搜狗搜索无线流量基本从腾讯过来，占80-90%，直接从手机QQ浏览器过来的流量占70%左右。这推动搜狗在移动搜索市场份额的提升。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">反观360，尽管在PC端做得有声有色，在与百度搜索的叫板中占据超过10%甚至20%的份额，但在无线端基本处于无所作为的境地，曾经的“雷电搜索”已没有太多声音。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位搜索行业人士表示，相比UC和手机QQ浏览器，360移动浏览器份额很小，能带动360移动搜索流量的增长有限，独立移动搜索APP很难推广，导致360移动搜索基本很少有作为。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管再收购UC为时已晚，但百度内部依然有声音建议百度收购UC。其观点是，百度移动搜索框流量增长快，超过UC流量，但UC有很强地位，从安全性角度看百度应整合UC。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">神马搜索面临增长瓶颈 UC与百度难切割</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当前UC首页有三个主要的搜索入口，分别是地址栏、地址栏右侧搜索框和顶部搜索框，其中地址栏已默认为神马搜索，而另外两个位置大部分还是指向百度。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为何不动用UC全部渠道推广神马搜索？俞永福说，产品和技术要循序渐进，先向一部分用户推广并收集用户反馈，迭代下一个产品，再推用户再迭代产品，神马搜索要经历成长路径。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这并非全部事实。一位搜索行业人士指出，UC不敢全部切换成神马搜索。一方面在搜索领域百度是强势品牌，从用户体验来UC必须保留百度的搜索功能，只要保留，很多人依然会用百度作为主要搜索引擎，以360浏览器为例，一直到现在仍有50%的人使用百度搜索。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一个重要原因是，百度的变现能力强，UC在移动搜索方面变现能力差，完全切换成神马搜索会导致UC的广告收入下降。上述人士指出，UC这几年在不断降低对百度的依赖度。目前来自百度的分成占UC收入的比重不到20%，但依然处于很高比例，当前UC并不敢与百度彻底决裂，彼此是竞合关系。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">过去一两年百度在移动搜索市场投入大量资金，使得其市场份额维持在70%到72%。尽管神马搜索扔掉了PC的包袱，设定远景目标为全球、移动搜索、创新者，但未来发展并非坦途。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王小川表示，移动浏览器没有PC端重要。PC上90%甚至95%时间都在浏览器里，浏览器作为一统用户浏览行为工具，本身代表上网的唯一入口，在浏览器里面做搜索是更自然的事情。在无线里大家用手机的上网入口同步应用会多样化，常规的地方浏览器都进不去。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王小川说，移动浏览器不会作为唯一上网入口，甚至浏览器和搜索入口也会产生竞争。百度不是通过浏览器也可以用，通过APP就能实现，可以看成是浏览器的增强版。而比如大众点评、嘀嘀打车这样的搜索也不在浏览器里。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一位搜索行业人士指出，UC的路径搜狗、360已走了几年，但百度人员和业务做得比两者都大，继续走在这个路径中很容易遭遇到瓶颈。如360浏览器搜索功能切换成360搜索后，短时间可获得很大增长，但很快出现饱和。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/011026.htm','2014-05-06 08:44:27',1,'/news/thumb/103014806.jpg','移动搜索竞争加剧：UC欲走360之路蚕食百度份额','admin','雷建平'),(57,'<div style=\"text-align:center;\">\r\n	<img alt=\"陪审团劝苹果直接向谷歌发难\" src=\"http://img1.gtimg.com/tech/pics/hv1/187/64/1584/103016107.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月6日消息，三星和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">在美国的第二轮专利大战结果上周五出炉，位于加州圣何塞的一家美国联邦法院的陪审团裁定，三星产品侵犯了苹果两项专利，赔偿金逾期1亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，陪审团周一表示，如果苹果认为Android侵犯了其软件专利，其就应该直接向</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)发难，而不是针对手机制造商发起诉讼战。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苹果称，其到法院打官司的目的在于惩戒三星的侵权行为，而不是向Android软件发起进攻。不过，这一套说辞并没有说服陪审团。陪审团成员在本案完结后与记者和检察官对话时表示，除了一些来自前谷歌员工的证词外，他们在判断哪些功能侵权以及赔偿金上并没有被谷歌因素所左右。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，陪审团主席、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/IBM.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">IBM</span></a><span style=\"font-size:14px;\">退休高管汤姆•邓汉姆(Tom Dunham)指出，他们相信这起官司背后隐含的事实是，苹果和三星的专利案多多少少与谷歌有一定的关联，但谷歌并没有作为被告一方。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">邓汉姆说：“我认为如果苹果真正感到谷歌是造成目前侵权的原因，这一点我想大家已经都观察到了。苹果就不应该转弯抹角”。邓汉姆还建议，苹果可以考虑直接与谷歌单挑，通过法律途径来解决知识产权方面的问题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">陪审团的另一位成员，退休教师玛格丽塔•帕尔玛塔(Margarita Palmada)则表示，陪审团想知道更多关于当事公司在此案件中的动机以及谷歌在此案件中所扮演的角色。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">帕尔玛塔说：“我们想知道某些事情的更多信息。与此同时，也有一些事情需要某些人在某些时候进行回应。”（李路）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/012183.htm','2014-05-06 08:53:24',1,'/news/thumb/103016107.jpg','陪审团劝苹果直接向谷歌发难','admin','李路'),(58,'<div style=\"text-align:left;\">\r\n	<img alt=\"中移动敲定17家虚拟运营商合作细节 最快月底发牌\" src=\"http://img1.gtimg.com/tech/pics/hv1/62/49/1584/103012157.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 郭晓峰 5月6日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国移动(</span><a href=\"http://t.qq.com/CMCC#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)的虚拟运营商伙伴即将登场了。据腾讯科技从内部渠道获悉，最快本周内，中国移动将完成与17家企业转售业务协议的最终签署，接下来这些企业将携带协议及相关材料向工信部申请虚拟运营商牌照。如不出意外，牌照最快本月底发放。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据悉，这17家企业分别为：迪信通、爱施德、国美(</span><a href=\"http://t.qq.com/GOME1987#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)、苏宁互联、万网、分享在线、北纬通信、三五互联、巴士在线、华翔联信、天音通信、朗玛信息、鹏博士、世纪互联、中邮普泰、银盛、中兴视通。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此前工信部发放的19家虚拟运营商牌照相比，与中移动合作的企业增加了朗玛信息、鹏博士、世纪互联、中邮普泰、银盛、中兴视通6家企业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">那么，中移动的虚拟运营商伙伴为何会有这些新面孔？简单来看，鹏博士、世纪互联属于宽带服务商，宽带在中国移动一直所处弱势，借此在虚拟运营商到来之际，用鹏博士、世纪互联试水宽带家庭入口，实现宽带入口，弥补语音、短彩信之外的宽带战略；中兴视通，视频服务商，视频则可以加速中移动4G流量经营；朗玛信息，增值服务商，中移动早期移动梦网鼎峰时期的盛况或将再次重启；银盛，移动金融服务商，手机支付在中移动4G大势下是关键一环；中邮普泰则属于4G手机重要分销渠道之一。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从今年4月开始，17家企业陆续与中国移动正式签署了《移动通信转售业务合作协议》。合作内容包括：转售企业从中国移动以一定价格批发移动通信服务，自行将其包装为自有品牌并销售给最终用户；根据转售企业的具体业务安排，双方将另行商定具体合作地域范围（不含港、澳、台）；中国移动可以向转售企业提供的衍生服务包括营帐系统、SIM卡资源管理服务、话单采集和格式转换服务等；若转售企业有意向与中国移动就增值电信服务进行合作，双方将另行协商签订增值电信合作协议。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据相关申请企业对腾讯科技透露，起初与中移动签署的仅是意向框架协议，具体合作细节直到最近才陆续敲定。如双方合作地域范围、产品定位、计费、营账、客服、信息安全系统的开发等，经过多轮交流、资料申报、评审，最终双方达成一致。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，腾讯科技从中国移动内部人士获悉，目前计费系统是采用租借还是让企业自建仍没有达成最终的一致意见。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从另两家情况来看，中国电信(</span><a href=\"http://t.qq.com/chinatelecom#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)由于IT支撑系统接口尚未建好只能租借，而中国联通(</span><a href=\"http://t.qq.com/chinaunicom#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)则允许企业自建。两种方式的最大区别是，自建系统可以灵活组合资费套餐，租赁则只能使用基础运营商套餐形式，无法拆包自行组合。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">上述人士还表示，从目前中国移动主推的4G资费套餐来看，采取语音、数据任意组合的方式，基本不太可能让企业自建系统。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">未来的5月和6月是虚拟运营商业务密集落地的重要窗口期，中移动也加快了与小伙伴的合作步伐。首批170号段已正式开卖，用户是否接受虚拟运营商的涌入有待市场检验。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/009712.htm','2014-05-06 08:55:04',1,'/news/thumb/103012157.jpg','中移动敲定17家虚拟运营商合作细节 最快月底发牌','admin','郭晓峰'),(59,'<div>\r\n	<img alt=\"四维获腾讯注资 地图市场博弈加剧\" src=\"http://img1.gtimg.com/tech/pics/hv1/21/44/1584/103010841.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月6日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">国内地图服务商四维图新昨日晚间发布公告，宣布控股股东中国四维已与腾讯签署股权转让协议，腾讯11.73亿元投资四维，转让完成后，腾讯将持股11.28%，中国四维将持股12.58%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">协议规定，自股份转让交割完成之日起，腾讯18个月内不转让四维图新股份，这期间中国四维不再继续转让所持有的四维图新股份。至此，未来一年半腾讯都是四维图新重要股东。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这是今年4月</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">完成全资收购</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMAP.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">高德软件</span></a><span style=\"font-size:14px;\">后，国内电子地图服务市场的又一重大投资并购。高德软件和四纬图新是国内主要的两家电子地图导航和位置服务解决方案提供商。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯地图过去曾采用高德的地图信息服务，但阿里收购高德后，腾讯地图与高德的合作关系变得微妙。腾讯此次入股高德竞争对手四纬图新，也凸显了腾讯与阿里在地图市场的激烈博弈。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">四维图新为什么接受腾讯投资？背后的推动力或是其寻求新业务增长点的迫切愿望。近年来，四维图新不断优化业务结构，公司导航地图收入从2010年占比93.7%下降到去年底的58.3%，交通信息服务和车联网等业务的收入增速很快。但随着互联网公司地图导航免费策略的冲击，其传统业务仍挑战较大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业内人士分析认为，四维图新很大的客户群体是汽车厂商，近年来汽车与互联网的结合日益紧密，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)等互联网公司均推出了野心勃勃的车载技术发展计划，国内互联网公司对汽车导航、定位业务也虎视眈眈，长远看四维图新的传统业务面临较大竞争。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，四维图新和腾讯、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">、搜狗等公司均保持合作关系，但随着移动互联网、生活服务和地图位置服务之间的相互渗透，地图服务公司的竞争越来越演变为产业链竞争，阿里收购高德即代表了这一趋势，四纬图新如果要快速形成完整产业链，捷径莫过于和互联网巨头通过资本纽带建立深度合作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">四维图新必须加速向移动互联网转型，实际上，四维图新早已表明姿态。今年1月，四维图新发布公告，宣布引入搜狗CEO</span><a href=\"http://t.qq.com/xiaochuanwang#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">王小川</span></a><span style=\"font-size:14px;\">成为公司独立董事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">所谓独立董事指的是独立于公司股东且不在公司内部任职，并与公司或公司经营管理者没有重要的业务联系或专业联系，并对公司事务做出独立判断的董事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王小川日前接受腾讯科技采访时表示，四维图新希望更互联网化，他们认识到国有企业跟互联网较量时，从思维方式到员工激励他们需要更灵活，简而言之，四维图新需有更多互联网思维。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯战略入股四维图新后，对搜狗地图的影响不大。搜狗地图负责人孔祥来对腾讯科技表示，搜狗和腾讯两家合作非常紧密，搜狗地图和腾讯地图是两块独立业务，如同腾讯内部存在竞争一样，搜狗地图和腾讯地图也可以适当竞争，并不影响两家关系。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从未来发展看，高德和四维图新发展的区别会越来越大。一位业内大佬对腾讯科技表示，四维图新仍会坚持地图领域发展，随着考核体系发生改变，高德会更多在阿里巴巴体系内发展。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/008496.htm','2014-05-06 08:56:10',1,'/news/thumb/103010841.jpg','腾讯注资四维 地图市场划分成两大阵营','admin','雷建平'),(60,'<div>\r\n	<img alt=\"隔夜中概股涨跌互现 中国手游大涨16.32%\" src=\"http://img1.gtimg.com/tech/pics/hv1/72/39/1584/103009617.jpg\" /><span style=\"font-size:14px;\"></span>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 金铎 5月6日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4月份ISM美国服务业指数上升至55.2点，创下6个月以来的最高水平，超出经济学家此前预期。美国股市周一小幅收高；中国概念股涨跌互现，中国手游大涨16.32%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">道琼斯工业平均指数上涨17.66点，涨幅0.11%，至16530.55点；纳斯达综合指数上涨14.16点，涨幅为0.34%，至4138.06点；标准普尔500指数上涨3.51点，涨幅为0.19%，至1884.65点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国手游娱乐集团美国当地时间3月28日公布，</span><a target=\"_blank\" href=\"http://tech.qq.com/a/20140328/013097.htm\"><span style=\"font-size:14px;\">中国手游完成第三轮融资 募集资金7870万美元</span></a><span style=\"font-size:14px;\">。中手游此次共增发344.2万股美国存托凭证，发行价格为每股24美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国手游3月4日发布的财报显示，公司第四季度营收为人民币1.464亿元（约合2420万美元），好于上年同期的人民币2890万元；中手游第四季度净利润为人民币3530万元（约合580万美元），上年同期净亏损为人民币5830万元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2013年第四季度，中手游社交游戏总付费用户总数为320万人，虽然人数有所增长但是每用户平均营收为人民币36.6元，而上年同期的人民币92.47元，下降严重。单机游戏用户数量出现下降，导致业绩不达预期。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其它活跃个股中，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/VIPS.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">唯品会</span></a><span style=\"font-size:14px;\">&nbsp;涨6.25%；</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EDU.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新东方</span></a><span style=\"font-size:14px;\">跌5.96%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/LONG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">艺龙</span></a><span style=\"font-size:14px;\">跌5.04%。中国概念股周一收盘行情如下：</span>\r\n</p>\r\n<p>\r\n	<img alt=\"隔夜中概股涨跌互现 中国手游大涨16.32%\" src=\"http://img1.gtimg.com/tech/pics/hv1/50/54/1433/93194645.jpg\" 搜房网大涨10.62%?=\"\" 无锡尚德暴跌23.85%?=\"\" 四支个股跌幅超10%?=\"\" 麦考林大涨22.82%?=\"\">\r\n</p>\r\n<div>\r\n	<img alt=\"隔夜中概股涨跌互现 中国手游大涨16.32%\" src=\"http://img1.gtimg.com/tech/pics/hv1/100/39/1584/103009645.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"隔夜中概股涨跌互现 中国手游大涨16.32%\" src=\"http://img1.gtimg.com/tech/pics/hv1/101/39/1584/103009646.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"隔夜中概股涨跌互现 中国手游大涨16.32%\" src=\"http://img1.gtimg.com/tech/pics/hv1/102/39/1584/103009647.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以上交易价格单位为美元；市值一列中，B代表10亿美元，M代表100万美元，K代表1000美元。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/008049.htm','2014-05-06 08:58:15',1,'/news/thumb/103009617.jpg','隔夜中概股涨跌互现 中国手游大涨16.32%','admin','金铎'),(61,'<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div style=\"text-align:left;\">\r\n	<img alt=\"苹果股价两年来首次站上600美元\" src=\"http://img1.gtimg.com/tech/pics/hv1/94/36/1584/103008874.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月6日消息，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">公司周一股价收盘上涨，自2012年10月底以来首次报收于600美元上方。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当日，苹果股价在纳斯达克市场的常规交易中上涨8.38美元，报收于600.96美元，涨幅为1.41%。过去52周，苹果的最高股价为601.00美元，最低股价为388.87美元。苹果股价在2012年9月份创下702.10美元的历史最高水平。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">过去一年时间里，苹果股价上涨了35%，该公司最近宣布了一项1:7的股票分割计划，将于6月9日正式进行分割。（瑞雪）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/006711.htm','2014-05-06 09:00:02',1,'/news/thumb/103008874.jpg','苹果股价两年来首次站上600美元','admin','瑞雪'),(62,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><img src=\"/upload/image/20140506/20140506090347_447.jpg\" alt=\"\" width=\"720\" height=\"540\" title=\"\" align=\"\" /><br />\r\n</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在今天下午的 2014GMIC 大会上，有个高端访谈的环节叫做“社交媒体的下一站”，嘉宾是新浪微博 CEO 王高飞，访谈他的是长城会 CEO 文厨，虽然最后内容彻底跑偏了，和“社交媒体的下一站”完全没关系，但作为新浪微博的 CEO，并且是在上市后首度对外发声，对于外界了解新浪微博，高飞的一些观点还是比较具有代表性的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1）关于微博的定位</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">关于微博的定位，王高飞给出的答案是，“希望微博成为获取所有公开信息的一种方式”。如果用户希望发布一条信息让全世界都知道，或者用户希望得到的信息能够超越已有的社交关系，那微博可以是他的首选，微博打算从产品、技术和战略等方面努力做到这一点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2）怎么看微博和微信的竞争</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">微博和微信肯定是有竞争的，微博和微信一定是有 PK 的，因为用户使用社交产品的时间是一定的，但这并不说明微博和微信就是天敌。微信会分流微博用户，但实际上，对微博用户分流最大的是视频类和游戏类产品，尤其是在晚上睡觉前的那段时间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大家需要注意到的移动互联网时代的两个事实（也是两个机会）：第一，PC 用户有 5~6 亿，然而移动互联网的用户将可能达到 10 亿；第二，用户上网的时长在翻番增长，从原来的每天 2 小时变成每天 4 小时、8 小时。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">面对移动互联网带来的这种改变，微博需要去思考的是，该用什么产品、什么功能去解决用户需求，去抢夺用户增量和用户新增上网时长，如果仅仅思考怎么对峙微信、视频、游戏以守住自己现有的几千万用户，那就顾此失彼了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3）除了微信之外，LinkedIn也进入中国了，BAT也在社交领域有布局，微博怎么面对更大的竞争？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">整个市场其实是开放的，大家都可以去做，从国外很多市场和产品的格局来看，一个大的趋势是，社交市场一定是多元化，或者是多极化的。例如在美国，你发送文本信息会首先想到 Twitter，发送图片可以用 Instagram，上传视频可以用 YouTube，除此之外，你还有 Facebook、Snapchat、Tumblr 可以选择。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，这个趋势在中国还不是很明显。在微博和微信出来之前，基本就是 QQ 一家独大，而随着移动互联网的兴起，用户的选择也变得更多元化了，现在除了 QQ，还有微博、微信、陌陌等等，未来中国的社交市场里肯定不会只有微博和微信两家在争夺。随着整个移动互联网用户群的扩大，都有各自的机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4）微博接下来的打算？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">微博在文字、图片、视频方面积累了一定的优势，接下来会持续扩大这些优势，还是希望微博成为获取所有公开信息的一种方式。另外关于微博的商业化，其实商业和信息、服务之间并没有冲突，怎么才能够组合在一起，是一个持续探索的过程。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5）关于赴美上市</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一，美国股市一段时间内都会比较颓靡，要上市的公司赶早不赶晚吧；二，国内的投资人对购买国外股票的热情是我们之前没有想到的，所以我建议那些赴美或赴港的公司（比如</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211330.html\"><span style=\"font-size:14px;\">触控科技</span></a><span style=\"font-size:14px;\">、</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211138.html\"><span style=\"font-size:14px;\">聚美优品</span></a><span style=\"font-size:14px;\">等），去花些精力让中国股民了解你们的公司业务，这对你们走出大陆上市是加分的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为什么会邀请姚晨和王力宏去敲钟？两个人对微博的产品支持都比较多，刚好又在纽约，所以就邀请过来一起。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6）关于下一个50亿的产品在哪里</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">下一个 50 亿的产品会出现在现有的公司中，还是会出现在后起的创业团队里？哪个几率会比较大？理论上来讲，现有的公司已经有了一定的用户基数，他再去获取移动互联时代的 5 亿用户增量，门槛会比新的创业公司低很多。但是需要注意的一点是，新的智能终端在二、三线城市的普及，可能产生一些原来根本不存在的需求，这是新公司的机会，也是现有的公司需要特别留心的。</span>\r\n</p>','36氪','http://www.36kr.com/p/211710.html','2014-05-06 09:04:18',1,'/news/thumb/b30c80853ce0dc25a7de990be95bf4f9.jpg','新浪微博CEO王高飞：社交媒体的下一站','admin','WANGJINGYU'),(63,'<div style=\"text-align:center;\">\r\n	<img alt=\"58同城上市后架构首调：陈小华升任首席战略官\" src=\"http://img1.gtimg.com/tech/pics/hv1/96/208/1584/103052736.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">58同城首席战略官陈小华</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 5月6日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">近日，国内分类信息网站58同城对公司组织架构进行了大调整。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">58同城CEO姚劲波(</span><a href=\"http://t.qq.com/yaojinbo#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)在其个人微博中披露，原58同城高级副总裁陈小华升为首席战略官（CSO），同时担任产品委员会主席，主要负责公司竞争策略、新业务孵化及投资并购。原产品副总裁张川晋升为高级副总裁，接替陈小华原来负责的事务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得一提的是，此番架构调整也是58同城在去年10月成功登陆美国纽交所之后的首次人事调整。新上任首席战略官后，陈小华将从原来具体的事务中剥离出来，不再抓短期的收入、流量等日常业务的考核，转为专注新业务的孵化、投资并购和竞争业务战略。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">姚劲波对外透露，未来3-5年将投入10亿美元来推动新业务孵化和投资并购，使之成为58同城的第二条腿。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">陈小华透露，新业务孵化主要将原来单纯的信息内容展示，通过移动互联，实现线上线下服务体验一体化。如之前的代驾、家政、搬家等只是信息模式，今年将对这些信息接入服务进行定价和交易，从而实现从信息到人的直接连接，脱离单独的广告模式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技登录58同城APP，选择搬家通服务进行体验，这个基于传统服务的新孵化业务，提供标准的服务，从预约、上门、收费到评价，成为与打车一样简便的服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，58同城未来还将涉足互联网金融业务。“58同城上有二手车、二手房、租房等业务，可把金融业务整合到58 产品中。比如为企业和用户提供买房、买车等分期付款业务，采取直接和银行打通作为金融业务入口 ，或者具体在业务层面深入打通。”近期，58同城已在小范围测试此项业务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在陈小华看来，新业务的孵化就类似于当初</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">从B2B业务孵化出B2C业务一样，随着O2O链条的完善，也进一步强化公司的竞争壁垒。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“对于投资并购，我们主要立足本地生活服务，招聘、房产、汽车及黄页等细分领域都是投资的绝佳领域，具体一些投资并购交易已经在进行当中。”当被问到未来是否会考虑收购对手赶集网，陈小华表示“一切皆有可能”。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/033092.htm','2014-05-06 12:24:28',1,'/news/thumb/103052736.jpg','58同城上市后架构首调：陈小华升任首席战略官','admin','腾讯科技'),(64,'<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202292.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5月6日，阿里巴巴IPO在即，《华尔街日报》近期对这家公司做了全面剖析，其中覆盖了阿里巴巴业务、市值、股权结构、面临的风险等方面：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">-关于阿里巴巴</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴是目前中国最大的电子商务公司，旗下有三大网站：淘宝网，天猫商城和阿里巴巴网站。阿里巴巴拥有数亿用户，商户数量达到数百万。阿里巴巴占据了中国在线购物市场80%份额，去年交易额达到了2400亿，超过了eBay和亚马逊总和。</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202293.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">-阿里巴巴市值</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202294.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴上市后，将挤入全球最具价值科技公司行列。如果按照2500亿美元最高估值来看，阿里巴巴的市值仅排在苹果（4740亿美元）、谷歌（3600亿美元）、和微软（3320亿美元）之后，比IBM（2000亿美元）、三星（1740亿美元）和Facebook（1570亿美元）市值都要高。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">-阿里巴巴集团股权分配</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202295.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">软银目前为阿里巴巴集团最大股东，持股比例达37%，雅虎为第二大股东，持股24%。马云持有7%的股份，但根据阿里巴巴集团公司结构，马云和</span><a href=\"http://product.it.sohu.com/list/subcate_685_1.html\" target=\"_blank\"><span style=\"font-size:14px;\">其他</span></a><span style=\"font-size:14px;\">高管拥有董事会董事绝对任命权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">-创始人马云“身价”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">马云持有的阿里巴巴集团7%股权价值在40亿美元左右。根据胡润公布的2013年中国富豪榜单，马云位列29位。如果阿里巴巴IPO后受到投资者追捧，马云的身价还会继续上涨。</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202296.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">-阿里巴巴IPO的挑战</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202297.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴预期在本次IPO中融资150亿美元。如此规模庞大的交易需要阿里巴巴向投资者讲一个很动人的“阿里故事”。此外，阿里巴巴现在也面临着其他挑战：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1）移动化</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202298.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国智能</span><a href=\"http://product.it.sohu.com/list/subcate_57_1.html\" target=\"_blank\"><span style=\"font-size:14px;\">手机</span></a><span style=\"font-size:14px;\">用户超过6亿， 移动市场前景巨大。但作为阿里巴巴最大竞争对手，腾讯微信拥有3.3亿移动用户。两家公司目前正在不遗余力加大在移动领域的投入。阿里巴巴已涉足的领域包括：移动通讯应用，搜索和门户，地理导航服务和社交媒体等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2）货币基金</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202299.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">金融业是阿里巴巴涉足的新领域。用户可以使用阿里巴巴支付宝应用来购买电影票和支付出租费。阿里巴巴推出的余额宝基金目前已经募集了870亿美元资金，让中国大型银行感到了竞争压力，同时也触动了它们的利益。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3）出售假货</span>\r\n</p>\r\n<div>\r\n	<table border=\"0\" class=\"ke-zeroborder\">\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<img src=\"http://photocdn.sohu.com/20140506/Img399202300.jpg\" alt=\"\" /> \r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">很多品牌商表示，阿里巴巴旗下网站（尤其是淘宝网）假货泛滥。如果阿里巴巴成功IPO，走向世界，出售假货将为这家公司脸上抹黑。阿里巴巴表示，它们过去一年已经斥资数百万美元来打击假货。</span>\r\n</p>','搜狐IT','http://it.sohu.com/20140506/n399202291.shtml','2014-05-06 12:29:19',1,'/news/thumb/Img399202292.jpg','阿里IPO前瞻：多图看懂马云的帝国','admin','搜狐IT'),(65,'<div>\r\n	<img alt=\"阿里巴巴递交赴美上市招股书\" src=\"http://img1.gtimg.com/tech/pics/hv1/153/227/1572/102277338.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">今天凌晨向美国证券交易委员会提交IPO招股书，计划赴美上市。招股书显示，</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">将最多融资10亿美元。这一融资额被认为仅是象征性数字，早前媒体报道称阿里将融资200亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以下为招股书要点（不断更新中）：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">股权结构</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">软银持有阿里巴巴集团797,742,980股，占比达34.4%；</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">持有523,565,416股，占比达22.6%；</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">马云</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)持有206,100,673股，占比8.9%；蔡崇信持有83,499,896股，占比3.6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，CEO陆兆禧、COO</span><a href=\"http://t.qq.com/taobaoxiaoyaozi#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">张勇</span></a><span style=\"font-size:14px;\">等高管持股比例均未超过1%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业务</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据产业消息，按照2013年总体商品交易量计算，我们是全球最大的在线和移动商务公司。我们把自己的生态圈像平台一样经营，并提供给第三方；我们并不参与直销，与商家展开竞争或是拥有库存。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据市场调研公司iResearch对2013年的数据统计，按照总商品量计算，我们运营着中国最大的在线购物目的地淘宝网，以及中国最大的第三方品牌和零售商平台天猫商城；按照月活跃用户计算，我们还运营着中国最流行的团购市场聚划算。上述三大市场组成了我们的中国零售市场。在截至2013年12月31日的12个月中，上述市场从2.31亿活跃买家和800万活跃买家产生了人民币1.542万亿元（约合2480亿美元）的交易总额。我们客户中的很大一部分已开始通过我们的移动平台进行交易，我们正在捕捉这一机遇。在截至2013年12月31日的三个月中，移动交易总额占据了我们总交易额的19.7%，高于上年同期的7.4%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们的生态圈拥有强大的自我强化网络效应，它有益于为我们生态圈的成长和成功进行投资的我们的市场参与者。通过这一生态圈，我们改造了在中国进行贸易的方式，并建立了 声誉，为我们生态圈的参与者打造出一个可信的伙伴。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们已为专利技术和基础设施投入了巨额资金，以支持不断成长的生态圈。我们的技术和基础设施，让我们能够驾驭通过我们的市场获得的海量数据，从而进一步开发和优化提供到平台上的产品和服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">通过我们的关联公司支付宝，我们向卖家和买家提供了支付和第三方支付服务，向我们的用户提供了安全、便捷和信任。通过由我们持有48%股权的附属公司浙江菜鸟供应链管理有限公司运营的中央物流信息系统，我们辅佐第三方物流服务提供商完成发货工作。通过我们投资的UC浏览器，我们能够借助它作为移动网络浏览器开发者和运营者的经验，加强我们在电子商务之外的移动产品，如综合移动搜索等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们的营收主要来自于商家进行网络营销（通过我们专有的在线营销平台阿里妈妈），以及交易佣金和在线服务的费用。我们还通过会员费、增值服务和云计算服务获取营收。在截至2013年12月31日的9个月时间里，我们的营收为人民币405亿元（约合65亿美元）；净利润为人民币177亿元（约合29亿美元）。我们的财年以3月31日为终止日。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财务信息</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年总营收为人民币200.25亿元，2013年总营收为人民币345.17亿元（约合55.53亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其中，阿里巴巴集团2012年来自于中国商务业务的营收为人民币156.37亿元，2013年为人民币291.67亿元（约合46.92亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年来自于国际商务业务的营收为人民币37.65亿元，2013年为人民币41.60亿元（约合6.69亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年来自于云计算和互联网基础设施的营收为人民币5.15亿元，2013年为人民币6.50亿元（约合1.05亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年来自于其他业务的营收为人民币1.08亿元，2013年为人民币5.40亿元（约合8700万美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年营收成本为人民币65.54亿元，2013年为人民币97.19亿元（约合15.63亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年产品开发支出为人民币28.97亿元，2013年为人民币37.53亿元（约合6.04亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年销售和营销支出为人民币30.58亿元，2013年为人民币36.13亿元（约合5.81亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年总务和行政支出为人民币22.11亿元，2013年为人民币28.89亿元（约合4.65亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年无形资产摊销支出为人民币1.55亿元，2013年为人民币1.75亿元（约合2800万美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年按照雅虎和阿里巴巴集团签订的技术及知识产权许可协议（TIPLA）修正案的支出为零，2013年为人民币34.87亿元（约合5.61亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年运营利润为人民币50.15亿元，2013年为人民币107.51亿元（约合17.30亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年净利润为人民币46.65亿元，2013年为人民币86.49亿元（约合13.92亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年归属于非控股权益的净利润为人民币-4.37亿元，2013年为人民币-1.17亿元（约合-1900万美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年归属于阿里巴巴集团的净利润为人民币42.28亿元，2013年为人民币85.32亿元（约合13.73亿美元）；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年归属于普通股股东的净利润为人民币42.28亿元，2013年为人民币84.04亿元（约合13.52亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年归属于普通股股东的每股基本和摊薄收益分别为人民币1.71元和人民币1.67元，2013年归属于普通股股东的每股基本和摊薄收益分别为人民币3.66元（约合0.59美元）和人民币3.57元（约合0.57美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年调整后EBITDA（即未计入利息、税费、折旧和摊销前的净利润）为人民币72.74亿元，2013年为人民币166.07亿元（约合26.72亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实+</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">前英语教师马云于1999年创建了阿里巴巴集团。阿里巴巴的早期投资方包括日本软银和美国互联网公司雅虎，两家公司合计持有阿里巴巴超过60%股份。阿里巴巴的股东还包括银湖资本、DST、中国投资有限公司、国开金融以及博裕资本、中信资本等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">雅虎公司最新的财务数据披露，阿里巴巴集团去年4季度的营收同比飙升了66%，达到30.6亿美元，净利润同比增长一倍多，达到13.6亿美元。《华尔街日报》此前披露的数据称，阿里巴巴旗下的电子商务平台淘宝网和天猫在2013年的成交额超过2400亿美元，是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">的两倍多，是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">eBay</span></a><span style=\"font-size:14px;\">的3倍。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴最近一年展开了多项重大投资并购。其目前是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新浪</span></a><span style=\"font-size:14px;\">微博的第二大股东，还全资收购了地图服务公司高德，并于近期投资入股零售公司银泰商业、影视娱乐公司文化中国等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴的上市进程一直备受关注。3月中旬该公司宣布将启动赴美上市，在此之前，阿里巴巴未能与香港证券交易所就上市计划达成一致，被迫放弃了在更为熟悉的香港市场进行IPO。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">香港拒绝阿里巴巴的重要原因在于后者的合伙人制度。该制度被视为允许仅持有少数股权的现有管理团队控制阿里巴巴董事会，这与香港资本市场遵守的“同股同权”规则产生了严重冲突，进而在香港资本市场引发了巨大争议。去年10月，阿里巴巴表态称将不选择在香港上市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">外界预计，阿里巴巴的IPO将把今年中国互联网企业赴美上市推向高潮。4月18日，新浪微博在纳斯达克上市，阿里巴巴的竞争对手京东集团也已于今年1月申请上市，融资额为15亿美元，预计将在5月正式挂牌交易。目前计划赴美上市的中国互联网公司还包括猎豹（金山安全业务）、途牛、聚美优品、触控科技等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴IPO当日美国股市阴云密布。股价整体下跌使得科技股再次遭遇重挫。其中，Twitter股价暴跌逾17%，Yelp大跌逾13%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">下挫4.39%，特斯拉下跌4.31%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)下跌2.4%。与此同时，阿里巴巴投资的新浪微博也在午后整体下跌，收盘时下跌5.97%，优酷土豆收盘时下跌2.47%。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/003745.htm','2014-05-07 06:49:41',1,'/news/thumb/102277338.jpg','阿里巴巴递交赴美上市招股书','admin','瑞雪'),(66,'<p>\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月7日报道</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">今天向美国证券交易委员会提交IPO招股书，计划赴美上市。招股书披露</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">详细持股情况，其中，阿里巴巴董事局主席</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">马云</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)持股206,100,673股，占比为8.9%。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"阿里巴巴集团详细股权报告：马云持股8.9%\" src=\"http://img1.gtimg.com/tech/pics/hv1/162/211/1585/103118592.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">阿里巴巴集团持股情况（腾讯科技配图）</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其中，1,903,177股普通股为马云持有，35,000,000股普通股由APN Ltd.,持有，马云在APN Ltd.,中拥有70%的股权，35,000,000股普通股由SymAsia Foundation Limited持股； 65,097,160股普通股由JC Properties Limited持有，JC Properties Limited由马云家族控制。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">67,000,336股普通股和2,100,000股由Alternate Solutions Management Limited持有，通过JSP Investment Limited由马云家族控制。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">阿里巴巴集团董事局执行副主席蔡崇信持有83,499,896股，占比为3.6%，软银为阿里巴巴集团最大股东，持有797,742,980股，占比为34.4%。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">软银持股中466,826,180股普通股由软银直接持有，15,000,000股由软银旗下SBBM Corporation持有，315,916,800股由软银旗下SB China Holdings Pte Ltd.持有。</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">当前持有阿里巴巴集团523,565,416股普通股，占22.6%。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"></span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">马云、蔡崇信还与软银达成协议，软银不得在没有马云、蔡崇信同意的情况下撤掉任何由阿里巴巴合伙人制度递交的集团董事，并需将30%的投票权投向马云和蔡崇信。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/007163.htm','2014-05-07 06:51:01',1,'/news/thumb/02-00-02-70.jpg','阿里巴巴集团详细股权报告：马云持股8.9%','admin','雷建平'),(67,'<div>\r\n	<img alt=\"阿里巴巴集团去年净赚166.07亿元\" src=\"http://img1.gtimg.com/tech/pics/hv1/109/210/1585/103118284.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">周二向美国证券交易委员会（SEC）提交了IPO招股书。招股书显示，阿里巴巴集团计划通过IPO交易筹集10亿美元资金，拟在纽约证券交易所或纳斯达克全球市场挂牌。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">招股书还显示，阿里巴巴集团2012财年（截至到到2012年3月31日）总营收为人民币200.25亿元，2013财年（截至到2013年3月31日）总营收为人民币345.17亿元（约合55.53亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其中，阿里巴巴集团2012年来自于中国商务业务的营收为人民币156.37亿元，2013年为人民币291.67亿元（约合46.92亿美元）；2012年来自于国际商务业务的营收为人民币37.65亿元，2013年为人民币41.60亿元（约合6.69亿美元）；2012年来自于云计算和互联网基础设施的营收为人民币5.15亿元，2013年为人民币6.50亿元（约合1.05亿美元）；2012年来自于其他业务的营收为人民币1.08亿元，2013年为人民币5.40亿元（约合8700万美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年营收成本为人民币65.54亿元，2013年为人民币97.19亿元（约合15.63亿美元）。阿里巴巴集团2012年产品开发支出为人民币28.97亿元，2013年为人民币37.53亿元（约合6.04亿美元）；2012年销售和营销支出为人民币30.58亿元，2013年为人民币36.13亿元（约合5.81亿美元）；2012年总务和行政支出为人民币22.11亿元，2013年为人民币28.89亿元（约合4.65亿美元）；2012年无形资产摊销支出为人民币1.55亿元，2013年为人民币1.75亿元（约合2800万美元）；2012年按照</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">和阿里巴巴集团签订的技术及知识产权许可协议（TIPLA）修正案的支出为零，2013年为人民币34.87亿元（约合5.61亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年运营利润为人民币50.15亿元，2013年为人民币107.51亿元（约合17.30亿美元）。阿里巴巴集团2012年净利润为人民币46.65亿元，2013年为人民币86.49亿元（约合13.92亿美元）。2012年归属于非控股权益的净利润为人民币-4.37亿元，2013年为人民币-1.17亿元（约合-1900万美元）；2012年归属于阿里巴巴集团的净利润为人民币42.28亿元，2013年为人民币85.32亿元（约合13.73亿美元）；2012年归属于</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">普通股股东的净利润为人民币42.28亿元，2013年为人民币84.04亿元（约合13.52亿美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年归属于普通股股东的每股基本和摊薄收益分别为人民币1.71元和人民币1.67元，2013年归属于普通股股东的每股基本和摊薄收益分别为人民币3.66元（约合0.59美元）和人民币3.57元（约合0.57美元）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴集团2012年调整后EBITDA（即未计入利息、税费、折旧和摊销前的净利润）为人民币72.74亿元，2013年为人民币166.07亿元（约合26.72亿美元）。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/006825.htm','2014-05-07 06:52:39',1,'/news/thumb/103118284.jpg','阿里巴巴集团2013财年净赚166.07亿元','admin','瑞雪'),(68,'<div>\r\n	<img alt=\"Groupon第一季度净亏损3780万美元 同比扩大\" src=\"http://img1.gtimg.com/tech/pics/hv1/182/206/1585/103117337.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，美国团购网站</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GRPN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Groupon</span></a><span style=\"font-size:14px;\">今天发布了2014财年第一季度财报。报告显示，Groupon第一季度营收为7.576亿美元，比去年同期的6.014亿美元增长26%；归属于普通股股东的净亏损为3780万美元，与去年同期归属于普通股股东的净亏损400万美元相比有所扩大。Gropon第一季度业绩超出华尔街分析师预期，但第二季度业绩展望不及预期，推动其盘后股价大涨近6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在截至3月31日的这一财季，Groupon归属于普通股股东的净亏损为3780万美元，每股亏损6美分，这一业绩好于去年同期。2013财年第一季度，Groupon归属于普通股股东的净亏损400万美元，每股亏损1美分。不计入某些一次性项目（不按照美国通用会计准则），Groupon第一季度每股亏损为1美分，这一业绩好于分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第一季度调整后每股亏损为1美分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度营收为7.576亿美元，比去年同期的6.014亿美元增长26%，其中北美地区营收同比增长27%，EMEA（欧洲、中东和非洲）地区营收同比增长26%，世界其他地区营收同比增长23%，这一业绩超出分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第一季度营收为7.384亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">详细业绩：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度直接营收为3.31亿美元，远高于去年同期的1.62亿美元；第三方及其他营收为4.26亿美元，低于去年同期的4.39亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按地区划分，Groupon第一季度来自于北美地区的营收为4.31亿美元，比去年同期的3.40亿美元增长26.9%；来自于EMEA地区的营收为2.31亿美元，比去年同期的1.84亿美元增长25.6%；来自于世界其他地区的营收为9570万美元，比去年同期的7810万美元增长22.6%。按部门划分，Groupon第一季度本地营收为3.30亿美元，去年同期为3.29亿美元；商品营收为3.86亿美元，去年同期为2.29亿美元；旅游及其他营收为4130万美元，去年同期为4270万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度毛账单收入（反映了顾客购买的商品和服务的总美元价值，不计入任何适用税收和预估退税）为18.2亿美元，比去年同期的14.1亿美元增长29%。Groupon第一季度来自于北美地区的毛账单收入同比增长15%，EMEA地区毛账单收入同比增长4%，世界其他地区毛账单收入同比增长123%。Groupon第一季度运营亏损为2000万美元，去年同期运营利润为2120万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度毛利润为3.857亿美元，比去年同期的3.790亿美元增长2%；调整后EBITDA（即未计入利息、税费、折旧和摊销前的净利润）为4030万美元，去年同期为7190万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在截至3月31日的12个月中，Groupon的运营现金流为1.890亿美元。Groupon第一季度自由现金流（不按照美国通用会计准则）为3710万美元，过去12个月时间里的自由现金流为1.236亿美元。截至第一季度末为止，Groupon拥有10亿美元的现金和现金等价物。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，Groupon在北美市场上的活跃交易数量增加至20多万桩，截至2013年第四季度末为逾14万桩。截至2014年3月31日为止，Groupon的活跃用户人数为5180万人，去年同期增长24%，其中北美活跃用户人数为2180万人，EMEA地区活跃用户人数为1450万人，世界其他地区活跃用户人数为1550万人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第一季度中，Groupon每活跃用户在过去12个月中的平均账单为132美元，低于上一季度的134美元。在2014年3月，Groupon有54%的北美交易都是通过移动设备完成的。在2014年第一季度中，全球有1000多万名用户</span><a href=\"http://download.tech.qq.com/\" target=\"_blank\"><span style=\"font-size:14px;\">下载</span></a><span style=\"font-size:14px;\">了Groupon移动应用，目前已经下载移动应用的用户总数超过了8000万人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业绩预期：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon预计，2014财年第二季度营收为7.25亿美元到7.75亿美元，其中值不及分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第二季度营收为7.54亿美元。Groupon预计，2014财年第二季度调整后EBITDA为4500万美元到6500万美元，不按照美国通用会计准则的调整后每股收益为0美元到0.02美元，也不及分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第二季度每股收益为3美分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon还预计，2014财年全年的调整后EBITDA将超过3亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">股价变动：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当日，Groupon股价在纳斯达克常规交易中下跌0.17美元，报收于6.72美元，跌幅为2.47%。在随后截至美国东部时间15:59（北京时间7日5:59）为止的盘后交易中，Groupon股价再度下跌0.39美元，至6.33美元，跌幅为5.80%。过去52周，Groupon的最高股价为12.76美元，最低股价为5.37美元。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/005806.htm','2014-05-07 06:53:56',1,'/news/thumb/103117337.jpg','Groupon第一季度净亏损3780万美元 同比扩大','admin','瑞雪'),(69,'<div>\r\n	<img alt=\"Groupon第一季度净亏损3780万美元 同比扩大\" src=\"http://img1.gtimg.com/tech/pics/hv1/182/206/1585/103117337.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，美国团购网站</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GRPN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Groupon</span></a><span style=\"font-size:14px;\">今天发布了2014财年第一季度财报。报告显示，Groupon第一季度营收为7.576亿美元，比去年同期的6.014亿美元增长26%；归属于普通股股东的净亏损为3780万美元，与去年同期归属于普通股股东的净亏损400万美元相比有所扩大。Gropon第一季度业绩超出华尔街分析师预期，但第二季度业绩展望不及预期，推动其盘后股价大涨近6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在截至3月31日的这一财季，Groupon归属于普通股股东的净亏损为3780万美元，每股亏损6美分，这一业绩好于去年同期。2013财年第一季度，Groupon归属于普通股股东的净亏损400万美元，每股亏损1美分。不计入某些一次性项目（不按照美国通用会计准则），Groupon第一季度每股亏损为1美分，这一业绩好于分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第一季度调整后每股亏损为1美分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度营收为7.576亿美元，比去年同期的6.014亿美元增长26%，其中北美地区营收同比增长27%，EMEA（欧洲、中东和非洲）地区营收同比增长26%，世界其他地区营收同比增长23%，这一业绩超出分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第一季度营收为7.384亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">详细业绩：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度直接营收为3.31亿美元，远高于去年同期的1.62亿美元；第三方及其他营收为4.26亿美元，低于去年同期的4.39亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按地区划分，Groupon第一季度来自于北美地区的营收为4.31亿美元，比去年同期的3.40亿美元增长26.9%；来自于EMEA地区的营收为2.31亿美元，比去年同期的1.84亿美元增长25.6%；来自于世界其他地区的营收为9570万美元，比去年同期的7810万美元增长22.6%。按部门划分，Groupon第一季度本地营收为3.30亿美元，去年同期为3.29亿美元；商品营收为3.86亿美元，去年同期为2.29亿美元；旅游及其他营收为4130万美元，去年同期为4270万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度毛账单收入（反映了顾客购买的商品和服务的总美元价值，不计入任何适用税收和预估退税）为18.2亿美元，比去年同期的14.1亿美元增长29%。Groupon第一季度来自于北美地区的毛账单收入同比增长15%，EMEA地区毛账单收入同比增长4%，世界其他地区毛账单收入同比增长123%。Groupon第一季度运营亏损为2000万美元，去年同期运营利润为2120万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon第一季度毛利润为3.857亿美元，比去年同期的3.790亿美元增长2%；调整后EBITDA（即未计入利息、税费、折旧和摊销前的净利润）为4030万美元，去年同期为7190万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在截至3月31日的12个月中，Groupon的运营现金流为1.890亿美元。Groupon第一季度自由现金流（不按照美国通用会计准则）为3710万美元，过去12个月时间里的自由现金流为1.236亿美元。截至第一季度末为止，Groupon拥有10亿美元的现金和现金等价物。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，Groupon在北美市场上的活跃交易数量增加至20多万桩，截至2013年第四季度末为逾14万桩。截至2014年3月31日为止，Groupon的活跃用户人数为5180万人，去年同期增长24%，其中北美活跃用户人数为2180万人，EMEA地区活跃用户人数为1450万人，世界其他地区活跃用户人数为1550万人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第一季度中，Groupon每活跃用户在过去12个月中的平均账单为132美元，低于上一季度的134美元。在2014年3月，Groupon有54%的北美交易都是通过移动设备完成的。在2014年第一季度中，全球有1000多万名用户</span><a href=\"http://download.tech.qq.com/\" target=\"_blank\"><span style=\"font-size:14px;\">下载</span></a><span style=\"font-size:14px;\">了Groupon移动应用，目前已经下载移动应用的用户总数超过了8000万人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业绩预期：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon预计，2014财年第二季度营收为7.25亿美元到7.75亿美元，其中值不及分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第二季度营收为7.54亿美元。Groupon预计，2014财年第二季度调整后EBITDA为4500万美元到6500万美元，不按照美国通用会计准则的调整后每股收益为0美元到0.02美元，也不及分析师此前预期。汤森路透调查显示，分析师平均预期Groupon第二季度每股收益为3美分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Groupon还预计，2014财年全年的调整后EBITDA将超过3亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">股价变动：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当日，Groupon股价在纳斯达克常规交易中下跌0.17美元，报收于6.72美元，跌幅为2.47%。在随后截至美国东部时间15:59（北京时间7日5:59）为止的盘后交易中，Groupon股价再度下跌0.39美元，至6.33美元，跌幅为5.80%。过去52周，Groupon的最高股价为12.76美元，最低股价为5.37美元。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/004984.htm','2014-05-07 06:54:58',1,'/news/thumb/1031173371213.jpg','谷歌收购广告追踪公司Adometry','admin','瑞雪'),(70,'<div class=\"mbArticleSharePic \" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"阿里上市在即！巴菲特泼冷水：50年没买过IPO股票\" src=\"http://img1.gtimg.com/tech/pics/hv1/40/83/1584/103020805.jpg\" />\r\n</div>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	腾讯科技讯 5月6日消息，在伯克希尔哈撒韦公司的年度股东大会结束以后，身为该公司董事长兼首席执行官的“股神”沃伦·巴菲特（Warren Buffett）、<a class=\"a-tips-Article-QQ\" href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\">微软</a>创始人<a class=\"a-tips-Article-QQ\" href=\"http://datalib.tech.qq.com/people/173/index.shtml\" target=\"_blank\">比尔·盖茨</a>（Bill Gates）和巴菲特的长期合作伙伴、伯克希尔哈撒韦公司副董事长查理·芒格（Charlie Munger）接受了福克斯商业新闻网的采访，就一系列广泛的话题发表了言论。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在被问及是否有兴趣对<span class=\"infoMblog\"><a class=\"a-tips-Article-QQ\" href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\">阿里巴巴集团</a></span>的IPO（首次公开招股）交易进行投资的问题时，巴菲特回答道：“我记不起（上一次）购买IPO公司的股票是在什么时候了，可能差不多得有50年了吧。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	而在继任计划的问题上，巴菲特则说道：“候选人全都是（伯克希尔哈撒韦）内部人士。我曾说过，目前而言候选人都是男性，但未来的情况不一定会是这样。”对于<a class=\"a-tips-Article-QQ\" href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\">亚马逊</a>创始人兼首席执行官杰夫·贝索斯（Jeff Bezos）收购《华盛顿邮报》的交易，他则表示：“我希望他能取得令人疯狂的成功。如果说有什么人能做到这一点的话，那么我打赌会是贝索斯。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	盖茨则被提问道，如果微软新任首席执行官萨提亚·纳德拉（Satya Nadella）想要分拆这家公司，那么他是否会支持纳德拉的决定。盖茨对此给出的答案是“绝对”会支持。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">以下是采访内容摘要：</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否有兴趣投资于阿里巴巴集团IPO交易？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我记不起（上一次）购买IPO公司的股票是在什么时候了，可能差不多得有50年了吧。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">伯克希尔哈撒韦是否可能对阿里巴巴集团进行投资？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	芒格：“此事超出了我的掌控范围。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">继任人将会是谁？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“候选人全都是（伯克希尔哈撒韦）内部人士。我曾说过，目前而言候选人都是男性，但未来的情况不一定会是这样。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">继任人是否会是女性？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“当然有此可能。我敢打赌，有一天肯定会的。但我要说的是，就目前而言（候选人）都是男性，而且都是内部人士。（候选人）几乎肯定永远都将是内部人士。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">继任人需要具备什么素质？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我无法要求任何事情，因为那时我就不在这儿了。但就我们的公司文化这一方面来说，我认为我的继任人毫无疑问将百分百认同公司文化。然后，他们将以自己的方式做事，而且也理应如此。但是，我们拥有一种独特的公司文化，会在年报的支持下设定经济原则。这种文化已经差不多有30年都从未改变过了。这并非做事的唯一方法，但却是我们在伯克希尔哈撒韦做事的唯一方法；我无法想象继任人会在这个方面作出重大改变。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否会要求继任人住在奥马哈？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我觉得是的，可能性几乎是100%。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">如何评价亿万富翁激进投资者卡尔·伊坎（Carl Icahn）？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“卡尔对有些公司所做之事的（激烈）程度比我们要高。我认为，他有些过于喜欢玩这种游戏了，但我们不会像他那样做 。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">纳德拉是不是微软首席执行官合适人选？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	盖茨：“绝对是，他上任之初的表现很棒。与以前的我相比，他花费了更多时间（来运营微软），我很乐意向他提供建议。他正在检查所有事情，并已作出了一些很好的改变。（微软）能拥有新鲜血液和新的想法是颇令人激动的。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否会将微软分拆成两家公司？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	盖茨：“对于让我们了解到如何去做大规模的数据中心来说，必应技术肯定是十分关键的。必应能让我们看到互联网中正在进行的事情，这样一来人们就会对各种话题感兴趣，而我们就能知道新的东西。我认为，这对微软来说是一种基础性的技术，这是一项核心业务。从以往历史上来看，我们进行过分拆，例如Expedia就是在微软内部起步的一家公司，《Slate》杂志也是如此，而且我们也正在考虑有三个部分的业务是可以分离开来的。但是，我们的基本搜索技术则没有分拆的意义。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否会分拆Xbox业务？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	盖茨：“我们正在把电脑游戏、Windows游戏和Xbox游戏合为一体。强大的电脑芯片和图形芯片意味着你能做出很棒的游戏。我确信，纳德拉及其团队将会审视此事，最终的决定权在他们手中。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">如果纳德拉想要分拆微软，那么盖茨是否会支持这一决定？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	盖茨回答道：“绝对支持。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">如何评价贝索斯收购《华盛顿邮报》的交易？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我希望他能取得令人疯狂的成功。如果说有什么人能做到这一点的话，那么我打赌会是贝索斯。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">自贝索斯收购《华盛顿邮报》以来，是否曾与他进行过交谈？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“自他收购《华盛顿邮报》以来，我并未与他进行过交谈，但未来将时不时地与他对话。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否仍旧认为比特币就像是老鼠药？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	芒格：“是的。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否认为比特币应受到监管？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	芒格：“我希望比特币消失。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">更愿意投资于黑莓还是比特币？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我很可能会对两者都进行做空。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	盖茨：“比特币基本上来说是与匿名交易有关，我认为随着时间的推移，这并非一条好走的路。即便如此，我仍旧是数字货币的信徒。事实上，盖茨基金会就在尝试在贫困国家中做到这一点，这样一来我们能让为没有很多钱的人也提供价格低廉的金融服务。但是，我认为匿名交易至少也会带来一些滥用行为，因此我不会参与比特币交易。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">无人驾驶汽车将对保险业务造成什么影响？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“如果它们（无人驾驶汽车）表现良好的话，那么将会造福社会。我很肯定，它们将可降低保险成本。任何能降低事故率和降低死亡率的事情都将降低保险成本，这对整个社会来说是件好事。整体来说，如果不再发生任何撞车事故，那么世界将会变得更好。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">如果保险市场由于技术进步而受到重创，巴菲特是否会考虑出售美国第四大汽车保险公司Geico？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我们不会出售Geico，永远不会。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">中国政府是否会强制要求国民驾驶电动汽车？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	芒格：“他们已经开始朝着那个方向努力。这对<a class=\"a-tips-Article-QQ\" href=\"http://stockhtm.finance.qq.com/hk/ggcx/01211.htm\" target=\"_blank\">比亚迪</a>来说是个好消息。我认为，中国政府最终将会决定，不应该让城市污染来致人于死地，并认为政府将会出台重大的干预措施，这将有助于比亚迪。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">清洁能源将对伯灵顿北方圣菲铁路公司（Burlington Northern）造成什么影响？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“如果我们可以在对伯克希尔哈撒韦有利的事情和对整个世界有利的事情中做出选择，那么我们绝对会选择后者。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">是否仍考虑对一家中国公司进行投资？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我正在寻觅任何地方的公司。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">谈谈你的投资策略？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“我们会寻找任何特定时间中的最好机会。如果3G Capital今天来找我，告诉我说他们有个极好的想法，并希望我能加入他们，那么我会同意的可能性很高。与拥有股票相比，我更喜欢长期拥有企业，因为这有利于持续建设伯克希尔哈撒韦。但是，股票也是另一种极好的选择……在我们的资本配置活动中，股票总是会成为很重要的一部分。但是，直接收购一家公司才是我们真正想要的。如果能有机会跟3G那样的合作伙伴联手收购一家公司，那真是太好了。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">如果希拉里·克林顿（Hilary Clinton）竞选美国总统，巴菲特是否会支持她？</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	巴菲特：“百分之百会。”（瑞雪）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/014613.htm','2014-05-07 06:56:09',1,'/news/thumb/103020805.jpg','阿里上市在即！巴菲特泼冷水：50年没买过IPO股票','admin','瑞雪'),(71,'<div>\r\n	<img alt=\"饿了么获大众点评8000万投资 计划三年后上市\" src=\"http://img1.gtimg.com/tech/pics/hv1/199/38/1585/103074514.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 宗秀倩 5月6日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">订餐网站饿了么今日宣布获得大众点评的8000万美元投资。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">饿了么CEO张旭豪透露，此次合作集中在三个方面，商户数据互补、外卖服务支持以及平台流量整合。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在获得大众点评投资后，饿了么创始人管理团队继续拥有对公司的控制权，饿了么保持独立运营。饿了么今日还透露了上市的时间表，计划三年后上市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">双方的合作类似一种“T”字形的结构，大众点评是信息决策、餐厅预订、团购和外卖几个方面，通过和饿了么的合作，饿了么可以在外卖领域进行垂直纵深挖掘。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为一个以低客单价为主的订餐平台，饿了么通过获得大众点评主要为向中高端餐饮市场延伸。在饿了么的规划中，通过大众点评可获取中高端餐饮资源以及城市白领为主的消费群。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在细分领域方向上的并购和投资将成为O2O领域的趋势之一。大众点评副总裁龙伟在昨日接受采访时表示，O2O必须要做成闭环，但O2O行业涉及到线上线下千头万绪，不是某一家能够做成闭环，需要打造起线上线下的生态链。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">外卖市场已经成为一个几百亿的大市场。根据调研数据，2013年全国餐饮消费总额为4500亿元，按照16%的餐饮年增幅，到2016年全国餐饮消费总额预计达到7000亿。而其中，外卖占全国餐饮消费总额的10%，因此到2016年，外卖市场规模预计达到700亿。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">相比较其他业务，外卖业务有自己的特点。大众点评副总裁姜跃平说，外卖对用户来说是刚性需求，但外卖业务的扩展难度不小于团购，需要大量的人力和物力：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1）从业务角度，外卖是非常复杂的服务，涉及商家端开拓、品质管理、外送环节把控、收费、用户客服等诸多环节；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2）从餐厅角度，有多种外卖类型：以外卖为主体的单店或一般连锁，KFC／棒约翰等通过自营或BPO提供外卖的大型连锁，有自送能力的，没有自送能力的，面向高端和catering的等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">姜跃平透露，未来的合作伙伴倾向于选择移动互联网的LBS用户流量平台、商家端服务能力突出的团队以及在本地生活的某一细分领域提供了深度专业服务的团队等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">饿了么成立于2009年，目前已经覆盖30个大中城市，加盟餐厅超过5万家。流水方面，目前为日均订单10万单，年在线交易额超过12亿元。张旭豪透露，未来一年，公司将努力将日均订单量从10万提高到百万级订单。公司覆盖到50-100个城市，年交易额达到百万亿元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在与饿了么合作后，大众点评外卖覆盖城市将迅速扩展至北京、上海、广州等30个城市，覆盖商户数增加至将近2万家。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/049881.htm','2014-05-07 06:56:57',1,'/news/thumb/103074514.jpg','饿了么获大众点评8000万美元投资 计划三年后上市','admin','宗秀倩'),(72,'<div>\r\n	<img alt=\"美国科技股普遍承压 Twitter重挫近18%\" src=\"http://img1.gtimg.com/tech/pics/hv1/142/211/1585/103118572.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，虽然美国股市周二普遍下跌，但受创最深的则是所谓的“动力股”。在过去两个月时间里，包括许多</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:14px;\">生物</span></a><span style=\"font-size:14px;\">科技公司和互联网公司在内的增长型股票的价格一直都呈现出下行趋势。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当日，第一信托道琼斯互联网ETF（First Trust Dow Jones Internet ETF）下跌2.8%，安硕纳斯达克生物科技ETF（iShares Nasdaq Biotechnology ETF）则下跌1.4%。在今年的交易中，许多高增长公司的股价均出现了较大幅度的回调。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Novus董事总经理乔·佩塔（Joe Peta）指出：“纳斯达克综合指数遭遇卖压主要是由于两桩事件引起的：Twitter的股票禁售锁定期到期，以及大卫·埃因霍恩（David Einhorn）在Ira Sohn投资大会上公开批斗电子病历厂商Athenahealth的股票。”他还补充道，投资者正在从动力股转向盈利能力较强的大市值公司，高增长股票的泡沫正在消失。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至周二收盘时为止，Twitter股价在纽约证券交易所的常规交易中大幅下跌6.88美元，报收于31.87美元，跌幅为17.76%，原因是该公司的股票禁售锁定期到期，这意味着公司内部人士可出售其所持股票。尽管Twitter称其高管并不计划出售股份，但未能起到阻止其股价下跌的作用。过去52周，Twitter的最高股价为74.73美元，最低股价为31.76美元。与年初时相比，Twitter目前的股价仅相当于当时的一半左右。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国最大点评网站Yelp股价在纽约证券交易所的常规交易中也大幅下跌8.11美元，报收于52.08美元，跌幅为13.47%，主要由于股东权益法律事务所Johnson &amp; Weaver LLP称其正在对该公司展开调查，指称后者及其他特定官员“可能触犯了美国证券法的规定”。过去52周，Yelp的最高股价为101.75美元，最低股价为26.75美元。自3月初以来，Yelp股价已经下跌了近一半。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">特斯拉汽车股价下跌9.33美元，报收于207.28美元，跌幅为4.31%。与3月初触及的历史高点相比，特斯拉汽车股价已经下跌了17%。特斯拉汽车将在美国东部时间周三（北京时间周四）美国股市收盘后公布公布季度财报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">流媒体视频服务提供商Netflix股价下跌18.19美元，报收于326.19美元，跌幅为5.28%。自3月初触及峰值以来，Netflix股价已经下跌了四分之一以上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">股价下跌2.69美元，报收于58.53美元，跌幅为4.39%。与3月初触及的历史高点相比，Facebook股价已经下跌了15%以上。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/007138.htm','2014-05-07 06:57:47',1,'/news/thumb/103118572.jpg','美国科技股普遍承压 Twitter重挫近18%','admin','瑞雪'),(73,'<div>\r\n	<img alt=\"动视暴雪一季度净利2.93亿美元 同比下滑36%\" src=\"http://img1.gtimg.com/tech/pics/hv1/167/211/1585/103118597.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，动视暴雪今天发布了截至3月31日的2014年第一季度财报。财报显示，动视暴雪第一季度净营收达到11.11亿美元，比去年同期的13.24亿美元下滑了16%；净利润达到2.93亿美元，比去年同期的4.56亿美元下滑了36%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财报分析：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪第一季度按照美国通用会计准则计量的总净营收同比下滑16%，达到11.11亿美元，去年同期为13.24亿美元，不过高于公司此前自身预计的8.85亿美元。动视暴雪第一季度来自产品销售的营收为7.69亿美元，去年同期为9.9亿美元；来自订阅授权和其它业务的营收达到3.42亿美元，去年同期为3.34亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按照地区划分，动视暴雪第一季度来自北美的营收为5.63亿美元，比去年同期的7.38亿美元下滑了24%；来自欧洲的营收为4.62亿美元，比去年同期的4.87亿美元下滑了5%；来自亚太的营收为8600万美元，比去年同期的9900万美元下滑了13%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪第一季度不按照美国通用会计准则计量的净营收达到7.72亿美元，低于去年同期的8.04亿美元，不过高于公司此前自身预计的6.75亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪第一季度总成本和开支为6.84亿美元，去年同期为7.37亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪第一季度运营利润达到4.27亿美元，去年同期为5.87亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪第一季度净利润同比下滑36%，达到2.93美元，去年同期为4.56亿美元；每股摊薄收益为0.40美元，去年同期也是0.40美元，不过高于公司此前自身预计的0.15美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪第一季度不按照美国通用会计准则计量每股摊薄收益0.19美元，去年同期为0.17美元，高于公司此前自身预计的0.09美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业绩展望：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪预计2014年全年净营收将达到42.2亿美元，高于此前预计的40亿美元；预计全年不按照美国通用会计准则计量的净营收将达到46.75亿美元，高于此前预计的46亿美元。动视暴雪预计2014年全年每股摊薄利润为0.89美元，高于此前预计的0.76美元；预计全年不按照美国通用会计准则计量的每股摊薄利润为1.27美元，高于此前预计的1.26美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">动视暴雪预计2014年第二季度净营收将达到9.10亿美元；预计2014年第二季度不按照美国通用会计准则计量的净营收将达到6亿美元。动视暴雪预计2014年第二季度每股摊薄利润为0.22美元，预计不按照美国通用会计准则计量的每股摊薄利润为0.01美元。（悦潼）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/007204.htm','2014-05-07 06:58:39',1,'/news/thumb/103118597.jpg','动视暴雪一季度净利2.93亿美元 同比下滑36%','admin','悦潼'),(74,'<div>\r\n	<img alt=\"三分之一英国人担心自己工作会被机器人取代\" src=\"http://img1.gtimg.com/tech/pics/hv1/42/79/1585/103084812.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月6日消息，一份最新的调查报告显示，三分之一的英国人相信，他们的工作将很快会被机器人取代。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">该报告采访了2000名英国人，其中约有一半（46%）的人承认，他们担心技术发展太快，最终将会危及到他们的传统生活方式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">逾三分之一的人表示，他们担心终有一天机器人将会威胁到人类的安全。还有人担心军方使用无人飞机。32%的人担心机器人应用于家庭安全；25%的人担心机器人应用于零售行业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这些受访者认为，在未来十年内，军事、太空探索和社会治安是最可能被机器人取代的行业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">约有17%的受访者声称，他们愿意与机器人做爱，29%的人表示他们可以接受别人与机器人做爱的想法。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">41%的受访者认为，与机器人做爱的想法令人感到毛骨悚然，还有14%的人表示机器人不该应用到这个方面。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然我们有很多人担心机器人会在现代社会取代我们的工作，但是我们对于智能手机和平板电脑等技术的依赖程度越来越高，我们花费在它们上面的时间越来越多了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">平均而言，我们每年要在科技上面花费543.61英镑；在这方面男性每年要比女性多花费316.90英镑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“在现代生活，机器人将会担任非常重要的角色，帮助保护和改善我们的生活。”英国米德尔塞克斯大学的机器人设计和制造学教授、控制论专家马丁-史密斯（Martin Smith）说，“很多人担心自己的工作会被机器人取代，但是在未来机器人更有可能会成为我们的好帮手，而不是代替者。未来的人类劳动力将不用从事危险而重复单调的工作。”（乐学）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">附：未来最有可能被机器人取代的10种工作</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">行业 可能性</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1. 军事/士兵 45%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2. 工业/工厂工人和劳动者 33%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3. 太空探索/宇航员 33%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4. 家务活/清洁工 23%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5. 汽车行业/专职司机和的士司机 20%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6. 社会治安/警察 10%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">7. 交通/火车司机、飞行员、货车司机 8%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">8. 服务行业/售货员、客服代表、侍者和酒吧服务生 8%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">9. 色情行业/性工作者 4%</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">10. 餐饮业/厨师 3%</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140506/056560.htm','2014-05-07 07:00:02',1,'/news/thumb/103084812.jpg','三分之一英国人担心自己工作会被机器人取代','admin','腾讯科技'),(75,'<p>\r\n	<img src=\"/upload/image/20140507/20140507085036_376.jpg\" alt=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯今天下午进行了组织架构调整，正式成立微信事业群，张小龙担任微信事业群的总裁。微信事业群将负责微信基础平台、微信开放平台，以及微信支付拓展、O2O 等微信延伸业务的发展，并包括邮箱、通讯录等产品开发和运营，致力于打造微信大平台，为用户和合作伙伴创造更多价值。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">张小龙将担任微信事业群总裁（高级执行副总裁级别），领导微信事业群的工作，向公司总裁刘炽平汇报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">张小龙在</span><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzIzMjg4MA==&amp;amp;mid=200122034&amp;amp;idx=1&amp;amp;sn=2432664bfcb1caba085353b6244adedc&amp;amp;scene=1&amp;amp;key=e60cf81314c277c7283616dd3debae86b54d10df0ecc582811f27c35d6887704e02bb78fd5bb5cd7e179bf37bc67e721&amp;amp;ascene=0&amp;amp;uin=MjU5NzIwNjgw\"><span style=\"font-size:14px;\">内部邮件</span></a><span style=\"font-size:14px;\">中称，微信事业群将负责以微信为基础建设移动互联网社交、开放与 O2O 平台，为用户提供即时通讯与线上娱乐、生活和商业化的综合性服务，创造更多价值。这意味着微信已经完成第一阶段的孵化，从产品升级成腾讯战略级的业务体系，全面协助公司在移动互联网领域发挥更大作用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外，这次组织架构调整还撤消了腾讯电商控股公司，其中实物电商业务并入京东、O2O 业务并入微信事业群、虚拟业务并入企业发展事业群、电影票业务并入社交网络事业群、客户服务团队并入技术工程事业群。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而吴宵光继续担任公司高级执行副总裁，向公司总裁刘炽平汇报；不再担任腾讯电商控股公司首席执行官职务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">附上张小龙的内部邮件截图（Via</span><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzIzMjg4MA==&amp;amp;mid=200122034&amp;amp;idx=1&amp;amp;sn=2432664bfcb1caba085353b6244adedc&amp;amp;scene=1&amp;amp;key=e60cf81314c277c7283616dd3debae86b54d10df0ecc582811f27c35d6887704e02bb78fd5bb5cd7e179bf37bc67e721&amp;amp;ascene=0&amp;amp;uin=MjU5NzIwNjgw\"><span style=\"font-size:14px;\">刘琪的商业观察</span></a><span style=\"font-size:14px;\">）</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/cfae0f0c365afd7ddc0afcc5673adefa.jpeg\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/4dfd47ad92ae83758faf4affda342661.jpeg\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/9c31b1658c2e70410b8b61a218551d81.jpeg\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">[36氪原创文章，作者: WANGJINGYU]</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','36氪','http://www.36kr.com/p/211756.html','2014-05-07 08:51:17',1,'/news/thumb/642d080173d42b113a533d0ec43ec348.jpg','腾讯组织架构调整：成立微信事业群，张小龙担任事业群总裁（附张小龙内部邮件）','admin','WANGJINGYU'),(76,'<p>\r\n	<img src=\"/upload/image/20140507/20140507085217_170.jpg\" alt=\"\" width=\"740\" height=\"553\" title=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在今天下午的“饿了么 &amp; 大众点评战略合作发布会”上，“饿了么”CEO 张旭豪宣布，大众点评将以 8000 万美元入股“饿了么”，并达成深度战略合作，共享外卖领域的商户数据，平台流量，整合外卖服务。“饿了么”团队拒绝透露大众点评此次入股后占有的股份，以及“饿了么”目前的估值，不过“饿了么”表示其初创团队继续拥有对饿了么的控制权。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“饿了么”目前覆盖全国进 30 个城市，拥有超过 5 万家加盟餐厅，日均订单达到 10 万单，年在线交易额超 12 亿人民币。然而从高校走出来的“饿了么”主要占有中低端外卖市场和学生群体，目前平均每单交易额只有 30 元，在中高端的外卖市场一直心有余而力不足。这次“饿了么”接受大众点评的战略入股，主要是看中其带来的中高端餐厅的资源和白领阶层的消费群体。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">张旭豪认为“饿了么”在外卖领域有两大利器：提供给餐厅的后台管理系统 Napos 和管理销售人员的 CRM 软件 Walle。Napos 是“饿了么”向接入了其服务的餐厅提供的后台管理系统，能够帮助他们管理外卖的订单，配送，评价等。而 Walle 则是“饿了么”团队的 CRM 软件，除了管理和记录销售人员的业绩外，还能激励销售人员完成更好的销售份额。（下图为“饿了么”CEO 张旭豪与大众点评副总裁姜跃平握手宣布战略合作）</span> \r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/9725a7a6e3df2934e1ae0f9badbe70c7.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在未来的外卖配送上，张旭豪表示“饿了么”将在三到四个月内推出物流的众包平台，让每个人都能为餐厅配送，当然，其中也包括已经成熟的物流公司。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大众点评副总裁姜跃平表示，这次和“饿了么”的合作会为创业者打造一个基于外卖的创业平台，并希望未来在这个平台上会批量涌现出黄太吉这样的餐厅。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">[36氪原创文章，作者: 暮山]</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','36氪','http://www.36kr.com/p/211735.html','2014-05-07 08:53:08',1,'/news/thumb/1f9cb267e641e06d9913e77ffadce3da.jpg','“饿了么”获大众点评8000万美元战略入股，将接入大众点评外卖服务，主打中高端餐厅外卖，并在未来推出众包外卖服务','admin','暮山'),(77,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">近日，项目管理与协作工具</span><a target=\"_blank\" href=\"http://www.smartsheet.com/\"><span style=\"font-size:14px;\">Smartsheet</span></a><span style=\"font-size:14px;\">宣布完成新一轮 3500 万美元融资，Sutter Hill Ventures 领投。Smartsheet 的</span><a target=\"_blank\" href=\"http://www.36kr.com/p/177301.html\"><span style=\"font-size:14px;\">上一轮融资</span></a><span style=\"font-size:14px;\">在 2012 年末，来自 Insight Venture Partners 和 Madrona Venture Group 的 2600 万美元。据称和上一轮相比，该公司估值已翻三倍。目前总融资额为 7000 万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<img src=\"http://a.36krcnd.com/photo/2014/e14da2586070187fd5684fb948478ee2.jpg\" alt=\"\" style=\"height:auto;\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Smartsheet 目前已运作 8 年，CEO Mark Mader 称，目前企业客户已超过 42,000，新增客户中包括 Google、Netflix、Unisource 等。另外 Mader 还称，公司其实不缺钱，已实现盈利，今年的营收估计将远远超过 1000 万美元。之所以启动融资，是看准了企业级市场的即将到来的爆发，新一轮融资也将主要用于团队扩建（目前的 120 人团队今年将翻一倍），销售和市场拓展。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/c4749d474a11ada1ddd1b5474731574f.png\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Smartsheet 主要满足企业协作平台整合的需求，通过类似 Excel 的界面整合企业常用的 Google Drive、Box 、Salesforce、Office 等云端 APP。凌驾于各类企业平台之上做整合，使得企业能将使用不同协作工具的部门（比如市场广告、商业运营、销售管理、战略规划以及 HR 管理）能统一到一个大平台。同时这也使得 Smartsheet 与 Google、Salesforce 等企业协作巨头的关系从“竞争”化为“合作”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">[36氪原创文章，作者: 丁伟峰]</span>\r\n</p>','36氪','http://www.36kr.com/p/211728.html','2014-05-07 09:01:28',1,'/news/thumb/199119ba2ba5cb02091155dfcbe388c3.png','项目管理与协作工具Smartsheet获3500万美元融资，新客户包括Google（要知道Google有自家的Apps！）','admin','丁伟峰'),(78,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日晚间消息，美国股市周三早盘下挫，科技板块领跌，中概股股价普遍下跌，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SFUN.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">搜房</span></a><span style=\"font-size:14px;\">网跌幅居首，早盘下跌11%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至美东时间上午10：20，道琼斯工业平均指数下跌17.81点，跌幅0.11%，至16383.21点；纳斯达综合指数下跌45.28点，跌幅为1.11%，至4035.48点；标准普尔500指数下跌4.83点，涨幅为0.26%，至1862.89点。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"全球科技股普遍下跌 搜房网跌11% 雅虎跌6%\" src=\"http://img1.gtimg.com/tech/pics/hv1/119/68/1587/103212134.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国科技股方面，AOL和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GRPN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Groupon</span></a><span style=\"font-size:14px;\">领跌，跌幅分别为18.82%和17.72%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">下跌6.08%，Zynga下跌5.66%，Twitter跌4.99%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">跌3.04%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">跌2.70%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)跌1.85%。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"全球科技股普遍下跌 搜房网跌11% 雅虎跌6%\" src=\"http://img1.gtimg.com/tech/pics/hv1/120/68/1587/103212135.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国概念股方面，搜房网跌幅居首，大跌11.28%，500彩票网跌9.44%，两公司盘前发布了第一季度财报。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EJ.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">易居中国</span></a><span style=\"font-size:14px;\">跌9.11%，易车跌9.44%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/QIHU.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">奇虎</span></a><span style=\"font-size:14px;\">360跌9.30%，携程跌6.44%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新浪</span></a><span style=\"font-size:14px;\">微博跌5.44%。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"全球科技股普遍下跌 搜房网跌11% 雅虎跌6%\" src=\"http://img1.gtimg.com/tech/pics/hv1/121/68/1587/103212136.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"全球科技股普遍下跌 搜房网跌11% 雅虎跌6%\" src=\"http://img1.gtimg.com/tech/pics/hv1/122/68/1587/103212137.jpg\" /> \r\n</div>\r\n<div>\r\n	<div>\r\n	</div>\r\n<img alt=\"全球科技股普遍下跌 搜房网跌11% 雅虎跌6%\" src=\"http://img1.gtimg.com/tech/pics/hv1/123/68/1587/103212138.jpg\" />\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">UT斯达康、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/TAOM.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">淘米网</span></a><span style=\"font-size:14px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GAME.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">盛大游戏</span></a><span style=\"font-size:14px;\">等微涨。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"全球科技股普遍下跌 搜房网跌11% 雅虎跌6%\" src=\"http://img1.gtimg.com/tech/pics/hv1/129/68/1587/103212144.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/078299.htm','2014-05-08 06:44:11',1,'/news/thumb/103212144.jpg','全球科技股普遍下跌 搜房网跌11% 雅虎跌6%','admin','腾讯科技'),(79,'<div>\r\n	<img alt=\"软银CEO孙正义：不会在阿里上市时抛售持股\" src=\"http://img1.gtimg.com/tech/pics/hv1/8/61/1587/103210238.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，日本软银周三表示，该公司不会在</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">进行首次公开招股（IPO）时抛售持股。阿里巴巴集团于美国东部时间周二向美国证券交易委员会（SEC）提交招股说明书。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">日本软银目前是阿里巴巴集团第一大股东，持有该公司34.4%的股份。在阿里巴巴集团首次公开招股之后，软银持有前者的股份市值可能将超过500亿美元。软银首席执行官孙正义（Masayoshi Son）在周三该公司财报发布后举行的电话会议中，拒绝透露阿里巴巴集团首次公开招股之后，软银所持的股份将会被稀释至多少。不过他表示，软银是阿里巴巴集团，特别是后者在亚洲地区的战略伙伴。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过孙正义暗示，软银可能会改变对持有阿里巴巴集团股份的想法。他说，“当然，这绝不意味着我们承诺将永久持股。不过目前对我们而言，阿里巴巴集团是核心的战略伙伴。”阿里巴巴集团预计将借助首次公开招股募集超过150亿美元资金。软银未来可能会借助通过变现阿里巴巴集团股份，募集资金用于偿付负债或进行收购。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">软银目前是日本第三大移动运营商，负债总额为9.2万亿日元（约合886亿美元）。去年7月，软银曾借债斥资216亿美元收购了美国移动运营商Sprint的控股股权。软银当前还希望收购美国第四大移动运营商T-Mobile美国，不过此交易可能会遭到美监管部门的阻挠。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">软银表示，持有阿里巴巴集团的股份，让公司在截至2014年3月31日的2013财年中增加667.8亿日元的税前利润。软银2013财年运营利润达到创纪录的1.09万亿日元，较上一财年增长36%，高出市场分析师平均预计的1.07万亿日元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">孙正义在电话会议中表示，他对阿里巴巴集团董事局主席</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">马云</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)的表现感到非常满意。他说，“马云做的相当不错。他让这家公司获得成长，并获取了巨额的营收。当我们对阿里巴巴集团进行投资时，这家公司还没有营收。我想自那时以后，我们对这家公司产生了一些正面影响。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为日本第二大市值公司，软银预计受一次性收益减少的影响，公司本财年的运营利润可能会下滑大约8%，降至1万亿日元。（明轩）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/076541.htm','2014-05-08 06:45:18',1,'/news/thumb/103210238.jpg','软银CEO孙正义：不会在阿里上市时抛售持股','admin','明轩'),(80,'<div>\r\n	<img alt=\"HTC：8月前实现扭亏为盈\" src=\"http://img1.gtimg.com/tech/pics/hv1/103/63/1587/103210843.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月7日消息，台湾手机制造商HTC声称，在第二财季，它将会重返盈利状态；但是它的营收将会持续下跌。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">HTC表示，经过三个季度的运营亏损之后，它将会在第二财季扭亏为盈。但是，它的营收将会从上年的23.5亿美元下跌到21亿美元至23亿美元之间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">它的毛利润率有望增至0.6个百分点，增长到22%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而且，它作价近7000万美元销售了它持有的中国某私募股权基金的9.5%的股份。这将有助于该公司在第二财季增加200万美元的税前收入。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在第一季度，该公司的旗舰手机销售情况惨淡，以至于它的亏损额远远高于预期。在1-3月期间，该公司获得了10.9亿美元营收，同比下跌了20%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">HTC首席执行官周永明在演讲中说，该公司的最新手机“拥有积极的消费者反应”，“我们已大大改善了我们的运营效率和供应链状态，以确保我们在发布之日能够立即供货。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">由于与</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)合作，使用Android 作为其操作系统，HTC曾一度成为全世界领先的手机制造商。尽管它最近推出了广受好评的HTC One手机——科技资讯网站CNET给予它4颗星的评级，这是智能手机迄今为止获得的最高评级——但是它的财务状况一直表现疲软。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">营收下跌而利润增加，这往往意味着产品的利润率增加。出现这种情况的原因可能是生产成本降低，终端价格提高。如果这款手机真有那么好——几乎所有技术评论员都如是说——那么HTC就有可能会获得成功。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在过去几年中，很少有手机制造商能够扭亏为盈。摩托罗拉推出了Razr，它成为了该公司乃至全世界最受欢迎的手机。而</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">则在Mac和iPod业务的发展出现停滞前，就早早开始进行创新了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，对于黑莓、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NOK.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">诺基亚</span></a><span style=\"font-size:14px;\">、阿尔卡特、索尼</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/ERIC.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">爱立信</span></a><span style=\"font-size:14px;\">、日本电气、夏普、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SI.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">西门子</span></a><span style=\"font-size:14px;\">还有Palm，它们在扭亏为盈的过程中就没有这么幸运了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">HTC有望在今年8月宣布第二财季财报。（乐学）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/076912.htm','2014-05-08 06:46:26',1,'/news/thumb/103210843.jpg','HTC：8月前实现扭亏为盈','admin','乐学'),(81,'<div>\r\n	<img alt=\"华为发布年度旗舰智能手机P7 全球定价499欧元\" src=\"http://img1.gtimg.com/tech/pics/hv1/215/53/1587/103208405.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 郭晓峰 5月8日法国报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当地时间8日下午，华为在巴黎大教堂召开全球发布会，正式发布年度重磅旗舰机型Ascend P7，这也是华为继Ascend P6在2013年伦敦成功发布后，又一次在欧洲掀起盛宴。该机全球定价449欧元(约合人民币3900元)，国内市场售价约2888元，明日起接受预定。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">产品方面，P7采用5寸1080p屏，6.5mm的极致超薄机身，前置800万+后置1300万的摄像头，1.8GHz海思麒麟 910四核处理器、2GB RAM+16GB ROM，内置一体化2500mAh电池，支持4G LTE网络。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">华为消费者BG CEO余承东在发布会上表示，“过去三年来华为坚持的精品战略已渐显成效，华为智能手机市场份额进入全球前三，在中国、西欧等重点区域的品牌知名度提升显著。今天，我们发布的Ascend P7再次挑战行业基准，在设计、拍照体验和网络连接性上重新定义了智能手机，从而为那些追求卓越体验的消费者提供前所未有的使用体验。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据了解，去年6月华为发布P6，有超过100个市场销售，截止目前销量突破400万部。但这离当初千万目标差距较远。不过华为品牌度随着Ascend系列的好评由2012年全球认知度25%提升至去年的52%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，华为P7的一些亮点功能颇受关注。P7开发了一系列有意思的配件，如与华为智能手环完美搭配，可监控睡眠质量、管理运动健身数据，具有手机防盗管理、远程拍照等功能，甚至可以通过手环绑定钥匙和手机APP即可帮助快速找回隐藏在角落的钥匙。同时华为Ascend P7还有各种精致配件可选，如各种色彩保护壳，翻盖智能保护套等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，P7有黑色、白色、粉色三种颜色，全球定价449欧元，将于5月首批在中国大陆及香港地区、英国、德国、意大利、法国、西班牙等30多个国家和地区上市销售，其它市场后续还将陆续上市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在中国市场，华为P7将推出移动、联通和电信三大制式版本，并计划5月8日上午10:00，在华为商城、京东、天猫华为旗舰店,苏宁易购，国美(</span><a href=\"http://t.qq.com/GOME1987#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)在线，1号店、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">同步开启预售。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140507/074938.htm','2014-05-08 06:47:27',1,'/news/thumb/103208405.jpg','华为发布年度旗舰智能手机P7 全球定价499欧元','admin','郭晓峰'),(82,'<div>\r\n	<img alt=\"超高速飞机：1小时飞纽约\" src=\"http://img1.gtimg.com/tech/pics/hv1/204/82/1587/103215789.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月8日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">亿万富翁、英国商界大亨、维京集团执行长理查德布兰森（Sir Richard Branson）周二在接受媒体采访时表示，他相信未来他可以开发出时速3万公里的超高速飞机，不到一个小时就能从纽约飞到东京。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">维京集团旗下的维京银河航空公司（Virgin Galactic）一直致力于研发航空技术，布兰森希望让普通人也有机会进行太空旅行。布兰森相信，超音速飞行技术有着广阔的发展前景。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他说：“我们将开发出飞行速度比协和式飞机更快的超音速飞机。”英国航空公司（British Airways）的协和式飞机可以在三小时内从伦敦飞到纽约，但是由于无法盈利已在2003年退役。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当被问及他计划研发的超音速飞机能够做些什么的时候，布兰森说：“如果成功开发出这款飞机，它不要一小时就能从纽约飞到东京。你一小时可以飞行3万公里。”现在，普通的飞机从纽约飞到东京约需要12个小时。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然布兰森没有讲他的愿望何时才会实现，但他希望能在自己的有生之年看到那样的飞机问世。他最后说：“这并不容易，但是肯定是可行的。”（林靖东）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140508/001199.htm','2014-05-08 06:49:01',1,'/news/thumb/103215789.jpg','超高速飞机：1小时从纽约飞到东京','admin','林靖东'),(83,'<div>\r\n	<img alt=\"双线资本创始人：特斯拉应放弃汽车专攻电池\" src=\"http://img1.gtimg.com/tech/pics/hv1/186/94/1587/103218831.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯拉首席执行官埃隆·马斯克</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月8日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在过去一年左右的时间内，特斯拉（Tesla）故事的主题已经从“颠覆汽车行业的电动汽车”转向了“改变人们随时随地获取能量的方式”，之所以有这种变化，主要是由于特斯拉曾宣称该公司计划建造一座巨型电池工厂。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在这样的形势之下，双线资本(DoubleLine Capital)创始人兼债券业务之王的杰夫·冈德拉奇(Jeff Gundlach) 近期在接受媒体采访时给特斯拉首席执行官埃隆·马斯克（Elon Musk）提出建议，称特斯拉该停止生产汽车了，转而生产电池。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">冈德拉奇称，特斯拉应当把汽车制造业务转交给当前的一些大型汽车制造公司，从而可以全力以赴生产电池。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，冈德拉奇还声称，与Twitter相比，特斯拉更具发展前景。他声称更愿意购买特斯拉的股票，而不是Twitter。冈德拉奇认为，特斯拉或将能够给那些持有怀疑态度的投资者带来“杀手级”的回报，这种机率大约是30%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">冈德拉奇还称：特斯拉可能会“极大地改变电力和电磁力的方式”，而Twitter除了产生信息流之外，并不能生产其它事物。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，特斯拉方面还未就冈德拉奇的上述言辞置评。（悦潼）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140508/003312.htm','2014-05-08 06:50:11',1,'/news/thumb/103218831.jpg','双线资本创始人：特斯拉应放弃汽车专攻电池','admin','悦潼'),(84,'<div>\r\n	<img alt=\"苹果资深高管科顿将退休 已为公司效力18年\" src=\"http://img1.gtimg.com/tech/pics/hv1/135/95/1587/103219035.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">公司全球企业传播副总裁卡蒂科顿（右二）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月8日消息，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">周三宣布，公司全球企业传播副总裁卡蒂科顿（Katie Cotton）即将退休。科顿已经在苹果工作了18年的时间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">科顿是苹果最有权力的高管之一，从乔布斯到库克，她一直主管公共关系方面的事务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苹果发言人史蒂夫道宁（Steve Dowling）称：“卡蒂在过去的18年里一心扑在公司上，现在她希望有更多的时间与儿女相处，享受天伦之乐。我们会想念她的。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据知情人士称，业内人士普遍认为道宁很可能会接科顿的班。另一名有可能接替科顿的人选是娜塔莉克丽丝（Natalie Kerris），她也是苹果的发言人，她和道宁都已经在苹果工作了10年以上的时间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">科顿自己也宣布了她将退休的消息，她承认这是一项艰难的决定，因为她在公司工作了很多年，早就已经把公司当作自己的家了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在科顿之前，已有不少资深高管决定离开公司。今年3月，苹果宣布公司首席财务官彼得奥本海默（Peter Oppenheimer）将于9月底离开公司；上个月，苹果又宣布负责人机接口的主管格里格克里斯蒂（Greg Christie）将在今年晚些时候离职。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">近几年，从苹果走出的其他著名高管还包括跳槽去JC Penney担任首席执行官的前零售主管罗恩约翰逊（Ron Johnson）、因为iOS地图服务而背黑锅的斯科特福斯托（Scott Forstall）以及接替约翰逊不久就被炒鱿鱼的约翰布劳维特（John Browett）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苹果高级副总裁、硬件工程师主管鲍勃曼斯菲尔德（Bob Mansfield）曾在2012年中宣布了他的退休计划，但是后来被说服并留下来。截至去年7月，曼斯菲尔德已经不再是公司管理团队的成员，但他仍将参与特殊项目。（林靖东）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140508/003325.htm','2014-05-08 06:51:14',1,'/news/thumb/103219035.jpg','苹果资深高管科顿将退休 已为公司效力18年','admin','林靖东'),(85,'<div>\r\n	<img alt=\"猎豹移动上市首日收报14.40美元 上涨2.86%\" src=\"http://img1.gtimg.com/tech/pics/hv1/149/23/1589/103330739.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月9日消息，猎豹移动昨晚登陆美国纽交所，交易首日收报14.10美元，较发行价14美元上涨0.71%。当日该股股价最高上触16.43美元，最低下探13.95美元。以收盘价计算，猎豹移动目前市值约为19.5亿美元。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"猎豹移动上市首日收报14.1美元 上涨2.86%\" src=\"http://img1.gtimg.com/tech/pics/hv1/13/27/1589/103331623.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">猎豹移动上市首日股价走势（腾讯科技配图）</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">猎豹于4月3日向美国证监会（SEC）提交了上市申请文件（IPO）。猎豹移动股票代码为“CMCM”。此次IPO交易，猎豹移动将销售1200万份美国存托股(ADS)。主承销商为摩根士丹利、摩根大通和瑞士信贷，副承销商为麦格理资本和奥本海默（Oppenhemier）。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">猎豹移动已与</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/03888.htm\" target=\"_blank\"><span style=\"font-size:14px;\">金山软件</span></a><span style=\"font-size:14px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">、小米签署股份认购协议，三家公司将共同认购猎豹移动最高5000万美元的股份。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">猎豹移动招股书显示，2014年第一季度总营收为人民币3.157亿元（约合5080万美元）。2014年第一季度，移动营收已占到公司总营收的17%。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，猎豹移动全球移动端用户达5.021亿，与去年12月底相比增长了44.9%。2014年3月，月活跃用户数达3.62亿（包含PC和移动），移动端月活跃用户数2.23亿；63%的移动端月活用户为海外用户。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">猎豹CEO傅盛(</span><a href=\"http://t.qq.com/fusheng#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)(微博)表示，上市后猎豹移动将致力于进一步扩大移动用户群、扩大全球市场，并提高货币化能力、寻找战略投资和收购机会。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140509/005394.htm','2014-05-09 06:47:21',1,'/news/thumb/103330739.jpg','猎豹移动上市首日收报14.1美元 上涨2.86%','admin','alonliu'),(86,'<div>\r\n	<img alt=\"天降百亿美元横财 分析师建议梅耶尔买AOL\" src=\"http://img1.gtimg.com/tech/pics/hv1/174/20/1589/103329999.jpg\" /> \r\n</div>\r\n<p>\r\n	腾讯科技讯 5月9日消息，CNBC网站发表文章称，<a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\">阿里巴巴</a>IPO之后，<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\">雅虎</a>出售股份可以获得大笔收益，如何处理这笔资金引起了投资者的广泛关注。届时，雅虎CEO玛丽莎·梅耶尔（Marissa Mayer）不仅面临着提升业绩的巨大压力，还要谨慎选择收购对象。分析人士认为，AOL是一个不错的收购目标。\r\n</p>\r\n<p>\r\n	以下为文章主要内容：\r\n</p>\r\n<p>\r\n	几个月之后，雅虎CEO玛丽莎·梅耶尔面临着一个100亿美元的决定。这个重要时刻将在中国电子商务巨头<a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\">阿里巴巴集团</a>IPO之际来临，此次IPO将是一笔巨大的交易，雅虎需要出售它所持有的阿里巴巴股份中的40%。交易完成后，雅虎可以获得一大笔资金，这将加大梅耶尔在经历了数年平淡之后恢复雅虎业务增长的压力。\r\n</p>\r\n<p>\r\n	“这是玛丽莎的清算时刻”，一直研究雅虎与阿里巴巴关系的哥伦比亚大学商务教授莫西·科恩（Moshe Cohen）说。梅耶尔周三在纽约出席一场活动时也承认了这一点。她说：“我们明白它对于投资者的极端重要性。”不过梅耶尔以IPO之前不得公开发表评论的监管规定为由拒绝透露更多信息。\r\n</p>\r\n<p>\r\n	失去股价支撑\r\n</p>\r\n<p>\r\n	出售阿里巴巴股份可以给雅虎带来短期刺激，但是也会令雅虎在营收持续下滑的情况下失去重要的股价支撑。大多数分析人士认为，阿里巴巴股份是梅耶尔领导下雅虎股价上涨一倍多的主要原因，因为投资者希望通过雅虎持有的股份在阿里巴巴IPO交易中分一杯羹。\r\n</p>\r\n<p>\r\n	随着阿里巴巴支撑的离去，“是时候实现营收增长了，”BGC Financial分析师科林·吉利斯（Colin Gillis）表示，“现在他们需要见一些实效。”梅耶尔提升营收的其中一条捷径就是收购另外一家公司，在阿里巴巴IPO之后收购更好，时间可能是8月或9月。\r\n</p>\r\n<p>\r\n	尽管阿里巴巴不太可能在夏天之前就设定IPO发行价，不过分析人士预测，这家中国公司的市值在1500亿到2000亿美元之间。以此来计算，雅虎需要出售的2.08亿股股票可以带来至少100亿美元的收入。届时雅虎仍将持有约3.15亿股阿里巴巴股票，他们可以择机出售。\r\n</p>\r\n<p>\r\n	选择收购目标\r\n</p>\r\n<p>\r\n	有了这样一大笔资金，梅耶尔可以大手笔收购一家热门的创业公司，例如社交媒体明星Pinterest，或者限时信息服务Snapchat。但这些创业公司并不能带来大量营收，如果雅虎决定收购，投资者可能会感到不安。另外，雅虎可能会面临着资金更充足的竞购对手，例如<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\">谷歌</a>(<a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\">微博</a>)和<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\">Facebook</a>。\r\n</p>\r\n<p>\r\n	对于雅虎而言，AOL是一个更符合逻辑的收购候选对象。AOL也是曾经红极一时的互联网公司，但在创新方面被谷歌和Facebook等竞争对手远远甩在身后，这两家公司都凭借自己的互联网资产打造了利润丰厚的广告网络。\r\n</p>\r\n<p>\r\n	吉利斯认为，与AOL结合可以给雅虎带来好处，因为AOL在互联网视频方面更加成功，这正是梅耶尔的重点业务之一，AOL在其他网站上的广告销售也做得更好。另外，AOL还与谷歌签署了长期的搜索合作协议，这或许也可以吸引到梅耶尔，因为她曾公开表示对雅虎与<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\">微软</a>的搜索合作协议带来的营收感到不满。如果二者结合，雅虎和AOL还可以裁减重复岗位和业务，进而降低成本，增加收入。\r\n</p>\r\n<p>\r\n	随着AOL发布的第一季度财报不及分析师预期，收购AOL的成本也大幅下降。周三AOL股价大跌21%，公司市值也缩水到约28亿美元。\r\n</p>\r\n<p>\r\n	这样一笔交易还有一个潜在的原因：梅耶尔与AOL首席执行官蒂姆·阿姆斯特朗（Tim Armstrong）是老相识，二者都曾在谷歌任职，并在谷歌大获成功的过程中发挥了重要作用。当时阿姆斯特朗擅长广告销售，而梅耶尔更多地专注于设计和工程。\r\n</p>\r\n<p>\r\n	做资金的好管家\r\n</p>\r\n<p>\r\n	莫西·科恩教授认为，收购AOL有助于雅虎，但很多投资者对梅耶尔借阿里巴巴IPO获得的收益大肆收购的前景并不感到兴奋。\r\n</p>\r\n<p>\r\n	梅耶尔担任CEO以来，去年一年雅虎斥资14亿美元收购了28家公司，大多数交易的对象都是由工程师组成的小型创业公司，梅耶尔希望这些工程师的技术水平可以应用到移动领域。但也有一个例外：11亿美元收购轻博客服务商Tumblr。\r\n</p>\r\n<p>\r\n	“她的收购目标都是一些没有创造营收的公司，”科恩说，“如果她进行更大手笔的收购，风险也会更大，而现在市场对她的信心并不那么坚定。市场担心阿里巴巴带来的价值被受到损害。”\r\n</p>\r\n<p>\r\n	在周三的交易中，雅虎股价下跌2.42美元，跌幅6.6%，报收于34.07美元。2012年7月梅耶尔就任雅虎CEO时，雅虎股价为15.65美元。\r\n</p>\r\n<p>\r\n	“从股东的角度来看，如何使用这笔现金是一个大问题。”Macquarie分析师本·沙切特（Ben Schachter）说，“人们很想知道，而她却含糊其辞。因此现在雅虎面临着很多不确定性。”\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		在周三出席活动时，梅耶尔表示，她处理这笔资金的方式，将类似于2012年雅虎出售部分阿里巴巴股份后获得的70多亿美元的处理方式。当时，梅耶尔将部分资金用于收购，但把大约85%的资金用于回购自己的股票。\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140509/004102.htm','2014-05-09 08:33:01',1,'/news/thumb/103329999.jpg','天降百亿美元横财 分析师建议梅耶尔买AOL','admin','小贝'),(87,'<div>\r\n	<img alt=\"智能耳机可解决穿戴技术面临的最大难题\" src=\"http://img1.gtimg.com/tech/pics/hv1/64/63/1589/103340854.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	BI中文站 5月9日报道\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	今天，耳机的主要用途是将你跟周围环境暂时隔绝开。但在不远的将来，象Dash智能耳机那样的设备可能会被用来增强你周围的世界，它可以为你提供你所遇到的人和所去的地方的信息。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Dash智能耳机背后的初创公司Bragi原本在众筹平台Kickstarter上设置的筹资目标为26万美元，但3月份它在很短的时间里就筹到了300多万美元的资金。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这款售价179美元的智能耳机整合了多种产品的功能，包括健康追踪设备、心率监控器、蓝牙耳机、音乐播放器（它有4GB存储空间）和标准耳机。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是比设备本身更有趣的是，它有可能会打开下一代可穿戴设备的发展空间。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这是一个非常先进的概念。比如，如果你遇到一个认识但不熟识的人，象Dash那样的智能耳机可以悄悄地将他的信息告诉你，这样你就可以更容易与对方搭讪。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Dash智能耳机将解决可穿戴技术的大问题\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这种互动可以解决可穿戴设备如今仍未解决的一个最大的难题。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	除了在技术上存在限制比如电池续航时间太短，易用性不强也是造成可穿戴设备无法进入主流市场的重要原因。目前，可穿戴设备还无法完美地融入人们的日常生活。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	例如，Canalys Insight的首席分析师克里斯琼斯（Chris Jones）3月份在接受BI采访时指出，在与他人进行交谈时，象<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\">谷歌</a>(<a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\">微博</a>)眼镜那样的设备肯定会令人分心。人们担心戴着谷歌眼镜的人可能会把注意力放在显示屏上而忽略了他们正在说的话。琼斯说：“谷歌眼镜现在还无法被社会所接受。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	智能手表的情况要稍好一些，它给人的感觉更加自然，但是它仍然需要佩戴者偶尔将目光转移到手表上，因此仍然会对人与人之间的交谈造成一定的影响。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但是智能耳机就不同了，它完全不需要佩戴者低头或抬头去看任何显示屏。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	可穿戴技术的兴起\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	智能耳机现在在市场上还不太多见，但是Dash也并非一枝独秀。在今年的消费电子产品展会上，<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/INTC.OQ.htm\" target=\"_blank\">英特尔</a>展示了一款专为健身跟踪而设计的智能耳机样品。那款耳机不但可以在你的耳朵中不断重复鼓励性的短句，还可以根据你锻炼的节奏播放预设好的不同歌曲。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	LG今年也发布了两款智能耳机，它们可以监控佩戴者的心率，还可以跟LG推出的Lifeband Touch腕带配套使用。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	PSFK Labs的总裁皮尔斯法克斯（Piers Fawkes）说：“它藏在你的耳朵里，可以通过某种方式为你提供帮助。它有可能会成为个人顾问，为你加油，为你导航或者提醒你参加会议等等。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当然，智能耳机也将面临社会是否接受它的考验。人们可能不太愿意跟戴着耳机的人谈话，因为他们不能确定对方是否在认真地倾听。但在纽约市里，已经有很多人在走路时也戴着耳机了，因此这可能不是一个太大的问题。（林靖东）\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】\r\n</p>','腾讯科技','http://tech.qq.com/a/20140509/014019.htm','2014-05-09 08:34:01',1,'/news/thumb/103340854.jpg','智能耳机可解决穿戴技术面临的最大难题','admin','林靖东'),(88,'<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<img alt=\"隔夜中概股多数下跌 艺龙跌6.67%\" src=\"http://img1.gtimg.com/tech/pics/hv1/119/31/1589/103332749.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 金铎 5月9日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美联储主席耶伦的国会听证会进入第二天。美国上周初次申请失业救济金人数大幅减少，创下一个月以来的最低水平。欧洲央行行长德拉吉暗示可能在6月采取货币宽松措施。美国股市周四收盘涨跌不一，纳指连续第三个交易日收低；中国概念股多数下跌，猎豹移动上市首日微涨0.71%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/LONG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">艺龙</span></a><span style=\"font-size:14px;\">跌6.67%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">猎豹移动昨晚登陆美国纽交所，交易首日收报14.10美元，较发行价14美元上涨0.71%。当日该股股价最高上触16.43美元，最低下探13.95美元。以收盘价计算，猎豹移动目前市值约为19.5亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">艺龙2月20日发布财报显示，2013年全年公司总营收为人民币10.791亿元，同比增长了35%；全年股东应占净亏损为人民币1.68亿元（约合2770万美元），上年实现净利润50万元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">艺龙将在5月15日发布2014年第一季度财报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其它活跃个股，达内科技跌4.47%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/VIPS.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">唯品会</span></a><span style=\"font-size:14px;\">&nbsp;跌4.42%，蓝汛通信跌4.28%，易车网涨6.92%，500彩票网涨6.715。中国概念股周四收盘行情如下：</span>\r\n</p>\r\n<p>\r\n	<img alt=\"隔夜中概股多数下跌 艺龙跌6.67%\" 搜房网大涨10.62%?=\"\" 无锡尚德暴跌23.85%?=\"\" 四支个股跌幅超10%?=\"\" 麦考林大涨22.82%?=\"\" 中国手游大涨16.32%?=\"\" src=\"http://img1.gtimg.com/tech/pics/hv1/50/54/1433/93194645.jpg\">\r\n</p>\r\n<div>\r\n	<img alt=\"隔夜中概股多数下跌 艺龙跌6.67%\" src=\"http://img1.gtimg.com/tech/pics/hv1/76/31/1589/103332706.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"隔夜中概股多数下跌 艺龙跌6.67%\" src=\"http://img1.gtimg.com/tech/pics/hv1/77/31/1589/103332707.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"隔夜中概股多数下跌 艺龙跌6.67%\" src=\"http://img1.gtimg.com/tech/pics/hv1/78/31/1589/103332708.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以上交易价格单位为美元；市值一列中，B代表10亿美元，M代表100万美元，K代表1000美元</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140509/007860.htm','2014-05-09 08:35:20',1,'/news/thumb/103332749.jpg','隔夜中概股多数下跌 艺龙跌6.67%','admin','金铎'),(89,'<p style=\"text-indent:2em;\">\r\n	<img src=\"/upload/image/20140512/20140512083530_705.jpg\" alt=\"\" />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		腾讯科技 5月12日报道\r\n	</p>\r\n	<div>\r\n		<p>\r\n			携程和去哪儿的并购谈判近日已陷入僵局。来自投资圈的消息称，携程已经尝试了另一条行业整合道路，在战略投资同程网之后，艺龙也进入了携程投资清单。\r\n		</p>\r\n		<p>\r\n			没有人怀疑，携程和去哪儿若联手将会统治中国现在的在线旅游市场，但种种原因导致双方的合作举步维艰。造成谈判搁浅的原因包括：管理团队对控制权的争夺；二者在增长速度、布局、商业模式和发展方向等方面存在较大差异，目前难以找到双方都能接受的交易价格和方案；此外，二者一旦合并后，如何实现业务互补、发挥整合效应也是难题。\r\n		</p>\r\n		<p>\r\n			还没有确切消息显示携程和艺龙的谈判进展程度，但有分析人士表示，携程和同程、艺龙占据了中国OTA市场70%左右的市场份额（同程和艺龙背后有共同的股东腾讯），这三者的联手同样是对格局的颠覆，去哪儿届时将陷入腹背受敌的被动之中。\r\n		</p>\r\n		<p>\r\n			艺龙有寻找合作的动机。受累于价格战和市场营销，艺龙2013年交易额第一次突破100亿元，佣金收入突破10亿元，但亏损高达1.67亿元，同时第四季度酒店间夜量增速、酒店营业额增长率也在下降。\r\n		</p>\r\n		<p>\r\n			作为艺龙的大股东，国外在线旅游巨头Expedia也需要重新审视自己在中国市场的布局。除了投资艺龙，2009年Expedia在国内推出旅游点评网站到到网，当年10月，又以超过1200万美元的价格收购旅游搜索引擎酷讯网，但这些投资无法保证Expedia未来能在中国市场占据一席之地。\r\n		</p>\r\n		<p>\r\n			Expedia在艺龙的持股比例约65%。截止上周末，艺龙市值为4.83亿美元，Expedia在2011年从人人公司回购艺龙股份时，艺龙市值曾接近8亿美元。\r\n		</p>\r\n		<p>\r\n			尽管对艺龙的投资成效不明显，但Expedia觊觎中国市场，并不会轻易退出。如果Expedia最终和携程达成投资协议，双方在海外休闲度假、出境自助游市场将会有较大的合作空间。\r\n		</p>\r\n		<p>\r\n			Expedia目前市值为89亿美元，主要业务是在线旅游产品预订，靠“代理+批发商”模式来销售旅游产品供应商的产品并获取佣金，这和目前市值67亿美元的携程类似，此外，Expedia旗下还有诸多子公司，包括目前市值120亿美元、全球最大的旅游社区TripAdvisor，欧洲等地的流行酒店搜索网站Trivago等。\r\n		</p>\r\n		<p>\r\n			数据显示，2013年，中国出境旅游人数达到了9730万人次，同比增长18%，出境旅游花费1200亿美元，同比增长20%。现在，这一市场依然主要掌控在传统旅游服务机构手中。在自由行逐渐兴起后，携程等在线旅游企业未来也需要和Expedia、Priceline等国外公司的合作来提升自己在海外的服务能力。\r\n		</p>\r\n		<h2>\r\n			高管详解携程投资策略\r\n		</h2>\r\n		<p>\r\n			从2013年至今，携程已经在上下游产品、供应商方面进行了一系列投资，一嗨租车、易到用车、快捷酒店管家、途家、途风网、慧评网、同程网等均出现在携程的投资清单中。\r\n		</p>\r\n		<p>\r\n			携程目前持有如家酒店15.39%股份、汉庭酒店9%股份、持股约4%的Keystone LodgingHoldings Limited（2013年曾并购7天连锁酒店），成为中国三大经济型酒店的投资方。\r\n		</p>\r\n		<p>\r\n			其他重要投资还包括：\r\n		</p>\r\n		<p>\r\n			以4600万元人民币收购B2B预订服务商上海大都市旅行社51%的股份；\r\n		</p>\r\n		<p>\r\n			1.2亿港元控股从事酒店和机票批发的香港华闽旅游；\r\n		</p>\r\n		<p>\r\n			以600万美元投资快捷酒店管家，占股33%；\r\n		</p>\r\n		<p>\r\n			以2200万人民币收购上海益商网络科技有限公司35%的股权；\r\n		</p>\r\n		<p>\r\n			合计3670万美元实现对途家网的控股；\r\n		</p>\r\n		<p>\r\n			以2309万美元控股途风网；\r\n		</p>\r\n		<p>\r\n			花费9405万美元收购了一嗨租车19.6%的可转换优先股；\r\n		</p>\r\n		<p>\r\n			以2300万美元购买易到用车20%的可转换优先股股份。\r\n		</p>\r\n		<p>\r\n			携程COO孙洁接受腾讯科技采访时表示，携程偏好与核心业务有关联的投资，具体来看包括三种：第一个是能加强或扩张产品线的投资；第二种类型是能加强地域性扩张的投资；第三种是投资长远看好的企业和模式，比如投资途家。\r\n		</p>\r\n		<p>\r\n			在控股权问题上，孙洁表示，如果是携程希望主动进入的新领域，更加专注来发展，投资会采用控股的方式；如果是针对已经规模很大的企业，可以通过投资占小股的方式互补合作。\r\n		</p>\r\n		<p>\r\n			投资决策的快跟慢，则取决于业务对携程的重要性，“如果志在必得，就会很快，当然这也取决于两家公司是否具有很强的互补性。比如在现付酒店和门票业务上，同程网和携程互补性更强，各自都能够省掉很多人力财力的投入。”孙洁告诉腾讯科技。\r\n		</p>\r\n		<p>\r\n			投资同程网，携程花了一个星期左右时间便完成签约。“战局变化如此之快，我也没有想到。”对于接受最大竞争对手携程的投资，同程网CEO吴志祥此前接受腾讯科技采访时表示。\r\n		</p>\r\n		<p>\r\n			4月10日，同程和艺龙达成战略合作协议，当天晚上，携程正式向同程抛出橄榄枝，携程一位高层向同程网CEO吴志祥表达了交流谈判的意向。\r\n		</p>\r\n		<p>\r\n			双方的第一次会面于4月19日在苏州进行。携程CEO梁建章、携程COO孙洁、携程CSO武文洁以及同程网方面包括吴志祥在内的5位创始人见面后，两个小时内便在门票业务合作和携程战略入股等方面达成一致。\r\n		</p>\r\n		<p>\r\n			4月28日，携程宣布2.2亿美元投资同程，占股约30%成为第二大股东，此轮投资后，同程的估值接近50亿人民币。\r\n		</p>\r\n		<p>\r\n			通过一系列投资并购，携程试图建立自己在旅游市场的话语权。“我不认为公司强大与否，是靠联盟做出来的，每个公司都要把自身业务做强，牺牲公司的平等来换取流量，对公司长远发展其实不利。”携程COO孙洁接受腾讯科技采访时表示，携程没有在BAT之间选择站队的需求。\r\n		</p>\r\n	</div>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n		</div>\r\n		<div>\r\n			从2013年至今，携程已经在上下游产品、供应商方面进行了一系列投资，一嗨租车、易到用车、快捷酒店管家、途家、途风网、慧评网、同程网等均出现在携程的投资清单中。携程偏好与核心业务有关联的投资，具体来看包括三种：第一个是能加强或扩张产品线的投资；第二种类型是能加强地域性扩张的投资；第三种是投资长远看好的企业和模式，比如投资途家。\r\n		</div>\r\n	</div>\r\n</div>','腾讯科技','http://tech.qq.com/original/tmtdecode/t629.html','2014-05-12 08:35:32',1,'/news/thumb/54325234534532.jpg','携程整合去哪儿陷入僵局 欲联手老对手艺龙','admin','范晓东'),(90,'<div>\r\n	<img alt=\"光线传媒2.3亿收购仙海 “影视+游戏”模式受质疑\" src=\"http://img1.gtimg.com/tech/pics/hv1/3/142/1591/103490988.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">理财周报见习记者 吴旭光/北京报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“游戏行业最近很火。”北京一位私募老总表示。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在斯时网络游戏概念爆炒的背景下，有着国内电视剧“制播分离”第一股之称的光线传媒（300251.SZ），同样复制了华谊兄弟、中青宝等受到资金热捧的网络游戏股路线，再度出击网络游戏领域震动业内。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5月4日，停牌2个多月的光线传媒发布公告称，公司拟以2.3亿元收购广州仙海网络科技有限公司（简称仙海网络）部分股权并增资，此次项目完成后公司持有仙海网络20%股权。这是光线传媒自2012年8月以来收购的第三家网络游戏公司。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上早在2012年8月，光线传媒曾先后斥资2.06亿元对欢瑞世纪、天神互动两家游戏公司的部分股权进行了收购。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从光线传媒的投资版图中不难看出，它试图以自身影视文化产业优势，形成以电影、游戏为核心的“影游互动”及泛娱乐化平台，有业内人士称这是光线传媒在寻求新的利润点背景下，进行的资本运作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在艾媒咨询张毅看来，光线传媒投资游戏更多是为了拉升业绩，但网络游戏公司跟影视剧公司均面临盈利风险较高的问题，未来到底能在多大程度上助力业绩还具有不确定性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得注意的是，3个月后，光线传媒将有3.6亿股首发限售股解禁，此次大手笔并购推出的时间点颇为敏感。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">再追网游</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">公告显示，光线传媒入股仙海网络分两部分进行：第一步，光线传媒将出资1.5亿元现金购买仙海网络15%股权（估值10亿元），第二步，光线传媒采用现金溢价增资的方式，以现金8000万元向仙海网络增资。两次注资结束后，光线传媒将获得仙海20%股权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上，在收购仙海网络股权之前，光线传媒在2012年8月，曾以8100万元收购欢瑞世纪4.81%的股权，并和子公司光线影业以1.25亿元收购天神互动12.5%股权。其中，天神互动在今年1月拟借壳科冕木业，光线传媒所持股权市值近5亿元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">短短一年多时间，光线传媒就耗资4亿元进军网络游戏行业，意欲何为？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">光线传媒证券部工作人员在接受理财周报（微信公众号money-week）记者采访时表示，“对于收购网络游戏公司部分股权，光线传媒并非单纯的从游戏产业赚多少钱或者影视剧赚多少钱层面考虑的，而是基于两方面的原因。第一，光线传媒的市场预期是将影视和游戏产业链打通。第二方面是出于投资创造效益的目的考虑。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于本次收购，光线传媒公告中也表示，此举“可以加强产业链的战略布局，与公司的电视剧、电影业务形成互动”。本项目收购完成后，通过投资收益和未来双方可能的业务合作及互动效应。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">山西私募研究员王雪洁对理财周报记者表示，要把手游整个纳入光线传媒，再去开发成电影，或者是把光线旗下的电影开发成网络游戏产品，虽然也有这种可能性，但是可能性不大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，也有不少业内人士表示，这只是光线传媒在寻求新的利润点背景下，进行的资本运作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得注意的是，光线传媒此次收购推出的时间点也颇为敏感。2014年8月4日，光线传媒将有3.64亿股首发限售股解禁，解禁规模巨大，占公司总股本的比例为71.87%。解禁股东包括大股东上海光线投资控股，以及李晓萍、李德来、王岱等公司核心高管。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对此，光线方面并未作出解释。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“一方面手游市场火热，有很高的利润，另一方面光线传媒也可以像此前投资收购天神互动一样，等广州仙海网络上市，再抽身退出，其中有很大的利润可图。”杭州天使投资人李学军告诉理财周报记者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据光线传媒公告显示，刘秀珍为仙海网络法定代表人，此次交易前持有仙海科技100%股权，现阶段股东结构正在调整中，股东结构调整后将部分股权转让给光线传媒。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于现阶段仙海网络的股权调整情况，以及光线传媒会否全资收购？记者分别致电光线传媒、仙海网络。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">仙海网络方面未予以置评，而光线方面言辞微妙。该证券部工作人员表示，光线传媒此次停牌并非因为参股仙海科技所致，后续还有其他并购或者购买资产动作披露，公司将于5月16日复牌。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">后市难料</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">资料显示，被收购方仙海网络注册资本1001万元，成立于2008年6月，主营大型网络游戏的研发与运营，产品线涉及客户端游戏、网页游戏研、移动游戏、游戏数据媒体4个部分，曾推出《烈火战神》、《战将风云》、《战千雄》、《武易》等游戏。据仙海网络客服人员介绍今年新上线的《暗黑屠龙》、《西游斗神》等能否在市场上斩获更多的人气仍属未知数。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">光线传媒及仙海网络面临的最大挑战在于，传统的电影业跟网络游戏均属于高风险领域，因为网络游戏、影视行业自身的特性，用户口味变化快，产品更新换代和竞争激烈程度也很高，想依靠一款或者几款产品来持续营收是不可能的，即便是火爆的明星产品，大部分也仅是昙花一现。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">公告显示，2013年，仙海网络主营业务收入1.58亿元，主营业务成本945万元，净利5734.91万元，营业利润为6670万元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位多年从事网络游戏开发的资深人士同样认为：“网络游戏行业成功的关键不仅在于一款产品的受欢迎程度，还在于企业是否具备连续出品高质量游戏产品的能力。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上国内游戏市场昙花一现的产品也很多。比如说，曾经风靡一时的偷菜、QQ牧场等游戏，如今已无人问津。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“大部分手游</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:14px;\">生命</span></a><span style=\"font-size:14px;\">周期呈抛物线状，发布后两个月达到顶峰，经过两个月的稳定期之后就会出现迅速下滑，基本上一款游戏从诞生到巅峰时期仅有两到三个月的时间。”易观国际游戏行业分析师孙梦子告诉记者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">光线和仙海网络的联姻，会否重蹈覆辙？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“寄希望于通过游戏行业提升自身盈利能力的想法是好的，但现阶段支撑光线传媒业绩的仍将是影视制作领域，目前来看网络游戏这一块很难为光线传媒带来业绩上的回报。”一位不愿公开姓名的投资者对华谊兄弟的未来表示了担忧。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据光线传媒公布的一季报显示，报告期内实现营业收入1.28亿元，同比下降39.3%，同期实现归属上市公司股东的净利润0.27亿元，同比下降66.6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">对此，山西某证券分析师王雪洁指出业绩出现大幅下降的主要原因，在于去年同期曾有泰囧票房高产为公司奠定了高基数，一季度电影业务下滑了49.9%。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/004943.htm','2014-05-12 08:36:45',1,'/news/thumb/103490988.jpg','光线传媒2.3亿收购仙海 “影视+游戏”模式受质疑','admin','理财周报'),(91,'<div>\r\n	<img alt=\"美图强攻设局：蔡文胜为上市讲手机故事 资本冷对\" src=\"http://img1.gtimg.com/tech/pics/hv1/223/139/1591/103490443.png\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">理财周报见习记者 吴旭光/北京报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4月27日，美图手机2的发布会现场，行事一向低调的</span><a href=\"http://t.qq.com/caiwensheng#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">蔡文胜</span></a><span style=\"font-size:14px;\">亲自“摆拍”为旗下手机造势，也因美图手机被推到聚光灯下。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">众所周知，小米手机的成功不仅仅是一款产品的成功，更是</span><a href=\"http://datalib.tech.qq.com/people/29/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">雷军</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/leijun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)在移动互联网布局之后的大招。同样，蔡文胜和他的美图秀秀也有布局，而美图手机或许正是他出的第一招。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">伴随着美图秀秀从软件到硬件的全线打通，美图秀秀也成为当今图片处理应用领域增长最快的公司。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，在一些VC/PE眼中，当前国内图片处理应用软件商业模式仍不是十分明朗，投资图片处理领域价值不大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美图如何攻占市场</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至今年4月，美图旗下软件产品数量从去年5月的9个增长到现在的17个。同时，其用户数达到7.4亿，其中移动端用户数4.22亿，日活跃用户数达到2358万，月活跃用户数达到了1.36亿，日处理图片超过5亿张，美图已经成为移动互联网最主要的图片入口，市场份额早已超过50%，其在图片处理领域的第一位置已然稳固。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">回溯以往，2008年，刚刚成立的美图还在为如何迅速占领市场而挣扎。早在美图诞生之前，光影魔术手因率先布局已小有名气。之后可牛影像半路杀出。前者具有强大的批量处理功能和模拟反转片效果等多项重要功能，后者则无须任何PS技巧即可轻松制作支持多图场景，实现炫酷的制作效果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2010年，美图做了一个大胆的尝试，暂停在各大论坛、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">贴吧、百度知道等渠道的推广，取而代之的是专注于微博营销之路。事实证明，微博营销是正确的选择，凭借着微博营销，美图秀秀的市场份额进一步扩大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而到了2012年，美图秀秀的市场份额已经超过光影魔术手、camera360等竞争对手若干。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一路走来，美图何以御敌？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在其创始人吴欣鸿(</span><a href=\"http://t.qq.com/iphoto#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)看来，“简单”是对产品最好的解读。“我们对图片的理解比较深刻，功能更早发布，比如人像美容和拼图功能等。”吴欣鸿用一句话总结了美图的优势。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“吴欣鸿是很好的产品经理。”一名熟悉美图秀秀团队的人士告诉理财周报（</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新浪</span></a><span style=\"font-size:14px;\">微博@理财周报，微信公众号money-week）记者，他在给内部员工讲解产品时，几乎不用任何技术方面的名词，一直强调的都是从用户体验的角度出发。因为简单直接的表述，对用户来说更直观也更易理解。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2009年初，上线仅数月的美图秀秀迅速在女性市场中受到认可。自拍是每个女性的基本需求，用基本需求来圈住女性用户，在围绕女性用户上，可做大文章。故事该怎么讲？圈住女性用户后，有关女性的更多需求都可以涉足，比如电商导购、比如本地化美食，再比如社区。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">因此，“吴欣鸿需要一个为女性量身定制的手机来沉淀用户，有了这个手机，就有了圈住女性的阵营，弥补自己不善做社区的基因。要知道，在此之前，美图秀秀只敢做平台上的工具，而不敢自己做社区，一是怕做不好，二是怕被大平台断了流量的命。但手机，可以反补它来做社区”。一名PE业内人士告诉记者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“即使手机一分不赚，也是胜利。相对于大多数亏钱且微营收的互联网公司来说，一部手机过千元的销售额，从财务指标看，也具有较大想象空间。”上述PE业内人士表示。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">蔡文胜的资本经</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当被问及蔡文胜在移动互联网最成功的一笔投资时，他的回答是美图秀秀。这笔投资开始于2008年。彼时通过卖域名，蔡文胜在互联网已经名声大噪，被誉为中国最成功的域名投资者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2007年，蔡文胜开始在互联网领域进行投资，成为中国著名天使投资人，其先后投资了暴风影音、CNZZ、58同城、网际快车、美图网、优化大师等诸多知名互联网公司。而今，蔡文胜紧盯移动互联网，已投资了美图秀秀、大姨吗、康诺云等项目。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其中，58同城已在美国上市，蔡文胜是在2005年58同城成立前入股。除58同城外，他投资的另外一家页游公司Forgame也于去年10月3日在香港主板上市，首日市值超过10亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管做传统生意起家的蔡文胜在互联网投资领域非常成功，但这几年他却异常低调，甚至曾宣布不接受任何会议邀请和新闻采访。直到今年4月份，在美图公司举办的美图2014春夏新品发布会上，以美图秀秀董事长身份出席的蔡文胜再次出现在公众视野当中，而这一次他带来的是美图手机。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其实，早在2013年美图手机项目提出后，蔡文胜本人即出任美图秀秀董事长，公司创始人吴欣鸿担任CEO。这也是蔡文胜首次在投资的公司中任职，而且出任董事长。由此可见蔡文胜对美图手机的重视。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“蔡文胜在手机端的发力，其实可以看成是美图公司在产品链的一个延伸，从软件上到硬件做到产品线上的打通。”北京互联网站长李金铭对理财周报（新浪微博@理财周报，微信公众号money-week）记者表示，从硬件来着手，其实也是解决现金流问题的一种方式，如果美图手机一年的销量在几十万台甚至更多，而每一部手机都有过千元的销售额，从财务指标看，也具有较大想象空间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如果仅从美图角度理解，手机只是一次尝试。但是如果从蔡文胜的移动互联网布局来说，这或许是其对美图资本布局的开始。有市场人士猜测，蔡文胜可能会将美图公司扶持上市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“当下监管部门鼓励国内的互联网企业上市，以创业板的上市门槛来说，过会的互联网企业可以不盈利，但是现金流要达到亿元以上才行。”北京私募人士阮一飞分析，从上市角度来讲，美图公司要想上市一定要有现金流，从硬件着手也是解决现金流问题的一种方式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">多数资本不看好</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">凭借着庞大的用户群，美图成为当今图片处理应用领域增长最快的公司。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美图的巨大成功也让其背后的投资人蔡文胜深感自豪。其实除了蔡文胜，据悉，启明创投在美图秀秀初创期提供过融资支持。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，更多的PE、VC并不看好图片处理应用行业前景。曼达林基金邵子琦表示，对于VC来说，投资图片处理应用价值并不大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">浙江宏创投资李宏军认为，当前国内图片处理应用软件商业模式还不明朗。“美图秀秀用户很多，当下发展势头也很猛，但并没有形成非常好的盈利模式。在增值服务方面效果不明显。与其投资这类图片处理软件行业，我们更愿意投资那些未来可以诞生100亿元的公司。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“目前在国内，像美图秀秀、camera360、光影魔术手等单独是产生不了价值的，必须产生价值给它的买家才行。”邵子琦告诉记者，投资是对等的，只有他们能够创造同样价值甚至更多时，才有更多人去关注这个领域。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/004734.htm','2014-05-12 08:37:55',1,'/news/thumb/103490443.png','美图强攻设局：蔡文胜为上市讲手机故事 资本冷对','admin','jamesdu'),(92,'<div>\r\n	<img alt=\"高通欲3亿美元收购高速芯片开发商Wilocity\" src=\"http://img1.gtimg.com/tech/pics/hv1/10/138/1591/103489975.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯 5月12日消息，路透社周日援引以色列财经新闻网站TheMarker的消息报道说，<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/QCOM.OQ.htm\" target=\"_blank\">高通</a>正在与该国芯片开发商Wilocity就收购事宜进行高级别谈判。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	TheMarker称，高通已经提议出资约3亿美元收购这家于2007创建的高速芯片开发商Wilocity，但双方尚未就所有的出售条款达成一致。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	截至目前，Wilocity官方尚未对置评请求进行回应。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	据悉，高通此前已经对Wilocity进行过投资。Wilocity主要从事采用60GHz传输技术的无线产品开发工作，这种传输手段远远超过了传统WiFi。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	TheMarker称，Wilocity研发的芯片产品可以满足用户快速进行视频<a href=\"http://download.tech.qq.com/\" target=\"_blank\">下载</a>等其他大量数据内容的处理工作。目前，该公司的产品已经装配到<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/DELL.OQ.htm\" target=\"_blank\">戴尔</a>的电脑产品中，而戴尔也是Wilocity的首位客户。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Wilocity的其他投资者包括Marvell Technology、<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/CSCO.OQ.htm\" target=\"_blank\">思科</a>、和硕联合(Pegatron)、Benchmark Capital、Sequoia、Vintage Investment Partners以及Tallwood Partners。截至目前，Wilocity已经从投资者那募集1.05亿美元。（李路）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/004278.htm','2014-05-12 08:38:35',1,'/news/thumb/103489975.jpg','高通欲3亿美元收购高速芯片开发商Wilocity','admin','shulaiyang'),(93,'<div>\r\n	<img alt=\"搜狐畅游被曝裁员近120人 或在筹谋加强手游\" src=\"http://img1.gtimg.com/tech/pics/hv1/132/143/1591/103491372.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">每经记者 张斯 发自北京</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位游戏行业人士向 《每日经济新闻》曝料称，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SOHU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">搜狐</span></a><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/CYOU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">畅游</span></a><span style=\"font-size:14px;\">端游部门近期计划裁员近120人。据《每日经济新闻》记者了解，去年12月就有网络消息爆出，搜狐畅游计划对端游项目进行人事调整，受影响员工可能会从端游团队转向手游团队，或者接受裁员。截至发稿，搜狐畅游未对采访给予回复。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">时下端游市场面临三大困局：市场增长放缓、收入占比下降、转型过慢。业内人士指出，端游收入难以持续走高，部分公司都在加强手游业务，但目前中国手游像极了前几年的端游，行业发展不健康，传统端游公司仍以端游为主，而在欧美国家客厅游戏才是主流。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">畅游缩编端游</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">早在2013年底，就有业内人士曝出搜狐畅游将计划对端游项目进行人事变动，或调整至手游业务团队。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以端游崛起的搜狐畅游在2013年末动作不断，连续代理了韩国以及国产的三款手游。此外，畅游正在开发的移动游戏数量更是超过30款，可见其杀入手游市场的决心。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">除了手游市场增长迅猛外，端游业务增长缓慢也是畅游着力发力手游的原因之一。上月底，畅游发布截至2014年03月31日未经审计的第一季度财报显示，2014年Q1畅游总收入达1.808亿美元(约合11.31亿人民币)，净亏损1950万美元 (约合1.21亿人民币)。畅游一季度营收环比下滑7%；其中，网络游戏营收环比下滑5%，同比下滑2%；在线广告营收环比环比下滑45%，同比增长39%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">畅游解释称，第一季度网络游戏营收同比下滑，主要是《神曲》中国营收和《弹弹堂》营收下滑所致。根据艾瑞数据显示，《神曲》为2012年中国网页游戏产品充值金额TOP1，近12亿元；《弹弹堂》排在第五，近6亿元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">自畅游去年宣布向平台化转型后，一方面旧有的游戏开始出现市场瓶颈，另一方面，为了推动这些平台型产品的用户规模增长耗资巨大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至3月31日，畅游平台产品总计平均月度活跃用户数达到了2.39亿，环比增长60%，同比增长182%。环比增长主要是由于该公司发布了新的移动端游戏和网页游戏。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于畅游来说，缩编端游团队，加强手游团队建设，是转型下的必经之路。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">手游发展现隐忧</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据游戏工委、CNG中新游戏研究联合发布的《中国游戏产业报告》显示，2013年中国客户端网络游戏市场占有率为64.5%，同比下降10.4个百分点，三年来持续下降17.7个百分点，增速明显放缓。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">多家游戏上市公司发布的2013第四季度财报显示，在线游戏收入业务增速正在集体放缓。为此，业内人士指出，端游市场当下正面临三大困局：市场增长放缓、收入占比下降、转型过慢。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有行业人员向《每日经济新闻》记者表示，虽然手游趋势不可挡，但传统的大端游公司还是以端游为主，手游作为补充，而新的游戏公司目前发展主要是手游，端游慢慢会越来越少新品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/PWRD.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">完美世界</span></a><span style=\"font-size:14px;\">高管也曾公开表示过，虽然手机游戏代表了游戏领域的未来，但大型端游仍然重要。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">公开资料显示，2013年腾讯公司以320亿元的网游收入领跑第一，是第二名</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NTES.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">网易</span></a><span style=\"font-size:14px;\">的6倍有余，网游收入市场份额近60%。因此，尽管端游市场正面临困局，但游戏企业仍在积极布局。年初腾讯推出《剑灵》抢占用户。畅游、完美世界手握大量金庸小说改编权，加大端游投入力度，旗下多款端游也已进入黑盒测试阶段。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“国内端游市场仍然存在发展空间，只是门槛不断抬高，用户要求已经达到较高水平。”《中国游戏产业报告》分析师认为，端游市场遇到了增速变缓的瓶颈，更加考验游戏质量。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，上述行业人士认为，中国手游像极了前几年的端游，主要呈现几个特点：一哄而上、粗制滥造、模仿抄袭和没有售后。以前端游研发周期长，1年有300款，现在手游</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:14px;\">生命</span></a><span style=\"font-size:14px;\">周期只有3~6个月，恨不得1天就有300款。在欧美国家，客厅游戏才是主流，所以端游未必那么萎缩，但中国一窝蜂似的创业加速了这一现象的发生。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/004967.htm','2014-05-13 05:43:16',1,'/news/thumb/103491372.jpg','搜狐畅游被曝裁员近120人 或在筹谋加强手游','admin','张斯'),(94,'<div>\r\n	<img alt=\"传漾科技完成新一轮3千万美金融资 \" src=\"http://img1.gtimg.com/tech/pics/hv1/59/20/1592/103524959.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<div>\r\n	<p>\r\n		<span style=\"font-size:14px;\">腾讯科技讯（相欣）5月12日消息，互联网广告公司传漾科技今天宣布获得新一轮3000万美元融资，领投方为怡和联创和梦想资本，经纬创投、祥峰投资、御山国际等机构联合追投。传漾科技还表示计划于2015年中正式启动美国IPO计划。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">怡和联创是怡和集团旗下投资基金，曾在美国和亚洲投资了超过140家高科技公司，曾成功投资台积电、展讯、联发科等知名公司。传漾董事长兼CEO王建岗表示，怡和联创将为传漾的未来发展带来宏观战略上的帮助。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">传漾科技本轮融资将主要用于：第一，进一步稳固其在互联网广告技术行业的领先地位；第二，移动和跨屏技术营销产品的推广；第三，可穿戴设备的营销技术研发；第四，与政府相关部门展开的跨行业大数据运算平台；第五，引进在台北传漾良好运营两年的证券化广告交易平台；第六，上市前的资本准备。</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:14px;\">传漾科技成立于2009年，经纬创投进行首轮投资。2011年2月，传漾科技完成第二轮2000万美元融资，投资方为经纬创投、祥峰投资以及海纳亚洲创投。传漾科技公司致力于网络广告技术平台和营销平台创新，基于大数据基础上的跨屏用户行为分析等。</span>\r\n	</p>\r\n</div>','腾讯科技','http://tech.qq.com/a/20140512/021966.htm','2014-05-13 05:44:15',1,'/news/thumb/103524959.jpg','传漾科技宣布完成新一轮3千万美金融资','admin','相欣'),(95,'<div>\r\n	<img alt=\"SEC同意听取“四大”中国所上诉\" src=\"http://img1.gtimg.com/tech/pics/hv1/114/84/1592/103541334.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月12日消息，美国证交会（SEC）近日宣布，它将接受普华永道、德勤，毕马威和安永这四大国际会计师事务所的中国分支机构关于业务暂停的申诉。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今年1月，SEC行政法法官卡梅伦·埃利奥特（Cameron Elliot）作出一项裁决，暂停这几个机构对美国上市公司的审计业务，为期六个月，原因是这几个机构拒绝配合SEC的会计舞弊调查。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这几个机构认为，它们在美国法律和中国法律之间陷入了两难。美国法律要求他们提交监管机构要求的任何文件，而中国法律禁止它们向国外机构提交可能含有国家机密的文件。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">SEC的这项禁令将迫使200多个在美国上市的中国公司寻找新的审计机构，而在中国开展业务的跨国公司也将不得不同样如此。SEC将在今年9月决定是否维持原来的裁决。如果SEC坚持法官的判决，这些公司仍然可以向美国上诉法院提出上诉。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2011年和2012年，在纽约证券交易所上市的100多家中国企业因为会计丑闻而退市或暂停交易。跨境上市失败后的股价急跌造成了超过400亿美元的损失，并沉重打击了投资者情绪，市场进入一个对美国上市中国股票不信任的时代。由于资本枯竭，数十家中国企业逃离美国股市。2012年，在美国上市的中国企业只有两家，而2010年和2011年分别为41家和11家。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年年底，在美国上市的中国公司开始增多。</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">上周宣布，它将在纽约公开上市，并可能创造有史以来规模最大的IPO。（谭思）</span>\r\n</p>','36氪','http://tech.qq.com/a/20140512/032989.htm','2014-05-13 05:45:08',1,'/news/thumb/103541334.jpg','SEC同意听取“四大”中国所上诉','admin','谭思'),(96,'<div>\r\n	<img alt=\"华谊嘉信6.7亿收购好耶在线广告代理业务 \" src=\"http://img1.gtimg.com/tech/pics/hv1/5/128/1592/103552445.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯（相欣）5月12日消息，网络广告公司新好耶将以不多于6.7亿元人民币出售其在线广告代理业务。新好耶集团今天宣布，将向华谊嘉信CEO刘伟、好耶集团管理人员和核心业务人员、第三方融资方组成的收购方出售新好耶集团的在线广告代理业务，作价不高于6.7亿元人民币。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">华谊嘉信今天公告称，公司将以不优于第一步交易的条款和条件向收购方收购上述资产和业务。此外，公司也在筹划收购其他广告行业的优质资产。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据悉，新好耶的其他业务板块将继续独立运营，包括其在中国和美国的广告技术业务等。腾讯科技</span><a target=\"_blank\" href=\"http://tech.qq.com/a/20140307/006918.htm\"><span style=\"font-size:14px;\">今年3月即报道称</span></a><span style=\"font-size:14px;\">，新好耶与华谊嘉信已接近就出售在线广告代理业务达成协议，双方今年初即开始接触谈判。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">华谊嘉信表示，将每周发布一次重大资产重组事项进展情况公告，公司股票不晚于今年6月3日复牌。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">华谊嘉信是A股上市公司，主营线下整合营销。收购新好耶的在线广告代理业务，有助于其线下线上业务的融合。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">新好耶的前身好耶公司创办于1998年，曾是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FMCN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">分众传媒</span></a><span style=\"font-size:14px;\">旗下子公司。2008年分众曾秘密提交好耶上市申请，但受全球金融危机影响夭折。2010年，银湖资本以1.24亿美元从分众传媒够得62%的股份，取得绝对控股权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">新好耶核心高层曾多次变动。2009年，好耶联合创始人、总裁杨炯纬离职，创办与好耶有竞争关系的营销解决方案提供商MediaV；2011年11月，好耶的时任CEO 朱海龙和COO周岱同期离职，而后，前</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">中国区总裁王汉华出任好耶公司CEO。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/041958.htm','2014-05-13 05:51:49',1,'/news/thumb/103552445.jpg','华谊嘉信6.7亿收购好耶在线广告代理业务','admin','相欣'),(97,'<div>\r\n	<img alt=\"科技业下一个暴富金矿：用科技优化能源产业 \" src=\"http://img1.gtimg.com/tech/pics/hv1/181/195/1591/103504681.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月12日消息,从PC互联网到移动互联网，再到可穿戴智能设备以及虚拟现实（增强现实），科技业的热点处于永恒的迁移当中。许多青年才俊，也希望能够在科技行业实现创业创富。美国《福布斯》网站日前发文预测说，科技业的下一个创富金矿，在于和能源业的交叉，即利用新科技提升能源生产、利用的效率。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">实际上，能源一直是和科技行业以及硅谷无法切割的话题。从PayPal创始人马斯克创办特斯拉公司进入电动汽车，到</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)一直不断投资清洁能源，以及斥巨资收购家庭恒温器制造商Nest。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当下，有梦想的年轻人，看准了科技行业的创富能力。几乎每个人都想变成下一个盖茨、乔布斯或是扎克伯格。而从现实看来，下一代的亿万富翁，可能来自科技行业和能源业的交叉领域。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近，麦肯锡公司的一份报告指出，人类社会正在走向一场能源革命。美国花旗银行也指出，我们进入了一个再生能源的新时代。在这个时代，新能源革命，并非来自艰苦的</span><a href=\"http://tech.qq.com/all/twdl.htm\" target=\"_blank\"><span style=\"font-size:14px;\">地理</span></a><span style=\"font-size:14px;\">勘察，而是来自计算机算法。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">能源对于现代社会的重要性，毋庸讳言。过高的能源价格，会让制造业效率降低。肮脏的能源增加了社会的医疗保健成本，导致了治理成本高昂的环境问题。如果说肮脏和稀缺的能源带来巨大的成本，那么，研究丰富和清洁的新能源，也将带来巨大的效益，这就是能源行业前进的方向，也是科技行业可以推动的领域。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在1970年代的能源危机中，人类社会的焦点，放在了能源节约上。我们开始驾驶小排量汽车，降低了空调温度，穿上毛衣，在离开家时记住关灯。当时，应对能源问题的手段不是科技创新，而是个人行为调整。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过这一次能源革命就不一样了。花旗银行报告指出，在能源的产生上，我们有了更高的效率。麦肯锡则指出，我们可以利用新科技，让能源发挥出更大的作用。该份报告的作者甚至指出，未来（提高效率之后）减少能源消耗将成为一个竞争性趋势。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">举例来说，被谷歌斥资32亿美元收购的智能家居设备厂商Nest，虽然生产恒温器设备，但是从长远来说，他们可以将从每家每户采集到的家庭用电数据提供给电力公司，让其提高发电和供电效率，这也将是一种新的收入模式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本月，一家名为Opower的公司在美国股市上市，该公司主要关注能源利用优化，在上市第一天，其股价暴涨了26%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">优化技术也可以帮助能源产生。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/IBM.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">IBM</span></a><span style=\"font-size:14px;\">公司天气相关项目“Deep-Thunder（深雷）”的首席科学家Lloyd-Trenish曾预测，通过预测性的分析技术，可再生能源的利用效率可以提高10%到20%，在某些情况下甚至可以提高50%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在石油能源时代，许多人依靠运气发现了大块油田，从而一夜暴富。但是在新能源时代，创富的基础是人类的聪明才智，而不是运气。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">下一代的太阳能和风能，将依托纳米科技以及计算机辅助设计，而这些技术的背后，是我们开发出性能更强大的处理器芯片的能力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外，新能源产业效率的提升，很大一部分来自于科技行业的进步。比如从2008年以来，制造太阳能电池板的成本，已经下降了80%。麦肯锡的报告指出，通过更高效的利用能源，各行各业每隔几年，可以将运营效率提升50%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外一个例子，是电动汽车的保有量每隔几年就翻翻。来自硅谷的电动汽车明星企业特斯拉，成为科技业和能源业融合的最佳例子。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">《福布斯》文章最后说，在过去40十多年里，能源问题给全世界的经济和政治蒙上了一层阴影，不过伴随着新能源时代和新科技时代的到来，这种局面即将得到改观。（晨曦）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/011657.htm','2014-05-13 05:53:27',1,'/news/thumb/103504681.jpg','科技业下一个暴富金矿：用科技优化能源产业','admin','晨曦'),(98,'<div>\r\n	<img alt=\"人们为何不愿为电视节目频道付费？\" src=\"http://img1.gtimg.com/tech/pics/hv1/18/219/1591/103510638.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">BI中文站 5月12日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">通过付费电视服务，我们现在能够看的电视节目频道越来越多，但是据尼尔森（Nielsen）调查显示，实际上我们看的节目频道数量并没有发生太大变化，跟以前是一样的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">自2009年以来，美国平均每户家庭能够看的电视节目频道增加了60个左右。但是他们实际上看的节目频道数量跟以前是一样的，平均在17个左右。这是一个很重要的问题，因为一天里的时间是固定的，我们的注意力也只能兼顾那么多频道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">这也是人们对电视服务最不满的一个问题。现在，人们每个月购买的电视节目频道数量平均为172个，虽然他们可能根本就没看过那些频道的节目，但却要承担越来越高的服务费。人们希望可以自由选购他们想看的节目频道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">电视行业的业内人士称，当前的经济模式并不支持那一点。对于AMC那样的电视频道，完全是靠着从付费电视服务收入中分成来维持经营，那样它才有足够的资金去制作《广告狂人》、《行尸走肉》等剧作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">当然，从另一方面来说，AMC只有不断推出象《广告狂人》那样的高品质剧作才能吸引到用户。Netflix就是这么做的。它没有频道捆绑销售协议可以依靠，必须奋力争取用户。现在看来，它在这方面做得非常好。（林靖东）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/013860.htm','2014-05-13 05:55:34',1,'/news/thumb/103510638.jpg','人们为何不愿为电视节目频道付费？','admin','林靖东'),(99,'<div style=\"text-align:center;\">\r\n	<img alt=\"余额宝收益率跌破5% 落后银行类宝宝产品\" src=\"http://img1.gtimg.com/tech/pics/hv1/139/7/1592/103521724.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">腾讯科技讯（乐天）5月12日消息，春节以来余额宝等理财产品收益率持续走低。5月11日，余额宝七日年化收益率跌破5%，此前一天，余额宝7日年化收益率5.008%，险守5%。而银行系宝宝产品的收益率则普遍保持在5.5%上下。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">截止5月11日，微信理财通旗下的华夏基金财富宝的7日年化收益率为4.8930%，易方达基金易理财7日年化收益率为4.7030%，汇添富基金全额宝7日年化收益率为4.8480%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NTES.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">网易</span></a><span style=\"font-size:16px;\">理财旗下的现金宝七日年化收益率为4.724%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">百度</span></a><span style=\"font-size:16px;\">金融旗下的百度百发华夏增利货币E七日年化收益率4.740%，仅百度与嘉实基金合作的百赚利滚利仍维持在5%以上，目前为5.519%，但百赚利滚利收益率已较年初时大幅下降，且购买时有限额。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">在余额宝等理财产品收益率持续走低的同时，银行理财产品收益率相对走高，不少银行推出的理财产品预期年化收益率多回升至6%左右，高于余额宝等理财产品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">余额宝等产品收益率持续走低，很重要原因是，自春节以来市场上货币供应量较大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">从外部环境看，余额宝等理财产品正受到政策环境影响，中国人民银行调查统计司司长盛松成日前撰文指出，余额宝等货币市场基金投资的银行存款应受存款准备金管理。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">盛松成称，我国对大型商业银行的存款准备金率是20%，而法定存款准备金利率为1.62%，按此计算，余额宝的年化收益恐还将下降约1个百分点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/RENN.N.htm\" target=\"_blank\"><span style=\"font-size:16px;\">人人</span></a><span style=\"font-size:16px;\">聚财CEO徐建文对腾讯科技表示，余额宝等产品收益率未来一段时间还会走低，到6月底会有阶段性上升，从9月到年末的时候随着银行大规模回笼资金，收益率也会持续上升。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">徐建文说，从最近五道口互联网金融论坛上央行副行长及各级官员表态看，对余额宝等产品的监管在加强，很可能会推出存款准备金制度，余额宝等产品会回归货币基金的本质。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“但即便真按存款准备金率20%计算，余额宝等理财产品的收益率依然比活期高很多。余额宝等理财产品依然有很大的生存空间。”</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/020685.htm','2014-05-13 05:57:10',1,'/news/thumb/103521724.jpg','余额宝收益率跌破5% 落后银行类宝宝产品','admin','乐天'),(100,'<div class=\"mbArticleSharePic \" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"Twitter创始人回忆创业艰辛：梦里为房租发愁\" src=\"http://img1.gtimg.com/tech/pics/hv1/152/95/1592/103544177.jpg\" />\r\n</div>\r\n<p align=\"center\" style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;\">\r\n	<span style=\"font-size:12px;\">Twitter联合创始人比兹-斯通（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	腾讯科技讯 5月12日消息，Twitter联合创始人比兹-斯通（Biz Stone）现在的身价达到了大约2亿美元。但是，他始终忘不了当年租房子的苦日子，常常在梦里为房租愁出一身冷汗。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">为房租犯愁的日子</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	斯通还清楚地记得Twitter成名前的情形。当时，他正在旧金山的一栋小房子里铺设地板，这时候口袋里的电话响了。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	他的良师益友、刚刚担任CEO的埃文-威廉姆斯（Evan Williams）在微博网站Twitter上发布了新的消息：“刚做完按摩，品尝了一杯红酒。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	那是Twitter上市的五年前，还没有进入公众视野。斯通借了一大笔债也只够支付伯克利一栋400平方英尺房子的首付。“那是一个酷热难耐的夏天，我撕开地毯，希望看到漂亮的实木地板。结果，下面的地板破烂不堪，维修也得好多钱。我读到埃文的消息时，不禁笑了起来：我们俩的处境真是太悬殊了。我当时想，尽管我的运气不佳，但是我必须在Twitter更卖力地工作，因为他的消息让我感到很兴奋。我意识到，这个网站也可能也会让我脱贫致富。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	斯通说，埃文的消息让他变得非常渴望成功。“我甚至急切地盼望周一回到办公室。那时候，我负责的所有项目基本上都没有什么好的结果。我甚至开始自嘲自己太倒霉。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	六年后，40岁的斯通拥有了大约2亿美元的身价。这远远超出了他的想象。Twitter网站现在拥有2亿多个用户，他们每天发布5亿条消息。无数人，从奥巴马总统到教皇，都在Twitter上开通了账户。斯通不再为自己家里的地板犯愁了。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“现在，我常常还会做噩梦，梦到自己还在为房租犯愁，醒来时往往一身冷汗。直到过了半晌，我才想起来自己已经能够买下整个街区的楼盘了。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">在<a class=\"a-tips-Article-QQ\" href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\">谷歌</a>(<a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\">微博</a>)的日子</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	作为《时代》杂志的“全球最具影响力的人物”和著名男性时尚杂志GQ的“年度人物”，斯通现在已是最富有创意的科技怪才之一。他的新书《消息灵通人士告诉我的事》（Things A Little Bird Told Me）揭示了他成功的历程。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“我在谷歌总部工作了两年。我是从2003年开始在那儿工作的，那时候互联网泡沫刚刚破灭，谷歌已招满了电脑<a class=\"a-tips-Article-QQ\" href=\"http://tech.qq.com/science.htm\" target=\"_blank\">科学</a>专业的学生。我是一名大学辍学生，只对艺术感兴趣。我现在常常会好奇地想，我是如何走到今天的？谷歌的福利待遇相当不错。他们提供有轻便的自行车、球类、早中晚餐。你甚至还能在那里理发或洗衣服。员工根本就不想离开，当然，这也是谷歌期望的。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	斯通和他的一帮“搞艺术”的朋友，包括威廉姆斯，并不买账。他们经常驾车到市中心，光顾墨西哥玉米煎饼自助餐厅或体育酒吧。“有些谷歌人看我们就像看疯子一样，他们觉得我们外出就餐简直是犯傻。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在上一次互联网泡沫破灭14年之后，斯通现在认为再次出现这种情况的几率微乎其微。“现在的收购价格变得务实多了。在2012年，Instagram的售价为10亿美元；而在14年前，AOL收购时代华纳的价格是1620亿美元。在那个时候，一个域名交易的价格甚至都会高达10亿美元。我想我们现在不会出现泡沫了，因为现在的很多科技公司真的很有价值。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	斯通从小生活在一个富人区。但是，他的家境并不富裕。他上高中的时候，家里的地板总是脏兮兮的。他经常帮助别人剪草坪，或在五金店兼职赚钱，以贴补家用。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	读大学时，他的成绩不错。但中途退了学，在波士顿一家出版机构做起了美术设计。“人们都希望读完大学，然后去找一份图书封面设计的工作。既然我能一步到位找到这样的活儿，那我又为何劳神去读大学呢？”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在1999年，他创办了自己的第一家公司——微博网站Xanga。“但两年后，我就退出了这家公司，然后跑到谷歌去上班。因为我不能忍受我的联合创始人招聘的那些人。我认为他们不符合我们公司的文化。我那时候太没有经验了，根本没有意识到如果留下来努点力，我完全可以打造自己想要的企业文化。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;\">创业岁月</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	斯通说，在谷歌工作后，他的生活总算回到了正规，开始偿还部分债务。但是，在2005年，他的良师益友威廉姆斯辞职创办了音频搜索引擎公司Odeo。于是，他突然必须面对一种艰难的抉择。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“我非常认同埃文提出的创意和概念。我必须做出选择：是继续留在谷歌享受自己安逸的日子，还是随他一起去创业。在与我的妻子李维亚谈了我的想法后，我越发明白了自己的选择。不幸的是，Odeo公司并没有搞起来。埃文和我决定再想想其他的创意，因为我们对它很不满意。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	Twitter就是斯通、威廉姆斯和软件开发商杰克-多西（Jack Dorsey）以及诺拉-格拉斯（Noah Glass）一整天讨论出来的结果。在2006年7月，他们为Odeo公司员工推出了这个基于文字的通讯服务。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“几个月后，我们的注册用户数量达到了5000个。我们还为此庆祝了一番。后来，事情就像滚雪球一样：Twitter上每天发布的消息数量从2007年3月12日的2万条一下子增加到了同年3月13日的6万条。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	斯通表示，Twitter的成功有几个重要的事件起到了很大的推动作用。其一，在2009年6月，美国宇航局在Twitter上宣布了在火星上找到水源的消息。其二，在2009年1月，Twitter用户贾尼斯-克鲁姆斯（Janis Krums）率先发布了美国航空公司飞机在哈德逊河上坠毁的文字和图片。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“这些都是非常重要的时刻。这些发帖者提醒我，Twitter的成功不是因为技术，而且因为很多人在使用它。”\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	在2011年，斯通开始担任Twitter创意总监，专注于开发新的项目和慈善事业。他负责“比兹和李维亚基金会”，致力于与医疗卫生、贫穷和动物福利有关的慈善事业。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	他最新的举措是开发了一款名为Jelly的应用程序。这是一款基于图片的搜索引擎，可让你向值得信赖的朋友寻求答案。\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	“在推出的第一天，我们获得的注册用户数量就已超过了Twitter推出第一年的注册用户数量。我想证明的是，社会联系的真正目的是相互帮助。这就是我看到的未来，尤其是对我的慈善工作来说是如此。全人类团结起来，共同解决我们面临的问题。这是一个美好的梦想。”（乐学）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140512/035944.htm','2014-05-13 05:58:40',1,'/news/thumb/103544177.jpg','Twitter创始人回忆创业艰辛：梦里为房租发愁','admin','乐学'),(101,'<div>\r\n	<img alt=\"扎克伯格捐款1亿美元改善教育 结果打了水漂 \" src=\"http://img1.gtimg.com/tech/pics/hv1/197/197/1593/103635257.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月14日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2010年秋天，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">联合创始人兼CEO马克·扎克伯格（Mark Zuckerberg）在参加奥普拉脱口秀节目时宣布，他将给新泽西州的纽瓦克（Newark）赠送一份慷慨的礼物，这就是“一亿美元”。这笔资金将提供给纽瓦克市市长科里·布克（Cory Booker）和新泽西州州长克里斯·克里斯蒂（Chris Christie），他们三人共同创办了一个教育基金会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这个基金会的目的是将纽瓦克转型成为扎克伯格所说的“优秀教育的全国典型”，这些资金将用于保留优秀教师，创造学生和毕业生取得成功的良好环境。纽瓦克是一个极易滋生犯罪的城市，学校的毕业率只有大约67%。这个城市确实需要帮助，而布克的计划听起来也一片光明。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">《纽约客》（The New Yorker）报道称，从2010年到2012年，“扎克伯格投入的逾2000万美元和相应的资金被支付给各个领域的咨询公司，包括公共关系、人力资源、通信、数据分析，以及教师进修”。很多咨询师每天的收入高达1000美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“所有人都获得了报酬，但这里的人们仍然目不识丁。”美国城市联盟埃塞克斯县分会（Urban League of Essex County）主席维维安·考克斯·弗雷泽（Vivian Cox Fraser）如是说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">时至今天，资金投入了不少，但纽瓦克绝对称不上优秀教育的典型。《纽约客》对此事进行了长篇报道，我们选取了以下一些关键的时间点：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2010年，布克市长发现纽瓦克的教育改革存在资金不足的问题，需要通过慈善捐款来解决问题。慈善捐款与政府拨款不同，不需要对优先项目或支出情况进行公开审核。新泽西州的克里斯蒂州长批准了这项计划，而布克的任务就是寻找捐款人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，在加州的硅谷，扎克伯格（与其他科技界亿万富翁一样）承诺将把他的半数财富捐出，但诚如《纽约客》报道，当时扎克伯格对城市教育或慈善几乎一无所知。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布克和扎克伯格见面后，双方讨论了纽瓦克的未来。布克希望给纽瓦克的教师们丰厚的奖励，因为他们致力于学生教育，没有计较个人的职称或任期。如果教师相互竞争而且奖励丰厚，那么学生就会受益。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">扎克伯格认为，纽瓦克和布克市长就是他的巨额礼物（分五年捐出）的恰当接收人，并同意基于以下两个前提条件捐出1亿美元：一、布克还要另外筹集1亿美元，只要布克筹到一定的资金，扎克伯格就会把相当的资金捐给纽瓦克；二、布克必须用“具有变革精神的领导”取代现有的学校教育负责人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这次改革的真实面貌是这样的：选择表现较差的公立学校并将其关闭，然后转型为特许学校和“主题”高中。但是在扩大特许学校的过程中，不可避免地导致了公立学校不稳定。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在扎克伯格这份大礼公布后的几个月里，布克和克里斯蒂仍然没有找到明星级的学校管理者，也没有制定出改革计划。扎克伯格对此深感担忧，他不断敦促布克物色管理者，甚至给布克寄了一张明信片，上面写着Facebook公司园区里随处可见的标语：“完成比完美更重要”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不久之后，布克就任命卡米·安德森（Cami Anderson）担任了这一职位。她实行了一些帮助学生和改善学校的举措，但遇到了很多障碍，例如不少学生把家里遇到的问题带到了教室里。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">安德森希望给学校提供更多支持，在情感和社会层面帮助学生，但是纽瓦克在平均每名学生身上的开支已经超过了全国大多数地区，但几乎没有哪一笔钱用到了真正需要帮助的孩子们身上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">新的协议签定了，资金仍在快速流出，整个城市却囊中羞涩。但是在关于资金去向和纽瓦克学校未来的采访中，受访者仍然是一如既往的积极乐观，只强调了巨额资金捐款的好的方面。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">安德森又提出了一个名为“同一个纽瓦克”（One Newark）的新计划，听起来它可以奏效：家庭可以选择将孩子送到哪所特许学校或公立学校，低收入家庭的孩子可以优先选择，有特殊需求的孩子也可以优先选择。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一切听起来很美好，但是家长和老师发现，这些措施都是一纸空谈，解决方法并没有真正研究出炉，计划也没有制定完善，交通等问题根本没有涉及，所有承诺的事情没有取得任何成效。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据《纽约客》的报道，尽管已经投入了成百上千万美元，安德森、布克、扎克伯格和克里斯蒂还没有就该地区到底有多少钱、资金流向了哪里、学生得到了什么等问题与纽瓦克的人们进行认真公开的探讨。（小贝 编译）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140514/001539.htm','2014-05-14 05:56:44',1,'/news/thumb/103635257.jpg','扎克伯格捐款1亿美元改善教育 结果打了水漂','admin','腾讯科技'),(102,'<div>\r\n	<img alt=\"360最新股权曝光：周鸿祎持股17%齐向东8.9%\" src=\"http://img1.gtimg.com/tech/pics/hv1/130/190/1593/103633405.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月13日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/QIHU.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">奇虎</span></a><span style=\"font-size:14px;\">360日前向美国SEC提交的文件披露360公司最新持股情况，截止到2013年12月底，360董事长兼CEO周鸿祎(</span><a href=\"http://t.qq.com/zhouhongyi#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)持股17%，360总裁</span><a href=\"http://datalib.tech.qq.com/people/82/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">齐向东</span></a><span style=\"font-size:14px;\">持股为8.9%。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"360最新股权曝光：周鸿祎持股17%齐向东8.9%\" src=\"http://img1.gtimg.com/tech/pics/hv1/127/192/1593/103633912.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">周鸿祎一共持有32,115,869股360公司股票，主要通过旗下公司Global Village持有，其中，周鸿祎个人持有323,679股360公司A类普通股，通过Global Village持有51,723股A类普通股，持有900,001股以ADS形式的A类普通股，持有30,840,466股B类普通股。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">齐向东一共持有16,808,109股360公司股票，主要通过旗下公司Young Vision持有，其中，齐向东个人持有182,304股A类普通股，通过Young Vision持有802,461股A类普通股，持有15,823,344股B类普通股。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截止到2013年12月31日，360有188,890,921股普通股，包括134,123,218股A类普通股，54,767,703股B类普通股。一股A类普通股有一张投票权，一股B类普通股有5张投票权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以此计算，周鸿祎个人拥有360公司39%的投票权，齐向东拥有20.4%的投票权，周鸿祎与齐向东联合起来拥有近60%的投票权，可牢牢掌控住360公司的发展走向。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当前，奇虎360投资人红杉中国合伙人沈南鹏持股比例为3.1%，360高管石晓红持股为1.7%，360高级副总裁陈杰和余光东均进入股东行列，但未披露持股情况。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">360在2011年5月上市，上市前周鸿祎为持有21.5%股份，齐向东持12.43%股份，沈南鹏持股9.48%，鼎晖投资合伙人王功权持7.05%。石晓红持4.37%，如今均持股降低。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有意思的是，当年360高管，现猎豹移动CEO傅盛(</span><a href=\"http://t.qq.com/fusheng#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)日前带领猎豹移动成长在美国上市，在IPO前，傅盛持有猎豹217,820,000股普通股，持股比例17.0%，与周鸿祎目前持股相当。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140513/040563.htm','2014-05-14 05:58:20',1,'/news/thumb/103633405.jpg','360最新股权曝光：周鸿祎持股17%齐向东8.9%','admin','雷建平'),(103,'<div>\r\n	<img alt=\"阿里巴巴重拳打击假冒商品 为IPO铺路\" src=\"http://img1.gtimg.com/tech/pics/hv1/102/187/1593/103632612.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月13日消息，路透社周二报道称，由于即将赴美IPO(首次公开招股)，</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">目前正采取强措施打击其电子商务平台上的假冒商品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业内人士称，当前阿里巴巴对盗版和假冒商品制定的规范标准甚至高于</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">eBay</span></a><span style=\"font-size:14px;\">的管理标准。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴在上周提交给美国证券交易委员会的IPO文件中称，外界对阿里巴巴电子商务平台充满假冒商品的印象将影响公司赢得客户、投资和和美国零售合作伙伴的能力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近几年，阿里巴巴开始采取措施来打击假冒商品。例如，美国Innovative Watersports公司CEO爱德华多·德·阿科斯(Eduardo De Arkos)去年夏季在阿里巴巴的电子商务平台上偶然发现一款假冒自己公司所生产的漂浮池玩具，在接触阿里巴巴的两天之后，该款产品就被下架。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴对假冒商品的强势反应与几年前形成鲜明对比。2011年，阿里巴巴旗下淘宝网曾因侵犯知识产权而被美国美国贸易代表办公室(USTR)列入年度“恶名市场”(Notorious Markets)。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">长路漫漫</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管如此，阿里巴巴要想说服世界其电子商务平台并不是盗版和假冒商品集散地还有很长一段路要走。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据美国政府的一份报告显示，2013财年美国海关及边境保护局(U.S.CBP)查获的侵权商品93%(基于商品价值)来自中国内地和香港。业内人士称，这阻止了一些美国零售商在淘宝和天猫上开店。为解决该问题，阿里巴巴将与亚马逊竞争对手ShopRunner合作，面向中国消费者销售来自100多家美国零售商的商品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴在IPO文件中也承认，销售假冒商品可能使阿里巴巴招致诉讼。这一问题eBay和亚马逊也曾遭遇过。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不法商家的伎俩</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">让阿里巴巴更头痛的是，商家以各种手段兜售其假冒商品。他们使用微博和移动消息应用等渠道与潜在买家沟通，安排付款和发货事宜，让阿里巴巴很难追踪。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位在淘宝网上销售假冒奢侈品的店主称：“我的店铺里有各种名包，香奈儿(Chanel)、 迪奥(Dior)和古驰(Gucci)，应有尽有。路易威登(Louis Vuitton)钱包200元(约合32美元)拿货，300元卖。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但这位店主称：“现在淘宝每年都在加大打击假冒商品力度，去年最为明显，听说是要IPO。”这位店主还称，如果阿里巴巴将其店铺关闭，他会用好友或亲戚的信息再重新注册一个账号。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">加大打击力度</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴每年投入逾1亿元人民币打击假冒商品。阿里巴巴今年2月在提交给世界知识产权组织(以下简称“WIPO”)的文件中称，在过去的一年中，阿里巴巴删除了超过1亿个销售侵权产品的超级链接。WIPO数据显示，截至2013年，淘宝网上拥有3.6万个登记的版权持有人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">相比之下，据2010年美国法庭的一份庭审文件显示，eBay每年在“消费者保护计划”方面的投资为2000万美元，主要用来补偿从eBay网站上买到假冒商品的用户。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同样，亚马逊也面临着类似问题，因为亚马逊也依赖第三方销售。按营收计算，第三方销售营收占到了亚马逊总营收的1/4。截至2012年，亚马逊拥有100多名员工从事“风险调查”，包括检查假冒商品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于亚马逊而言，打击假冒商品既能降低被起诉的风险，也能吸引更多海外客户和投资者的关注。风险咨询公司Control Risks大中华区及北亚市场董事总经理肯特·克德尔(Kent Kedl)称：“在该行业，声誉就是一切。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">克德尔说：“每家企业都试图努力打造自己的品牌，如果其品牌是保护知识产权的代名词，就会提升其品牌和整个企业的价值。”(谭燃)</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140513/040211.htm','2014-05-14 05:59:15',1,'/news/thumb/103632612.jpg','阿里巴巴重拳打击假冒商品 为IPO铺路','admin','谭燃'),(104,'<div>\r\n	<img alt=\"隔夜中概股涨跌互现 猎豹移动再度跌破发行价\" src=\"http://img1.gtimg.com/tech/pics/hv1/9/206/1593/103637364.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯科技 金铎 5月14日报道</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">4月份美国零售销售的增长速度大幅放缓。同时，美国劳工部公布，4月份经季节调整后的美国进口货物价格环比下降0.4%。美国股市周二收盘涨跌互现，道指和标普500指数再创历史新高，标普指数在盘中首次突破1900点。中概股多数下滑，猎豹移动大跌13.72%。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">猎豹移动今日收报12.51美元，上市交易第4个交易日，再度跌破发行价。猎豹移动上周四正式登陆美国纽交所，交易首日收报14.10美元，较发行价14美元上涨0.71%。上市当日该股股价最高上触16.43美元，最低下探13.95美元。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其它活跃个股：汽车之家跌8.68%，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NQ.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">网秦</span></a><span style=\"font-size:14px;\">跌7.84%；</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/JRJC.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">金融界</span></a><span style=\"font-size:14px;\">涨13.43%。中国概念股周二收盘行情如下：</span>\r\n</p>\r\n<p>\r\n	<img alt=\"隔夜中概股涨跌互现 猎豹移动再度跌破发行价\" 携程网涨9.25%?=\"\" 艺龙跌6.67%?=\"\" 搜房网大涨10.62%?=\"\" 无锡尚德暴跌23.85%?=\"\" 四支个股跌幅超10%?=\"\" 麦考林大涨22.82%?=\"\" 中国手游大涨16.32%?=\"\" src=\"http://img1.gtimg.com/tech/pics/hv1/50/54/1433/93194645.jpg\">\r\n</p>\r\n<div>\r\n	<img alt=\"隔夜中概股涨跌互现 猎豹移动再度跌破发行价\" src=\"http://img1.gtimg.com/tech/pics/hv1/80/206/1593/103637435.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"隔夜中概股涨跌互现 猎豹移动再度跌破发行价\" src=\"http://img1.gtimg.com/tech/pics/hv1/42/206/1593/103637397.jpg\" /> \r\n</div>\r\n<div>\r\n	<img alt=\"隔夜中概股涨跌互现 猎豹移动再度跌破发行价\" src=\"http://img1.gtimg.com/tech/pics/hv1/43/206/1593/103637398.jpg\" /> \r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">以上交易价格单位为美元；市值一列中，B代表10亿美元，M代表100万美元，K代表1000美元。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140514/004003.htm','2014-05-14 06:01:42',1,'/news/thumb/103637364.jpg','隔夜中概股涨跌互现 猎豹移动再度跌破发行价','admin','金铎'),(105,'<p>\r\n	<img src=\"/upload/image/20140514/20140514063914_262.jpeg\" alt=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">看到这么偏激的题目以及如此悲伤的配图，想来大多读者的第一反应都是，“这只氪星人是不是被雾霾逼疯了？”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">因此我必须自我辩白一下，虽然我的鼻炎已被北京的雾霾逼得走投无路，但神志还是正常的。这个标题严谨客观的表达是，“我个人认为，在现有的科技水平下，对中国北方城市的居民来说，大多空气净化器都是纸老虎，一切桌面级空气净化器都是耍流氓。”至于为什么，听我细细道来。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我先说为何大多数空气净化器都是纸老虎。随意在一个电商平台搜索”空气净化器“，返回的结果无非是夏普，松下，3M 那么几个品牌。简单的来说，他们大多来自美国和日本。诚然，这是两个科技大国，但为何我要说他们大多是纸老虎呢？很简单，你哪只眼看到过日本和美国的雾霾？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上，美国和日本的空气净化器设计的初衷是防止花粉过敏和二手烟，那么这便会基于一个假设，室外的空气是干净的。但事实上我们知道，我们窗外的空气哪里干净。并且，雾霾是由固体小颗粒和小液滴组成，那显而易见的事实便是窗外的空气密度比屋内大，所以窗外空气会向屋内扩散，这对空气净化器又是一个挑战。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，有人会说日系和美系的空气净化器也可以针对中国的情况做出调整。但事实上，这样的调整需要在涡轮设计，气室设计，样式设计等多方面进行，而我目前还没有看到相关企业在这方面的努力。当然，也有可能存在这样的净化器，但知名度实在太低，让我通过各种渠道都无法找到，或者价格实在太高，让连查看的勇气都没有。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">那接下来我们谈谈为何“一切桌面级空气净化器都是耍流氓”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前全国糟糕的空气质量使得许多小型创业团队看到“桌面级智能空气净化器”这一概念的可行性，并纷纷涌入这一领域。基本上它们都具备三个特点：一是小型，能够放在桌面上，并”保证人体附近的空气质量“；二是多层吸附，一般有 3 层滤网吸附不同悬浮微粒和有害气体；三是自带空气质量检测器，并连接云端，利用”大数据“智能学习和预测空气质量，在空气质量变差时自动开启。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">且不吐槽”大数据“为何能告诉我们哪天雾霾，什么时候有人在房间里吸烟这些影响空气质量的因素，桌面级的空气质量净化器大多基于”维持人体附近的空气质量在一个较好的水平“这一概念便值得深思。我们可以稍微设想一下：目前桌面级的空气净化器采用的都是被动吸附式，也就是让空气通过多层滤网，然后将新空气从出气口中喷出这一方式来净化空气。即便不考虑空气喷出所造成的涡流会让这”两种“空气迅速混合，考虑一下气体的布朗运动和气体扩散定律，我们也可以知道两种”空气“因为密度不同所造成了压强差会让他们迅速混合。”人体周围的空气“是无法在这种环境下独成一片净土的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Okay，那是不是桌面级空气净化器能够净化一个房间的空气就可以了呢？是的，不过我们稍微计算一下：假设我坐在一个长 10 米，宽 10 米，高 3 米的办公室里，我所处的房间会容纳 300 立方米的空气。如果桌面级空气净化器的进气口是 100 平方厘米，那么假设半小时内这个房间内的所有空气都会通过一遍空气净化器，则进气口的风速需要达到 60 公里每小时。这是在开汽车么？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，我们可以减小房间的容积，增加进风口面积，让风速达到还能接受的 1 公里每小时（前提是在非常狭小的房间里）。但问题又来了，一个桌面级的小型涡轮提供这样的风速会发出多大的声响？噪音的大小取决于涡轮和风室的设计，没有一个通用的公式可以表达，但从个人经验来说，我见过的小型空气净化器噪音都非常大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">因此，我们可以看到空气净化器并非许多人以为的买些滤网，装个个风扇，放个马达，在外面套个壳这么简单。真正想做空气净化器其实有很高的技术门槛。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">总的来说，目前市面上的空气净化器比较大问题还是技术瓶颈：何如重新设计风室和涡轮让出风速度和降噪达到平衡？在北京这样雾霾严重的城市，每小时多少升的换气量才是合适的？在出现空气对流时该怎样解决？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，目前并非只有被动吸附式这一种空气质量解决方案，然而其他现存的空气质量方案普遍存在产生对人体有害的臭氧，只能净化特定的固体颗粒或气体等问题。这也让我怀疑最近扎堆发布的空气质量检测设备和小型净化器是否都只会是昙花一现的泡沫？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">那是否说空气净化器都不靠谱？并非如此。我的观点是，靠谱的空气净化器并不是没有，或者可能存在，只是需要考虑到现实情况，静下心来做研发，而不是一味的炒作概念，趁民众对空气质量关注升温的机会大捞一把。在这方面，国内的硬件制造业有足够的优势，如果真正愿意做，我相信适合中国空气状况的空气净化器应该会是中国团队做出来的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">因此，对于立志做空气净化器的初创团队，我只能说，“努力做研发，且行却珍惜。”</span>\r\n</p>','36氪','http://www.36kr.com/p/211932.html','2014-05-14 06:54:50',1,'/news/thumb/2014414/1400021840897.jpeg','大多空气净化器都是纸老虎，一切桌面级空气净化器都是耍流氓','admin','暮山'),(106,'<div>\r\n	<img alt=\"谷歌的噩梦！数据保护的胜利究竟是好是坏？\" src=\"http://img1.gtimg.com/tech/pics/hv1/220/218/1593/103640635.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月14日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一家欧盟法庭周二作出判决称，欧洲用户可要求</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)从其互联网搜索结果中删除敏感信息。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据欧盟法院（European Union Court of Justice）作出的这项判决，人们应当拥有“被忘记的权利”，包括可以删除遗留在互联网当中的数字痕迹等。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">欧洲法院的这一判决，源自于一位西班牙用户向西班牙数据保护机构的控诉，原因是他的二手房拍卖通知出现在了谷歌搜索结果当中，侵犯了他的隐私权。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据法庭文件显示，这项诉讼最早是由一位名叫马里奥·考斯特加·冈萨雷斯（Mario Costeja Gonzalez）的用户发起的，该用户在2010年针对谷歌、谷歌西班牙部门以及一家西班牙大型报纸运营商提出起诉，该报纸曾在1998年刊登了有关上述拍卖活动的声明。此案仅仅是西班牙发生的180宗同类案件中的一宗，原告均称其希望谷歌删除在网络中的个人信息。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">判决公布后，欧盟委员会负责基本人权和公民权利问题的委员维维安·雷丁（Viviane Reding）发布</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">帖子称，这项判决对于个人数据的保护而言是一场胜利。“数据的所有权是归属于个人的，而并非归属于（谷歌）公司。”她写道。“除非（谷歌）有很好的理由来保留这些数据，否则个人用户应当拥有要求删除数据的合法权利。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌的“噩梦”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌的一名发言人则通过电子邮件声明的方式对此作出回应称：“整体而言，这项判决对搜索引擎和在线出版商来说令人感到失望。该判决与欧盟法院总法律顾问的观点以及他所警告的后果大相径庭，这令我们感到惊讶。我们现在需要一些时间来对其影响进行分析。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">印第安那大学毛瑞尔法学院的法律教授大卫·费德勒（David P. Fidler）指出，对谷歌来说，欧盟法院的这项判决并不只是意味着一种简单的政策转变而已，同时还意味着谷歌将不得不彻底改变其检索互联网的方式。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">费德勒指出，如果只是西班牙的一桩个案就能在欧盟法院的判决中扮演如此重要的角色，那么可以想见未来谷歌将会面临数量庞大的相关诉求，从而被迫删除更多的信息。“对谷歌来说，这可能是一个史诗般宏大的噩梦。”他说道。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">是好事还是坏事？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">圣克拉拉大学的互联网道德项目负责人Irina Raicu则指出，在判断这项裁决对于互联网来说是否具有正面意义的问题上，目前还无法给出直截了当的答案。“对互联网整体而言，很难说这到底是好事还是坏事。”她说道。“很明显，这项判决会对一些人造成影响，而对其他一些人则不会。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Raicu还补充道，以往抹掉数字痕迹一事并未引起互联网用户的重视，但在搜索引擎占据了显著地位以后则被提上了议程。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">现在就对这项裁决将对谷歌欧洲业务造成怎样的影响还为时过早，但费德勒强调指出，该判决可能将会带来负面影响。如果谷歌不得不从其搜索结果中删除敏感信息，那么这家公司未来可能会被迫投入更多资源，才能维持其搜索引擎在欧洲市场上的地位，“其后果可能是非常代价高昂的，而且会给谷歌带来极其沉重的行政负担。”（瑞雪 编译）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140514/005881.htm','2014-05-14 09:27:39',0,'/news/thumb/2014414/1400030859629.jpg','谷歌的噩梦！数据保护的胜利究竟是好是坏？','admin','腾讯科技'),(107,'<div>\r\n	<img alt=\"传Coursera联合创始人将加盟百度负责脑计划\" src=\"http://img1.gtimg.com/tech/pics/hv1/49/149/1594/103687894.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月14日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技今日获悉，国际机器学习顶级科学家、在线教育平台Coursera联合创始人Andrew ng（华裔，中文名：吴恩达）将加盟</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">，负责百度脑计划。百度官方目前尚未证实上述消息。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">资料显示，Andrew Ng是斯坦福大学计算机科学系和电子工程系副教授，人工智能实验室主任。Ng是人工智能和机器学习领域国际上最权威的学者之一。Andrew Ng的研究领域包括机器学习和人工智能，研究重点是深度学习（Deep Learning）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据腾讯科技分析，Ng的加盟应该与百度近期发布的大数据引擎计划相关。百度CEO</span><a href=\"http://datalib.tech.qq.com/people/3/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">李彦宏</span></a><span style=\"font-size:14px;\">曾特别提及百度“大数据引擎”包括开放云、数据工厂、百度大脑构成。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">李彦宏说，“百度大脑（Baidu Brain）”是基于百度深度学习研究院成果，百度大脑融合深度学习算法、数据建模、大规模GPU并行化平台等技术，拥有200亿个参数，构造起深度神经网络，将在政府、NGO、制造、金融、零售、教育等领域开展项目合作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“百度大脑”计划被视为决定百度未来5到10年决定性战略计划之一，一向以“技术男”自居的李彦宏对此非常看重。百度对深度学习布局一年有余。2013年初，百度成立深度学习研究院IDL（Institute of Deep Learning），李彦宏亲自任院长一职。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">前资深科学家徐伟，美国新泽西州立大学统计学教授张潼，异构计算专家、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMD.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">AMD</span></a><span style=\"font-size:14px;\">异构系统前首席软件架构师吴韧，“千人计划”国家特聘专家余凯等专家相继加盟。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">百度在美国硅谷设立的IDL，位于加利福尼亚州库比蒂诺附近，距离山景市</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)总部仅6英里，在当地被称为“谷歌后花园”。此番Andrew Ng加盟也是这一战略的延续。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另据了解，百度内部还开设“少帅计划”揽人才，面向全球招募9名30岁以下的人工智能领域青年精英，提供T9、T10职级，年薪百万元起步。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最新一位加入百度少帅计划学者是李沐，在大规模机器学习和优化算法等方面理论精通，有丰富工业界经验。李沐现在卡内基梅隆大学在职读博士，师从机器学习专家Alex Smola。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在百度招揽国际高端人才同时，百度内部也在遭遇人才流失阵痛。腾讯科技获悉，百度云首席架构师林仕鼎、网页搜索产品市场部产品架构师田晓萌等相继离职。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其中，林仕鼎2007年10月加入百度，2010年9月，任基础架构部主任架构师。2011年10月，任百度云首席架构师。2012年10月起全面负责百度云的技术、产品与生态系统。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140514/034873.htm','2014-05-15 04:37:30',1,'/news/thumb/2014415/1400099850015.jpg','传Coursera联合创始人将加盟百度负责脑计划','admin','雷建平'),(108,'<div>\r\n	<img alt=\"三星就半导体工厂致员工死亡事件正式道歉\" src=\"http://img1.gtimg.com/tech/pics/hv1/100/223/1594/103706815.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月14日消息，韩联社(Yonhap News Agency)今日报道称，</span><a href=\"http://t.qq.com/samsungelectronicbj#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">三星电子</span></a><span style=\"font-size:14px;\">周三就半导体工厂导致工人患白血病和死亡事件正式道歉，并承诺进行赔偿。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星电子CEO权五铉(Oh-Hyun Kwon)在一份声明中称：“我们工厂几名工人患上了白血病和其他不治之症，并导致一些人死亡。我们应该早点解决该问题。对于未能及时解决该问题，我们深感痛心，在此对受害者及其家属表示深深的歉意。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">权五铉说：“我们希望以最真诚、最认真的态度解决该问题。我们会对受害者及其家属做出适当的赔偿。”权五铉还表示，在争得受害者及其家属同意的情况下，三星将组建一个第三方小组，以公正、可观地态度解决该问题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2007年，三星韩国京畿道器兴(Giheung)半导体工厂员工黄尤美(Hwang Yu-mi)因患白血病死亡。随后，工人家属和三星针对死亡原因和责任争执不下。受害者家属认为，死亡是由于工厂致命化学物质暴露所引起。（谭燃）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140514/045252.htm','2014-05-15 04:40:44',1,'/news/thumb/2014415/1400100044448.jpg','三星就半导体工厂致员工死亡事件正式道歉','admin','谭燃'),(109,'<div>\r\n	<img alt=\"IBM CEO罗睿兰：预计硬件业务在2015年实现增长\" src=\"http://img1.gtimg.com/tech/pics/hv1/148/2/1595/103715533.jpeg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月15日消息，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/IBM.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">IBM</span></a><span style=\"font-size:14px;\">首席执行官罗睿兰（Ginni Rometty）周三表示，尽管公司硬件和在中国等新兴市场的销售陷入困境，但是她仍对完成2015年的利润目标充满信心。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">罗睿兰周三在纽约出席分析师与投资人共同参加的会议时表示，IBM当前的五年财务计划所遇到的困难，堪比上一个四年财务计划所遇到的困难。当时，面对着全球性的金融危机，IBM依然实现了净利润增长预期。罗睿兰表示，“我认为这两段时期均有着相似之处，原因是都发生了不可预测的事情。这一次，我们没有料到成长市场和硬件业务发生的变化，因为总是会有意想不到的事情出现。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">IBM当前正在应对通过云计算网络存储数据和软件的转型，因为这一转型限制了客户对服务器和大型主机的需求。虽然IBM已把注意力投入到了云服务和数据分析领域，但是这些努力还不足以让公司的营收恢复增长。IBM把云计算视为公司增长的最大机遇之一。上一季度，IBM的云计算营收增幅达到50%以上，预计全年的云计算业务营收将达到约23亿美元。不过对于IBM每年1000亿美元的营收而言，这部分营收仍显得微不足道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">罗睿兰周三重申了IBM在今年实现每股调整后收益18美元，以及明年实现每股调整后收益20美元的预期。罗睿兰在2012年出任IBM首席执行官，上述预期是上任首席执行官彭明盛（Sam Palmisano）制定的计划。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不到一个月之前，IBM刚发布了该公司第一季度财报。财报显示，受硬件需求锐减的影响，该公司当季营收创出五年来的最低水平。IBM周三表示，公司在拉美、中东和非洲市场的增长依旧非常强劲，不过中国政府的改革导致来自国有客户的营收出现了下滑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">IBM首席财务官马丁·施罗特（Martin Schroeter）周三表示，通过进一步“更新”硬件和加大研发领域的投入，IBM的硬件业务将实现稳定。他说，“坦白的讲，我们的软件、服务等业务增长非常强劲，但是硬件业务正面临着挑战。我们将稳定硬件业务的基础，我相信这一切能够在今年发生。”施罗特重申，IBM明年的每股收益将达到至少20美元。他预计向更高价值服务的转型，将给公司带来每股3.25美元的收益；股票回购则将让每股收益增加2美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">IBM股价周三在纽交所常规交易中下跌3.47美元，跌幅为1.81%，报收于188.72美元。按照本周二的收盘价计算，IBM股价在今年的累计涨幅为2.5%，与标准普尔500指数同期2.7%的涨幅基本一致。（明轩）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/006387.htm','2014-05-15 15:47:43',1,'/news/thumb/2014415/1400140063862.jpeg','IBM CEO罗睿兰：预计硬件业务在2015年实现增长','admin','明轩'),(110,'<div>\r\n	<img alt=\"摩根士丹利重申腾讯增持评级 目标价679港币\" src=\"http://img1.gtimg.com/tech/pics/hv1/28/2/1595/103715413.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯科技讯5月15日消息，摩根士丹利今天公布研究报告，重申腾讯（香港证券交易所股票代码：0700）的股票评级为“增持”（Overweight），目标价679港币。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">以下是报告内容摘要：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2014年第一季度：移动商业化取得成功</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">我们重申腾讯股票的“增持”评级，目标价为679港币。在中国互联网行业中，腾讯仍是我们所持有的核心股票，其游戏的商业化程度正在提高，投资策略也有所改善，这可能会令其运营杠杆和利润率在2014年下半年中得到提升。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">——营收旺盛增长：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯第一季度不包含电子商务业务在内的销售额比去年同期增长36%，主要由于游戏业务强劲增长（同比增幅为39%）。第一季度的移动游戏销售额比上一季度增长200%，超过了人民币18亿元，在总游戏销售额中所占比例为17%（上一季度为7%）。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">——用户基础健康扩张：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在第一季度中，微信和海外版微信的月度活跃用户总数为3.96亿人，比上一季度增长12%，比去年同期增长87%。该季度腾讯智能手机游戏的每日独立活跃用户人数达到了1.2亿人以上，比上一季度增长20%；付费游戏玩家的人数则比上一季度增加了一倍。腾讯ACG（动画、漫画、游戏的总称）和大型多人在线游戏的最高同时在线用户人数分别为1850万人和480万人，比去年同期分别增长15%和9%。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">——近期利润率表现疲弱，但预计将在年底前有所提高：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">不计入一次性的处置收入，腾讯第一季度运营利润率为28%，与上一季度持平，但比去年同期下降9个百分点，主要由于在O2O（线下到线上）计划（如嘀嘀打车服务的补贴等）方面的投资有所增长，以及由于在移动产品（如浏览器和安全产品等）营销方面的投资有所增长。但我们预计到今年年底时，腾讯的利润率将会有所提高：移动游戏商业化程度增强，这将令运营杠杆得到提升，再加上投资策略的表现预计将有所改善，从而允许腾讯转向“轻资产”模式。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯旗下电子商务业务在2013年带来了人民币7.5亿元到人民币8亿元的净亏损，在其净利润中所占比例为5%。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">——重申“增持”评级：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">按2015年的预期每股收益计算，腾讯的市盈率为27倍，其未来三年的每股收益复合年增长率很可能将在25%到30%之间。我们认为，富裕的现金状况（腾讯所持净现金总额达60亿美元）可能对腾讯股价形成支撑，原因是其可能推出股票回购计划。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/006606.htm','2014-05-15 15:51:52',1,'/news/thumb/2014415/1400140312504.jpg','摩根士丹利重申腾讯增持评级 目标价679港币','admin','瑞雪'),(111,'<div>\r\n	<img alt=\"百思买中国总裁周猛：回归零售本质 实体店走出低谷\" src=\"http://img1.gtimg.com/tech/pics/hv1/210/7/1595/103716870.jpeg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 范蓉 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">上任一年时间，百思买中国区总裁、五星电器CEO周猛实现了业绩表现的逆袭。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最新业绩显示，五星电器不仅2013年扭亏为赢，今年第一季度经营利润也实现了30%以上的上涨，这在百思买海外市场中名列前茅。目前，百思买在中国主要依托五星电器开展业务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5月13日，周猛接受腾讯科技独家采访时披露，五星电器在中国的策略仍然是以提升门店利润为主，短期内不会大规模扩充门店数量。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">五星电器对线上业务拓展比较谨慎。去年年底，五星电器开通线上商城，目前主要经营手机、小家电、数码等小型电子产品，并与顺丰合作进行全国配送。但周猛认为，线上业务短期内难以盈利，O2O才是零售商的未来，因此五星电器未来希望以开放的心态寻求与第三方平台进行合作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">低迷期上任的CEO</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2013年5月，周猛上任百思买中国区总裁、五星电器CEO，当时五星电器正处于百思买退出中国后的低迷期，业绩下滑，士气低落，华尔街对百思买的前景预测也都持谨慎态度。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">摆在周猛眼前的一个事实是，苏宁国美(</span><a href=\"http://t.qq.com/GOME1987#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)早已完成全国布局，店面均超过千家，而五星电器的店面仅200多家，并主要集中在江苏、安徽两大省份。对于一家区域性的连锁企业，在家电3C零售业态整体增长趋缓，市场需求下滑的处境中，提升业绩并非易事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但周猛并不认为零售业态已进入“夕阳”期。“实体店的精细化经营与电商拓展是不冲突的主题，应该同步发展，相互融合，而不要厚此薄彼形成对立。当下实体店面仍有充分的空间有待挖掘。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">周猛认为，家电产品开始向‘智能’化升级，未来几年一些新的家电形态的产品将迎来二次购买潮，智能化的产品更离不开线下的体验，只要店面在环境、需求符合人们购买预期，它就有持续的生命力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为了让门店更加高效、扁平，周猛将五星电器的组织架构从四级（总部—大区—分部—门店）减少为三级（总部—分部—门店），并成立了战略与重点项目推进办公室，直接归其管理。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他还推进了以“增销售，提利润，降费用”为核心的“重塑蓝色”战略，回归零售本质。五星电器去年门店数减少10%，从211家缩减至现在的190家。通过开展会员制、3C店旗舰店改革、自有品牌拓展、新品类引进等方式，五星电器也实现了利润的提升。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">改造店面、引入新品类</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">店面改造是五星电器改革的核心之一。从去年开始，相比苏宁对旗舰店从电子产品到家居、百货的拓展改造。五星采取以手机为主的3C店改造项目，2012年引入了百思买旗下手机专营品牌百思买移动，并将其经验运用改造了66家五星门店。通过邀请游戏、旅行摄影、COSPLAY、运动等草根达人到店吸引年轻用户。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">百思买移动沿袭了百思买美国的无偏见购物特色，50%以上员工是自有员工，他们能根据消费者的话费，手机使用用途，帮助消费者选购手机/运营商资费套餐，提供一站式服务。售后方面还有远程服务支持和有偿延保服务。而这种模式现在已经推广到五星连锁的手机销售模式中。可以在手机硬件利润偏低的情况下通过运营商补贴/配件/服务等赚取利润。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">周猛向腾讯科技透露，百思买移动目前对五星电器整体盈利提升的贡献率达到50%以上。根据Gfk对五星所在经营区域的零售市场监测数据（不含线上），2013年下半年整体手机市场的销售额同比增长为11.99%，五星为19.09%；2014年一季度，整体手机市场同比下降-17.1%，五星增长了8%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">五星电器的另一改革是强调面向年轻群体开发新品类。五星在已有品类中开拓如Beats耳机、韩国惠人原汁机、各种可穿戴设备等高端进口小电，以及开发自有品牌、定制包销机型提升经营利润；此外，五星电器专门成立了新产品拓展部门，重点开拓游戏、健康医疗、居家、运动四大类。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">周猛看来，实体零售商的生机在于回归零售本质，即价格、服务、体验，包括创新。“不是空间没了，而是要不断挖掘新的市场空间。”</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/007345.htm','2014-05-15 15:58:27',1,'/news/thumb/2014415/1400140707930.jpeg','百思买中国总裁周猛：回归零售本质 实体店走出低谷','admin','范蓉'),(112,'<div>\r\n	<img alt=\"扎克伯格遭开发商起诉 未按承诺介绍生意\" src=\"http://img1.gtimg.com/tech/pics/hv1/156/48/1595/103727271.jpeg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年底至2013年，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">创始人马克·扎克伯格(Mark Zuckerberg)曾斥资4300万美元买下了旧金山帕拉奥图(Palo Alto)四户邻居的房子，旨在抵制开发商的开发计划，继续保持一个清净的居住环境。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但近日，当地房地产开发商米希亚·沃斯凯里奇安(Mircea Voskerician)一纸诉状将扎克伯格告上法庭，称扎克伯格没有履行当初的承诺，为沃斯凯里奇安介绍其它名商富贾来购房。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">沃斯凯里奇安在诉讼中称：“扎克伯格当时不希望我们在接下来的14个月内在其后院施工，因此同意向我推荐生意，引见我结识名商富贾。作为交换，我同意帮助他保护隐私。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但到目前为止，扎克伯格从未向沃斯凯里奇安介绍过任何生意。虽然扎克伯格曾向沃斯凯里奇安支付了170万美元的房屋购买权，并以480万美元的价格从原房主那里购买了房屋。但沃斯凯里奇安称，他在该处房产的获利远超过170万美元，之所以低价转让给扎克伯格，就是因为扎克伯格表示帮助他介绍生意。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">沃斯凯里奇安的代理律师大卫·德拉普(David Draper)称：“就是这个将其业务建立在人与人连接和沟通基础之上的人，本应向我的客户介绍一些生意，现在却把他甩了。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">德拉普还称，尽管双方并未将介绍生意一事写进合约，但出席扎克伯格和沃斯凯里奇安见面会的不少人都现场见证了这一事实。而扎克伯格的代理律师称，该诉讼毫无依据。(谭燃)</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/012782.htm','2014-05-15 15:59:40',0,'/news/thumb/2014415/1400140780018.jpeg','扎克伯格遭开发商起诉 未按承诺介绍生意','admin','谭燃'),(113,'<div>\r\n	<img alt=\"夹缝中的智能硬件“中间件”生意\" src=\"http://img1.gtimg.com/tech/pics/hv1/105/6/1595/103716510.jpeg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 宗秀倩 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">广义上的智能硬件群体中出现了一类做连接的小玩意儿，比如WiFi联网型的智能插座，以及应用于车载场景的方向盘辅助硬件、车载诊断系统（OBD）等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如果做一个笼统的概括性描述，他们可以称之为“中间件”硬件产品。这类联网型产品的共同特点是，基于底层操控系统的标准不统一或者系统升级换代缓慢，为了方便用户使用，通过简易叠加可以将传统的系统变得智能。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">眼下来看，他们确实比较火。业内对其判断也可简单归为两类：一类是看好型，由于轻巧易用，会有自己的存在空间以及商业价值；另一类是看衰型，这是一种过渡性硬件产品，一旦平台商进入此领域，或者标准的统一，中间件的硬件价值立刻丧失殆尽。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">标准不一的衍生品</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">智能插座是智能家居操控平台标准不一的衍生品。小小的智能插座周旋于不同的品牌和不同家电之间实现统一控制管理。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">智能家居的概念大热，创业者下注智能插座的原因大体归为两个：一是智能家电内嵌智能联网模块的成本高，在市场尚未形成规模的情况下，家电厂商不敢大幅度做主打智能家电的产品，只能小幅度试水，或者刚刚推出概念类的产品；二是即使智能家电解决了成本的问题，目前还没有针对不同品牌智能家电的统一操作系统系统出现。不同品牌家电之间的联网模块互相兼容和互通性并没有做好，每个家电厂商都希望自己的产品成为标准，也正在做着自有品牌家电之间可以互相协同的标准。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">由此可以很好理解的是，不管家电是否智能，通过能够统一控制的WiFi插座就可以实现对家电的总体控制。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在众筹网站点名时间首页上，前20个项目有三个WiFi插座类的产品在进行众筹。这些WiFi插座项目主打智能家居控制中心（WiLink），减少电池和电磁辐射（Linsocket），主打智能控制和远程控制（forfirst），核心的一个理念是通过这种简单、性价比高的轻智能家居控制产品，将用户的普通家用电器瞬间升级为智能互联网设备。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">比这些项目更早量产的有一款名为“硬糖”的智能插座，硬糖智能插座所在的公司，北京网河时代科技有限公司CEO李沁透露，作为</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/QCOM.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">高通</span></a><span style=\"font-size:14px;\">智能家居低功耗平台项目的首批受益者，硬糖由富士康代工生产，目前称得上是全球体积最小的智能插座。，可以通过移动App和电脑网页端对家中电器进行管理控制，预计5月底可以量产上市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">智能升级缓慢时接地气</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与智能家居所面临的困境类似，当传统汽车开始走智能汽车的概念，他们面临的挑战是，汽车的更新换代周期漫长、成本高昂与互联网服务快速迭代的矛盾。车载上的产品是则是互联网服务想进入汽车，但汽车升级缓慢的智能产品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">上汽车享平台CEO夏军坦言，一个汽车新产品开发，这没有一年两年的周期拿不下来，没有几十亿资金支持也拿不下来，如果用这样的代价和时间去开发，跟互联网时代用户对产品体验快速变化的要求，肯定跟不上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一个认同是，车企是即将醒来的巨人，一旦抽身进入市场，机会会变得非常大，会成为市场的主力。但在车企醒来之前，车载互联网服务怎么办？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯副总裁马喆人认为，对付这种矛盾的办法是“接地气”。他认为，技术的演进，产业之间的博弈和平台转换，需要更长的路径。可以找到接地气的办法，让用户能够更快体验到车联网的乐趣。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“用互联网的思维先接地气，先让用户用上再快速迭代，硬件永远是慢的，服务永远是快的。”马喆人说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5月可谓是车载硬件的扎堆月。嘀嘀打车、快的打车和高德推出的抢单硬件的发布日期都在5月。腾讯科技获悉，快的的抢单硬件已经曝出，内部人士称，只有瓶盖大小，可以绑定在方向盘上，帮助司机抢单。高德关于地图导航的方向盘硬件产品也已开模，将于近期发布。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯路宝盒子在5月初也在全球移动互联网大会上正式推出，一大波车载诊断系统和娱乐系统产品正在涌现。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">挑战和风险</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">资本和创业者的追捧并不能消解正在出现的风险。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“智能插座类产品只是解决了智能硬件的部分通用性问题，功能比较浅，操作系统的问题并没有解决，一旦类似Android Wear的系统成气候，智能插座也就没有太多价值了。”一位投资人表示。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">基于时间差的商业价值是否能形成规模也在打折扣。按照目前的WiFi智能插座的预销售价格，大致都定在普通插座的2-3倍，有多少消费者会自己买单尝鲜？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对汽车而言，通用性和标准的问题更为复杂。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">比如车载诊断系统是基于OBD2国际标准，在故障码读取上是统一的，但是再读取除故障码以外的其他数据，又没有标准可以遵循。在有限的车载空间和场景里，安放多个读取单一数据的硬件更是不现实的。这陷入了小规模看是统一，大规模来看单个封闭的死循环。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一个好消息是，类似Android车机版本有望解决部分标准统一的问题。“Android车机版本可以做标准化的授权，这可以避免汽车安全问责的问题。”上述投资人说。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/007222.htm','2014-05-15 16:01:38',1,'/news/thumb/2014415/1400140898575.jpeg','夹缝中的智能硬件“中间件”生意','admin','宗秀倩'),(114,'<div>\r\n	<img alt=\"谷歌无人驾驶汽车还要等6年 未决定是否自己生产\" src=\"http://img1.gtimg.com/tech/pics/hv1/41/8/1595/103716956.jpeg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\"><br />\r\n</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月15日消息，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)无人驾驶汽车项目主管克里斯·乌尔姆森（Chris Urmson）周二表示，谷歌正在与汽车生产商谈论如何将其无人驾驶汽车技术推向市场。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">乌尔姆森表示，我们距离无人驾驶汽车仍有六年的时间，他和谷歌其他高管尚未决定是否设计自己的汽车，或者是向汽车生产商提供自己的软件和操作系统。不过他表示，谷歌正在思考如何将这种汽车推向市场，而且谷歌正在与汽车生产商进行定期沟通。乌尔姆森没有透露具体的厂商名字。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌无人驾驶汽车项目最早的负责人塞巴斯蒂安·特伦（Sebastian Thrun）表示，“关于汽车如何使用这项技术，谷歌内部曾经进行过很多争论，总有一天，很多汽车都会搭载谷歌的技术。”现在特伦每周只在谷歌工作一天。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌联合创始人谢尔盖·布林，也就是乌尔姆森的老板，曾在大约一年半前透露，谷歌无人驾驶汽车距离现在有五年时间。乌尔姆森周二披露了六年时间表，称自己10岁的儿子在16岁的时候就可以驾驶汽车了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯坦福大学汽车研究中心研究员布莱恩特·沃克·史密斯（Bryant Walker Smith）表示，一辆新汽车的设计和生产需要六年时间。史密斯表示，如果说哪辆无人驾驶汽车可以在六年内完成，那么它很可能“在性能、可用性，或者地域范围方面有所限制”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌无人驾驶汽车就像是一辆普通汽车，但它使用了多个传感器和实时地图数据，可以知道自己所处的位置，并且在没有人为干预的情况下在街道和高速公路上操作行驶。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这个项目始于2009年，并成为谷歌秘密实验室Google X的一部分，该实验室就是谷歌从事高风险长远项目研究的地方。谷歌越来越多地专注于此类项目令一些华尔街人士感到担忧，但同时这些项目也给该公司提供了拓展全新市场的机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今年早些时候，谷歌10年老臣克莱尔·休斯·约翰逊（Clare Hughes Johnson）加入了Google X实验室，这是无人驾驶汽车项目进入新阶段的一个标志。约翰逊将负责这个项目的产品和运营。本周二，约翰逊表示她正在研究该项目的商用化战略。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">乌尔姆森表示，谷歌无人驾驶汽车价格昂贵，但没有透露具体价格。他介绍说，价格昂贵的部分原因在于汽车顶部的激光传感器，这款由硅谷公司Velodyne生产的设备每年只有大约150个的产量，这进一步提升了这个部件的价格。不过乌尔姆森也透露，随着部件大批量生产，无人驾驶汽车的价格也会随之下降。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">乌尔姆森还透露，谷歌已经开始在旧金山湾区以外的地区测试无人驾驶汽车，包括亚利桑那州、佛罗里达州、德克萨斯州和华盛顿特区等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本周二，谷歌将媒体记者邀请到位于公司总部所在的加州山景城，进行了30分钟的产品展示。谷歌无人驾驶汽车的测试驾驶员坐在前排，但是大多数情况下这辆汽车是自行行驶。从现场来看，谷歌无人驾驶汽车加速很快，遇红灯时自行停车，交叉路口会自动减速。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位名叫阿图罗·科拉尔（Arturo Corral）的谷歌无人驾驶汽车测试员说，天气仍然是一个挑战，在大雨条件下，该系统会要求驾驶员来控制汽车。谷歌尚未在雪天条件下测试该汽车。科拉尔说：“我们仍有很长的路要走。”（小贝）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/007409.htm','2014-05-15 16:03:06',1,'/news/thumb/2014415/1400140986924.jpeg','谷歌无人驾驶汽车还要等6年 未决定是否自己生产','admin','小贝'),(115,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/VIPS.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">唯品会</span></a><span style=\"font-size:14px;\">&nbsp;（证券代码：VIPS）今日发布财报。财报显示，唯品会第一季度净营收7.019亿美元，较上年同期增125.9%，较上一季度增长8%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度净利润2660万美元，较上年同期增长355.3%，较上一季度增长5%。唯品会净利大幅增长的根本原因是之前净利规模相对较小。唯品会运营利润率为4.3%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会财报中计入乐峰网营收，其中，第一季度乐峰网给唯品会贡献营收占总净营收近5%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会Q1营收7.019亿美元 同比增125.9%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"唯品会季报图解：净利2660万美元 同比增355.3%\" src=\"http://img1.gtimg.com/tech/pics/hv1/68/49/1595/103727438.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度总净营收7.019亿美元，比上年同期3.107亿美元增125.9%，增长主要是由于活跃用户人数和总订单数量增加。乐峰网给唯品会贡献营收占唯品会总净营收的近5%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度活跃用户人数为740万人，比上年同期的约280万人增加165.1%。唯品会第一季度总订单数量为2020万份，比上年同期的880万份增加129.3%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会总订单数量增加，是由于公司品牌知名度提升，及公司优化和增强网站品牌和产品选择量。此外，唯品会扩大仓储能力，帮助促进和调节用户需求增长，并加速了购货物的交付。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会Q1成本5.27亿美元 同比增122%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"唯品会季报图解：净利2660万美元 同比增355.3%\" src=\"http://img1.gtimg.com/tech/pics/hv1/82/49/1595/103727452.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度成本为5.27亿美元，较上一季度增长7%，较上年同期增长122%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会Q1毛利1.748亿美元 毛利率25%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"唯品会季报图解：净利2660万美元 同比增355.3%\" src=\"http://img1.gtimg.com/tech/pics/hv1/112/49/1595/103727482.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度毛利润1.748亿美元，比上年同期7280万美元增长140.3%。唯品会毛利润的增长，主要反映净营收大幅增长，及公司利率管理。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度毛利率为24.9%，高于上年同期的23.4%。唯品会毛利率的上升，主要是由于采购规模提升和公司营销业务的增长。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会Q1费用1.474亿美元 同比增115%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"唯品会季报图解：净利2660万美元 同比增355.3%\" src=\"http://img1.gtimg.com/tech/pics/hv1/130/49/1595/103727500.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度总运营支出为1.474亿美元，比上年同期的6860万美元增长115.0%。唯品会第一季度总运营支出在净营收中所占比例为21%，低于上年同期的22.1%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度履行支出为7460万美元，比上年同期的3770万美元增长97.8%。唯品会履行支出的增长，主要反映了销售量和已履行订单数量的增长。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度营销支出为3010万美元，比上年同期的1310万美元增长129.0%。唯品会第一季度营销支出在净营收中所占比例为4.3%，高于上年同期的4.2%，显示出公司持续利用留住回头客的方式来控制营销支出以及利用口碑推荐来实现较高增长的能力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度技术和内容支出为1870万美元，比上年同期的790万美元增长134.8%。唯品会技术和内容支出的增长，主要反映出公司继续投资于自身网站和IT系统来支持未来增长。唯品会第一季度技术和内容支出在净营收中所占比例为2.7%，高于上年同期的2.6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度总务和行政支出为2410万美元，比上年同期的980万美元增长146.1%，此增长主要是由于公司整体业务增长带动员工数量和办公室租赁的增加。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度总务和行政支出在净营收中所占比例为3.4%，高于上年同期的3.2%，此增长主要是由于乐峰网并购业务产生的500万美元无形资产摊销费用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会Q1运营利润3020万美元 运营利润率4%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"唯品会季报图解：净利2660万美元 同比增355.3%\" src=\"http://img1.gtimg.com/tech/pics/hv1/188/49/1595/103727558.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度运营利润3020万美元，比上年同期550万美元增长452.0%。唯品会第一季度运营利润的同比增长，反映出公司业务规模的增长、毛利率的提高以及成本控制措施。唯品会第一季度运营利润率为4.3%，上年同期运营利润率为1.8%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会Q1净利2660万美元 净利率3.8%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"唯品会季报图解：净利2660万美元 同比增355.3%\" src=\"http://img1.gtimg.com/tech/pics/hv1/2/50/1595/103727627.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">唯品会第一季度净利润2660万美元，较上年同期的580万美元增长355.3%，较上一季度增长5%，唯品会第一季度净利率为3.8%，上年同期净利率为1.9%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，唯品会所持的现金和现金等价物总额为8.718亿美元，所持到期的证券价值为3.325亿美元，唯品会来自于业务运营活动的净现金为8410万美元。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/013093.htm','2014-05-15 16:09:32',1,'/news/thumb/2014415/1400141372622.png','唯品会季报图解：乐峰贡献营收近5% 净利率4%','admin','lincelkong'),(116,'<div>\r\n	<img alt=\"三星副社长王彤：在中国打造第二个三星\" src=\"http://img1.gtimg.com/tech/pics/hv1/100/58/1595/103729765.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 相欣 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星正加速在中国市场的扩张，其计划是将中国分部打造成“第二个三星”。一个有意思的现象是，中国职业经理人在三星的地位也在逐步提高，王彤于2000年加入北京三星通信研究院，14年后他成为了三星副社长、</span><a href=\"http://t.qq.com/samsungelectronicbj#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">三星电子</span></a><span style=\"font-size:14px;\">大中华区执行副总裁，也是目前在三星管理职位最高的中国人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王彤日前接受腾讯科技的采访时透露，近年来三星在中国的布局不断加快，包括建立新的产业基地、发展高端装备和进行连续投资。目前三星集团旗下有22家公司进入中国，在中国的员工约12万人，占全球总数的30%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国市场的强力增长是三星近两年业绩的重要支撑。在全球经济较低迷的时候，中国市场的表现更为突出，“我们在中国市场的销售已经直追美国和欧洲，现在处于第三。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王彤表示，要在中国打造“第二个三星”， 不仅在于要在中国获得市场，同时还要有本地化的研发和工业设计能力。此外，中国有自己的国家标准和行业企业标准、中国运营商和消费者也有独特的需求要满足。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前三星在中国已经设立了通信、半导体、软件、设计等10个独立研究所，还包括生活方式研究室和产品创新部门，研究人员数量已达7000人，其中4000多人是近三年引入的。随着三星在西安高端装备的继续投入，在中国的研发比例还将继续扩大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">得一提的是，三星在中国也有设计中心，加上其他研究所，从整个开发链条上看，包含了开发、生产以及市场行为的全部。这在世界上除了三星总部外，其他地方都是没有的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王彤透露，三星中国独立研发的能力和研发项目比例近年来明显提升，像三星今年2月发布的galexy S5智能手机，其中的很多技术即源自三星中国的研发。针对中国4G技术，三星中国也做了大量针对性的技术研发和测试。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“与其他国家相比，中国的市场环境更适合三星做研发。这里有优秀的人才和公司、丰富的经验和技术能力，以及很多应用软件、硬件开发公司需要去合作。”王彤指出。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/010468.htm','2014-05-15 16:10:41',1,'/news/thumb/2014415/1400141441558.jpg','三星副社长王彤：在中国打造第二个三星','admin','jamesdu'),(117,'<div>\r\n	<img alt=\"扎克伯格年届而立，有资格遭遇“中年危机”？\" src=\"http://img1.gtimg.com/tech/pics/hv1/43/19/1595/103719763.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 Kathy 5月15日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今天迎来</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">创始人兼首席执行官马克-</span><a></a><span style=\"font-size:14px;\">扎克伯格（Mark Zuckerberg）30岁的生日。在他而立之年，回顾他前几年的经历，我们可以看到一个“大学生辍学创业，缔造全球科技巨头”的故事。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，从很多方面来说。这个故事也并不新鲜。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这种故事我们已经听过很多遍了，尤其是在高科技圣地硅谷。那里有很多年轻人利用计算机芯片和软件代码，从自己的车库或宿舍起家，创建了全球性的企业帝国。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">相对“坎坷”的成名经历</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">30岁之前就已经成名的青年科技人士可以列出一张长长的清单，他们中有</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/DELL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">戴尔</span></a><span style=\"font-size:14px;\">公司的迈克尔-戴尔、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">的史蒂夫-乔布斯和史蒂夫-沃兹尼亚克，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">的比尔-盖茨，以及</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)的拉里-佩奇和谢尔盖-布林。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但从很多方面来说，扎克伯格和这些人也不一样。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">首先，跟其他人相比，扎克伯格在年纪更轻的时候就出了名，处在了聚光灯之下。此外，他在这个过程中的经历也比其他人更加“坎坷”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“从某些方面来说，</span><a href=\"http://datalib.tech.qq.com/people/120/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">马克-扎克伯格</span></a><span style=\"font-size:14px;\">被推到聚光灯下的速度远远快于乔布斯、戴尔和布林。” IDC分析师克劳福德·德尔·普利特（Crawford Del Prete）说。“这跟产品有关系。因为在IT技术发展的早期，并不是每个人都有电脑。如果你不是苹果公司的用户，你对他们的产品就不会那么了解。只知道他们推出了一些用于计算的东西，赚了大笔钱，而且声名大噪。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一方面，扎克伯格进入这个领域的时候，大家对互联网都已经比较了解。他提供了一种新的方式，让人们通过“建立全球网民数据库来互相联系”，他说。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“因此，几乎每个人都可以试用一下扎克伯格的产品。相比于早期的那些年轻创业者来说，Facebook在很多方面都有更高的可见度。”他说。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上，甚至在扎克伯格创建Facebook之前，就有人目光睽睽地盯着他。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他第一次崭露头角是在2003年，建立了一个名为Facemash的网站，在哈佛校园里引起了轰动。该网站会显示两名学生的相片，让你投票决定哪一个学生更有魅力。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook诞生的过程本来就很混乱。早些年，扎克伯格花了很多时间来跟一些人打官司，这些人声称拥有Facebook的部分股权，其中有文克莱沃斯双胞胎（Winklevoss），还有一名商人说扎克伯格曾答应给他Facebook的一半股份，但后来有证据证明，这名商人伪造了相关的合同。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">跟扎克伯格一起创业的合作者，也有一些人引起了争议，比如曾协助创建Napster的投资人肖恩-帕克（Sean Parker）。2005年8月，肖恩以藏有海洛因的罪名被捕，但证据不足，没有被正式起诉。Facebook当时最大投资方Accel Partners认为他不能再担任总裁一职。最后肖恩自愿离职，被逼放弃一半股份。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">还有扎克伯格在哈佛结识的爱德华多-萨维林（Eduardo Saverin）。在Facebook上市前不久，萨维林放弃了美国国籍，被一些人指责为逃税行径。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而且Facebook上市之初的表现非常令人失望。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook的IPO成为了一个流行文化事件，吸引了一些通常不关心股市的人的注意，但是它的表现却让人大跌眼镜。2012年Facebook上市的首个交易日，其股价一波三折，一是因为软件系统出了故障，再者有传闻说该公司误导了投资者。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">甚至连扎克伯格在和他的团队向华尔街投资者介绍Facebook时的衣着装束，都引起了一场辩论：应该让一个穿连帽衫的孩子给一家科技巨头掌舵吗？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">成功和挑战</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">扎克伯格聘请了谷歌前高管谢丽尔-桑德伯格（Sheryl Sandberg）当他的副手，担任Facebook的首席运营官。此举获得了人们的赞赏，但是情况也很清楚，真正的老板仍然是扎克伯格，就算Facebook成为一家上市公司之后的最初几个月里，他会时不时地遭遇一些尴尬。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2013年2月，扎克伯格在Facebook上市后的第一个财报电话会议上把“大”（big）这个字翻来覆去说了十几次。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“2012年是一个大年头，”他说。“我们做出了这个大转变，目前在手机上日常使用Facebook的人比用桌面设备使用它的人更多。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然开场不够优美，甚至有些笨拙，但就在大多数人怀疑扎克伯格的领导能力有限的时候，他回到了轨道上。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">原因在于：Facebook迅速崛起，成为互联网上的强劲动力。该公司获得了营销者的青睐。这些营销者对Facebook庞大并且不断增长的用户群十分看好，导致Facebook营收激增，即便是该公司的移动广告业务也在行业中位居前列。之前，Facebook的移动广告业务一直遭到评论者的诟病，而且扎克伯格的团队自己也在IPO文件中说该公司这方面的能力不能确定。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook仍然需要解决一个重大难题：如何通过发布更多不同种类的广告来增加广告收入，同时又不引起用户的反感。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">迈入而立之年，扎克伯格至少可以好好利用他以前的成功经验，以及偶尔令人尴尬的失败的教训。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我认为最令人钦佩的是，他底子很好，愿意信任别人，原意放权给别人经营和发展业务。”创意策略公司（Creative Strategies Inc.）的蒂姆-巴加林（Tim Bajarin）说。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我不认为Facebook一切围绕着扎克伯格转。虽然他是这家公司的领导者，并且推动了该公司的大部分策略实施，但他很善于向别人学东西，在高科技初创公司中，这样的人不多。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但Facebook才刚刚进入一个新的阶段，现状已经跟扎克伯格当年创建这个社交网站时大不相同。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“只要Facebook仍然在打造社交网络，那就是一回事，”市场研究公司终点技术协会（Endpoint Technologies Associates）的分析师罗杰-凯伊（Roger Kay）表示。“现在他要制造的是营收，那就是另一回事了。获得营收的需要也阻碍了Facebook的用户增长。在目前这个阶段，扎克伯格的工作就是代表股东在这个平台上赚钱。这不是他创建该平台的初衷。要平衡这些方面需要付出不少努力。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中年危机到来了吗？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">扎克伯格仍然持有Facebook 29%的股票，但他在这家公司的投票权达到了57%。即使过了这么多年之后，这家公司还是扎克伯格怎么说就怎么做。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据Facebook数据科学家迪恩-埃克尔斯（Dean Eckles）的说法，至少在某段时期内，该公司要求产品经理阅读科幻小说《雪崩》（Snow Crash）。其作者尼尔-斯蒂芬森（Neal Stephenson）1992年出版的这本书时，扎克伯格年仅8岁。该小说虚构了这样一个背景：互联网被Metaverse取代，它是一个共享的虚拟现实世界，人们就在 Metaverse世界中做生意，进行社交和玩游戏。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不难看出，该书和Facebook今年斥资20亿美元收购虚拟现实公司Oculus之间存在怎样的联系。Oculus公司的首席执行官在交易完成后一个月表示：“它将成为一款大型多人在线游戏，我们希望把10亿人带入虚拟现实世界。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">扎克伯格还推出了Internet.org项目，把部分精力放在为偏远地区提供互联网接入服务，实现全球联网上。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他的努力并非完全大公无私。 Facebook现在如此之大，全球人口成为了该公司未来扩展计划的一个限制因素。该公司12.3亿的月度活跃用户，已经占到全球网民总数的一半以上。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但扎克伯格说得确实很有道理：能够上网是件好事。“人们可以利用互联网来决定他们想要什么样的政府，可以获得以前从未有过的医疗保健服务，可以跟数百英里之外的家人保持联系。能够上网是件大事。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于Facebook创始人前进的方向，或许我们可以这样来考虑：他知道，大多数高科技公司首席执行官出风头的时间都不会长久，所以在30岁时，他确实也有资格遭遇中年危机了。这方面的迹象有哪些呢？他正在大笔花钱收购一些公司，而且他突然意识到他需要回馈世界一些东西。此外他还是一位已婚人士，当然这是私事，但他结婚的时间确实跟Facebook的“成熟”有关：在Facebook上市的第二天，扎克伯格和交往近十年的女友友普莉希拉·陈结了婚。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">过去一年中，Facebook正在变得更加成熟，从它近期对WhatsApp、Moves和Oculus的收购来看，该公司似乎有望变成通用电气那样的企业集团。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">也许，扎克伯格只是在等待另一个科幻故事的启发，以便塑造Facebook未来10年的道路？（Kathy）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/009089.htm','2014-05-15 16:12:32',1,'/news/thumb/2014415/1400141577711.jpg','扎克伯格年届而立，有资格遭遇“中年危机”？','admin','Kathy'),(118,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NTES.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">网易</span></a><span style=\"font-size:14px;\">(NASDAQ:&nbsp;</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NTES.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">NTES</span></a><span style=\"font-size:14px;\">)今天宣布财报，财报显示，网易2014年第一季度总收入25.19亿元，环比下降5%，同比上升11%。网易广告收入环比下降33%，但同比增长48%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易第一季度净利润11.24亿元，环比降低11%，同比增长6%。网易营收和净利环比出现下降，主要是由于春节等季节性原因。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1营收4.05亿美元 环比降5%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/128/86/1595/103736933.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易2014年第一季度总收入25.19亿元（4.05亿美元），上一季度和去年同期分别为25.85亿元和22.58亿元。网易营收环比下降5%，同比上升11%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1游戏收入3.47亿美元 同比增6%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/173/86/1595/103736978.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易2014年第一季度在线游戏服务收入为21.56亿元（3.47亿美元），上一季度和去年同期分别为21.09亿元和20.27亿元。网易游戏收入同比增6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1广告收入3937万美元 环比降33%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/189/86/1595/103736994.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易2014年第一季度广告服务收入为2.45亿元(3937万美元)，上一季度和去年同期分别为3.58亿元和1.65亿元。网易广告收入环比下降33%，但同比增长48%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易2014年第一季度邮箱，电商及其它业务的收入为1.19亿元（1909万美元），上一季度和去年同期分别为1.17亿元和6539万元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1毛利2.75亿美元 毛利率68%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/215/86/1595/103737020.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易2014年第一季度毛利润为17.08亿元（2.75亿美元），上一季度和去年同期分别为17.27亿元和15.46亿元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在线游戏服务收入同比和环比增长的主要得益于《炉石传说:魔兽英雄传》推出和几款自研游戏收入增长。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">广告服务毛利同比增长是，交通类、食品饮料类和金融服务类广告服务需求增长，以及手机应用的商业化进展。广告服务收入和毛利的环比下降主要是因中国广告业务季节性因素。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">邮箱、电商及其他收入同比和环比的增长主要得益于电商业务的快速发展，比如与第三方彩票产品和保险产品相关的电商服务收入。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易第一季度在线游戏的毛利率78.5%，上一季度和去年同期分别为77.7%和77.8%。广告服务毛利率47.8%，上一季度和去年同期分别57.8%和29.0%。毛利率同比增长的主要原因是广告服务需求上升。毛利率环比下降的主要原因是季节性因素。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1费用9067万美元 环比降15%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/230/86/1595/103737035.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易第一季度运营费用为5.64亿元（9067万美元），上一季度和去年同期分别为6.48亿元和4.56亿元，运营费用较上一季度下降15%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易第一季度运营费用的同比增加是由于在线游戏和广告业务市场营销费用增加，员工人数、平均薪资提高，及研发投入增加。运营费用环比减少是由于自主研发游戏市场费用减少。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1运营利润1.84亿美元 运营利润率45%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/247/86/1595/103737052.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易第一季度运营利润为1.84亿美元，较上一季度微增，网易第一季度运营利润率为45%，较上一季度提升3个百分点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易Q1净利1.81亿美元 环比降11%</span>\r\n</p>\r\n<div>\r\n	<img alt=\"图解网易季报：广告收入3937万美元 环比降33%\" src=\"http://img1.gtimg.com/tech/pics/hv1/252/86/1595/103737057.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网易第一季度净利润为11.24亿元（1.81亿美元），上一季度和去年同期分别为12.37亿元和10.63亿元。网易第一季度净利环比降低11%，同比增长6%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2014年3月31日，集团现金、现金等价物和定期存款共为192.52亿元（30.97亿美元），截止至2013年12月31日为185.84亿元。2014年第一季度经营活动净现金流入约为16.50亿元（2.65亿美元），上一年度和去年同期为16.23亿元和15.48亿元。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/017738.htm','2014-05-15 16:16:38',1,'/news/thumb/2014415/1400141798583.jpg','图解网易季报：广告收入3937万美元 环比降33%','admin','雷建平'),(119,'<div>\r\n	<img alt=\"搜索引擎长盛不衰秘密：单用户收入远远高于同业\" src=\"http://img1.gtimg.com/tech/pics/hv1/29/28/1595/103722044.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不久前，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">创始人盖茨在谈到部分微软疲软业务时称，他支持把游戏机业务分拆出去，但是必应搜索引擎，虽然目前没有盈利，但是对于微软的未来有着极大的价值，因此微软仍然应该保留该业务，并继续发展。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，盖茨没有提到的是，从互联网业务的收入贡献能力来看，搜索引擎远远高于其他的媒体或社交网站。最近行业内的一个图表，揭示了这一规律。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从Instagram、WhatsApp的收购案例可以发现，互联网服务的用户规模和经济效益分析越来越显得重要。最近，数字媒体行业分析师IanMaude在Twitter微博上分享了一张统计图表，显示搜索引擎的单用户创收能力，远高于其他网站。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从今年一季度平均每位用户贡献的收入（预期值）来看，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)遥居榜首，高达6.05美元。换言之，每一个谷歌的用户，每天为谷歌创造了相当于人民币一块钱的收入。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">排名第二的是俄国最大的搜索引擎Yandex，其平均收入为3美元。众所周知的是，谷歌并未在俄文搜索领域占据优势，Yandex处于“本地强龙”地位。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">更能说明问题的是，单用户平均收入排名第三的互联网公司，是中国的</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">，也是搜索引擎运营商。其收入值为2.75美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">需要指出的是，搜索引擎的但用户创收能力，明显比其他网站高出一大截。比如全球最大的社交网络</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">，单用户季度收入仅为1.97美元，仅为谷歌的三分之一，百度的三分之二。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当红的移动互联网产品中，Instagram单用户收入仅为21美分，Twitter收入也只有0.89美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外，白领社交网站LinkedIn虽然并非搜索引擎，但是其职业人士的特殊市场定位引发了广告主和招聘部门的极大兴趣，导致其单用户收入高达2.54美元，比Facebook多出了四分之一，和百度的差距也很小。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从这张统计图表也可以看出，商业模式的新旧，和单用户创收能力没有直接关系。除了搜索引擎名列前茅之外，美国在线AOL、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">、TripAdviser等传统网站单用户收入也排名靠前。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国媒体指出，搜索引擎的强大“挖金”能力，也是Facebook一直在搜索产品上投资的重要原因。Facebook虽为社交网络，但多次对站内搜索进行重大改版，去年底以来，Facebook扩大了图谱搜索和第三方的合作空间，此外不久前还针对移动设备，推出了图片搜索功能。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在美国和全球搜索市场，谷歌遥居第一，不过梅耶尔执掌雅虎之后，一直对于搜索业务耿耿于怀，梅耶尔希望终止和微软的搜索外包合作（雅虎获得不菲的广告分成），重新独立开发和运营搜索引擎，双方甚至闹到法庭。鉴于必应搜索一直处于“扶不起”的窘境，雅虎仍有可能重拾自家搜索，成为全球搜索市场一个不可小觑的力量。（晨曦）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/010269.htm','2014-05-15 16:20:14',1,'/news/thumb/2014415/1400142014796.jpg','搜索引擎长盛不衰秘密：单用户收入远远高于同业','admin','晨曦'),(120,'<img src=\"/upload/image/20140515/20140515162149_604.jpg\" alt=\"\" /> \r\n<p>\r\n	<span style=\"font-size:14px;\">今天是Facebook创始人扎克伯格的30岁生日，我们搜集了30张图，一起看一下他的“三十而立”是如何做到的。他出生于1984年，在纽约长大，犹太血统。父亲是一位牙医，母亲是一位精神病医师。母亲早年离职后在其丈夫诊所工作。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162211_882.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这张照片摄于扎克伯格五岁时。照片上的扎克伯格穿着令人印象深刻。扎克伯格父亲形容儿童时期的儿子“意志坚强并且不屈不挠”。（腾讯科技整理）</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162246_606.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">十岁时，扎克伯格得到了第一台电脑，从此将大把的时间都花在了上面。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162530_608.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">高中时，他为学校设计了一款MP3播放机。之后，很多业内公司都向他抛来了橄榄枝，包括微软公司。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162551_786.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但是扎克伯格却拒绝了年薪95万美元的工作机会，而选择去哈佛大学上学，主修心理学。这年他18岁。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162622_912.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2004年，扎克伯格20岁，他在哈佛的大学宿舍创办了Facebook。短短数年，这一网站迅速风靡全世界，现在是世界上最重要的社交网站之一。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162700_462.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">大二的时候，扎克伯格辍学，全力倾注在Facebook网站上。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162726_162.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">23岁时，Facebook估值飙升，扎克伯格也因此跻身亿万富翁的行列，身家达到30亿美元。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162843_283.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2010年，26岁的扎克伯格登上《时代》杂志封面，成为“2010年年度人物”</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515162924_905.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">10、同年，扎克伯格的故事被搬上荧屏，电影《社交网络》上映。左图为电影中扎克伯格扮演者。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163002_148.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">也是在2010年，扎克伯格献声美国热门动画片《辛普森一家》，片中的卡通形象就是他本人。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163317_307.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2010年底，扎克伯格首访中国，华裔女友陪同。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163356_560.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">27岁的时候，扎克伯格得到美国总统奥巴马的宴请，同坐的还有乔布斯等科技大佬。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163431_330.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2012年，Facebook上市，扎克伯格的身家达到200亿美元。这一年他28岁。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163449_758.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Facebook上市后的第二天，扎克伯格迎娶相恋九年的华裔妻子。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163521_903.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2013年，29岁的扎克伯格捐出价值10亿美元的股票搞慈善。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163559_92.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2014年5月，扎克伯格迎来了他的三十岁生日。其所持有的Facebook股票价值445亿美元。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163634_552.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">每年，扎克伯格都会给自己制定一个挑战目标。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163649_693.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2009年，他决定几乎每天都系领带。为的是展示Facebook在面对全球金融危机时非常重视增长。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163713_105.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2010年，他重点学习汉语。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163734_43.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2011年，他几乎成了一名素食主义者—只吃自己亲手宰杀的动物。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163810_38.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">生活中的扎克伯格也有更多80后的一面。这身行头是他的最爱，拖鞋、牛仔裤、灰色T恤和套头衫。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163842_297.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">他也喜欢养宠物，有一条名叫Beast的匈牙利牧羊犬，那只狗的Facebook主页吸引了150万粉丝。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163907_502.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">扎克伯格也喜欢听音乐，是美国乡村音乐女歌手泰勒·斯威夫特（Taylor&nbsp;Swift）的粉丝，也喜欢Lady&nbsp;Gaga等歌手或乐队。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515163931_869.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">扎克伯格喜欢长时间的淋浴。他写道：“我喜欢在淋浴头下呆很长时间，因为水是那样温暖。”</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515164004_912.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">扎克伯格喜欢电影《点球成金》、《星球大战》，也追美剧，比如《权力的游戏》。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515164038_971.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">扎克伯格喜欢击剑。实际上，在学校时他曾是一名击剑手。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515164056_748.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">扎克伯格还喜欢网球。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515164127_895.jpg\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在书籍方面，扎克伯格喜欢柏拉图和《安德的游戏》。</span>\r\n</p>\r\n<p>\r\n	<img src=\"/upload/image/20140515/20140515164138_320.jpg\" alt=\"\" /> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/005024.htm','2014-05-15 16:31:50',1,'/news/thumb/2014415/1400142727405.jpg','30张图让你了解30岁的亿万富豪扎克伯格','admin','腾讯科技'),(121,'<div>\r\n	<img alt=\"当当网第一季度总营收28.5亿元 同比增53%\" src=\"http://img1.gtimg.com/tech/pics/hv1/27/148/1595/103752642.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月15日消息，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/DANG.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">当当网</span></a><span style=\"font-size:14px;\">今日发布了2014年第一季度财报，净营收为17.36亿元，同比增长30.1%，净利润200万元，去年同期净亏损7270万元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财报显示，第一季度当当网总交易额（含第三方平台GMV）28.5亿元，增长53%，其中第三方平台增速103%，服装增速超平台。GMV交易总额为11.86亿元，同比增长103%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不含GMV的总净营收为17.36亿元，同比增长30.1%。其中，媒体产品营收为11.52亿元，同比增长33.3%；百货营收为5.17亿元，同比增长25.5%；包括第三方商家营收在内的其他营收为6740万元，同比增长16.0%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当当网第一季度图书收入同比增长33%，市场寡头地位进一步稳固。除图书外，服装品类、第三方平台及闪购业务担当了“增长引擎”，为业绩做出强劲贡献。百货销售额同比增长71%，连续6个季度超过图书收入。服装品类表现同样突出，其增速超过平台增速。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">毛利率提升至18.2%创新高，上一季度为17.6%，去年同期为17.2%。净利润为200万元，连续两季度实现盈利，去年同期净亏损达7271万元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">营业利润为1010万元人民币，约占净营收总额的0.6%。去年同期为营业亏损8040万元，约占净营收总额的-6.0%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，当当网拥有现金及现金等价物、限制用途现金、短期存款、可售投资和持有至到期的投资总额为13.898亿元，截至2013年12月31日为12.135亿元。截至2014年3月31日，当当网没有短期银行贷款。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财报显示，当当网在2014年第一季度达到860万，当季新增客户约280万，同比增长17%，环比增长16%，总订单数超过1640万。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">易观数据显示，在众多B2C电商网站中，当当网的用户转化率最高。影响转化率因素很多，包括在线商品数量和品牌的吸引力、用户体验、物流效率、客户服务等。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当当转化率最高的主要原因包括：（1）当当网品牌认知度高，积累了大批忠诚的优质消费者；（2）自营和平台商品种类丰富，折扣力度大，价格吸引力提升。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当当网董事长俞渝表示，“当当网在从网上书店转化成目标品类突出的综合网上商城的道路上取得了良好进展。放眼未来，我们将继续通过平衡平台和自营业务推动企业的健康、可持续发展。”</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/028985.htm','2014-05-15 16:45:40',1,'/news/thumb/2014415/1400143621323.jpg','当当网第一季度净营收17.36亿元 同比增30.1%','admin','jimmonzang'),(122,'<div>\r\n	<img alt=\"扎克伯格鲜为人知的五件事及教训\" src=\"http://img1.gtimg.com/tech/pics/hv1/3/103/1595/103741143.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月15日消息，今天是扎克伯格30岁的生日，我们总结了这位</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">创始人鲜为人知的五件事及其教训。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2014年是马克·扎克伯格（Mark Zuckerberg）及其Facebook网站获得长足发展的一年。该公司在2月举办了</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SNDA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">盛大</span></a><span style=\"font-size:14px;\">的10周年庆祝活动，召开了它自2011年以来的首次峰会，并在2014年4月成功获得12.8亿个用户。然而，不知为何，仍然有一些人认为Facebook正在走下坡路。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然Facebook可能正在丧失年轻用户群，但是到2015年，它仍有望在亚太地区继续斩获新的用户。它的用户仍然非常活跃。例如，在千禧年一代中，57%的人每周至少会在Facebook上协商一次计划；62%的人会在上面发布他们在做什么、与谁在一起以及身在何处。而且，有30%的美国人经常上Facebook查看新闻。Facebook仍然是一个活跃的社交网络，它仍然具有很大的发展潜力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然了，这一切都应归功于一个人：扎克伯格。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在过去十年中，扎克伯格从哈佛大学辍学，创造了这个人气爆棚的社交网络，成为了一部主流好莱坞大片的原型，并挣到了比同龄时的史蒂夫-乔布斯（Steve Jobs）更多的钱。而且，他的志向远不止如此。他希望改变全世界。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今天是扎克伯格30岁的生日，我们借这个机会来介绍一下这位Facebook创始人鲜为人知的故事以及其中蕴含的重要教训，以飨读者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook差点被收购。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大卫·柯克帕特里克（David Kirkpatrick）在其出版的图书《Facebook效应》（The Facebook Effect）中指出，在Facebook推出才四个月的时候，就有无数公司希望从扎克伯格手里收购它。下面看看这些未能如愿以偿地收购Facebook的公司吧：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook，原名TheFacebook.com，最早于2004年2月上线。四个月后，时年20岁的扎克伯格就收到了一位不愿透露姓名的纽约投资者提出的斥资1000万美元进行收购的请求。另一家较早就有收购意图的公司是社交网络先锋Friendster。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">到2004年暑假，扎克伯格搬到了帕罗奥图。柯克帕特里克说，“很多</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)高管也赶来凑热闹了，他们希望看看能不能与Facebook合作，或干脆收购它。”显然，他们并没有得偿所愿。在2005年3月，维亚康姆提出7500万美元收购Facebook；几乎与此同时，MySpace也在积极联系收购Facebook的事宜。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在2005年底，维亚康姆再次找上Facebook，希望进行合作。NBC电视台也表示出了浓厚的兴趣。在2006年1月，新闻集团也宣布有意收购Facebook。但是，扎克伯格当时说了一句很震撼的话，“我打造这个社交网络的目的就是为了长久的发展，这些人根本不知道我的想法。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在2006年，维亚康姆孤注一掷，提出斥资15亿美元收购Facebook，并愿意先行支付8亿美元。而在2006年暑期，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">也提出斥资10亿美元收购Facebook。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">教训：今天，扎克伯格的身价估计已达到了263亿美元，Facebook的估值也达到了1000亿美元左右。扎克伯格不仅成了全世界最富有的人之一，而且在2011年7月他在Google Plus上的粉丝数量甚至超过了谷歌联合创始人拉里-佩奇（Larry Page）和谢尔盖-布林（Sergey Brin）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有时候，在你胸怀远大理想的时候，一定要坚持你的梦想。即使这样做一开始可能会让你损失数百万美元。正如老话所说的，所有美好的东西都归属于那些愿意等待的人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从ZuckNet到Facebook。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">扎克伯格从小在纽约多布斯费里长大，他的父亲是一名牙医，在自家房子的第一层开了一个诊所。在1996年，为了减轻父亲的生活压力，扎克伯格创造了ZuckNet网站，供家人在上面相互交流。据他的妹妹兰迪说，“家里任何人使用家里任何一台电脑都能够登录并发送信息。”是的，扎克伯格在上世纪90年代就开始使用社交网络了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，这并不是扎克伯格开发的唯一软件。早在就读高中的时候，他就开发出了一款名为Synapse的自动创造播放列表的软件。该软件甚至引起了</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">和AOL的注意。他最终拒绝了7位数字的收购报价，而选择了无偿转让。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2003年，在扎克伯格就读哈佛大学的时候，他开发出了Course Match（课程选择搭配）软件以及富有争议的、但却很受欢迎的Facemash网络。后来，该网络被哈佛大学给强制关闭了。但几个月后，扎克伯格又开始编写Facebook网站的程序。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管Facebook现在已成了社交网络巨头，但是它的发展经历了不少曲折。还记得2012年Facebook押宝HTML5失败的事吗？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，作为大富翁，扎克伯格拥有逾50项专利。其中有些发挥了作用，有些则宣告失败了。但是，他从来没有放弃。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">教训：这里的教训是显而易见的。不要轻言放弃。要从你的错误中汲取教训，并做出相应的调整，以避免重蹈覆辙。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">害怕公开演讲。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有人声称，扎克伯格害怕公开演讲，或至少不擅长这样做。例如，在2010年6月召开的D8大会上，扎克伯格在接受采访时显得手足无措、语无伦次。我们在这里并不是指责他。有些人确实具有这样的魅力：在公众面前发表演讲时显得神采飞扬。但是，这个最著名的社交网站的创始人却无法从容地面对一大群人侃侃而谈。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在2011年6月，很多人可能已注意到扎克伯格在宣布与Skype合作的消息时表现好多了。在同年11月，他在电视节目《查理•罗斯访谈录》中又有了较大的进步。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他究竟是怎么做到的呢？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们不知道扎克伯格私下了做了哪些功课，但是我们可以猜到他肯定意识到了自己在D8大会采访中的拙劣表现，并下了工夫提高自己的公开演讲技能。而且，他还在自己身边建立了一个强大的支持团队。例如，他上《查理•罗斯访谈录》是带着COO谢丽尔-桑德伯格（Sheryl Sandberg）去的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">桑德伯格是最有影响力的人物之一，是《向前一步：女性、工作和领导意志》（Lean In: Women, Work, and the Will to Lead）一书的作者，而且是TED大会上最出色的演讲人之一。我们相信，她一定会给扎克伯格一些必要的指点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">教训：无论你拥有多么了不起的创意或商业计划，你总有一些方面不是你的强项。这本身没有什么问题，你不用跟它较劲，在身边安插一些具有这方面强项的人就可以帮你扬长避短了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">放出你的“野兽”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">你可能听说过，扎克伯格及其妻子普里西拉拥有一条匈牙利牧羊犬，名为“野兽”。但是，你可能不知道，“野兽”也拥有自己的Facebook页面，而且得到了180万个“赞”。虽然它比不上Facebook上“坏脾气的猫”获得的“赞”数量多，但是这个数字仍然令人印象深刻。事实上，这个数字可能比我们大多数人积累的“赞”都多。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">教训：动物正在占领社交媒体。事实上，这是有道理的。它们看起来都很可爱，让人有想拥抱的冲动，而且它们常常会做出令我们发笑或摇头的奇怪举动来。而且，这些动物已在我们的日常生活中占有了很大的分量。简而言之，人们喜爱在社交媒体上欣赏这些可爱的动物。扎克伯格深知这一点，这就是为什么他乐此不疲地与全世界分享“野兽”趣事的原因。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然了，你在社交媒体上分享的信息并不一定要是与动物有关的。你可以分享任何你觉得观众会感兴趣、会积极参与的东西。这就是社交媒体的作用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook网站为何是蓝色的？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">你是否曾感到好奇，Facebook网站为何是蓝色的？这是因为扎克伯格是色盲，无法识辨红色和绿色。在2010年，他曾对《纽约客》杂志说，“对我来说，蓝色是最丰富的颜色。我能看到所有蓝色的东西。”今天，我们已无法想象Facebook会变成其他颜色。蓝色已经成了它的标志性的颜色。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">教训：这里也有教训吗？是的。这体现出了一点儿人性化的东西。虽然很多人可能并不清楚扎克伯格是色盲，但是他从来不隐讳这一点。相反，这反而变成了对他有利的东西。它传递给人们的信息是，Facebook背后站着的其实是一个和我们一样有着缺陷的普通人。这一下子拉近了我们和他的距离。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，别忘了，有时候缺点也能变成优点。（乐学）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/019756.htm','2014-05-15 16:48:08',1,'/news/thumb/2014415/1400143688315.jpg','扎克伯格鲜为人知的五件事及教训','admin','乐学'),(123,'<div>\r\n	<img alt=\"出售手机业务后的诺基亚：网络业务盘子大 研发5G\" src=\"http://img1.gtimg.com/tech/pics/hv1/38/26/1595/103721543.jpeg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 宗秀倩 5月15日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这两年来，北京望京的摩托罗拉大厦园区大楼顶层的LOGO不断更替，先是加上了</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/NOK.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">诺基亚</span></a><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SI.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">西门子</span></a><span style=\"font-size:14px;\">通信，后来变成NSN，最近又要变成诺基亚网络了。“我们的物业很忙”诺基亚网络大中华区总裁马博策调侃最近的变化。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">LOGO更替的背后是一直在商业并购和整合。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2011年诺西收购摩托罗拉无线网络业务，随后，2013年，诺基亚全资收购诺西，诺西变成诺基亚的全资子公司，随着2013年，诺基亚手机业务出售给</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">，诺基亚的剩余业务，如网络业务、地图业务和高科技业务又在面临新一轮的整合。5月14日上午，马博策向媒体解读了这些变化。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">手机业务出售后，现金储备变强大了</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">马博策称，出售手机业务后，诺基亚拥有强大的现金流。在出售前，诺基亚拥有21亿欧元的现金流，交易完成后，出售行为会增加50亿欧元的现金流，总体现金流可达71亿。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财务的另一个变化是，销售额减少但运营利润增加。受手机业务亏损的影响，此前整个诺基亚的运营利润为负，在手机业务出售后，整体销售额会下降，运营利润从负数提升到11.4%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">网络业务盘子最大，知识产权利润最高</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">诺基亚出售手机业务后，剩余的业务有三块，网络业务、地图和高科技。高科技业务主要是知识产权领域投资以及技术的授权等。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从2013年的业绩来看，网络业务的营收是113亿欧元，地图是9.14亿欧元，高科技是5.29亿欧元。从非 IFRS运营利润来看，网络业务的利润率为9.7%，地图是5.2%，高科技是62.2%。知识产权的投资和技术授权虽然整体规模较小，但利润率颇高。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">就网络业务本身而言，已经实现7个季度的运营利润，连续10个季度实现正现金流，网络业务摆脱了曾经亏损的局面。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">马博策解释说，网络部门的盈利能力主要归功于较高的毛利润率，具体表现在软件与移动宽带在整体销售额中的占比增加，同时全球服务业务的效率提升。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4G拉动业绩，开始参与5G研究</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">马博策透露，中国4G网络快速发展推动大中国区净销售额提高25%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，诺基亚网络已经与大陆三大运营商在4G技术上均展开合作，支持中国移动(</span><a href=\"http://t.qq.com/CMCC#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)部署的TD-LTE网络已在全国18个省开始商用；在台湾地区成为运营商中华电信LTE网络的主要供应商， 同时还是中华电信4G供应商。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，5G的研究也在探索。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">诺基亚网络业务部门研究联盟负责人Werner Mohr认为，5G不会是一种全新的广域无线技术，而是会融合全新和现有的接入技术如LTE-A和 WiFi等。在一些关键性指标上，要远远优于4G。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">比如，5G流量会有10000倍增长，网络延迟缩短为1毫秒，如此短的网络延迟可以支撑自动驾驶的发展，到2020年，整个网络容量速度会达到10Gbit/s，用户即时接入的网速会达到100Mbit/s。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Werner Mohr表示，这个网络指标也给5G研究带来了很多挑战，在如何做到容量提升1000倍，能耗节省90%，网络延迟做到零中断，同时又可以为70000亿个无线设备连接，为70亿人服务，难度不小。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/010123.htm','2014-05-15 16:49:14',1,'/news/thumb/2014415/1400143754930.jpeg','出售手机业务后的诺基亚：研发5G 网络业务盘子大','admin','宗秀倩 '),(124,'<div>\r\n	<img alt=\"一组漫画让特斯拉CEO捐800万美元修建博物馆\" src=\"http://img1.gtimg.com/tech/pics/hv1/230/153/1595/103754120.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">交流电发明者尼古拉·特斯拉(Nikola Tesla)可能很快将拥有自己的博物馆了，这还要感谢特斯拉汽车(Tesla Motors)CEO伊隆·马斯克(Elon Musk)和漫画网站Oatmeal创始人马修·因曼(Matthew Inman)。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近，因曼通过众筹网站Indiegogo进行筹资，希望购买一座特斯拉曾在那里做过实验的厂房，该厂房很快将被拆迁。因曼成功融资150万美元用于购买该房产。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这是一个令人欣慰的消息，但距离目标尚远，因曼需要800万美元将这处房产变为特斯拉博物馆。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">周二，因曼发布了一组名为《拥有一辆Tesla Model S是什么感觉》的漫画，并在漫画中向特斯拉汽车CEO马斯克发出求助，而马斯克似乎也愿意帮忙。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">看看特斯拉汽车的名字，就是源自发明家尼古拉·特斯拉，而特斯拉汽车却并未向这个交流电的发明人支付任何费用，因为相关的名字和技术专利早已过期。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">因曼在漫画中写道：“你们不欠我们任何东西，使用特斯拉的名字，你们也做了不少好事。但需要提醒的是：特斯拉汽车现在是一家价值数十亿美元的公司，正在使用特斯拉的名字和技术，我们需要的只是一点帮助而已。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如今看来，因曼将顺利获得这笔资金。因为马斯克回应道：“我很愿意帮忙。”(谭燃)</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/030044.htm','2014-05-15 16:50:41',1,'/news/thumb/2014415/1400143841171.png','一组漫画让特斯拉CEO捐800万美元修建博物馆','admin','谭燃'),(125,'<div>\r\n	<img alt=\"谁在真正主宰视频流媒体服务？\" src=\"http://img1.gtimg.com/tech/pics/hv1/118/170/1595/103758343.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月15日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近，Netflix与Comcast签署的“对等互联协议”引起了人们对于视频公司与互联网服务供应商（简称ISP）关系的广泛热议。ISP掌管着互联网与终端用户连接的“最后一英里路”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不幸的是，人们对于对等互联协议（包括Netflix-Comcast协议）与网络中立之间的关系有很多误解。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">更糟糕的是，争论各方——传输供应商、CDN（内容发布网络）、ISP和内容供应商——都扭曲了事实。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">市场研究公司BI Intelligence最新发布的一份报告，详细考察了在线视频生态系统，解析了内容如何从视频服务供应商如Netflix和Hulu传输到观众的显示屏上，并确认了谁在真正主宰视频流媒体服务。该报告还研究了Netflix和Comcast之间的相互关系，以及有关网络中立的争论。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随着用户对于流媒体视频的胃口不断增大，相关的讨论会一直持续下去，例如如何更好地将内容呈现到用户的显示屏上，以及谁应该付费。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">下面是上述报告的几个要点：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1. 内容供应商——从Hulu和Netflix到中等大小的网络视频供应商——需要经过几层中间商才能将其内容发送给观众。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2. 传输供应商，如Cogent、Level 3和XO Communications，为传输视频提供了基本的管道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3. 内容发布网络（CDN），如Akamai和LimeLight，致力于让内容供应商以最优的价格获得最优的视频质量。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4. 传输和CDN价格的谈判存在很多影响因子，包括流量、宽带和使用时间等等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5. 为了更有效地控制视频传输的质量和成本，很多内容供应商建立了自己的CDN网络。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6. 内容供应商、CDN、传输供应商和ISP之间的关系，受“对等互联协议”支配。该协议规定了各方在不同价位上享有的流量大小。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">7. 在“网络中立”和“互联网自由”等模糊概念产生争议的背景下，为了推进各自的进程，内容供应商和ISP均歪曲了视频流媒体服务的经济学和运作机制。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">8. 从本质上来说，有关视频流媒体费用的争论归根结底是：在流媒体视频人气暴涨的情况下，谁该为此买单，以及提供什么质量的服务。（乐学）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/032862.htm','2014-05-15 16:51:24',1,'/news/thumb/2014415/1400143884894.jpg','谁在真正主宰视频流媒体服务？','admin','乐学'),(126,'<div>\r\n	<img alt=\"医疗保险初创公司Oscar融资8000万美元\" src=\"http://img1.gtimg.com/tech/pics/hv1/182/171/1595/103758662.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月15日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">决意动摇破碎的医疗行业的初创公司Oscar刚刚宣布完成了8000万美元的融资，公司估值达到近10亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Oscar于今年1月正式在纽约创立，公司创始人凯文纳泽米（Kevin Nazemi）、约书亚库什纳（Joshua Kushner）和马里奥施洛塞尔（Mario Schlosser）决心利用技术创建一家更优秀、更关心消费者的健康保险公司。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Oscar的网站经过精心设计，易于导航，它打算通过简化账单支付并允许用户通过手机免费与医生沟通等方式，超越传统的健康保险公司比如Aetna和UnitedHealth等。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据《福布斯》报道，这家公司目前已经拥有1.6万家客户，平均每家客户每年支付的服务费为4500美元。照此计算，Oscar的年收入大约为7200万美元，估值约为8亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本轮融资的主投资者是Formation8的乔伊朗斯代尔（Joe Lonsdale），其他的投资者还包括科斯拉创投（Khosla Ventures）、通用催化风投（General Catalyst Partners）和其他公司。Oscar打算利用这笔资金招募更多员工和向其他地区发展。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Oscar的首席执行官库什纳还创立了风投公司兴盛资本（Thrive Capital），对多家著名的初创公司比如Instagram、Warby Parker、Nasty Gal和MakerBot进行了投资。（林靖东）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/033753.htm','2014-05-15 16:52:10',1,'/news/thumb/2014416/1400186515319.jpg','医疗保险初创公司Oscar融资8000万美元','admin','林靖东'),(127,'<div>\r\n	<img alt=\"明星创业公司Square遭遇财务危机\" src=\"http://img1.gtimg.com/tech/pics/hv1/76/29/1596/103787371.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月15日消息，即使在瞬息万变的互联网行业中，移动支付初创企业Square的命运转变也有些令人感到措手不及。几乎在一瞬间，由社交网络Twitter联合创始人杰克•多西(Jack Dorsey)领导下的Square就从业界的宠儿沦为大祸临头的失败者。有报道称，Square是一家发展迅速的企业，但亏损严重。该公司烧钱迅速快、资产负债表萎缩，可供选择的余地越来越小。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，《财富》网站的资深撰稿人麦格尔•赫尔福特(Miguel Helft)在与Square高层、董事会成员、熟知该公司情况的消息人士接触，并查看了Square一系列内部邮件后发现，Square的故事远比其他媒体描述的要复杂。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">首先Square是一家支付公司，其已经建立相当规模、发展迅速的支付业务。现如今，Square打算以此为跳板，进入其他更有利可图的领域。本周，Square本着这样的打算推出了两款新产品，但前景难料。就在此前不久，该公司刚刚放弃了上线已经三年的Square Wallet业务。该业务也是Square主推业务之一。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Square尚未实现盈利，但是其亏损的主要原因是在新产品上的重金投入。仅在过去一年中，Square新增员工300人，目前旗下员工总数超过900人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一些早前的报道暗示，Square在进行每笔转账交易时都在亏本。不过，该公司的内部邮件显示，除去其他成本，每笔转账的毛利率维持在34%的健康水平。每进行100美元的转账，该公司的收取3美元作为营收，而毛利润则为1美元。根据公司内部邮件，Square每年处理的金额在300亿美元，其每年的毛利润为3亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">红杉资本(Sequoia Capital)合伙人、Square董事会成员罗洛夫•博沙(Roelof Botha)表示：“转账所带来的毛利已经用来支付公司非增长性开销。如果我们想说的话，明天就可以实现盈利，但前提是‘我们不再进行投入维持增长。’”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，博沙拒绝透露任何财务数字。Square发言人亚伦•扎莫斯特(Aaron Zamost)也拒绝就公司的任何具体财务信息进行置评。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Square内部预计，公司将在一年后扭亏为盈。该公司邮件也提出了另一种方案，先进行更具侵略性的投资，其盈利时间可能再往后推几个月，但公司的盈利能力将提高。Square也承认，从现在到盈利期间，公司的现金储备将下降，但足以支撑到盈利实现。近期，Square还从多家银行锁定总额为2.25亿美元的信贷额度，这一数字高于此前的报道，也为公司带来更多的喘息空间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">熟知Square的消息人士称，公司的预计相对保守，因为其并没有包括新产品所带来的收益。他们预计这些新产品将令公司更早地实现盈利。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">内部邮件显示，Square在2013年的亏损额度为1亿美元，但根据更为通用的EBITDA标准，其亏损额为6700万美元。这一亏损额并不计入与星巴克合作的亏损，但要比公司预期少1200万美元，较上年相比收窄。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">针对未来的营收预计，公司董事博沙也拒绝置评，但称Square的业务具有很强的预测性，这也意味着营收的增幅与此前的预测相吻合。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">《华尔街日报》近期的报道令Square高管备受关注。报道称，Square的现金即将耗尽、并在寻求出售给资金更为雄厚的企业，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)就是最受瞩目的潜在买家。随后，Square异常愤怒地否认其正与其他公司就出售进行对话。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">消息人士称，Square确实与谷歌有过接触，但谈论的是谷歌旗下风投机构Google Ventures可能对Square进行的投资计划。目前，Google Ventures和Square均拒绝对此事置评。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前尚不清楚Square是否已经成功从投资者募集了3.67亿美元。据公司邮件透露，该公司在去年底还有1.55亿美元现金。Square的高管对从投资者募集资金的前景感到乐观。该公司近期允许员工在二级市场出售有限的股份，结果需求量对供给量的差额为4000万美元。虽然通过销售股份可以募集额外的资金，Square并没有选择这么做。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一个重要的问题是，Square的市场估值是否将增长至50亿美元。硅谷顶尖风投Union Square联合创始人弗莱德•威尔逊(Fred Wilson)近期在博客中谈到了“估值陷阱”。 威尔逊写道：“天价估值，高企的烧钱率，再加上令人失望的IPO市场，这些因素综合起来不会让人感到舒服。”威尔逊同时表示，Square和Box都可能面临这样的局面，他希望这两家公司能绕过估值陷阱，但必须做出艰难的抉择。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Square公司董事博沙对此一点都不担心。博沙表示，他见过不少公司的估值超过业务预期，并因为估值的下降在融资方面遭受巨大损失，但对于Square来说，不存在这方面的问题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">由于今年不计划上市，目前日益冷却的IPO市场和科技股近期的跌跌不休都不是Square关注的重点。他们现在可能更加担心公司的核心业务是否将按既定的轨道增长。若外部竞争、经济增长放缓以及消费者和商家的消费习惯令其核心业务停止增长，Square明年盈利的如意算盘可能就难以实现了。（李路）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/050315.htm','2014-05-16 04:44:01',1,'/news/thumb/2014416/1400186641454.jpg','明星创业公司Square遭遇财务危机','admin','李路'),(128,'<div>\r\n	<img alt=\"专访经济学家布莱恩·阿瑟：技术并非凭空出现\" src=\"http://img1.gtimg.com/tech/pics/hv1/162/20/1596/103785162.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">著名经济学家布莱恩·阿瑟（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯（朱旭冬）5月15日消息，今天著名经济学家、研究经济正反馈机制的先驱布莱恩·阿瑟在清华大学和部分学生进行了一次近距离交流，分享了他的新书《技术的本质》中的核心观点。在这场交流之后，腾讯科技对其进行了专访。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布莱恩的经济正反馈机制非常适用于科技和诸多其他行业，因此他的理论不仅被很多学者推崇，同时也成为了很多商业人士的理论依据。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">过去经济学家大多认为产品生产的越多，成本就越高，而布莱恩的理论则认为产品越多成本会显著降低。比如</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">的第一套Windows操作系统可能话了5000万美元来研发，但第二套的成本可能只有3美元，也就是一张光盘的费用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">《技术的本质》一书出版于2009年，此次由湛庐文化将此书引入中国出版了中文版。布莱恩表示，这本书的名字曾引发了一些争议，但他认为，所有技术也都是来自于自然。“比如你们手中的手机，这是一个科技产品，可能是塑料的或者金属的，这些组成部分都来自大自然。”他说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布莱恩表示，《技术的本质》这本书有三个核心观点：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1，几乎所有技术都来自于此前已经存在的技术，就好比C语言就是调动了多个功能最终实现一个功能。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2，技术都是由技术形成的，这句话可能有点难以理解。举例来说，火车的发明其实包含了多种技术，比如蒸汽技术，但蒸汽技术又可以被分解为燃料技术、动力技术等等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3，技术和</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:14px;\">生物</span></a><span style=\"font-size:14px;\">一样都会进化，但是生物的进化多来自变异，而技术的进化则来自不同技术组合所发生的变化。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布兰恩强调，技术并不会凭空发生。莱特兄弟发明飞机之前花了大量的时间来研究制造飞机的各种可能性，研究了飞机的不同部件应该怎样组合。“没有一项技术是其发明者在洗澡时想到的。发明一项技术一定需要很长时间的积累。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然布莱恩是一名经济学家，但是他大学最初学习的专业是工程学，毕业后，他也在多家技术公司工作。但是，他一直不知道技术是什么。事实上，他问了很多人，但没有人能给他一个明确的回复。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我问他们技术是什么、创新是什么，他们都答不上来。”布莱恩说。强烈的好奇心让他开始研究技术。他认为技术也是自然科学的一部分，甚至技术和艺术、文化也非常类似。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">曾经有程序员把中国古诗中最常见的字词进行了分析，做了一个自动写诗的应用。布莱恩认为，这就可以算作用技术写诗，因为诗其实就是不同文字的组合。但他同时认为，这种方式写诗不一定能创作出最好的诗词，因为人在写诗的时候往往是带有感情的。“现在也有自动谱曲的软件，但是能谱写出可以和巴赫、贝多芬作品一样出色的曲子吗？至少我现在不信。”他说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">那为什么技术没有成为艺术呢？他认为这在某种程度上是技术并不如那么容易被看到，而且人们有时候做的不够好。比如一台普通的</span><a href=\"http://digi.qq.com/nbook/nbook.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">笔记本</span></a><span style=\"font-size:14px;\">电脑，外面看起来像是一件艺术品，但是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">公司创始人史蒂夫·乔布斯会说，打电脑人们会发现里面其实非常混乱。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">现在人们对技术仍然存在一定的争议，有人认为技术也分好坏，比如原子弹的发明到底是一件好事还是坏事。但布莱恩认为，这并不是一个能简单判断的问题，技术本身并没有好坏，而要看人们如何利用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">布莱恩以硅谷举例，如果硅谷公司认为技术能帮他们达到某种目的，那肯定会去做。而如果那样做能赚钱的话，这些公司会做的更快。“关于技术的好坏我们可以一直争论，但做出最终只能由真正非常睿智的人才能做出判断。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在谈到中国的创新时，布莱恩表示中国现在充满的创新，只是更多的创新出现在商业层面（比如说Copy to China这种现象），而并非是技术上的创新。但他认为当中国商业社会更加成熟之后，肯定会带来技术的创新。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/049420.htm','2014-05-16 04:45:08',1,'/news/thumb/2014416/1400186708037.jpg','经济学家阿瑟谈技术的本质：技术由累积而形成','admin','samxiao'),(129,'<div class=\"mbArticleSharePic hover\" style=\"margin:0px auto;padding:0px;\">\r\n	<img alt=\"淘宝返利规则将调整 封杀URL查询返利\" src=\"http://img1.gtimg.com/tech/pics/hv1/171/205/1595/103767321.jpg\" /><span style=\"font-size:14px;\"></span>\r\n</div>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;font-size:14px;\">腾讯科技讯</span><span style=\"font-size:14px;\">&nbsp;5月15日消息，阿里妈妈发布《关于返利类淘宝客推广规则调整的通知》（以下简称《通知》），对返利类型推广的规则进行调整，《通知》称自2014年7月1日零点起，淘宝客不得在返利类型的渠道内向用户提供淘宝平台商品链接、店铺链接等，同时，自2014年6月1日起，聚划算将不再支持返利类型淘宝客的推广。</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业内人士认为，此举是淘宝返利规则的一次大调整，意味着将全面封杀URL查询返利。返利网、淘粉吧、米折网等将会被波及。将来单纯依靠淘宝的返利网将难以发展。</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以下是《通知》的全文：</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-weight:800;font-size:14px;\">关于返利类淘宝客推广规则调整的通知</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">各位亲爱的淘宝客：</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为了保障淘宝商家的利益，维护商家的正常经营秩序，自2014年7月1日零点起，淘宝客的推广渠道如为返利类型，需遵循以下推广规则：</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1）淘宝客不得在返利类型的渠道内向用户提供淘宝平台商品链接、店铺链接、店铺名称及掌柜旺旺名的搜索服务功能。</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2）返利类型渠道内如涉及</span><span class=\"infoMblog\"><a class=\"a-tips-Article-QQ\" href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a></span><span style=\"font-size:14px;\">相关品牌，如淘宝返利，天猫返利等，必须链接至阿里妈妈官方推广频道或活动页面（如爱淘宝），不得以任何形式自行搭建或推广与淘宝、天猫、聚划算等购物相关的非官方页面（包括但不限于购物频道、商城频道等）。</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同时，自2014年6月1日起，聚划算将不再支持返利类型淘宝客的推广，并不再支持基于参加聚划算推广并已开团的商品或服务成交而产生的佣金。即卖家无需向淘宝客支付前述佣金，淘宝客亦不得要求卖家支付前述佣金。</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为了帮助大家完成过渡，我们将协助广大淘宝客会员从即日起开始排查与调整，在新规则执行之日后仍未完成调整的淘宝客，阿里妈妈将按照相关规范进行处理。</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里妈妈</span>\r\n</p>\r\n<p style=\"font-size:16px;color:#333333;font-family:微软雅黑, Tahoma, Verdana, 宋体;background-color:#FFFFFF;text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2014年5月15号</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/037963.htm','2014-05-16 04:46:16',1,'/news/thumb/2014416/1400186776442.jpg','淘宝返利规则将调整 封杀URL查询返利','admin','lincelkong'),(130,'<div>\r\n	<img alt=\"美国公司推出新款游戏 主角酷似金正恩(组图)\" src=\"http://img1.gtimg.com/tech/pics/hv1/141/218/1595/103770606.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国公司筹备发行的新视频游戏《光荣领袖》</span>\r\n</p>\r\n<div>\r\n	<img alt=\"美国公司推出新款游戏 主角酷似金正恩(组图)\" src=\"http://img1.gtimg.com/tech/pics/hv1/140/218/1595/103770605.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国公司筹备发行的新视频游戏《光荣领袖》</span>\r\n</p>\r\n<div>\r\n	<img alt=\"美国公司推出新款游戏 主角酷似金正恩(组图)\" src=\"http://img1.gtimg.com/tech/pics/hv1/142/218/1595/103770607.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国公司筹备发行的新视频游戏《光荣领袖》</span>\r\n</p>\r\n<div>\r\n	<img alt=\"美国公司推出新款游戏 主角酷似金正恩(组图)\" src=\"http://img1.gtimg.com/tech/pics/hv1/143/218/1595/103770608.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国公司筹备发行的新视频游戏《光荣领袖》</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俄新网RUSNEWS.CN莫斯科5月14日电 据《卫报》报道，根据美国公司筹备发行的新视频游戏《光荣领袖》（Glorious Leader）情节，朝鲜领袖金正恩应该击退成群“资本家”的猛攻。</span>\r\n</p>\r\n<div>\r\n	<div>\r\n		<div>\r\n			<div>\r\n			</div>\r\n<a><img src=\"http://vpic.video.qq.com/123/u0129ij9q4y.png\" alt=\"看金三胖单挑美帝 美国无底线恶搞金正恩游戏截图\" height=\"105\" width=\"190\" /></a> \r\n		</div>\r\n		<div>\r\n			<h2>\r\n				<a target=\"_blank\" href=\"http://v.qq.com/page/u/4/y/u0129ij9q4y.html\"></a> \r\n			</h2>\r\n			<p>\r\n				<br />\r\n			</p>\r\n			<p>\r\n				<br />\r\n			</p>\r\n			<p>\r\n				<br />\r\n			</p>\r\n		</div>\r\n	</div>\r\n	<div>\r\n		<div>\r\n			<h3>\r\n				<a target=\"_blank\" href=\"http://v.qq.com/page/u/4/y/u0129ij9q4y.html\"><span style=\"font-size:14px;\">看金三胖单挑美帝 美国无底线恶搞金正恩游戏</span></a> \r\n			</h3>\r\n<a><span style=\"font-size:14px;\">收起</span></a> \r\n		</div>\r\n		<div>\r\n			<div>\r\n				<div>\r\n				</div>\r\n			</div>\r\n			<div>\r\n				<div>\r\n					<span style=\"font-size:14px;\">推荐视频：</span>\r\n					<ul>\r\n						<li>\r\n							<a href=\"http://v.qq.com/news/?vid=z0129xuljtb\" target=\"_blank\"><span style=\"font-size:14px;\">大陆贵妇团赴台买春高价租嫩男</span></a> \r\n						</li>\r\n					</ul>\r\n				</div>\r\n<a><span style=\"font-size:14px;\">取消自动播放</span></a> \r\n			</div>\r\n		</div>\r\n<a></a> \r\n		<div>\r\n			<div>\r\n				<p>\r\n					<span style=\"font-size:14px;\">相关视频</span>\r\n				</p>\r\n			</div>\r\n			<div>\r\n				<div>\r\n					<div>\r\n						<ul>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/123/u0129ij9q4y.png\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">看金三胖单挑美帝 美国无底线恶搞金正恩游戏</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：30</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/80341046/e0123ihfdld_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩放话干掉美国 打造天下第一强国</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：380289</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/71038837/s0014mo01uk_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩视察空军王牌部队后观看军嫂表演</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：421</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/70648435/y0129lv56sn_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">美推新闯关游戏：金正恩大败美国</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：6801</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/73921331/k0011udg23a_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">人民日报误将恶搞当新闻 称金正恩是万人迷</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：88951</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/78061411/u0011pdkcq9_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">网友恶搞动画：鸟叔大战金正恩</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：104232</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/95302887/9Fxg8FA9jyN_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">美国准备在金正恩身上赌一把？</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：11092</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/69863929/s0013l2a9uu_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">罗德曼送金正恩超1万美元礼物遭美国财政部调查</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：69232</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/72366006/m0013xohn08_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩新年讲话提及张成泽 警告美国或引发核浩劫</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：219194</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/61387092/g0012k7uiyq_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩视察特种部队称已经无必要与美国对话</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：383382</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/56130112/z00122qsauw_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">单挑爆红人：金正恩首派特使访华 曾因贪污被双规</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：36180</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/34608337/a0014yz4phl_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">朝鲜：金正恩近日频频现身视察空军</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：144</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/83131362/k0014r92yc9_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩视察朝空军大赛</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：381</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/47100983/z001442csqk_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩视察朝鲜空军大赛 朝方战机“总动员”</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：100128</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/95437362/z0014ssvyj4_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">崔龙海陪同金正恩观空军大赛 地位似未动摇</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：21424</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/29696414/s0014ydhmzz_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩指导战斗飞行技术大赛</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：356</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/60004020/u00145ria4u_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩携妻观看空军飞行大赛</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：794</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/52933534/f0128mqv8i8_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩携妻观看朝鲜空军飞行大赛</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：29509</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/58329461/l0128n53hxh_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">崔龙海降职后穿便装随金正恩视察</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：10617</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/76262929/d0014clhp7j_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩导师黄炳誓任军方二把手</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：12152</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/62249111/z0014j3w5je_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">朝鲜 金正恩姑姑亮相 打破肃清传闻</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：1602</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/13618538/r0128maxd8k_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩亲信取代崔龙海任朝鲜军方最高职</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：135708</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/87142278/s0014aaoofh_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩亲信黃炳誓取代崔龙海任军方最高职位</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：145539</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/62234041/e00141r5zl1_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩亲信黃炳誓取代崔龙海出任军方最高职位</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：16462</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n							<li>\r\n								<div>\r\n									<div>\r\n										<a><img src=\"http://vpic.video.qq.com/50991/c0128guil97_160_90_3.jpg\" alt=\"\" width=\"130\" height=\"80\" /></a> \r\n									</div>\r\n									<div>\r\n										<span style=\"font-size:14px;\">金正恩姑母重新“亮相”破肃清传闻</span>\r\n										<p>\r\n											<span style=\"font-size:14px;\">播放：158450</span>\r\n										</p>\r\n									</div>\r\n								</div>\r\n							</li>\r\n						</ul>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</div>\r\n<div>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">正式预告片片头向观众们展示金正恩的档案照，他似乎在筹备击退外国侵略，随后才是以90年代小游戏8位机风格体现的该游戏自身的画面。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">游戏中的“光荣领袖”要与美国空降兵在平壤两米宽的街道上战斗、焚烧美国国旗、骑独角兽疾驰并销毁敌人的军事技术设备。预告片以金正恩与篮球运动员丹尼斯罗德曼会面结束。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据开发商Moneyhorse Games公司经理杰夫·米勒说，公司没有试图侮辱或取笑朝鲜政府。他称该公司游戏定位于年龄在20-30岁热爱复古风格游戏的用户。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">米勒承认，他惊讶于韩国居民对这个游戏的兴趣。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">金正恩屡遭游戏“恶搞”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这已经不是金正恩第一次成为游戏里的“主角”了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年11月，俄罗斯艺术家就曾开发了一款名为“Slot Dictator”的手机游戏，将朝鲜第一劳动党书记金正恩做为卡通人物出现在其中，通过搞笑的动作来模仿金正恩。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Slot Dictator是老虎机和独裁者的合成词。像普通老虎机一样，这个游戏只要有三个相同的图片出现就算赢。游戏中有金正恩、导弹、核按钮、朝鲜国旗、炸薯条等图片。凑齐三个导弹在一排后，就会出现发射导弹的动画。出现三个麦当劳薯条在一排的话，就会出现金正恩蘸着番茄酱吃薯条的动画效果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140515/040064.htm','2014-05-16 04:47:59',1,'/news/thumb/2014416/1400186879681.jpg','美公司推新游戏：金正恩骑独角兽单挑美国大兵','admin','honestsun'),(131,'<div>\r\n	<img alt=\"谷歌联合创始人拉里·佩奇\" src=\"http://img1.gtimg.com/tech/pics/hv1/0/39/1596/103789845.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)联合创始人拉里·佩奇</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月16日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按照惯例，谷歌联合创始人拉里·佩奇(Larry Page)和塞吉·布林(Sergey Brin)刚刚向股东发布了2014年公开信(由佩奇撰写)。与往年一样，佩奇对谷歌的未来进行了畅想，如何实现目标，以及未来需要征服哪些事情等等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">毫无疑问，佩奇在公开信中谈到了一些很平常的事情：如搜索、电子邮件和Chrome的整合，让用户通过</span><a href=\"http://digi.qq.com/nbook/nbook.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">笔记本</span></a><span style=\"font-size:14px;\">、手机，甚至是电视无缝访问所需内容。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但佩奇也谈到了一些令人好奇的事情，主要包括以下5个方面：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1. 当日送达</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我们对谷歌“Shopping Express”当日送达服务感到兴奋，该服务在用户下单当日即可将商品送达。虽然目前尚未在全国范围内推出，但已经对</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">构成了威胁。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2.对抗死亡</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“在医疗健康市场，我们有Calico(谷歌一个秘密项目，旨在对抗死亡或至少延长人类寿命)。Calico由</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:14px;\">生物</span></a><span style=\"font-size:14px;\">科技公司Genentech前CEO阿特· 莱文森(Art Levinson)领导，主要专注于健康和长寿研究。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这里的关键字是“长寿”，看来佩奇真的相信，人到了80岁不一定就要接受自然衰老。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">3.优秀的设计</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“开发出一个出色、有效的界面是件很困难的事情。为用户提供更多的选择，就意味着他们需要更多的时间才能完成任务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当前，人们还在谈论谷歌主页的简洁，这也正是我们成功的一个很重要部分。因此，同样的原则没有理由不适用于其他产品。尤其是在当前，人们有着如此多的设备，如此多的选择，如此多的干扰。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这一条之所有趣，是因为谷歌的产品一向很丑。在科技市场谈及好的设计时，人们一定会想到</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">，而非谷歌。看来佩奇似乎意识到，设计是谷歌亟待完善之处。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">4.对话、人工智能搜索</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“关联度的提升让搜索变得更加自然，而不再是机械地把一堆关键词敲进电脑里。我们距离该目标越来越近了：首先问艾菲尔铁塔有多高，然后再问“它”是何时建造的。理解“它”在不同环境下所指代的东西，我们就可以把搜索变得更‘健谈’。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于许多人而言，这似乎不可想象。但让计算机以自然语言模式处理人类搜索请求将是人工智能技术的一大进步。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5.50亿人口尚未接入互联网</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“目前全球仅有20亿人口接入互联网，还有50亿人被拒之门外。今天我们有如此丰富的信息，但还有2/3的人口没有最基本的互联网连接，这简直是个悲剧。”看来谷歌需要到更多发展中国家开展业务了。(谭燃)</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/001332.htm','2014-05-16 04:50:00',1,'/news/thumb/2014416/1400187000724.jpg','谷歌致股东公开信：未来我们要征服这5大领域','admin','alonliu'),(132,'<div>\r\n	<img alt=\"激进投资伊坎继续增持苹果股票 减持Netflix\" src=\"http://img1.gtimg.com/tech/pics/hv1/40/63/1596/103796005.jpeg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯 5月16日消息，亿万富豪、激进投资人卡尔·伊坎（Carl Icahn）周四向美国证券交易委员会（SEC）提交的13-F监管文件显示，他在第一季度增持了<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\">eBay</a>和<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>的股票，并减持了订阅制流媒体服务提供商Netflix的股票。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	监管文件显示，截至3月31日，伊坎已持有eBay大约2780万股流通股。今年4月，eBay宣布与伊坎达成和解，从而结束了双方长达数月之久的争论。根据和解协议，伊坎将放弃之前提出的分拆PayPal业务和任命两名新董事的提议。eBay则接受伊坎之前的建议，任命大卫·多尔曼（David Dorman）为独立董事，并且避免了可能到来的代理权争夺。在和解协议中，还有一份保密协议，eBay同意不会禁止或者阻碍伊坎与公司董事或者高管对话。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	该文件还显示，伊坎在第一季度还增持了苹果的股票。伊坎目前已持有超过750万股苹果股票，增持约280万股。截至目前，伊坎持有的苹果股票市值已超过40亿美元。伊坎在去年8月披露持有大量苹果股票，并表示苹果股价被严重低估。此后伊坎一再敦促苹果首席执行官蒂姆·库克（Tim Cook）推进股票回购。今年2月，伊坎宣布放弃敦促苹果额外回购500亿美元股票的提议。伊坎表示，考虑到苹果近期已采取行动大规模回购股票，以及代理人顾问公司<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/ISS.N.htm\" target=\"_blank\">ISS</a>的反对，已经没有理由再继续坚持对苹果回购股票的提议。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	不过苹果在今年4月宣布把回购规模从去年宣布的600亿美元追加至900亿美元，并把季度派息提高8%左右。苹果还宣布，将在今年6月按照1比7的比例进行拆股。伊坎对此表示，他完全赞成苹果追加派息的计划，并对该公司第二财季的财务数据感到非常满意。伊坎还表示，他“依然认为苹果股价遭到大幅低估，许多分析师并不了解这家公司。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	不过对待Netflix，伊坎则采取了完全不同的做法。截至今年3月底，伊坎已将持有的Netflix股票数量减持至220万股。近几周以来，类似Netflix这样的高成长股票股价均出现了大幅下滑。在过去的三个月时间中，Netflix股价累计跌幅已达到21%。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	伊坎在去年第四季度抛售了所持有的逾半数Netflix股票。他此前提交的监管文件显示，在截至2013年12月31日添加到日历的第四季度，伊坎持有266.5557万股Netflix股票，当季度抛售了287.5509万股。伊坎的抛售给他带来了可观的收益。2012年11月19日，伊坎首次大量买入Netflix的股票。根据Netflix提交给美国证券交易委员会的文件，当时伊坎的平均买入价格为58美元，持有429.1066万股，持股比例为9.98%。Netflix股价周四在纳斯达克证券市场报收于344.19美元。过去52周，该公司最高股价一度达到458.00美元。（明轩）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/006792.htm','2014-05-16 08:54:55',1,'/news/thumb/2014416/1400201695712.jpeg','激进投资伊坎继续增持苹果股票 减持Netflix','admin','明轩'),(133,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 5月16日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿（交易代码：QUNR）今天发布财报。报告显示，去哪儿第一季度总营收为3.355亿元（约合5400万美元），比去年同期增长86.3%，比上一季度增长33.7%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">归属于去哪儿股东净亏1.836亿元（约2950万美元），上一季度亏损1.216亿元，连续两个季度亏损超过3亿元，去年同期归属于去哪儿股东的净利润2430万元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿与</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">去年达成“知心搜索”合作：去哪儿在PC端对百度“知心搜索” 旅游产品和旅游类中间页独家运营权，该独家运营权的权利内容涉及到机票、酒店和商业性度假产品。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">财报显示，第一季度来自于去哪儿与百度知心合作协议的在线营销支出为6690万元（约合1080万美元）。这一支出加大了去哪儿的季度亏损。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿Q1营收3.355亿元 同比增86.3%</span> \r\n</p>\r\n<div>\r\n	<img alt=\"去哪儿财报图解：半年亏3亿 首季支付百度6690万\" src=\"http://img1.gtimg.com/tech/pics/hv1/124/146/1596/103817254.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度总营收为3.355亿元（约5400万美元），比去年同期增长86.3%，比上一季度增长33.7%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度移动营收为1.063亿元（约1710万美元），比去年同期增长415.1%，在总营收中所占比例为31.7%，上一季度所占比例为20.5%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿Q1按绩效付费营收3.191亿元 同比增89.6%</span> \r\n</p>\r\n<div>\r\n	<img alt=\"去哪儿财报图解：半年亏3亿 首季支付百度6690万\" src=\"http://img1.gtimg.com/tech/pics/hv1/135/146/1596/103817265.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度按绩效付费（P4P）营收为3.191亿元（约合5130万美元），比去年同期增长89.6%，比上一季度增长40.5%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按绩效付费营收中，去哪儿第一季度来自于航班和航班相关的营收为2.354亿元（约合3790万美元），比去年同期增长89.8%。去哪儿航班和航班相关营收的同比增长，主要由于总预估航班机票预订量增长了75.2%，以及由于每张机票收入增长8.4%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度按绩效付费的酒店营收为6180万元（约合990万美元），比去年同期增长54.8%。去哪儿按绩效付费酒店营收的同比增长，主要由于总预估酒店客房间夜预订量增长了100.7%，但被每酒店客房间夜收入下滑22.7%所略微抵消。去哪儿每酒店客房间夜收入的下滑，主要是打折计划相关促销成本以及平均每日客房间费用下滑的结果。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿Q1毛利2.621亿元 毛利率78.1%</span> \r\n</p>\r\n<div>\r\n	<img alt=\"去哪儿财报图解：半年亏3亿 首季支付百度6690万\" src=\"http://img1.gtimg.com/tech/pics/hv1/156/146/1596/103817286.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度毛利润2.621亿元（约合4220万美元），比去年同期增长76.8%。去哪儿第一季度毛利率为78.1%，相比之下去年同期为81.1%，上一季度为79.8%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿毛利润的同比增长，主要由于营收大幅增长，但被营业税和附加费的增长、短信服务费的增长、以及营收成本中计入的在线支付处理费用所部分抵消。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿Q1费用4.36亿元 同比增223%</span> \r\n</p>\r\n<div>\r\n	<img alt=\"去哪儿财报图解：半年亏3亿 首季支付百度6690万\" src=\"http://img1.gtimg.com/tech/pics/hv1/169/146/1596/103817299.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度费用为4.36亿元，较上一季度增长45%，较上年同期增长223%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度产品开发支出为1.213亿元（约合1950万美元），比去年同期增长116.8%。去哪儿产品开发支出的增长，主要由于员工人数有所增加，与之相关的薪酬、福利及其他员工相关支出因而增长。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度产品采购支出为3890万元（约合630万美元），比去年同期增长358.2%6，主要由于公司旗下产品采购团队的员工人数增加。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度产品采购支出比去年同期增长362.7%，在总营收中所占比例为11.4%，相比之下去年同期所占比例为4.5%，上一季度所占比例为11.3%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度销售和营销支出为1.308亿元（约合2100万美元），比去年同期增长158.8%。去哪儿销售和营销支出的增长，主要由于销售和营销员工人数增加，从而令薪酬和福利支出增长；以及由于在线营销支出增长。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度总务和行政支出为7830万元（约合1260万美元），比去年同期增长293.0%。去哪儿总务和行政支出的增长，主要由于股权奖励支出大幅增长，以及由于员工人数增加和平均薪水提高，从而令薪酬和福利支出增长。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿Q1运营亏损1.741亿元 运营利润率-52%</span> \r\n</p>\r\n<div>\r\n	<img alt=\"去哪儿财报图解：半年亏3亿 首季支付百度6690万\" src=\"http://img1.gtimg.com/tech/pics/hv1/176/146/1596/103817306.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿第一季度运营亏损为1.741亿元（约合2800万美元），去年同期运营利润为1330万元，上一季度运营亏损为1.007亿元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去哪儿Q1净亏1.836亿元 上年同期为盈利</span> \r\n</p>\r\n<div>\r\n	<img alt=\"去哪儿财报图解：半年亏3亿 首季支付百度6690万\" src=\"http://img1.gtimg.com/tech/pics/hv1/180/146/1596/103817310.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">第一季度归属于去哪儿股东的净亏损为1.836亿元（约合2950万美元），去年同期归属于去哪儿股东的净利润为2430万元，上一季度归属于去哪儿股东的净亏损为1.216亿元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">归属于去哪儿股东的净亏损的扩大，主要由于公司继续在产品开发领域中进行投资，并采取了销售和营销相关措施来推动公司业务增长，以及由于股权奖励支出增长。去哪儿第一季度每股美国存托凭证基本和摊薄亏损均为1.62元（约合0.27美元）。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不计入来自于百度知心合作协议的在线营销支出、股权奖励支出以及与百度所贡献的免费用户流量有关的非现金支出（不按照美国通用会计准则），去哪儿第一季度调整后净亏损为5570万元（约合900万美元），去年同期调整后净利润为3330万元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至2014年3月31日，去哪儿所持有的现金、现金等价物和短期投资总额为14.79亿元（约合2.379亿美元）。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/016565.htm','2014-05-18 07:29:40',1,'/news/thumb/2014418/1400369639335.jpg','去哪儿财报图解：半年亏3亿 首季支付百度6690万','admin','雷建平'),(134,'<div>\r\n	<img alt=\"华为披露全球化商业理念：整合全球价值链\" src=\"http://img1.gtimg.com/tech/pics/hv1/210/36/1597/103854315.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 郭晓峰 5月16日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">关于华为全球化的商业理念一直业界关注的焦点，在今日青岛举行的亚太经合组织（APEC）工商界主题论坛上，华为副董事长兼轮值CEO胡厚崑表示，在今天的商业环境下，资本、物资、人才和知识方便地全球流动，信息技术高度发达，使得“全球化公司”和“本地化公司”这两个过去常被分离的概念正变得越来越统一。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从发言可以看出，华为的商业实践就是要将“全球化”与“本地化”结合在一起，整合全球最优资源，打造全球价值链，并帮助本地创造发挥出全球价值。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">华为认为，任何全球化的公司，都必须关注不同市场的本地化需求，并提供相应的差异化产品和服务，这样才能将全球的成功延伸到本地市场。另一方面，在这个经济高度全球化，信息技术尤其是互联网应用高度发达的时代，本地化的文化、产品、服务往往有可能用比过去短得多的时间被推广到全球，这使更多的本地化公司具备了全球化的潜力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">两年前，“江南style”风靡全球最引人注目的不仅仅是全球有几百万人会唱这首其实他们并不懂的歌，而是这首歌从在韩国诞生到达到全球10亿次访问只用了短短的5个月时间。ZARA在10年前还是一个西班牙的无人知晓的品牌，然而今天它已经成为了全球时尚的标志。这些，都说明了全球化的魅力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于本地化，胡厚崑指出，本地化不仅仅意味着本地雇佣、本地纳税和提供适合本地需求的产品。更高层次的本地化应该是通过与本地优秀企业进行产业分工合作，将他们的创新能力整合到华为的全球价值链，并通过这个价值链将本地的创新成果推广到全球，使本地创造真正发挥出全球价值。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于全球化，他强调，全球化不仅仅意味着运营的全球化、投资的全球化，更需要建立一种新的商业理念。这种理念是将全球市场视为一个单一市场，像在单一市场一样构建全球的价值链，并将全球的优质资源都整合到这个价值链里面，使每一个单一节点上创造的价值都有可能在全球范围内被分享。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据腾讯科技了解，华为在全球各地拥有优质资源的地方建立了十几个不同的研究所和许多专业能力中心，又通过这些研究所与能力中心与几百个合作伙伴进行合作，实际上，华为正将自己的全球价值链打造成一个全球化的创新平台，在全球的客户都可以通过这个平台用最短的时间分享到来自全球不同地方的创新成果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，华为在全球各地拥有优质资源的地方建立了16个研究所、28个联合创新中心和40多个专业能力中心。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">华为在全球不同的国家和大量优秀公司合作，华为在全球提供的产品里高度整合了来自全球合作伙伴的能力。华为在全球业务发展的同时，合作伙伴的业务也得到了良性发展。作为一个全球化的企业公民，华为与本地伙伴在全球范围内的共赢是华为所带来的独特价值。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而在这些实践的背后，更重要的是开放的商业理念。尤其是“全球化”与“本地化”的概念在企业的商业实践中应该是高度统一的。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/040659.htm','2014-05-18 07:32:19',1,'/news/thumb/2014418/1400369539687.jpg','华为披露全球化商业理念：整合全球价值链','admin','郭晓峰'),(135,'<div>\r\n	<img alt=\"新一代电视OLED为何被三星索尼放弃？\" src=\"http://img1.gtimg.com/tech/pics/hv1/175/215/1596/103834900.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星曾是OLED电视的推动者</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯（范蓉）5月16日消息，三星索尼宣布对OLED电视的放弃，让一直坚守的LG陷入孤立状态。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据外媒报道，受产能效率低以及价格竞争影响，韩国</span><a href=\"http://t.qq.com/samsungelectronicbj#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">三星电子</span></a><span style=\"font-size:14px;\">已经放弃了生产下一代OLED电视显示屏的投资计划。而据5月13日《日本经济新闻》报道，另一家日系彩电巨头索尼也将停止生产OLED电视，把重点转向4K电视。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从目前国内彩电品牌来看，海信用其“ULED电视”叫板OLED电视；创维因与LG面板公司LGD的深入合作，推出了OLED电视产品，但仍只是试水。TCL、康佳、长虹则主要热衷于在4K及互联网电视上寻找卖点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为何一直被业界称为新一代显示技术的OLED电视，并未受到电视机企业集体的“追捧”？业内人士分析，除了OLED面板目前量产低、仅在55英寸难以在短期内获得更大尺寸上的突破，而容易导致电视机整机价格居高不下，国内彩电企业不得不放弃外。更重要的是，目前OLED的整体技术只掌握在LG手中，而这种“独有”技术一旦被电视机大规模使用，将容易颠覆三星、索尼在电视机中的地位。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">曾经作为OLED电视最大支持者的三星的战略转移</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">除LG外，三星也一直研究OLED技术，其Galaxy S系列智能手机和Galaxy Tab平板电脑都使用了OLED面板。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星电视业务副总裁Lee Kyungshik曾对外表示，OLED是最接近显示梦想的产品。而LG也对OLED技术信心满满，“全世界只有两家公司能生产大尺寸OLED电视机：三星和LG。”LG电视业务总监Jang Moon-ik也曾表示。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">三星与LG在OLED专利之争也长达3年。但自去年11月份，韩国警方确认三星盗取LG的OLED面板核心防水技术，而使两家在OLED专利之争尘埃落定后，三星曾表示OLED开发进程可能受到影响。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年9月LG在中国推出曲面OLED电视后，仅隔2天三星也同样发布了同类产品，并将价格直降5000元。就在外界以为OLED电视大战将打响时，三星却悄然启动了战略转移。今年3月，三星电视春季新品就缺少了OLED的身影。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但一位不愿透露姓名的三星电视相关人士认为，三星不会永远放弃OLED电视市场，“三星的市场战略灵活多变，它不会重蹈松下坚守等离子电视却最终失败的覆辙。”该人士称，“三星更看重对它有利的机会。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">警惕OLED重蹈等离子覆辙</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">OLED产品设计的最大特点是超薄和曲面，因为OLED自发光特性，OLED电视可以做到非常薄，最薄处可以达到4.3毫米，只有4张信用卡的厚度。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">LG电子市场部部长许今花曾对外表示，真正能实现曲面和超薄的只有OLED。目前，LCD面板虽然也可以做成曲面，但容易产生漏光现象而导致画面不清晰。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技近日在苏宁、国美(</span><a href=\"http://t.qq.com/GOME1987#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)、大中家电卖场体验了一把目前市场上的“曲面电视”。从外观来看，LG的OLED曲面电视在外观、科技感，尤其是薄度上，确实比三星、索尼的LED曲面电视更胜一筹。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据卖场人员反映，LG曲面OLED电视目前价格在2.9万元，已比刚上市时近5万的价格，降低了40%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业内人士担心，目前OLED电视的孤立境遇类似此前的“等离子电视”。虽然等离子电视在处理运动图像、对比度以及长久观看视频对眼睛的舒适度都优于液晶电视，但由于等离子技术只掌握在松下手中，最终因电视机品牌大规模使用液晶面板，而让等离子电视只能以黯然退场而告终。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“LG要将OLED技术进行适当的开放，寻找更多战略伙伴，避免重蹈松下电视曾在等离子决策中的失误。”华星光电一位电视面板负责人向腾讯科技表示。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/028570.htm','2014-05-18 07:33:37',1,'/news/thumb/2014418/1400369617766.jpg','新一代OLED电视为何被三星索尼放弃？','admin','范蓉'),(136,'<div>\r\n	<img alt=\"WiFi应用变热门：WiFi共享精灵获千万美元融资\" src=\"http://img1.gtimg.com/tech/pics/hv1/164/30/1597/103852739.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯（乐天）5月16日消息，智能硬件持续火热的大背景下，WiFi应用正从过去的冷门变热门。腾讯科技获悉，WiFi服务商同享网络在今年3月份已完成千万美金量级A轮融资，依靠的正是旗下产品WiFi共享精灵。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同享网络联合创始人、CMO司新颖介绍，WiFi共享精灵在2012年推出时，正值APP应用最火爆一年，公司研发团队先后推出星座大师、限免大师、Mooker、热播影视剧等产品，却没有想到最后能够火起来的是WiFi应用，于是决定集中精力专注WiFi领域。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同享网络CEO张启科原系千橡集团副总裁、人人网总经理，而司新颖也在不久前正式辞掉拉手网市场副总裁的职位，与张启科联合创业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">张启科负责产品研发，司新颖负责市场营销方面的工作。同享网络的A轮投资商中，除了启明创投等机构，著名投资人</span><a href=\"http://t.qq.com/caiwensheng#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">蔡文胜</span></a><span style=\"font-size:14px;\">也在其列。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">无独有偶，最近中国制造商创始人卜凯军(</span><a href=\"http://t.qq.com/Kevin_Bu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)再创业项目“潮WiFi”日前宣布完成A轮融资，融资额度为1500万元，由华映资本出资。按照团队商业计划，潮WiFi将联合渠道伙伴，计划在3年内在300家城市部署超过100万个热点。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另据腾讯科技了解，商用Wi-Fi网络架构及媒体服务提供商迈外迪(WiWide)最近获得新一轮融资，资金规模不少于2000万美元，小米参与投资。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SNDA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">盛大</span></a><span style=\"font-size:14px;\">集团COO陈大年旗下的WiFi万能钥匙也在寻求新一轮融资，陈大年本人出任CEO。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">各家创业公司纷纷涉足WiFi应用是同时，360随身WiFi、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">WiFi、小米随身WiFi、极路由等硬件工具早已抢占个人市场，</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">也在推全民免费WiFi计划，WiFi应用被认为是下一个亿万级市场的动力源，是海量用户的新入口。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有分析人士指出，作为O2O关键节点之一，智能路由器作用和价值还没有被充分挖掘。在小微企业商用级市场，目前市场已提前进入红海，但参与者参差不齐，虽有数百家参与者，但尚没有绝对领先企业和统一认知标准，这为WiFi应用的机会。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/039950.htm','2014-05-18 07:38:05',1,'/news/thumb/2014418/1400369885050.jpg','WiFi应用变热门：WiFi共享精灵获千万美元融资','admin','乐天'),(137,'<div>\r\n	<img alt=\"PayPal创始人彼得·泰尔新书教你如何创业成功\" src=\"http://img1.gtimg.com/tech/pics/hv1/219/127/1597/103877529.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">支付服务PayPal创始人、著名风险投资家彼得·泰尔（Peter Thiel）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月17日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">支付服务PayPal创始人、著名风险投资家彼得·泰尔（Peter Thiel）的新作《从无到有》（Zero to One）将于今年9月发布，本书的副书名为“关于如何创业或开创未来的札记”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">泰尔现在已经成为亿万富翁了，他通过自己创办的PayPal赚了大钱。他还是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">早期投资者和Palantir的联合创始人，后者目前的估值已经达到了90亿美元。他还领导着一只对冲基金，同时还是风险投资公司Founders Fund的主理合伙人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他还给20名青少年资助了10万美元，让他们从大学退学后去初创公司工作。如果你看过HBO的情景喜剧《硅谷》，就会发现他正是剧中风险投资家的原型。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">泰尔在推介新书的网页上写道：“我们每次创造新的事物，实际上都是从无到有。创造行为是非凡的，与创造的那一刻一样，创造的结果是全新的，也是陌生的。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他建议人们不要去抄袭别人的创意。他说：“下一个比尔盖茨肯定不会开发新的操作系统，下一个拉里佩奇或谢尔盖布绝不会做搜索引擎，下一个马克扎克伯格也不会创造社交网络。如果你去模仿这些成功人士，你绝不会从他们身上学到真正的东西。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">泰尔的新书主张梦想成功的人去发现能够形成垄断的新事物。泰尔说：“如果你做的是前无古人的事业而且你可以比其他人做得更好，你就拥有了垄断的优势。到目前为止，每一家成功的公司都是因为掌握了垄断优势而成功的。但是参与竞争的程度越深，你就会变得跟其他人越来越像。从正规教育到企业生存，竞争彻底摧毁了个人、企业来自社会的全部利润。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">听起来，这是一本有趣的书。但是需要指出的是，比尔盖茨抄袭了</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">的操作系统，但是他让更多的人能够使用它。Facebook并不是第一家社交网络，但它是最好的社交网络。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)也不是第一款搜索引擎，但它比其他的搜索引擎更优秀。同样，Android也是在iPhone之后问世的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">乍一看，追求垄断的想法是值得赞赏的，但那不一定是对的。改良已有的想法需要投入大量的资金。拓荒的先驱确实会有天时上的优势，但是他们的优势并不是无法逾越的，尤其是在互联网领域。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是我们还没有拜读过这本书，而且泰尔才是已经成功的亿万富翁而我们不是，因此我们还是听他的吧。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">泰尔在推介本书的网页上还写道：“《从无到有》讲的是如何经营一家创造新事物的公司。它讲述了彼得泰尔直接从创业和投资中学到的所有知识，他是PayPal和Palantir的联合创始人，后来还成为包括Facebook和SpaceX在内的数百家初创公司的投资者。他发现，最强大的创业模式是成功的人在人们意想不到的地方发现价值，而且他们是从基本原理而不是公式口诀的角度来考虑业务。”（林靖东）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/003372.htm','2014-05-18 07:39:50',1,'/news/thumb/2014418/1400369990986.jpg','PayPal创始人彼得·泰尔新书教你如何创业成功','admin','林靖东'),(138,'<div>\r\n	<img alt=\"谷歌无人汽车幕后的技术：激光扫描整个城市\" src=\"http://img1.gtimg.com/tech/pics/hv1/100/109/1597/103872820.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月16日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)的无人驾驶汽车现在能够带你在美国加利福尼亚州山景城的大街小巷里兜风了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本周，笔者有幸坐谷歌的无人驾驶汽车体验了一把。我看到汽车驾驶员将手从方向盘上拿开，电脑就自动挑起了驾驶的重任。“现在开始自动驾驶。”电脑里传出一名女性的声音。变道、遵守红绿灯指示、监测路边骑自行车的人和步行者、转弯，汽车自己完成了所有这些任务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">它运行得如此顺畅，以至于《纽约时报》的一名试乘记者不禁感叹，“坐在上面太无聊了。”他的言外之意就是谷歌无人驾驶汽车的表现太赞了，几近完美！</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">机器人司机可以减少交通事故、提高全美道路网络的承载能力以及解放上班族，让他们在上下班途中可以盯着自己的手机屏幕，随心所欲地使用谷歌的各种服务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，你现在还不能将谷歌无人驾驶汽车放到奥兰多或奥克兰或阿克伦的街道上，并期待它像在硅谷一样具有出色的表现。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其原因在于，谷歌已建立了虚拟的山景城路况地图，而其他地方的虚拟地图尚未建立。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">无人驾驶汽车成功的关键</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌无人驾驶汽车成功的关键是，这些汽车并不需要从零开始处理所有道路交通情况。相反，它的团队早已走过了该汽车将要走的各条道路，并绘制了详细的虚拟地图。这可不是普通的地图，甚至也不是详尽的消费者版谷歌地图。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"谷歌无人汽车幕后的技术：激光扫描整个城市\" src=\"http://img1.gtimg.com/tech/pics/hv1/36/110/1597/103873011.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌绘制了湾区的虚拟地形图</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">它是描绘现实路况的极其精确的数字化地图，它精确到了每一个人行道镶边的位置和高度。一般的数字地图仅会大致显示道路交叉口的位置，而这种虚拟地图展示的路况精确到了英寸。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这种虚拟地图也超过了我们通常对地图的概念。“我们的虚拟地图一览无遗地展示出了各种</span><a href=\"http://tech.qq.com/all/twdl.htm\" target=\"_blank\"><span style=\"font-size:14px;\">地理</span></a><span style=\"font-size:14px;\">位置信息，从而能够提前告知汽车，为其自动行驶提供帮助。”谷歌无人驾驶汽车地图绘制主管安德鲁-查塔姆（Andrew Chatham）说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我们会告诉它交通信号灯距离地面多高、人行道镶边的准确位置，从而让汽车清楚地知道哪些地方不能走。”他说，“我们甚至还纳入了你看不到的信息，例如速度限制。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌工程师们驾车实地考察路况，并据此绘制出了虚拟的城市地图。他们会在汽车启动前将路线数据上传到汽车中，从而在汽车行驶过程中，不断地给予指引。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“汽车软件不用每次从零开始分析现实路况，并做出判断。相反，它在出发前就已明了前方的路况是怎样的。”查塔姆说，“现在，汽车软件的工作只是分析现实情况与预期数据的差别。这就使得汽车自动驾驶的问题大大简化了。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“爬地球”收集数据</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然它简化了汽车驾驶的问题，但是它需要处理的数据却并没有减少。要知道，它可是要基于整个道路网络来开发虚拟地图。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">很少有公司——也许只有谷歌——会想到让美国路面交通的数字化成为无人驾驶汽车的解决方案之一。汽车公司会想到用这种数据收集和整合的方法提高其核心竞争力吗？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在谈及谷歌为其汽车绘制每一条街道的做法时，卡内基梅隆大学前教授、谷歌无人驾驶汽车项目负责人克里斯-厄姆森（Chris Urmson）流露出了无比的信心。“这是谷歌利用地图和街景服务尝试的众多新鲜事之一。”厄姆森说，“我们到处行走，并收集非常详实的数据，这为无人驾驶汽车提供了强大的导航信息。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">迄今为止，谷歌已绘制了2000英里的道路地图。美国的全部道路网络约有400万英里。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“这就是我们的工作。”他说着，耸了耸肩。“但这并不是令人望而却步的工作。”这就是谷歌考虑的这个项目的规模。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上，我们最好别把谷歌正在做的这件事称之为“绘制地图”，而应该想出一个新的动词来显示它与传统地图概念的差别。要我说，他们就是在“爬地球”，他们获得的数据才是真正有效的、适合电脑读取的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">除了无人驾驶汽车，谷歌还推出了Tango项目，旨在“让移动设备对空间和运动建立人类级别的理解力。”此外，谷歌最近还掀起了收购机器人公司的狂欢。Tango项目是为了让机器人理解人类的世界，而机器人公司则是为了让机器人在人类世界中行动自如。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">卓尔不凡的谷歌</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">你越想就会越觉得谷歌的卓尔不凡：他们的远大梦想、大手笔运作以及解决这个棘手问题的解决方案都令人称奇。由于谷歌这样大规模的、史无前例的、难以想象的数据收集工作，曾经十分棘手的“机器视觉”问题变得简单多了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年秋季，另一位研制无人驾驶汽车的谷歌员工安东尼-莱万多斯基（Anthony Levandowski）到硅谷日产汽车公司做演讲。在问答阶段，日产汽车公司的工程师们不停地抛出汽车之间互动的概念，他们似乎认为这就是无人驾驶汽车解决方案的重要组成部分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">莱万多斯基自信地、敏捷地回应了所有这些问题。“我们用其他汽车的感应器能够看到前方道路的更多信息吗？我需要明确说明的是，汽车之间共享信息是可能的，但这不是我们优先考虑的事项。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">汽车公司的员工们无法理解或不愿理解的是，谷歌认为，汽车之间的交流互动是可能的，但是无法做到实时互动。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">毕竟，每辆汽车的数据都来自于地图。有了这些地图数据，所有汽车要做的就是根据超级精确的虚拟地图明确自己的准确位置。这样一来，它们就可以省下所有数据分析和计算（以及汽车之间互动）的时间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有趣的是，谷歌无人驾驶汽车的做法与风投公司Andreesen Horowitz支持的创业公司Anki对其玩具赛车游戏的做法具有惊人的相似性。在你购买Anki Drive的时候，他们还会附带销售这些赛车比赛的跑道。这些跑道内置有很多地理位置数据，实际上是虚拟赛车地图的物理形式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年，Anki CEO鲍里斯-索夫曼（Boris Sofman）（他与厄姆森一样，也是卡内基梅隆大学的高材生）说，提前了解赛道更有助于他们同步软件所运行的虚拟世界和汽车飞驰的物理世界。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我们能够将物理世界变成虚拟世界。”索夫曼说，“我们能够将这些真实的人物进行抽象处理，把他们当成是手机视频游戏中的虚拟人物。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">机器学习算法</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，在有步行者和骑行者的情况下，要在虚拟和现实结合的山景城道路上行驶就不是那么容易的事了：汽车需要在道路上不断地规划路线，避免发生交通事故。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"谷歌无人汽车幕后的技术：激光扫描整个城市\" src=\"http://img1.gtimg.com/tech/pics/hv1/92/110/1597/103873067.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">无人驾驶汽车顶上的摄像头和激光记录仪</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌汽车并不是傻瓜。它们有自己的感应设备：雷达、雷克萨斯SUV车顶的激光旋转装置以及一系列摄像头。它们的车载系统会分析数据并决定采取哪条路线，以避免撞车。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这是一个非常棘手的问题，但是谷歌使用了“台式电脑”级别的计算能力。（大型计算和数据处理工作由谷歌服务器中心团队完成。）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">车载电脑首先要做的事情就是整合传感器数据。它会从激光装置、摄像头那里收集数据，并将它们整合形成周围环境的实况图，并据此在虚拟山景城地图中确定自己的位置。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“我们能够将我们看到的周围景象与地图中说明的路况进行对比，从而精确地确定我们在地图中的位置——精确到几厘米。”无人驾驶汽车的软件主管迪米特里-多尔戈夫（Dmitri Dolgov）说，“一旦我们知道自己的确切位置，我们就会把地图中存储的相关路况信息提供给汽车。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一旦了解自己的位置所在，无人驾驶汽车就能够监测和模拟周围动态物体（如其他车辆、自行车和行人）的行为。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这里，谷歌用到了另一个方法。多尔戈夫的团队利用机器学习算法来创造路上行人的模型。无人驾驶汽车行驶的每一英里路程的情况都会被记录下来，汽车电脑就会保持这些数据，并分析各种不同的对象在不同的环境中如何表现。有些司机的行为可能会被设置为固定变量（如“绿灯亮，汽车行”），但是汽车电脑不会死搬硬套这种逻辑，而是从实际的司机行为中进行学习。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这样一来，跟在一辆垃圾运输卡车后面行驶的汽车，如果卡车停止行进，那么汽车可能会选择变道绕过去，而不是也跟着停下来。谷歌已建立了70万英里的行驶数据，这有助于谷歌汽车根据自己的学习经验来调整自己的行为。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">非理性效用</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大多数驾驶情况并不难理解，但是如果出现少数棘手的或意外的情况如何处置呢？在当前的情况下，谷歌会让人类司机代劳，以确保汽车行驶安全。但有意思的是，在人类司机代劳的情况下，无人驾驶汽车也会记下自己自动处置这种棘手情况的可能做法。这样一来，工程师们就可以测试在极端情况下汽车需要怎么做才不会伤及无辜。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">每一辆谷歌汽车既记录有以前驾驶的数据——在真实道路上行驶获得的数据，又记录有电脑输出的驾驶数据——主要是其他汽车司机如何处置各种情况的模型。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">通过这种方式，谷歌汽车的工作方式与我们人脑反应的方式之间就建立了联系和类比。我们大脑的反应方式是接受来自感官传来的信息，并采取相应的行动。事实上，我们的大脑无时无刻不在进行各种预测，它引导着我们的认知。实际驾驶过程中的感官输入信息——灯光映照在我们的视网膜细胞上——会与我们大脑多年来在现实世界中习得的经验相互印证。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌的无人驾驶汽车也运用了这一原理，这不足为奇；他们通过这种方法已取得了很大的成功，这也不足为奇。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谷歌人工智能主管彼得-诺维格（Peter Norvig）及其两名同事，在一篇论文中用“数据的非理性效用”来描述庞大数据对于极端复杂人工智能问题的影响。一幅漫画中的话可以用来总结诺维格的论文观点，“走出去，收集数据，看看它能做什么。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">即使这意味着要持续不断地、永无止境地行驶完400万英里的路程，并录入和整合这些庞大的数据，谷歌也会坚持不懈地做下去。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这就是谷歌的非理性效用。（乐学）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/000355.htm','2014-05-18 07:41:16',1,'/news/thumb/2014418/1400370076549.png','谷歌无人汽车幕后的技术：激光扫描整个城市','admin','乐学'),(139,'<div>\r\n	<img alt=\"即将改变世界的13大纳米材料技术\" src=\"http://img1.gtimg.com/tech/pics/hv1/226/75/1597/103864276.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月16日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“下一代材料”包括超轻材料、适应环境变化的活性材料以及终极智能材料。“功能材料”借助于生物学改善材料性能和功能。而“自组装材料”则是大规模生产更优属性（强度、抗扯性和导电性等）的材料。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">通过咨询专家，我们预测了各种纳米材料何时在技术上过关（</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)、政府和大学机构的研发进程）、何时成为主流（赢得大多数风投公司的投资和创业公司的青睐）以及何时可以获得稳定的资金和回报（可在众筹网站Kickstarter上获得资金）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">下一代材料</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">超疏液材料：这种材料的设计灵感来自于浮游于水面的虫子。它可以排斥油和水等流体。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：现在技术上已过关；在2015年将会成为主流，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">拉胀材料：这种材料具有受拉膨胀、受压收缩的力学特点。它可以广泛应用于防弹衣、包装材料、膝部和肘部护垫、减震材料以及海绵拖把。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2016年，在技术上过关；2017年，可获得稳定的资金支持和回报。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"即将改变世界的13大纳米材料技术\" src=\"http://img1.gtimg.com/tech/pics/hv1/170/76/1597/103864475.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">世界上最轻的材料：气凝石墨烯</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">气凝胶材料：一种用凝胶制成的超轻多孔合成材料，它是用气体代替凝胶中的液体成分制成的。它的密度和导热性极低，摸起来就像是聚苯乙烯。它的潜在应用范围包括隔热、清理溢出液的化学吸收剂、电化学超级电容和减震。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2015年，在技术上过关；2019年，成为投资主流；2021年，获得稳定资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">热双金属：在阳光下，它可以让玻璃窗变成遮光板，全天候自动调节能量消耗。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2019年，在技术上过关；2021年，成为投资主流；2022年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">智能材料：人们可以通过外界刺激物来极大地改变它的属性。这些刺激物包括压力、气温、湿度、pH值、电场或磁场。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2021年，在技术上过关；2025年，成为投资主流；2027年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">功能材料</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:14px;\">生物</span></a><span style=\"font-size:14px;\">材料：这种材料要么取自于大自然，要么是在实验室合成的。它可以用来改善或取代人体的某些机能。未来的生物材料可以用来改善药物运输或提高移植成功率。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2014年，在技术上过关；2016年，成为投资主流；2017年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">电磁特异材料：这种独特的材料可用非传统的方式影响声和光。它的潜在应用范围很广，包括太空、基础设施监控、智能太阳能管理、公共安全、超声波感应器以及保护建筑物免受地震影响。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2018年，在技术上过关；2019年，成为投资主流；2021年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"即将改变世界的13大纳米材料技术\" src=\"http://img1.gtimg.com/tech/pics/hv1/108/76/1597/103864413.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">石墨烯的分子结构（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">石墨烯材料：这是一种由碳原子构成的单层片状结构的新材料。这种材料质量很轻，潜在应用范围广泛，包括具有更高强度硬度比率的元件、更低成本的太阳能电池、更低成本的移动设备显示屏、为燃料电池汽车储存氢能源、医学传感器、更快的充电电池、超级电容和化学感应器等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2016年，在技术上过关；2022年，成为投资主流；2025年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">纳米电子机械系统：它是在纳米级别上整合电气和机械功能的设备。它通常会将纳米电子设备与机械促动器、水泵或马达整合到一起，从而形成物理、生物和化学感应器。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2023年，在技术上过关；2025年，成为投资主流；2027年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">自组装材料</span>\r\n</p>\r\n<div>\r\n	<img alt=\"即将改变世界的13大纳米材料技术\" src=\"http://img1.gtimg.com/tech/pics/hv1/77/76/1597/103864382.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有自我修复功能的水泥（腾讯科技配图）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">自我修复材料：很多智能材料都整合了破损修复的功能。这种灵感来自于生物系统，因为生物系统都具有受伤后自动愈合的机能。自动修复材料可以降低不同工艺流程的生产成本，提高零部件的使用期限，减少因为磨损导致的低效以及防止材料破损导致的成本增加。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2016年，在技术上过关；2018年，成为投资主流；2019年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">控制自组装材料：它具有类似有机体的自我复制功能，可以操纵单个原子。例如，精密3D打印机将能够创造DNA、RNA或蛋白质序列。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2013年，在技术上过关；2022年，成为投资主流，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大规模自组装材料：它可以让混乱的元件变得规范有序。而做到这一切，它并不需要借助外力的作用，只需要通过元件之间的相互作用。这种材料可以自我修复。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2023年，在技术上过关；2024年，成为投资主流；2025年，获得稳定的资金支持和回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">纳米工厂：在这里，纳米机器可以通过机械合成让分子结合形成更大的粒子，然后再用这些粒子来生产人们使用的产品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">预测：2026年，在技术上过关，并成为投资主流；2027年，获得稳定的资金支持和回报。（乐学）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/047576.htm','2014-05-18 07:42:04',1,'/news/thumb/2014418/1400370124695.jpg','即将改变世界的13大纳米材料技术','admin','乐学'),(140,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">全国“扫黄打非”办昨日下午公布：深圳快播科技公司传播淫秽色情信息被查处，其行为涉嫌构成犯罪，公安部门已立案侦查，并刑拘多名犯罪嫌疑人。根据规定，拟吊销其增值电信业务牌照。南都记者昨日从快播公司前员工处了解到，快播公司目前仍正常运作，员工正常上班，只是很闲。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">快播服务器存储大量淫秽色情视频</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在快播于4月22日遭公安进驻调查后，不少业内人士和法律界人士分析，快播被查主因一是版权问题，二是涉黄。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">昨日扫黄打非办正式发布消息，证实快播传播淫秽色情信息被查处。快播踩到的雷线是涉黄信息。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此前有业内技术人员称，快播只是个播放通道，并未直接存储和对外传播淫秽色情视频。不过据扫黄打非办昨日介绍，快播的服务器中发现了大量淫秽色情视频。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据介绍，北京市公安和版权部门于2013年底在执法检查中查扣了快播的4台服务器，并处以25万元罚款。经鉴定，其中存储3000余部淫秽色情视频。今年3月，有关部门在对快播相关应用和栏目进行监测中，也发现大量淫秽色情视频。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">扫黄打非办相关负责人介绍，昨日，广东省通信管理局已向快播送达了《行政处罚意见告知书》，拟对快播处以吊销增值电信业务经营许可证的处罚，快播未提出异议。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据了解，商业网站获得增值电信业务经营许可证才能接入互联网，并经营广告。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">快播公司仍正常运作</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">南都记者昨日从快播前员工了解到，快播目前仍正常运作，她的很多前同事也正常上班，工资待遇等没有变化，只是“都闲闲的，三天打鱼两天晒网”。目前快播被刑拘的是几名总监级别的管理人员，快播老总王欣(</span><a href=\"http://t.qq.com/kiswangxin#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)仍不清楚身在何处。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">快播视频业务被查对员工影响很大，已有一些员工在跳槽和找工作，具体规模并不清楚。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据一名视频行业资深人士介绍，此次扫黄打非对视频行业影响较大，此前不少视频网站都打擦边球，不过被查处的只有快播。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“如果快播早点转型，会很有竞争力”，上述业内人士评价道，快播的优势在于其庞大的用户群体，如果转型成功，对各大视频网站的自制剧影响很大。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140516/012851.htm','2014-05-18 07:45:21',1,'/news/thumb/2014418/1400370583346.jpg','快播员工现状：正常上班 但闲得无聊','admin','南方都市报'),(141,'<div>\r\n	<img alt=\"苹果谷歌专利纠纷和解 双方同意放弃所有诉讼\" src=\"http://img1.gtimg.com/tech/pics/hv1/141/155/1597/103884591.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月17日消息</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当地时间本周五，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MMI.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">摩托罗拉移动</span></a><span style=\"font-size:14px;\">已发表声明，同意放弃彼此针对的专利诉讼，共同为专利改革作出努力。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">跟据路透社报道，苹果、谷歌在一份联合声明中表示，此次和解的内容并不包含交叉许可协议，“苹果、谷歌已同意共同在专利改革的部分领域进行合作”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此前，苹果曾与多家Android手机制造商产生专利纠纷，为保护技术专利对簿公堂。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据悉，苹果、谷歌向华盛顿地区联邦上诉法院表示，此类纠纷诉讼都将搁置。不过此次和解的内容中，并不包括近期的苹果、三星专利纠纷。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">两周前，法庭对苹果三星专利诉讼进行判决，八人陪审团裁定三星侵犯苹果专利，并需要支付1.196亿美元的罚金（苹果索要赔偿则高达20亿美元）。（布珝）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/007793.htm','2014-05-18 07:47:42',1,'/news/thumb/2014418/1400370491678.jpg','苹果谷歌专利纠纷和解 双方同意放弃所有诉讼','admin','布珝'),(142,'<div>\r\n	<img alt=\"中国少年极客勇夺世界科技大奖\" src=\"http://img1.gtimg.com/tech/pics/hv1/80/126/1597/103877135.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">姚悦，上海交通大学附属中学嘉定分校</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯（梁辰）5月17日消息，美国时间5月16日，13名来自中国大陆、香港和澳门的中学生在刚刚落幕的全球中学</span><a href=\"http://tech.qq.com/science.htm\" target=\"_blank\"><span style=\"font-size:14px;\">科学</span></a><span style=\"font-size:14px;\">研究竞赛2014年</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/INTC.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">英特尔</span></a><span style=\"font-size:14px;\">国际科学与工程大奖赛（Intel ISEF）获得大奖。他们与从全球70多个国家和地区的435个联系赛事中脱颖而出的约1700名中学生决逐了这一赛事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">英特尔国际科学与工程大奖赛鼓励全球数百万学生发挥自己的创新激情，开发应对全球挑战的解决方案。今年决赛选手的研究项目涵盖机器人技术、计算医疗模型、大数据分析等诸多领域，并分为17个类别进行评比。参赛选手要接受近千名包括科学、工程等各方面的专家和行业专业人士的现场评审。每位评委都具有博士学历或在某一科学领域具有6年以上相关专业经验。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以下是获奖学生和他们的项目名称，以及获奖名称：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">姚悦，上海交通大学附属中学嘉定分校，《用光色叠加实现三进制运算的新方法及其数学证明》，荣获计算机科学类别同类最佳奖、计算机科学类别一等奖、欧盟青年科学家竞赛参赛资格、国际光学协会提名奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">陈帝义、方尔海，香港英皇书院《研究中医鸡蛋染银法的反应机理》，荣获化学科学类别同类最佳奖、化学科学类别一等奖、菲利普斯瑞奇纪念奖，并获得伦敦青年科学营参赛资格；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">万若萌，北京师范大学附属实验中学，《为什么陆生植物不含高效吸收绿光的光合色素？——从自然选择的角度探究含藻红蛋白的藻类未能进化为陆生植物的原因》，荣获植物科学类别一等奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">张溪典，河南省濮阳市第一高级中学，《林中水塘里的水黾消失之谜——农村小水体面源污染对水黾生存的影响探究》，荣获美国兽医协会一等奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">简泳怡，香港马利诺神父教会学校，发明了“天然创可贴”，荣获环境管理科学类别二等奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">李睿熙、孙义东、汤泽生，北京顺义国际学校，《关于果蝇睡眠诱导基因的发现》，荣获动物科学类别三等奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">王翘楚，河南省郑州市第一中学，《焦油粗酚制备不燃型外墙保温材料研究》，荣获化学科学类别四等奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">陈嘉廷，上海市上海中学，《无人四旋翼机载超声波立体探障及救灾路径规划研究》，荣获电子电气工程类四等奖；</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">谭知薇、张颢霆, 澳门培正中学，《一种基于数学原理的安全分布式云存储架构及其设计与应用》，荣获电子电气计算机协会团体项目一等奖，计算机协会四等奖。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/003006.htm','2014-05-18 07:49:24',1,'/news/thumb/2014418/1400370564741.jpg','中国少年极客勇夺世界科技大奖','admin','梁辰'),(143,'<div>\r\n	<img alt=\"科比现身苹果总部 和首席设计师艾维见面\" src=\"http://img1.gtimg.com/tech/pics/hv1/125/126/1597/103877180.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月17日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一条黑曼巴蛇在库伯蒂诺游荡。（注：科比布莱恩特别名“黑曼巴”，库伯蒂诺是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">总部所在地。）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有人看见</span><a target=\"_blank\" href=\"http://sports.qq.com/nba/\"><span style=\"font-size:14px;\">NBA</span></a><span style=\"font-size:14px;\">巨星科比布莱恩特（Kobe Bryant）在苹果总部与苹果首席设计师乔尼·艾维（Jony Ive）谈话。苹果新闻网站9to5Mac还发布了两人见面谈话的照片。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据说两人谈话的内容主要是苹果即将发布的新产品。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据说苹果正在开发一系列健康和健身产品，包括能够跟踪用户健身数据的iWatch。据说它还在开发一款能够搜集用户健康状况数据的应用Healthbook。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">也许艾维跟布莱恩特谈的是技术将如何发展，也许苹果是想让布莱恩特担任其产品代言人，也可能科比只是想跟苹果高管聊聊天，又或者科比是想学“大鲨鱼”奥尼尔（Shaq O’Neal）投身技术界？（奥尼尔在多个以NBA为主题的电子游戏中出现。）（林靖东）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/003245.htm','2014-05-18 07:51:06',1,'/news/thumb/2014418/1400370916610.jpg','科比现身苹果总部 和首席设计师艾维见面','admin','林靖东');
INSERT INTO `news` VALUES (144,'<div>\r\n	<img alt=\"人民日报：阿里巴巴搞足球忧喜交加\" src=\"http://img1.gtimg.com/tech/pics/hv1/145/175/1597/103889695.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">刚刚落幕的英超，曼城队拿到3年内的第二个冠军。即将落幕的法甲，巴黎圣日耳曼队已经提前夺冠。豪门球队欢庆之际，一项违反“财政公平竞赛”规则的罚单也摆在面前。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">近年来，欧洲联赛成为资本疯狂涌入之地。自从俄罗斯富豪大把挥金买下英超切尔西俱乐部之后，一轮烧钱比拼就此展开。来自阿联酋的阿布扎比财团买下曼城俱乐部，之后开始以“令人难以拒绝”的合同收购球员。卡塔尔王储入主巴黎圣日耳曼俱乐部，并以同样的运作手法快速登顶。金钱的力量最终体现在战绩上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这种“只求冠军不计投入”的做法使得豪门俱乐部账面赤字剧增，对欧洲足球的健康发展带来威胁。在欧足联主席普拉蒂尼的主导之下，“财政公平竞赛”规则应运而生。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这项规则的核心在于约束豪门俱乐部不计成本的砸钱行为。从2012年到2015年，每家俱乐部可以有4500万欧元的亏损额度，随后3年则被要求控制在3000万欧元之内，之后则会强制要求俱乐部真正做到财政平衡。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">曼城正因为俱乐部的高额赤字而被课以重罚，包括罚款、下赛季欧冠联赛报名人数缩减以及工资帽限制等。花自己的钱还要被人管，为此曼城已经提起申诉。接下来，就是考验欧足联决心的时候了。阿森纳队主教练温格就说：“财政公平竞争规则不具备强制力，在一些欧洲豪门的面前很容易沦为空谈。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">且不论这项规则真正的效力能有多少，至少欧足联已经意识到了由金元主导的竞争环境对于足球的未来并非全是正能量。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">足球与资本的博弈，意在为俱乐部的良性运作树立“费厄泼赖”的规则体系。而本来就在财务透明、运作规范等方面漏洞多多的中超，近几个赛季也掀起金元热潮。球员身价背离真实水准，亏损的俱乐部岂止50%。近日，又有传闻</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">入主杭州绿城俱乐部，让人喜忧交加。喜的是资本青睐足球，看似风生水起；忧的是理性约束跟不上脚步，资本“大鳄”呼风唤雨，但足球规律和市场规律之间，犹有不同。未雨绸缪的时机已过，能否亡羊补牢的态度和思路，是中国足球漫漫长路上应有的清醒。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/009666.htm','2014-05-18 07:52:23',1,'/news/thumb/2014418/1400370743080.jpg','人民日报：阿里巴巴搞足球忧喜交加','admin','loiswang'),(145,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯数码讯（周硕）许多媒体都已经收到了锤子科技发出的发布会邀请函，就在这个大家翘首期待锤子发布会的节骨眼儿上，工信部“证件照”给了人们提前赏析锤子手机真机的机会。今日锤子手机的真机照被曝光在工信部的网站上，型号为SM701。给人直观的感觉是正面和背面布局与iPhone4/4S比较接近。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"锤子真机终于来了！布局神似iPhone 4/4S\" src=\"http://img1.gtimg.com/tech/pics/hv1/145/202/1597/103896580.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">机身正面背面照</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据工信部网站上的信息来看，产品申请单位是锤子科技（北京）有限公司，许可证号码为02-B217-141621，机身型号为SM701。得到许可的日期是5月13日。在备注一栏里详细描述了该设备所支持的网络和系统等信息。“该设备支持WCDMA（（R6版本，支持HSDPA/HSUPA）/GSM（GPRS））”而在系统方面，锤子手机当然会搭载之前已经让我们领略过魅力的锤子rom。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在外观方面，手机几乎采用完全方形的设计，在听筒、前置摄像头、后置摄像头、单LED补光灯、Logo位置等方面的布局上给人一种“iPhone4S放大复刻版”的感觉，整体的视觉感受还是相当和谐的，低调内敛不浮夸。但在机身的材质上从照片来推测，更有可能是全塑料机身。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然在机身的一些细节设计上，锤子手机仍然留有新意。比如在机身正面底部，我们能够隐约看到三个实体按键。拥有实体按键的好处除了在按键手感上比触控按键好太多之外，在系统的设计上也能够避免“按键套按键”的尴尬，相信锤子rom也会根据锤子手机这个设计进行相应的优化。如今安卓手机众多，但是为了使用感受放弃视觉一致性而加入实体按键的机型并不多见，锤子手机一经发布也许将引起安卓手机实体按键的复潮。</span>\r\n</p>\r\n<div>\r\n	<img alt=\"锤子真机终于来了！布局神似iPhone 4/4S\" src=\"http://img1.gtimg.com/tech/pics/hv1/144/202/1597/103896579.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">机身左右两侧照</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另外根据“证件照”来看，机身左右两侧似乎各有一个明显的实体按键突起，并且两个按键的位置位于机身中部。目前这两个按键的具体功能还无法断定。锁屏按键和音量调节如何合理的排布进去？老罗又是如何标榜这样独特的设计的？我们也许还要等5月20日锤子发布会才能知道答案。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得说明的一点是，大家都非常清楚在工信部亮相的设备100%都会被拍的极其难看，按照目前公布的较为和谐的照片来推测，锤子手机的真机外观会比工信部的“证件号”效果好很多。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最后来说说新手机的定价问题，之前老罗在微博上曾经发起过相关的调查。调查的主题是“如果产品本身非常好，你能接受4000块的锤子手机吗？”网友给出的回答几乎不约而同的一致，均表示不会购买。但揣测老罗一贯的做事风格，我推测老罗很有可能是故意提出这样的调查，将调查的价格推高到4000元级别，以心理战赢得大家的广泛关注，在一定程度上降低大家的心理期待，等到发布会上再另行公布一个较为亲民的价格让所有人感到满意。当然这只是我根据自己的判断所做的推测，具体事实是如何的，锤子手机究竟如何定价，网友们会不会买账，这一切还要看5月20日的发布会，能说会道、伶牙俐齿的老罗究竟如何激情上演。腾讯数码手机频道也会到发布会现场报道这次发布会的实况，并在第一时间给网友奉献产品体验和</span><a href=\"http://digi.qq.com/review.htm\" target=\"_blank\"><span style=\"font-size:14px;\">评测</span></a><span style=\"font-size:14px;\">，敬请期待。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140517/012912.htm','2014-05-18 07:53:21',1,'/news/thumb/2014418/1400370801446.jpg','锤子真机终于来了！布局神似iPhone 4/4S','admin','loiswang'),(146,'<p style=\"text-indent:2em;\">\r\n	<img src=\"/upload/image/20140519/20140519092117_695.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a target=\"_blank\" href=\"http://go.redirectingat.com/?id=66960X1514734&site=theverge.com&xs=1&isjs=1&url=http%3A%2F%2Fwww.ft.com%2Fintl%2Fcms%2Fs%2F0%2F4a596166-de3f-11e3-8546-00144feabdc0.html%3Fsiteedition%3Duk%23axzz324ZYYZTl&xguid=&xcreo=0&xed=0&sref=http%3A%2F%2Fwww.theverge.com%2F2014%2F5%2F18%2F5728272%2Ffacebook-building-a-new-snapchat-competitor-rumor&xtz=-480\"><span style=\"font-size:14px;\">据金融时报报道</span></a><span style=\"font-size:14px;\">，Facebook 内部正在开发一款类似 Snapchat 的应用，主打阅后即焚的视频信息，名字可能叫 Slingshot，中文意思为弹弓，射过去就没有了，可能暗喻转瞬即逝。这款应用最早可能会在本月底上线，不久前，</span><a target=\"_blank\" href=\"http://www.36kr.com/p/211870.html\"><span style=\"font-size:14px;\">Facebook刚刚下线了第一款抄袭Snapchat的应用Poke</span></a><span style=\"font-size:14px;\">。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年</span><a target=\"_blank\" href=\"http://www.36kr.com/search?q=snapchat\"><span style=\"font-size:14px;\">Snapchat风光的不行</span></a><span style=\"font-size:14px;\">，各路大佬出价几十亿美元要收购，据说 Google 直接给出一百亿的价码，都被拒掉了。收购不成，Facebook 索性比对着也做了一个 Poke，最后惨淡收场。Snapchat 这类产品本来就不是你叫几个工程师一周就能堆出来的，背后是他们对新社交方式的理解。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然输过一次了，但是 Facebook 没有放弃。Snapchat 占领的年轻人社交市场正是 Facebook 起家的地方，也是现在 Facebook 正逐渐失去的市场，必须抢回来。要不然，一旦年轻潮人都开始转战 Snapchat，Facebook 的未来可能一下就黯淡了。所以这两次狙击 Snapchat，Zuckerberg 都是亲自参与，可见重视程度。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook 曾表示今年会出一系列优秀的移动端独立应用，内部的 Creative Labs 已经出了一款</span><a target=\"_blank\" href=\"http://www.36kr.com/p/209508.html\"><span style=\"font-size:14px;\">广受赞誉的Paper，</span></a><span style=\"font-size:14px;\">也许 Slingshot 会在应用层上有不错的表现。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">[36氪原创文章，作者: Leon]</span> \r\n</p>','36氪','http://www.36kr.com/p/212084.html','2014-05-19 09:21:24',1,'/news/thumb/2014419/1400462683182.png','年轻人市场一定要拿下：传Facebook最早本月底推出类Snapchat的应用Slingshot，依然是Zuckerberg带队','admin','Leon'),(147,'<div>\r\n	<img alt=\"京东商城本周将挂牌交易 新股投资人几无话语权\" src=\"http://img1.gtimg.com/tech/pics/hv1/56/223/1598/103966871.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月19日消息，借助着营收的高速增长和中国数字经济的增长前景，京东商城将于本周在美国证券市场挂牌交易。不过京东商城并未向潜在的新股股东提供太多的公司事务发言权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">双股权结构让创始人们拥有话语权</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">京东商城的招股说明书显示，在首次公开招股完成之后，借助着持有的每股等同于20股普通股表决权的特殊股，公司董事会主席兼首席执行官刘强东(</span><a href=\"http://t.qq.com/liuqiangdong#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)将持有公司83.7%的表决权，以及21%的股权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">除此之外，京东商城董事会也无法在刘强东缺席的情况下召开正式会议，这进一步加强了刘强东对京东商城的控制权。创办于2004年的京东商城最初只是一家在线计算机产品销售公司，目前已成为中国第二大电子商务平台。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">京东商城的股权特征，也让这家公司成为最近一连串在美上市的把公司治理权掌控在少数人手中的中国公司之一。截至目前，京东商城发言人对此报道未予置评，称公司仍处于缄默期。紧握公司控制权在美国上市公司中历史悠久，其中包括一些采用了双股权结构的企业。通过这种股权结构模式，内部持股人持有的股票表决权远超过普通股股东。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">双股权结构历史上一直被纽约时报、福特汽车等家族企业所采用。但是近年来，这种股权结构在</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">、LinkedIn、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)等科技公司中流行开来。通过这种模式，这些企业的创始人们牢牢控制了公司。这种股权结构的支持者认为，股东实质上就是对创始人们进行投资，优先股让创始人们有足够的时间来执行自己的长期计划。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">双股权结构正在中国企业中流行开来。律师事务所Ropes &amp; Gray LLP提供的数据显示，自2013年1月在美国上市的中国公司当中，只有一家公司未采用双股权结构。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新浪</span></a><span style=\"font-size:14px;\">微博母公司新浪持有的每股新浪微博股票，等同于流通股三倍的表决权，这也让新浪持有新浪微博大约80%的表决权。500彩票网和58同城在去年秋季进行了首次公开招股，这两家公司内部持有人持有的每股股票，表决权等同于普通股的10倍。在线零售商兰亭集势高管持有的股票表决权等同于流通股的三倍，这也让这家公司有效的避免了被恶意收购。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">已经向美国证券交易委员会（SEC）提交了招股说明书的</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">，尽管公司内部持有人仅持有少数股权，但却将在首次公开招股之后保留任命董事会绝大多数董事的权利。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">投资者表示忧虑欲禁止双股权结构</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">双股权结构的拥护者们认为，这种股权模式能够让创始人们追求自己的愿景，不必因股东和激进投资人的压力而调整战略。他们指出，“股神”沃伦·巴菲特的伯克希尔·哈撒韦公司和谷歌是采用双股权结构的成功案例。新闻集团同样也采用了双股权结构。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">批评者们则认为，双股权结构让管理层疏远了股东，赶走了那些有想法要改变企业业绩的激进投资人，以及愿意溢价收购公司的潜在收购方。2012年的一项调查数据显示，在标准普尔1500种股票指数（S&amp;P 1500）成份股当中，严格控制表决权的公司在10年中的平均回报率为7.5%，表现逊于并未控制公司表决权的公司9.8%的回报。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">哥伦比亚大学法学院教授罗伯特·杰克逊（Robert Jackson）表示，“双股权结构让伯克希尔·哈撒韦公司成名，但也有</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GRPN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Groupon</span></a><span style=\"font-size:14px;\">这样的败笔。”这家美国最大的团购网站在2011年进行了首次公开招股，上市至今的股价累计跌幅已达到80%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一些投资人已经向美国的证券交易所表达出他们的顾虑。美国机构投资者理事会（The Council of Institutional Investors）是一个主要由养老基金、其他雇员福利基金、捐赠基金与基金会等组成的非营利性公益组织。该机构就敦促纽交所和纳斯达克证券市场禁止双股权结构。伦敦证券交易所、港交所和全球其它证券交易所均已禁止了双股权结构模式，这也让美国证券市场成为京东商城这样的公司唯一可去的地方。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">纳斯达克证券市场表示，任何一家公司应当自主决定企业治理模式。纳斯达克集团首席监管官兼首席法律官安东尼·爱德华爵士（Anthony Edward Knight）表示，“我们的观点是一种模式无法适应所有的企业。我们让投资人来决定他们双股权结构是否能在长期给他们带来更多的投资回报。”截至目前，纽交所对此报道未予置评。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近对全球54位投资人的调查显示，三分之二的受调查者均表示，因为阿里巴巴集团的双股权结构，他们给阿里巴巴集团的估值平均打折幅度达到19%。这不仅将限制阿里巴巴集团募集到更多的资金，而且也会让该公司以低于</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">eBay</span></a><span style=\"font-size:14px;\">的市盈率挂牌交易。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过58同城在去年10月上市时的发行价依旧超出了原定的发行价格区间，且截至目前的累计涨幅已达到58%。500彩票网和移动应用开发商久邦数码在去年11月进行首次公开招股后股价在3个月时间内更是实现了翻番。IPO顾问公司Class V Group的丽萨·拜耳（Lise Buyer）表示，“市场对一家公司的讨论越多，越多的短线投资人就会关注这家公司的股票。”（无忌）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140519/013490.htm','2014-05-19 17:11:57',1,'/news/thumb/2014419/1400490717603.jpg','京东商城本周将挂牌交易 新股投资人几无话语权','admin','shanyunliu'),(148,'<div>\r\n	<img alt=\"Twitter增速放缓业务模式早质疑 大股东要跑\" src=\"http://img1.gtimg.com/tech/pics/hv1/182/249/1599/104038652.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月20日消息，微型博客Twitter股价在第一季度的暴跌已经让该公司的一位大股东失去了信任，美国投资管理公司T. Rowe Price就已经开始抛售持有的Twitter股票。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">T. Rowe Price日前提交给美国证券交易委员会的监管报告显示，该公司在第一季度抛售了持有的大约四分之一Twitter股票。至第一季度末，该公司仍持有1356万股Twitter股票。T. Rowe Price在第一季度共售出465万股Twitter股票，套现数量比其他投资人的合计套现数量高出两倍以上。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">受用户增长速度放缓引发投资人对Twitter业务模式产生怀疑的影响，Twitter股价在第一季度下滑了27%，今年以来的累计跌幅更是达到了50%。不过在T. Rowe Price积极套现的同时，包括公司创始人埃文·威廉姆斯（Evan Williams）和杰克·多西（Jack Dorsey），首席执行官迪克·科斯特洛（Dick Costolo），以及公司第一大股东Rizvi Traverse Management和风险投资公司Benchmark均表示，他们不会套现，将继续持有Twitter股票。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Twitter员工和早期投资者持有的股票近日迎来解禁，该公司的内部持股者开始纷纷抛售手中股票。监管文件显示，Twitter首席财务官迈克·古普塔（Mike Gupta）以每股32.46美元抛售了6.6964万股Twitter股票，获利217万美元。此外，Twitter首席运营官阿里·罗格哈尼（Ali Rowghani）抛售了30万股Twitter股票，获利约990万美元。Twitter法律总顾问维嘉亚·嘉德（Vijaya Gadde）和财务副总裁卢卡·巴拉塔（Luca Baratta）也进行了套现。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至目前，Twitter及T. Rowe Price发言人均对此报道未予置评。在T. Rowe Price第一季度抛售部分Twitter持股之后，这家公司已退出后者十大股东的行列。彭博社的统计数据显示，T. Rowe Price目前持有Twitter大约2.3%的流通股，为公司第12大股东。该数据还显示，共同基金巨头富达投资集团（Fidelity Investments）在第一季度抛售177万股Twitter股票，持股量仅剩下37.89万股。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">抛售Twitter股票，并不是因为T. Rowe Price对社交媒体产业感到担忧。这家投资管理公司在第一季度增持了580万股</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">股票，如今已持有该公司2.1%的流通股。此外，T. Rowe Price还买入了148万股LinkedIn股票，持股所占总股本的比例升至7.1%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">T. Rowe Price通过早期对Twitter进行投资获得了巨额收益。2009年，这家投资管理公司伙同风险投资公司Institutional Venture Partners、Benchmark和星火资本（Spark Capital），以10亿美元的估值对Twitter投资1亿美元。Twitter当前的市值约为193亿美元。（明轩）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140520/009326.htm','2014-05-20 08:40:48',1,'/news/thumb/2014420/1400546469268.jpg','Twitter增速放缓业务模式遭质疑 大股东要跑','admin','明轩'),(149,'<div>\r\n	<img alt=\"传FB获阳狮集团数亿美元广告大单 主打视频广告\" src=\"http://img1.gtimg.com/tech/pics/hv1/64/245/1599/104037514.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月20日消息，消息人士周一透露，广告业巨头阳狮集团（Publicis Groupe）已同</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">签署了一份为期数年的数字营销协议。据悉，该交易的规模达到“数亿美元”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据悉，阳狮集团与Facebook签署的协议，主要涉及Facebook视频广告和在图片分享服务Instagram上刊登广告。依据双方签署的协议，阳狮集团将有权使用Facebook的用户数据，使该公司更好的测量Facebook广告的效果。此外，阳狮集团还可借助Facebook的技术人员和其它资源，协助创建专门针对Instagram广告业务的特殊广告部门。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook对与阳狮集团签署协议的内容未予置评，但在电子邮件声明中表示，与阳狮集团的合作，“将以让客户更接近完美的产品为中心，通过开发新计划和测量工具，让购买Facebook广告变得更简单、更有效率，最终证明投资回报是令人满意的。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阳狮集团旗下的星传媒体集团（Starcom MediaVest Group）表示，与Facebook的合作首先将在北美地区展开，随后将向全球铺开。星传媒体集团代表阳狮集团与Facebook共同签署了合作协议。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阳狮集团与竞争对手宏盟集团此前已决定终止350亿美元的合并方案。由于围绕着合并的不确定性，导致两家公司在4月份累计损失了超过15亿美元的业务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本月初有消息称，在经过多年的计划和测试之后，Facebook计划在未来几周内发布一系列的视频广告。Facebook在去年12月曾对视频广告进行过测试，当时播放了15秒青春科幻电影《分歧》（Divergent）的预告片。自那时之后，Facebook再未测试过视频广告。据悉，Facebook的视频广告每天需要广告主支付大约100万美元的账单，但即便是如此，Facebook也不会轻易接受任何广告主的视频广告。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Facebook股价周一在纳斯达克证券市场常规交易中上涨1.19美元，涨幅为2.05%，报收于59.21美元。过去52周，Facebook最低股价为22.67美元，最高股价为72.59美元。（明轩）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140520/008714.htm','2014-05-20 08:42:27',1,'/news/thumb/2014420/1400546547916.jpg','传FB获阳狮集团数亿美元广告大单 主打视频广告','admin','明轩'),(150,'<div>\r\n	<img alt=\"豆瓣推新应用“一刻” 移动策略向内容运营靠拢\" src=\"http://img1.gtimg.com/tech/pics/hv1/130/114/1604/104329300.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯（王鑫）5月23日消息，豆瓣今日上线一款并不符合豆瓣风格的新应用：一刻。这款应用目前没有个性化推荐、没有打星评论、也没有评论。唯一的功能就是，每天推送约15篇来自豆瓣网的精选内容供用户阅读。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据豆瓣官方介绍，每日推送的内容通过算法筛选和人工整理之后生成。内容来源包括用户写在豆瓣上的书影音评论、日志、小组帖子甚至用户个人相册等。该应用已推出android版，iOS版预计6月初上线。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为以创建社区为优势的豆瓣网，一刻是其专门为移动端推出的纯媒体性产品。用户使用产品的核心动作就是挑选感兴趣的内容进行阅读。即使没有豆瓣账号，功能使用也不受影响。如果对文章感兴趣，可以加入“我的喜欢”列表，或者分享到微信朋友圈。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一刻的上线让人容易联想到另一款产品：问答社区知乎针对移动端推出的知乎日报。这两款产品存在众多相似点，比如每日推送内容均来自于各自的社区本身、满足用户在移动端的信息阅读需求等。如今，知乎日报除了展现网站内容，还添加了主题日报，由各主编推荐外网内容。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">无论是一刻，还是知乎日报，该类产品对于社区型网站的贡献在于，让用户更容易且更快速地发现社区里的优质内容，并使这些内容传播到微信朋友圈等移动端的活跃社交网络中，以此带来更广泛的用户群。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在布局移动互联网产品方面，豆瓣正在频遭质疑。虽然旗下独立应用已超过11个，但均表现平平，尚未引起行业反响。对于一家每月独立访问用户超过2亿的网站，豆瓣并未借此优势创下自身在移动端的影响力。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">新应用一刻的上线，意味着豆瓣不得不开始尝试新的移动产品策略。运作这类重视产品自身运营和话题引导性的产品，豆瓣官方表示，他们在这个领域的经验并不充分。但随着陌陌、知乎等产品在不断用新产品形态吸引注意力时，豆瓣也不得不快速走向模仿和学习之路。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140523/022520.htm','2014-05-23 12:29:39',1,'/news/thumb/2014423/1400819402593.jpg','豆瓣推新应用“一刻” 移动策略向内容运营靠拢','admin','王鑫'),(151,'<div>\r\n	<img alt=\"谷歌将量产4000台3D成像平板电脑 I/O大会亮相\" src=\"http://img1.gtimg.com/tech/pics/hv1/4/76/1604/104319484.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月23日消息,美国权威媒体23日引述知情人士报道，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)正在研发一种极为先进的平板电脑产品，其可以识别3D物体，具备高级可视和3D成像能力，可帮助视觉障碍人士，另外可用于浸入式游戏。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">熟悉谷歌计划的消息人士表示，从六月初开始，谷歌将生产4000台“可视”平板电脑原型产品。据称，谷歌这款平板配置了七英寸显示屏，拥有两个后置摄像头，红外深度感应器，内置的先进软件，可以让平板捕捉、识别3D物体，生成3D图像。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">消息人士表示，这一“可视”平板，属于谷歌一项名为“Tango项目”的研发计划。六月底，谷歌将举行GoogleI/O全球开发者大会，第一批可视平板，将会在大会上亮相。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">今年二月份，“Tango项目”研发团队，已经首先发布了一部智能手机原型机，其配置类似的摄像头和传感器，可以根据用户所在的环境，产生3D地图。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这款手机中的3D识别功能，可用于视觉障碍人士的室内导航、超市购物导航，以及浸入式的游戏。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">据报道，和二月份推出的3D识别智能手机一样，谷歌计划首先针对开发者，推出一批3D识别平板电脑。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">美国科技市场研究公司IDC的分析师Bryan-Ma表示，对于谷歌而言，需要把先进的技术，“翻译”成为实用功能，因此需要首先把最新科技开放给开发群体。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">媒体评论指出，谷歌的3D识别智能设备，最大的挑战，也是开发出对用户实用的功能。另外一位分析师也表示，科技发明往往走在实用功能之前，伴随着谷歌和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">等公司在虚拟现实、3D成像等领域投入资源，预计未来将会利用新技术开发出更多实用功能。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">按照谷歌的惯例，新技术新产品首先会在小范围提供给开发者和试用者，希望能够激发出丰富的用途和功能。除了识别3D物体的Tango项目之外，谷歌眼镜目前正在大面积试用中。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">谷歌的做法和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">也形成了鲜明对比。苹果喜欢在公司内部进行秘密研发和测试，待产品成熟之后推向市场，引发消费者追捧。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">虚拟现实、增强现实、3D成像等计算机视觉技术成为科技领域的一大热点，标志性事件就是Facebook斥资20亿美元收购虚拟现实设备制造商OculusRift公司。媒体报道指出，目前的计算机视觉技术，其水平远远超过了传统的3D显示技术。（晨曦）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140523/018195.htm','2014-05-23 12:32:14',1,'/news/thumb/2014423/1400819534395.jpg','谷歌将量产4000台3D成像平板电脑 I/O大会亮相','admin','晨曦'),(152,'<div>\r\n	<img alt=\"同程与艺龙解除合作协议\" src=\"http://img1.gtimg.com/tech/pics/hv1/107/60/1604/104315507.jpg\" /> \r\n</div>\r\n<div>\r\n	<p>\r\n		腾讯科技讯（范晓东）5月23日消息，同程旅游今日发布消息称，经过与<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/LONG.OQ.htm\" target=\"_blank\">艺龙</a>协商，正式解除双方此前签署的战略合作协议。根据双方的约定，同程旅游已经于5月22日向艺龙支付了3000万元人民币的补偿金，艺龙则承诺在2014年5月23日前继续向同程提供酒店库存。\r\n	</p>\r\n	<p>\r\n		同程旅游CEO吴志祥表示，与艺龙终止合作是公司新组建的董事会根据行业格局变化提出的建议，公司管理层考虑到用户体验的长期稳定性等因素，经过慎重考虑采纳了这一建议，并很快与艺龙方面达成了谅解。他还表示，同程方面已经按照与艺龙达成的谅解履行了相关赔偿责任，艺龙方面按合约规定在2014年5月23日前继续向同程提供酒店库存，确保资源切换期间同程酒店预订服务的稳定性。切换完成后，同程的酒店现付业务将接入携程的资源，携程的门票现付业务将接入同程的资源。\r\n	</p>\r\n	<p>\r\n		今年4月10日，同程和艺龙达成协议，双方表示，艺龙将为同程提供中国大陆的前台现付酒店和团购酒店的库存，同时同程将为艺龙提供景点门票的库存。\r\n	</p>\r\n	<p>\r\n		吴志祥后来接受采访时透露，在同程网和艺龙网宣布达成战略合作的当天晚上，携程正式向同程抛出橄榄枝。双方的第一次会面于4月19日在苏州进行，二者合作谈判进展顺利，两个小时内变在门票业务合作和携程战略入股等方面达成一致，并在随后一周内完成了合约起草签订。\r\n	</p>\r\n	<p>\r\n		4月28日，艺龙最主要竞争对手携程正式宣布2.2亿美金投资同程，占股约30%为左右，此轮投资后，同程的估值接近50亿元人民币。\r\n	</p>\r\n	<p>\r\n		吴志祥曾表示，携程将把景点门票的现付业务全部接入同程，但在景+酒产品等预付门票和酒店领域，双方仍保持独立发展和竞争。\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<ul>\r\n		<li>\r\n			引入携程投资，则让携程的另一主要竞争对手艺龙陷入尴尬局面。对此，吴志祥当时表示，同程旅游根据自身的发展目标选择了业务合作，并且在选择中最大程度考虑了对方的利益，这一切都是在不确定中突然发生的，同程会严格遵守合同来履行和艺龙达成的协议。\r\n		</li>\r\n	</ul>\r\n	<p>\r\n		<br />\r\n	</p>\r\n</div>','腾讯科技','http://tech.qq.com/a/20140523/016322.htm','2014-05-23 12:33:28',1,'/news/thumb/2014423/1400819608972.jpg','同程与艺龙解除合作协议','admin','范晓东'),(153,'<div style=\"text-align:left;\">\r\n	<img alt=\"即时通讯领域杀出黑马 Ringo无需联网即可拨号\" src=\"http://img1.gtimg.com/tech/pics/hv1/80/114/1605/104394275.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯5月25日消息</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随着Skype这些即时通讯应用在近年来的风靡，越来越多的应用开发厂商也都希望能够从这一市场分一杯羹。其中，Viber和最近的Line便是其中之一，而且它们都在近期推出了各自廉价的视频通话服务。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而在近期，一款名为“Ringo”的应用也正式宣布加入到网络通讯应用竞争的洪流之中。据开发商介绍称，Ringo最大的特点是允许用户在未接入互联网的情况下拨打电话。这也就意味着，Ringo能够提供与电信运营商类似的语音通讯功能。而且，Ringo所提供的通讯服务还不会因为互联网连接的不稳定而产生延迟、丢失语音数据、音质失真等常见问题。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Ringo方面表示，用户通过手机所拨出的电话将依旧显示拨出方的手机号码信息。与此同时，Ringo强调称自己语音通话服务收费标准相比其他流行的语音通讯应用低了许多。对此有分析人士认为，这显然是Ringo给予Skype所祭出的一记杀手锏。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据悉，在应用发布初期，Ringo将面向美国线路用户推出降价80%的优惠措施，即将每分钟0.017美元的资费下调至0.003美元。在另一方面，目前Skype每分钟的语音资费则为0.023美元，而且这还不包含另外0.049美元的接通费用。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">截至目前，Ringo已经针对包括澳大利亚、巴西、加拿大、德国、香港、意大利、日本、墨西哥、荷兰、美国和英国在内的16个国家和地区推出了自己的iOS和Android版本应用，这些地区的Ringo用户可以通过这一服务拨打全球任意地区的电话号码。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">外界分析认为，Ringo极有可能成为一款非常具备市场潜力的网络通讯应用，该应用不但会对其他网络通讯应用构成威胁，同时也会对传统移动运营商施加巨大压力。目前，有关Ringo能否产生像即时通讯应用对短信产业产生的毁灭性影响我们还不得而知，但该应用就现阶段而言的通话质量相当不错，也没有面临什么技术问题，因此我们相信该应用拥有着非常不错的发展潜力。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140525/002578.htm','2014-05-25 14:57:09',1,'/news/thumb/2014425/1401001052213.png','即时通讯领域杀出黑马 Ringo无需联网即可拨号','admin','ninayu'),(154,'<div>\r\n	<img alt=\"斯诺登与NSA的首次对抗：举办加密派对\" src=\"http://img1.gtimg.com/tech/pics/hv1/123/159/1605/104405793.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯5月25日消息，《连线》杂志近日刊登了一篇文章称，斯诺登向美国国家安全局（NSA）发起的第一次对抗是他在夏威夷举办的一次派对。情况到底是什么样的呢？</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当时是2012年12月11日，NSA的合同工爱德华斯诺登（Edward Snowden）在檀香山的一家家具店后面的小型艺术作坊里构想如何推翻美国国家安全部覆盖全球的监控网络机制。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯诺登当时还没出名，他的泄密行为是在6个月之后才发生的。斯诺登当时主持了一个名为“加密派对”的活动，主要是教十几个夏威夷居民如何给硬盘加密以及如何匿名使用互联网。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与斯诺登一同主持那次派对的技术专家兼作家鲁娜山德维克（Luna Sandvik）称：“他自称埃德，在聚会开始之前我们进行了一些交流，我记得当时我问他在何处高就或从事什么职业，但他不愿透露。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">加密派对是由澳大利亚墨尔本的亚瑟沃尔夫（Asher Wolf）在2011年发起的一项全球性草根运动。目的是将精通Tor和PGP软件的技术专家与激进分子、记者和需要那些工具的任何人聚集在一起，传授匿名使用互联网的技术。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据沃尔夫统计的数据显示，截至2012年底，全球各国一共组织了1000多次此类派对。这项运动与政治无关，并且向任何人开放。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">沃尔夫说：“不要将任何人排除在外，邀请政客，邀请你或许认为不一定要邀请的各种不速之客来参加。这是一项务实的运动。派对结束的时候，他们应该已经安装好Tor软件并且会用OTR和PGP软件了。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯诺登当时还是NSA的一名合同工，他亲自组织了这样一次派对。自从他在2013年6月作出泄密行为之后，立刻遭到媒体的严厉指责，甚至被美国国会议员称作是中国或俄罗斯的间谍。有媒体称，斯诺登或许曾经同时为俄罗斯和中国工作，因为在他披露的秘密之中，只有少数跟美国政府的监控行为有关，大多数秘密的主要价值仍体现在间谍活动之中。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在大多数情况下，这些攻击都没有对斯诺登造成伤害，因为斯诺登在维护自己的公众形象和不证自明的风险与牺牲上做得很不错。只有上个月发生了一次例外，斯诺登与俄罗斯总统普京进行了一次视频问答，他向普京提出的关于俄罗斯政府的监控机构的问题就象是事先商量好的一样，搞得他好像在跟普京唱双簧一样。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是不管你如何评价斯诺登的行为，他的目的是毋庸置疑的，因为即便是在泄露那数十万份文件之前，他就曾经花了两个小时的时间去耐心地教邻居如何去保护自己。他可以说是大处着眼，小处着手。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯诺登的加密派对的根源在2012年12月18日被扑灭了，他当时给山德维克发了一封电子邮件，而后者当时可以说是隐私保护圈子里的一颗冉冉升起的新星，也是匿名上网软件Tor的关键开发者之一。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Tor是一款能够帮助用户匿名上网的免费软件，它在那些需要匿名上网的人群比如人权保护组织、罪犯、政府部门和记者中得到广泛使用。它可以接受来自公共互联网的连接，对流量进行加密，然后在将信息返回网络之前通过1000多个结点对信息进行复杂的中转处理。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大多数中转结点是由志愿者提供的，而在泄密之前，斯诺登也是他们中的一员。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯诺登在电子邮件中写道，他亲自管理着其中一个名为TheSignal的服务器，而且他还试图说服与他同一办公室的其他同事建立更多的服务器。他没有透露当时他在哪家公司效力，但他希望知道山德维克是否能够给他发一些正规的Tor标签。（泄密事件发生之后，你可以看到他的</span><a href=\"http://digi.qq.com/nbook/nbook.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">笔记本</span></a><span style=\"font-size:14px;\">电脑后面贴着Tor的标签。）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">山德维克说：“他说他一直在劝说某些技术水平更高的同事建立更多高速服务器，而且还想了一些点子去诱使他们尽快那么做。我后来了解到，他其实管理着多台Tor出口中转站。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随后，斯诺登将自己的联系方式包括真实姓名、通信地址等信息都提供给了山德维克。山德维克以前从未听说过斯诺登，实际上，当时没人听说过斯诺登。但她当时正好计划在下个月去夏威夷度假，于是她回复了斯诺登的电子邮件并且邀请他参加为当地居民举办的一次展示会。斯诺登的积极性很高，并且为之筹备了一次加密派对。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他在邮件中写道：“我认为夏威夷从未举办过成功的加密派对，因此我认为那真是一个好机会。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">沃尔夫在墨尔本接到斯诺登发来的一封电子邮件，后者请她为即将在夏威夷举办的加密派对提供建议。她欣然提供了帮助，每次都用最简单的方式教斯诺登使用一款工具。她后来说：“要是我当时知道他是NSA的人，我肯定会逃走和自杀的。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯诺登化名“辛辛纳特斯”（Cincinnatus）并通过Hi Capacity黑客团体组织了那次加密派对。Hi Capacity是一个小型黑客俱乐部，举办过从焊接的基本知识到使用3D打印机的各种研讨会</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">辛辛纳特斯在声明中写道：“派对将以一个非正式的议程开始，中间会根据需要增加一些演讲。如果你认为你可以为某人的演讲提供一些重要的补充，请在别人演讲结束后说出来，我们将临时给你提供一个发言的机会。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">举办加密派对那天，山德维克自己去了派对现场，一家名为Fishcake的家具店后面的Oahu艺术作坊。参加派对的大多为男性，总数大概有20多人。当她走进派对现场时，斯诺登一眼就看到了她，然后向她介绍了自己和他当时的女友琳赛米尔斯（Lindsay Mills）。米尔斯那天负责现场的摄像工作。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">山德维克说：“斯诺登为人不错，他走到门口来做自我介绍，然后向我介绍派对将如何进行。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他们又聊了一会儿别的内容。山德维克问斯诺登在哪里工作，他先是支支吾吾不肯说，最后说他为</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/DELL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">戴尔</span></a><span style=\"font-size:14px;\">工作。他没有继续说明自己是NSA外派到戴尔工作的合同工，但是山德维克知道他隐瞒了些什么。她说：“我感觉他不希望我了解太多关于他的信息，他很快就岔开了话题。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">随后，山德维克开始象平常一样向参加派对的人讲解和演示如何使用Tor软件，之后斯诺登站在白板前花了30到40分钟的时间介绍开源硬盘加密工具TrueCrypt。他详细说明了加密硬盘或U盘的每一项步骤。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">山德维克说：“之后我们临时加入了一项新的安排，一起演示如何设置和运行Tor中继站。他真的是一位很聪明的小伙子，他非常了解Tor，好像没有什么是他不知道的。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">她补充说：“一切都进行得非常顺利。甚至连派对的安排和座椅的布置都让人挑不出毛病。或许他真的很擅长组织这种活动。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">派对结束的时候，山德维克与斯诺登告别后返回了她在夏威夷预订的酒店继续度假。斯诺登随后在加密派对维基页面发了一个回复贴，宣布他举办的派对取得了巨大的成功。他说：“参加派对的人比预想得更多，而且男女老少都有。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">山德维克之后就再也没有跟斯诺登联系过，直到2013年6月9日《卫报》报道称NSA的大量秘密文件是被斯诺登泄露出来的，那个时候她才想起了斯诺登。她说：“当时的情况非常有趣，很多人都在Twitter上讨论爱德华斯诺登这个人，我通过链接浏览了卫报的那篇报道，越看越觉得这个人很眼熟。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">斯诺登自己站出来之后，山德维克开始悄悄地密切注意他管理的Tor中继站，但那些中继站一个月后就下线了。但她没有对外透露过她曾与斯诺登一起主持加密派对的事。她说：“我并不认为我应该把这件事讲出来，但是关于那次派对的报道和照片早就被传到网上了，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/RENN.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">人人</span></a><span style=\"font-size:14px;\">都能发现我当时就在派对现场。我一直在等别人发现这一点。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">出人意料地是，联邦调查局从来也没有联系过她，可能联邦调查局根本就没有注意到她跟斯诺登一起主持过加密派对。她说：“那让我很困惑，他的女友明明拍下了派对的整个过程，但是那些视频从来也没有被放上网，他们对我说视频的声音部分出问题了。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">格伦格林沃德（Glenn Greenwald）上周出版了他以斯诺登为题材写的新书《无处隐藏》，首次披露了“辛辛纳特斯”这个化名，让更多的人看到了加密派对的事。实际上，举办派对后只过了11天，斯诺登就给格林沃德发了第一封匿名邮件。几个月之后当他公开NSA的大量秘密文件时，他还在等格林沃德的回信。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">沃尔夫说：“我总觉得加密派对给斯诺登提供了一个机会，让他能够好好规划一下他已经打算做的那些事。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">她说：“但他毕竟向很多人教授了很多知识，那很有意义。我们的加密派对运动一直是靠志愿者来推行和实施的，他们很多人因此而置身险地，这对他们来说并不容易。而对当时可能已经开始在筹划泄密计划的斯诺登来说，在加密派对上讲课是冒了极大的风险的。我很高兴他还是这么做了，他简直就是一个传奇。”（林靖东）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140525/007486.htm','2014-05-25 14:58:28',1,'/news/thumb/2014425/1401001108369.jpg','斯诺登与NSA的首次对抗：举办加密派对','admin','林靖东'),(155,'<div>\r\n	<img alt=\"苹果再度寻求三星的禁售令 欲就赔偿金进行部分重审\" src=\"http://img1.gtimg.com/tech/pics/hv1/119/166/1605/104407574.jpg\" />\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯5月25日消息，据美国科技资讯网站CNET报道，<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>欲再度寻求针对三星产品的禁售令。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	苹果周五提交的文件中提到本月早些时候加州一法院针对其与三星专利案的判决内容。这家位于圣何塞的联邦法院判定，三星侵犯了苹果三项专利，而苹果也侵犯了三星的一项专利。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	针对侵犯苹果“快速链接”(quick links)、“滑动解锁”(slide to unlock)和/或输入校正(automatic word correction)等专利的三星产品，苹果提出了禁售请求。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	若按照苹果要求，纳入禁售范围的三星产品有Admire、Galaxy Nexus、Galaxy Note、Galaxy Note II、Galaxy S II、Galaxy S II Epic 4G Touch、Galaxy S II Skyrocket、Galaxy S III、以及Stratosphere。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	至于未涉及此次专利纠纷的三星新产品以及未来产品，苹果的律师在周五的文件中也有所提及。苹果方面认为，这项禁令同样适用于任何涉嫌侵犯上述专利的软件和代码、以及具备与所侵犯专利相似功能的软件和代码。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	苹果的律师还表示，公司将因三星被允许继续使用这些专利功能而蒙受不可修复的损失，而三星所赔偿的金额也不足以弥补这些不可修复的损失。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在本月初的判决中，陪审团要求三星向苹果赔偿1.196亿美元，这还不到苹果此前要求的22亿美元的一个零头。与此同时，苹果也因侵犯三星一项专利，需要赔偿对方15.84万美元。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在周五提交的另一份文件中，苹果要求针对赔偿金内容进行部分重审。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	苹果和三星在专利问题上已经在法庭争执许久，但是高兰惠(Lucy Koh)法官在近期的几次审判中已经有两次拒绝苹果针对三星产品发起的禁售请求。（李路）\r\n</p>','腾讯科技','http://tech.qq.com/a/20140525/008322.htm','2014-05-25 14:59:46',1,'/news/thumb/2014425/1401001186845.jpg','苹果再度寻求三星的禁售令 欲就赔偿金进行部分重审','admin','李路'),(156,'<div>\r\n	<img alt=\"Twitter股价创上市后最低 前途迷茫华尔街分歧\" src=\"http://img1.gtimg.com/tech/pics/hv1/211/169/1605/104408431.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯5月25日消息,Twitter和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">，是一对社交网络的“假想敌”，两者功能越来越接近。然而在股价和市值上，Twitter和Facebook，完全是行走相反的方向上。Facebook股价节节攀升，目前接近历史最高位，而Twitter则是一路跌跌不休，本周末，Twitter再次创下了上市以来的最低收盘价记录。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，对于Twitter的发展前景和股票价值，公司管理层、华尔街分析师以及普通投资人出现了严重的分歧。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Twitter今年的股价走势，一路下坡，惨不忍睹。周五，Twitter股价大幅下跌了3.24%，跌去近1美元，当天的收盘价为30.5美元，这创造了Twitter去年底上市以来的最低收盘价记录。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据最新股价，Twitter的公司市值显示为178亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">本月初，Twitter在盘中曾经跌穿30美元关口，但是收盘时反弹。股价行情显示，Twitter的52周股价最高值为74.73美元，目前距离这一价位，已经跌去了59%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Twitter股价一路下挫的原因，其实和之前并未发生变化，依旧是用户增长速度下滑。虽然之前诸多民调指出，全世界年轻的网民，正在逃离沦为“中老年乐园”的Facebook，流向Twitter等更便捷的社交网络。然而Twitter公布的用户增速，却显示出“夕阳业务”的疲态。分析师普遍认为，目前看来，微博这种产品形态，无法实现Facebook这样的大众化，Twitter很难在用户规模上和Facebook竞争。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据Twitter数据，今年第一季度，其月活跃用户数同比增长25%，低于上一季度的30%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在最近的股东大会上，Twitter管理层安抚众股东，表示高管以及董事会，从未抛售Twitter股票，他们对Twitter的用户增长前景，仍然充满信心。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">也有分析师认为，Twitter股价遭到“腰斩”，是因为投资人没有看清Twitter的发展前景。标准普尔资本公司的技术分析师凯斯勒（Scott-Kessler）表示，太多的投资人把眼光聚焦在Twitter的用户增速上，但他们应该把视野放大一些。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这位分析师表示，Twitter其他反映用户使用微博活动的指标，比如转发量和收藏量，都呈现出两位数增长。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">凯斯勒也指出，Twitter今天的问题其实是管理层自己造成的，他们没有充分对外介绍，微博平台对于广告主有着充分的吸引力，广告主的兴趣还在增加。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">凯斯勒举例说，去年上市之际，Twitter斥资3.5亿美元收购了移动广告公司MoPUb，这一收购极大增强了Twitter的移动广告收入。这表明Twitter的广告潜力依旧很大。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">凯斯勒表示，Twitter目前的股价，仅仅为2014年预期收入的十五倍左右，对于投资者而言，这是一个不错的买入机会。据报道，几周前，这位分析师给Twitter股票定出了“买入”评级。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">微博社交模式，相比Facebook的“网页社交”，具有便捷、快速、碎片化、移动化特点，这更符合青年人的心理。然而，在移动社交时代，Twitter正在遭遇“两头夹击”，一方面，手机聊天和手机分享工具异军突起，WhatsApp、Snapchat成为当红的移动应用，分流了Twitter用户，另外一方面，移动产品线薄弱的Facebook，已经成为“睡醒的雄狮”，其斥资190亿美元收购了WhatsApp、完善自有聊天工具Messenger，此外对于Facebook的客户端频频升级。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年底，Twitter上市发行价为26美元。在未来几周之内，Twitter管理层是否有能力和投资者沟通，阻止Twitter股价进一步下跌直至破发，将值得关注。（晨曦）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140525/009027.htm','2014-05-25 15:00:48',1,'/news/thumb/2014425/1401001248365.jpg','Twitter股价创上市后最低 前途迷茫华尔街分歧','admin','晨曦'),(157,'<p>\r\n	<a href=\"http://www.199it.com/wp-content/uploads/2014/05/20140521.3.jpg\"><img src=\"http://www.199it.com/wp-content/uploads/2014/05/20140521.3.jpg\" alt=\"20140521.3\" width=\"400\" height=\"248\" style=\"width:auto;height:auto;\" /></a> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">与西方发达国家相比，中国在互联网应用的某些方面占着“便宜”；互联网思维与传统产业的对接，将产生长尾效应、免费效应、迭代效应和社交效应；用好互联网思维，制造业链条上的研发、生产、物流、市场、销售、售后等都要顺势而变。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“互联网思维”俨然已经成为我国经济界、产业界炙手可热的词汇。不过，发源于美国的它，为何在中国受到如此热捧？互联网思维真的会颠覆传统产业、传统商业模式吗？作为企业界大佬，柳传志如何看待这些问题？又是如何运用互联网思维的？文章很干货，值得一读。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">口述：联想控股董事长柳传志</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">1、与西方发达国家相比，中国在互联网应用的某些方面占着“便宜”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">问：“互联网思维”俨然已经成为我国经济界、产业界炙手可热的词汇。不过，有意思的是，这个看上去闪耀着思想光芒的词汇，它的发源地并不是众多互联网应用的创始地美国，而是中国。为何互联网思维在中国受到如此热捧？</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">柳传志：作为联想控股的董事长，我一直思索的问题是，传统行业到底能跟互联网发生怎样的关系，换句话说，应该怎么去通过互联网应用把传统业务发展得更好。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">站在这样的角度，我发现与西方发达国家相比，中国在互联网应用的某些方面占着“便宜”。众所周知，经过几百年的发展，西方发达国家传统制造业、服务业都已比较成熟，要实现传统业务与移动互联网崭新业务模式的对接，肯定会不太自然，也存在一定困难。而在中国，传统行业做得并不成熟，崭新的互联网模式的涌现，正好为我们转型发展提供了难得的机会。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">联想控股的农业板块——佳沃集团，就是看到了我国传统农业向现代农业转型发展中的巨大机遇。我们借鉴了联想30年来在IT互联网行业积累的成功经验，结合大数据、云计算、物联网、移动互联网等先进理念和技术手段，从果业切入，搭建起了一套全新的农业发展模式。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">这套模式核心有三个：</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style=\"font-size:14px;\">一是质量全程可追溯。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">二是生产种植过程分析。</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"font-size:14px;\">三是电子商务以及与之配套的高效冷链物流系统，让从田间到餐桌这一过去复杂的供应链大大简化。</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">2、互联网思维与传统产业的对接，将产生长尾效应、免费效应、迭代效应和社交效应</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">问：您如何理解互联网思维？</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">柳传志：换一种角度，从结果的角度来解读，互联网思维与传统产业的对接，会改变传统的商业模式。从结果看，大致会产生这么几个效应：长尾效应、免费效应、迭代效应和社交效应。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">互联网尤其是移动互联网开放、互动的特性，以及大数据、云计算等技术手段的应用，使得大量的中小企业和注重个性化需求的个别消费群体，成为了商业中的主要顾客。而在此前，除了大客户、大众市场受到重视外，企业虽然也强调“个性化”“客户力量”和“小利润大市场”等理念，但是，由于数据采集、精准定位、柔性生产以及点对点营销等技术手段的缺乏，企业很难满足这些小众市场的需求。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">以联想集团为例，过去每当微软推出一个新的操作系统，或者英特尔上市了一款新的CPU，我们就会根据自己对中国客户消费需求的调查，推出一款或几款主打的个人电脑产品。尽管我们比竞争对手做得好，也就是我们做了款电脑，大家使用而已。现在，互联网思维将有助于企业将产品做得更加柔性化，更加适合个体的个性化需要。以图书为例，印刷五千册甚至更少的书也能够在Kindle电子书上阅读，这就是长尾效应最直观的体现。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">免费，一直都是互联网的基因之一。比如车载导航，过去高德、四维图新等地图供应商采用收费模式，但伴随着地图成为移动互联网的入口级服务，阿里、百度等争相布局，免费就成为大势所趋。如今，无论是百度还是高德，都已经宣布了永久免费，并在短时间内聚集了大批用户，接下来就是全新商业模式的孕育。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">迭代效应，是互联网思维的另一个结果。从项目的草稿版本开始，一直到最终版本结束，中途随着逐步完善而产生的各个版本称之为迭代。互联网思维的迭代效应指的是全新的研发思路，通俗地说，就是原型设计尽快上线，通过用户互动、反馈迅速调整设计，持续微创新，不断完善。让用户参与产品试验、验证，并倾听用户的反馈进行改进，这样的产品研发模式，以往是很难操作的。互联网思维让它变成了现实，更重要的是，它还可以与粉丝营销相结合。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">还有社交效应。过去做产品推广靠的是新闻发布会、广告攻势，如今，思路要转换。比如佳沃蓝莓上市后，除了传统的推广方式外，还通过社交圈子加大了对孩子妈妈这一群体的推广，让她们知道蓝莓对孩子眼睛好，了解佳沃蓝莓的高品质等，市场效果就很好。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">3、用好互联网思维，制造业链条上的研发、生产、物流、市场、销售、售后等都要顺势而变</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">问：近来，不少企业家、经济学家都对互联网思维的颠覆作用进行了设想和论述，比如，有观点认为，伴随着互联网思维在经济领域的深化，那些靠中间环节获取利润空间的企业形态将消失；那些靠闭环效应实现壁垒或垄断的行业将被颠覆；那些强制性中心制的生产与制造方式将被取代；那些通过信息不对称和特殊渠道建立的“差异化”优势将会消融。在您看来，互联网思维真的会颠覆传统产业、传统商业模式吗？</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">柳传志：近来经济界、企业界一直在探讨互联网思维对传统产业、传统商业模式的颠覆作用，其实，对传统产业而言，互联网思维的最大作用不是颠覆，而是改良和改善。联想控股眼下思考的是，旗下IT、房地产、消费与现代服务、化工新材料、现代农业五大支柱行业如何善用互联网思维，抓住互联网时代的发展机遇。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">我们认为，互联网思维开放、互动的特性，将改变制造业的整个产业链。因此，用好互联网思维，制造业链条上的研发、生产、物流、市场、销售、售后服务等环节，都要顺势而变。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">首先是研发。互联网思维的互动特性，与云存储、大数据叠加，使得制造业企业真正实现对客户需求的直接了解，这将对企业的研发模式带来深刻的变革。那些充分把握个性化市场需求、灵活、高效、低成本的研发流程和体系，将迸发出更大的活力，并越来越得到市场的认同和接受。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">研发流程和体系的变化，将改变100多年来一直占主导地位的工业化大生产模式。通过企业管理信息化与物联网、射频、传感技术相结合，传统制造业的自动化、柔性化、模块化程度将大幅提升，进而让低成本的定制化生产成为可能。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">接下来，就是市场营销体系的深刻变革。一方面，互联网尤其是移动互联网的普及，让信息的获取与传播变得更加容易，生产方与消费者之间的信息不对称被打破，由此带来的信息的开放、消费者话语权的增强，让过去单纯依靠媒体新闻发布、刊播广告树立品牌、推广产品的模式，无法适应市场的需要。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">另一方面，长尾效应带来的定制化、个性化需求，也要求企业主动与消费者搭建起沟通的桥梁。无论借助现有电商平台，还是自己搭建全新的O2O销售体系，都将对传统的渠道概念、分销模式带来冲击。小米的互联网营销模式，尤其是它成功的粉丝营销、圈子营销，都值得传统企业认真研究借鉴。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">互联网思维带来的改变不只体现在传统制造业，它对金融业的触动已清晰可见。我也希望阿里巴巴等企业在互联网金融领域的探索，能尽快解决我国中小企业融资难题，从而为激发中小企业的活力、促进就业发挥更大的作用。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">摘自：人民日报</span>\r\n</p>','中文互联网数据资讯中心','http://www.199it.com/archives/230403.html','2014-05-25 15:13:39',1,'/news/thumb/2014425/1401002019924.jpg','柳传志眼中的互联网思维','admin','Justin Liu'),(158,'<p>\r\n	<img src=\"/upload/image/20140528/20140528084949_289.jpg\" alt=\"\" width=\"720\" height=\"360\" title=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	其实早在<a target=\"_blank\" href=\"http://www.36kr.com/p/210265.html\">腾讯入股京东商城</a>的时候，在合作条款中就有明确的规定，腾讯承诺将在手机 QQ、微信等战略级移动产品上，为京东提供一级入口支持，帮助京东发展移动电商业务。\r\n</p>\r\n<p>\r\n	如今几个月的时间过去了，当初的承诺终于得以兑现，微信正在内测“购物”一级入口菜单，在“发现”主菜单下面，和游戏、朋友圈等重量级的功能并列。目前微信正在小范围内测，仅北京、上海部分用户可见，预计大规模上线时间会在 6.18 京东周年庆的时候。\r\n</p>\r\n<p>\r\n	“购物”菜单进去之后，有三个子菜单，分别是“新发现”、“品牌”和“聚惠”。据<a target=\"_blank\" href=\"http://tech.qq.com/a/20140527/044944.htm\">京东官方介绍</a>，“新发现”定位为 “发现最潮和最新奇的好货”，根据用户的喜好呈现不同的商品推荐；“品牌” 以品牌特卖会的形式向用户推荐各大知名品牌的折扣商品；“聚惠”则以“性价比”致胜，向用户推荐最具性价比的单品。\r\n</p>\r\n<p>\r\n	除了整合京东的电商资源外，整个“购物”也将全盘接入微信支付，所有商品全部通过微信支付完成。除了微信外，“购物”菜单还将同步上线至手机 QQ，接入手机 QQ 钱包进行支付。\r\n</p>\r\n<p>\r\n	其实自腾讯以 QQ 网购、拍拍网全盘资产外加 2.15 亿美元现金入股京东商城以来，双方就在不断进行资源整合，京东接入微信、手机 QQ 的一级菜单本就是合作框架的一部分，既满足了京东电商对于移动流量、用户的需求，又可以帮助微信拓展支付。\r\n</p>\r\n<p>\r\n	题图来自微信公众账号“微联天下”\r\n</p>\r\n<p>\r\n	[36氪原创文章，作者: WANGJINGYU]\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','36氪','http://www.36kr.com/p/212359.html','2014-05-28 08:50:45',1,'/news/thumb/2014428/1401238265927.jpg','京东和微信进一步整合：微信开辟“购物”一级入口，整合京东电商资源','admin','WANGJINGYU'),(159,'<p style=\"text-indent:2em;\">\r\n	临出门前发现手机、相机等设备没电了，是不是经常让你烦恼呢？电子设备没电了，又常常找不到可以充电的地方，是不是经常会让你不爽呢？估计这样的场景发生频率实在是太高了，近期已经有不少研究开始关注类似的充电的问题并取得了不错的进展。最近，美国范德堡大学的研究人员研发出了一种新型的结构性超级电容器，可在几分钟内完成对智能手机设备的充电。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	其实，快速充电问题已经有不少公司在做了，比如以色列公司<a target=\"_blank\" href=\"http://www.36kr.com/p/211001.html\">StoreDot</a>开发新型生物半导体充电技术，可在 30 秒内完成手机充电；一款叫<a target=\"_blank\" href=\"http://www.36kr.com/p/211894.html\">Legion</a>的产品，能缩短 92% 的充电时间，在 Kickstarter 上众筹也取得了不错的成绩。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	这快速充电方面，这款超级电容器的表现也只能算是勉强优秀啦。不过，这款产品的另一大特色就是使用寿命长，据说循环使用的次数可以达到传统电池的 1000 倍。虽然听起来是个可有可无的鸡肋功能，但却比较适合嵌入到实体中，比如手机壳、汽车甚至实体墙中，让这些常见的实物统统变身快速充电电池。不过，具体要如何给这些超级电容器充电，还无从得知。\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/152569c339398e2a9b8238244dca3ed2.jpg\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	之所以能实现快速充电及可嵌入实体这样的功能，主要是因为这种超级电容器采用了新的技术。这种超级电容器被做成了一块灰色的小薄片，侧面会露出蓝色的聚合体电解液，能让带电的离子快速聚集到多孔材料的表面，迅速产生电能，在几分钟内储存满电。传统电池一般是通过化学反应存储电离子，因此充电速度远不如这种新型的超级电容器。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	据研究者称，这种超级电容器在振动速度超过 80g、压强高达 44 磅 / 平方英尺的环境下，依然可以流畅、正常工作。工程师自己也做过实验，把一个笔记本电脑悬挂在超级电容器上进行试验，结果表明这种电容器还是很稳定的。结合这种超级电容器可以嵌入实体变为快速充电器的特性，估计在户外也会有不错的发展前景。\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/4308dc978832b5fa273dc7bc2fb93213.jpeg\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	也许，未来当有一个人对着一堵墙指指点点的时候，他可能不是喝多了，也可能不是失明了，他可能只是在充电。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	[36氪原创文章，作者: 小石头]\r\n</p>','36氪','http://www.36kr.com/p/212334.html','2014-05-28 08:52:17',1,'/news/thumb/2014428/1401238337931.jpg','美研发出超级电容器，可将手机壳、汽车、墙体等变成快速充电电池','admin','小石头'),(160,'<div>\r\n	<img alt=\"王储李在镕的难题：如何延续三星辉煌？\" src=\"http://img1.gtimg.com/tech/pics/hv1/182/69/1608/104577977.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	一直站在李健熙背后的独子李在镕能撑起三星吗？\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯 范蓉 5月28日报道\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	现年72岁的三星董事长李健熙健康状况日前再次亮起红灯，这让三星集团的接班人问题再次引发关注。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	尽管三星集团官方并没有对外公布接班人人选，但李健熙45岁的独子李在镕已被视为唯一的继任者。早在2012年，三星宣布李在镕任集团副会长时外界就已经确认了他的地位。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	事实上，李在镕从过去的鲜有出镜到最近一年多频繁代表三星集团出席各类政界、经济人士的交流活动，已被外界认为是李健熙将其推向前台的安排。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	未来这位精通韩、英、日、中四国语言，由李健熙亲手培养的需要具备国际化视野的三星“王储”，将担负着再造三星的重任。\r\n</p>\r\n<div>\r\n	<img alt=\"王储李在镕的难题：如何延续三星辉煌？\" src=\"http://img1.gtimg.com/tech/pics/hv1/80/70/1608/104578130.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	三星家族\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	在李健熙执掌三星26年里，三星规模成长了约40倍。目前，三星集团成为手机、电视、半导体的全球性企业。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	2012年三星集团的总销售额达2457亿美元，为韩国创造了约20%的GDP产值。目前三星拥有超过42万名员工，涉足电子、机械、化工、纺织、医疗等各个领域的庞大财阀。\r\n</p>\r\n<div>\r\n	<img alt=\"王储李在镕的难题：如何延续三星辉煌？\" src=\"http://img1.gtimg.com/tech/pics/hv1/67/70/1608/104578117.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	三星集团的业务布局\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但日益膨胀的三星帝国正遭遇业绩天花板，其核心移动业务规模增长放缓，三星第一季度财报显示，其营业利润出现3年多来的首次下滑。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	与此同时，三星持续卷入与<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>、LG在专利上的法律纠纷，以及在操作系统上受制于<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\">谷歌</a>(<a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\">微博</a>)。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	李在镕能否持续创造其父在三星时的辉煌业绩？让这只大象能够轻盈地跳舞，对于尚未有打过胜仗的李在镕压力和挑战不小。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	李健熙庇护下的李在镕：温和谦虚的“外交官”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	李在镕作为李健熙唯一的独子，一直作为三星未来掌门人来培养，很小就被送往日本和美国学习，尽管有多年海外留学经验。但外界对他未来能否像父亲一样驾驭三星的能力表示出担心。2009年，李在镕被任命为三星集团执行副总裁兼首席运营官，自那时之后，李在镕开始深入管理三星。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但三星重大决策仍由李健熙决定，从公开的信息来看，三星一些重大的交易和战略并未有李在镕的身影。或许是李健熙在三星的威望和长期的独裁风格，也让李在镕一直对父亲“言听计从。”相比父亲 的性格，李在镕性格较为温和。“他是一个尊重别人，愿意听取别人意见的人。”三星集团的一位高层负责人表示：“开会时如果有人意见和自己不同，李在镕总是会先倾听对方的意见，然后再阐述自己的见解。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	李在镕在三星集团工作期间更多承担了与外界沟通的角色。在2011年乔布斯的追掉会上，李在镕透露了很多他与乔布斯个人的细节，比如在遇到困难时他最先接到了来自乔布斯的电话，而在三星苹果紧密合作的时期，两人还一度在家中共进晚餐。虽然当时三星与苹果在专利纠纷上不断产生摩擦，但李在镕的举动获得了与苹果新任CEO库克的好感。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://t.qq.com/samsungelectronicbj#pref=qqcom.keyword\" target=\"_blank\">三星电子</a>曾公开评价，李在镕具有国际化的经营思路和广泛的人脉网络，在激烈的国际竞争环境中，出色地应对并协调了与竞争公司的关系，同时进一步强化了与合作公司的关系。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	但单个的优点并没有获得外界的一直认可。英国《金融时报》报道称，投资者认为经营权继承问题让三星集团的未来充满不确定性。“李在镕作为首席执行官的经验不足，而且也不像父亲那样拥有领袖魅力。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“后李健熙时代”：股权结构不会变\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	含着“金钥匙”长大的李在镕尽管曾与父亲一起经历“家族遗产争夺”、“曾涉嫌非法转让经营权和逃税而与其父被迫离开三星”的风波， 但李在镕一直都在李健熙的庇护下成长。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	三星未来的转型和组织架构调整，以及李在镕在三星的绝对控股地位，李健熙都早已儿子未雨绸缪。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	三星集团从2013年便开始推进子公司事业重组。今年3月末，三星公布了三星SDI和第一毛织的合并计划。涵盖电子、汽车材料和能源事业，资产达15万亿韩元的三星集团第五大子公司由此诞生。两个公司合并后，以李在镕为核心的电子领域子公司的由上而下的体系完成。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	目前，李在镕成为三星集团主要子公司SDS第三大股东，持股比例达11.3%。此外，他还持有三星集团控股公司三星爱宝乐园 25.1%的多数股权。今年5月8日，SDS公布年内上市计划，届时，李在镕将获得约2万亿韩元现金用于缴纳继承李健熙股份的继承税或购买相关子公司股份。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	“主力公司三星电子和三星<a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\">生命</a>目前都由李在镕掌控，而且大部分集团业务都是李在镕负责处理，因此三星集团的控股结构不会发生混乱或太大变化。”相关人士分析。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	三星集团最近正在推进的子公司重组和简化资本结构的工作将会进一步加速。三星集团计划在2016年之前彻底消除子公司连环控股现象，以三星生命、三星电子、三星物产为核心全面重组74家子公司。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	挑战：淡化父亲色彩 带动三星规模增长\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	如同乔布斯时代下的苹果，三星在李健熙执掌下同样达到了鼎盛时期。乔布斯笼罩的光环，让业界对接班人库克的持续创新能力持怀疑态度，同样，李在镕在接管三星之后如何淡化李健熙色彩，让一家以硬件为主的公司持续生产最先进的产品将是一个重大的挑战。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当前，消费电子遭遇来自市场增速下滑，全球电视、智能手机增长放缓，三星手机业务利润更是遭遇三年来的首次滑坡。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	《2030大胆的未来》一书作者崔允植预测认为：“三星将在两到三年后遭遇增长瓶颈。”\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	三星开始在软件和新产品领域进行尝试，包括可穿戴设备Galaxy Gear 2等产品，以及三星推出的泰泽(Tizen)操作系统，但到目前为止被认为是重大的商业失败。与此同时，作为硬件公司的三星正面临谷歌等互联网公司的冲击。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	当务之急三星需要寻求新的投资点。李健熙在前不久在三星内部会议中表示，三星要保持警惕。应当寻找与三星集团未来息息相关的新业务，来维持集团业绩的增长。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	再造一个三星？这将是对李在镕长时期的一大考验。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140528/002640.htm','2014-05-28 08:53:44',1,'/news/thumb/2014428/1401238424397.jpg','继承者的难题：李在镕能否接班三星？','admin','vikwang'),(161,'<div>\r\n	<img alt=\"微信更新“发现” 京东购物一级入口上线\" src=\"http://img1.gtimg.com/tech/pics/hv1/247/46/1608/104572177.jpg\" /> \r\n</div>\r\n<p>\r\n	腾讯科技讯（王鑫）5月27日消息，微信和手机QQ今日陆续开始在应用中开通京东“购物”入口。用户进入微信和手机QQ的“购物”页面，可直接购买京东商城物品。\r\n</p>\r\n<p>\r\n	新添加的“购物”入口位于微信的“发现”界面中，和朋友圈、游戏等功能并列位居微信第一入口。目前该功能已在北京和上海两个城市的部分用户中进行测试。之后，将陆续扩展到全国的微信用户中。手机QQ的京东购物入口将于明日上线，用户能在“QQ钱包”中进入“京东购物”页面。\r\n</p>\r\n<p>\r\n	据腾讯科技体验，用户进入“购物”入口后并不会明显看到京东标识，只有进入订单页面，才会在页面底部看到“京东”字样。购买商品时均采用微信支付。若将微信账号和京东账号绑定，此前京东的购物地址也都同步至该账号。\r\n</p>\r\n<div>\r\n	<img alt=\"微信更新“发现” 京东购物一级入口上线\" src=\"http://img1.gtimg.com/tech/pics/hv1/248/46/1608/104572178.jpg\" /> \r\n</div>\r\n<p>\r\n	“购物”的页面中分为了三个子栏目：“新发现”、“品牌”和“聚惠”。据京东官方介绍，这三个栏目定位各有侧重，适应不同人群需求。其中，“新发现”定位为 “发现最潮和最新奇的好货”，根据用户的喜好呈现不同的商品推荐；“品牌” 以品牌特卖会的形式向用户推荐各大知名品牌的折扣商品；“聚惠”则以“性价比”致胜，向用户推荐最具性价比的单品。\r\n</p>\r\n<p>\r\n	在购物功能的个人中心页面，显示出优惠券、代金券、京东红包等功能。这预示京东未来将借此渠道提供相应优惠和营销活动。据了解，京东或将在618网购狂欢节中回馈微信和手机QQ用户。\r\n</p>\r\n<p>\r\n	早在京东与腾讯于3月10日宣布战略合作后，双方就已确认将在移动电商领域建立合作。微信和手机QQ的京东“购物”入口上线意味着产品层面合作已初见形态。\r\n</p>\r\n<p>\r\n	此前有分析称，随着京东接入微信和手机QQ应用，未来几个月，预计京东来自移动端的成交额将大幅提升，也将提升京东的整体成交额，这将是京东实现弯道超车的机会。\r\n</p>','腾讯科技','http://tech.qq.com/a/20140527/044944.htm','2014-05-28 08:56:29',1,'/news/thumb/2014428/1401238610612.jpg','微信更新“发现” 京东购物一级入口上线','admin','samxiao'),(162,'<div>\r\n	<img alt=\"多纳霍：不要停止学习 学习所有人的长处\" src=\"http://img1.gtimg.com/tech/pics/hv1/104/61/1608/104575859.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作者：约翰·多纳霍（John Donahoe），</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/EBAY.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">eBay</span></a><span style=\"font-size:14px;\">首席执行官兼总裁。（</span><a target=\"_blank\" href=\"http://www.linkedin.com/today/post/article/20140527113804-187399433-if-i-were-22-never-stop-learning-and-learn-a-little-from-everyone?ref=tencent\"><span style=\"font-size:14px;\">本文最初发表在LinkedIn</span></a><span style=\"font-size:14px;\">）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">点击该链接前往</span><a target=\"_blank\" href=\"http://www.linkedin.com/influencer/187399433?ref=tencent\"><span style=\"font-size:14px;\">作者LinkedIn页面</span></a><span style=\"font-size:14px;\">。点击分享按钮&nbsp;</span><a><span style=\"font-size:14px;\">inShare</span></a><span style=\"font-size:14px;\">&nbsp;将文章分享至您的LinkedIn页面。 （点击进入栏目《</span><a target=\"_blank\" href=\"http://tech.qq.com/zt2014/LinkedIn/index.htm\"><span style=\"font-size:14px;\">LinkedIn人物</span></a><span style=\"font-size:14px;\">》）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当我在22岁的时候，我做了人生中最棒的一项决定：我跟我当时的女友一起去了波士顿，在贝恩公司谋到一份研究分析师的差事。我选择跟女友在同一个城市找第一份工作，她后来成为了我的妻子，与我风雨同行30年。我很高兴我将个人生活跟职业选择联系在了一起。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但我年轻时也做过一些错事，比如我在规划如何最大限度地学习和发展我的事业时就犯过错。我在上大学的时候花了大量的时间去听饱学的教授讲课。我的学习模式很简单：老师讲课，我认真听讲并学习。当我走上社会的时候，我以为我还是可以按照那个模式去学习。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">因此当我开始在贝恩公司做我的第一份工作时，我一进公司就开始寻找才智超群并且无所不知的导师，希望他能带领我并教会我在工作和生活中取得成功所需的一切知识。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">曾经有一个时候我认为我找到了那样的导师。我的第一位经理接纳了我，把我当徒弟一样教会了我很多东西。然而，我很快就意识到我的工作对他而言并不象对我自己那样重要。他还有很多其他的事情要做，只有当我提问时，他才会为我答疑解惑。不久之后，我又意识到有很多东西是他无法教会我的，他并不是我想象的那种完美的导师。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我继续寻找下一位导师，直到有一天我意识到象尤达大师（Yoda：《星球大战》里的导师）那样的完美导师是不存在的，没有人能够具备我所期望的所有智慧。没有人会象我自己那样去关心我的职业。我意识到我为学习和发展职业而制定的模式是不对的。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我必须为自己的职业负全责，我必须改变学习的模式：我不再尝试从一些人那里去学很多东西，而是从很多人那里去学一点东西。我发现，每个人都有自己的长处，但没有人是完美无缺的。没有人。与其尝试从一个人身上汲取大量的知识，还不如从很多人身上去获取一点智慧并建立自己的职业系统。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我认识到我才是自己职业的主要负责人并且愿意从很多人身上学东西，这就是我的职业生涯中一直坚持的学习模式。我试着从我所接触到的每一个人身上去学习他的长处，客户、同事、老板、导师都是我学习的对象。现在，我可以说我与他们的每一次沟通都教会了我一些东西，而那经常令我喜出望外。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">现在，我自己的“导师圈子”里一共有25家公司的首席执行官。他们中的有些人知道我在向他们学习，而另一些人可能根本就不知道他们教会了我一些东西。而且，我也在努力成为别人的导师。我们互相学习，共同提高。例如，Airbnb的创始人布莱恩切斯基（Brian Chesky）教过我与设计有关的知识，我则教他综合管理方面的知识。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我意识到我与别人的每一次互动都是一个学习的机会，我还发现另一个强化效应。当我遇到某个人的时候，我的脑海里就会马上冒出这样的问题：“我能从这个人身上学到什么？”或者“他擅长什么？”。寻找别人身上的优点和长处已经成为我下意识的行为。很多人都注意到了这一点，他们注意到我很欣赏他们的优势，这就转化成为信任的基石。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">能够不断学习是一项非常重要的商业技能。我经常在eBay或其他公司寻找领导身上的技能。这里面有一个秘密：你越是成功，你就能走得越远，你需要坚持不懈地学习和成长。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当你肩负起更大或更多的责任时，各种要求和难题就会接踵而至并快速增加。我从很多成功人士的创业过程中总结出一个定律，他们自己为自身的成长与发展负责。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如果能够回到我当年22岁的时候，我将坚持不断地学习。从现在就开始，绝不退缩。（林靖东）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">【版权声明：本专栏所有文章版权归腾讯公司所有。未经腾讯公司授权许可，任何组织、机构或个人不得对本专栏文章实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140528/001692.htm','2014-05-28 08:59:34',1,'/news/thumb/2014428/1401238774402.jpg','多纳霍：不要停止学习 学习所有人的长处','admin','John Donahoe'),(163,'<p>\r\n	<img src=\"http://upload.service.mix.sina.com.cn/d3931f2eed1030ecdcc4bf6047550944.jpg\" title=\"mobile01-1325bc047fa26dbbb2a5a230e23e6f87.jpg\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">文/王如晨</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">为啥提这话题呢？你知道，韩国即时通讯商Kakao傍了个入口平台，也是一家上市公司的Daum，两家要合并，名字都起好了，叫Daum Kakao。Kakao等于借壳上市，也不再独立IPO了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这一下肯定影响Line。你看它的母公司韩国第一大搜索引擎Naver，昨天那股价盘中一度下挫4%。而Daum上周五曾放量大涨近7%，创下4月2日以来新高。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">你可能还不很清楚，这事有另一重含义：腾讯跟Kakao有一腿。后者跟Daum合并，可能给腾讯带来潜在机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯早在2012年4月就取得KakaoTalk大约14%股权，在其董事会有一个席位。今年3月底，腾讯又以5亿美元获得韩国CJ Games28%股权，CJ Games可是Kakao平台最热门的游戏开发商之一。就是说，双方捆绑的更紧了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此前一度有消息说，阿里与软银或将收购Line部分，后来都否认或沉默不语。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">所以，此刻，我让你猜阿里跟它的金主软银会不会有新动作。我个人的判断是，即便阿里有意，也不要于此刻动手。因为，line之于阿里，已经不像过去一段时间显得有价值。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里前段时间传闻收购Line，拉抬估值的用意应该高于对于实际业务的支持。但是现在阿里IPO已是确定性的事，line虽能丰富阿里社交概念，形式上威胁腾讯，但是实际业务面上，不会有多大助益。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Line当然很牛。截至4月，它确实有多达4亿的用户，而KakaoTalk只有1.3亿。我没查到更新的排名序列，还是援引Canalys去年底发布的报告显示，2013年11月，WhatsApp位居全球月度活跃用户数第一名，第2-8名依序为微信、LINE、Viber、KakaoTalk、黑莓BBM、Kik、Snapchat。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Line这一地位，若是能得到阿里与软银的资金，理论上，当然它会有更大的拓展机会，尤其是阿里的生态，以及软银在全球通讯业的布局，都有很大的想象空间。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，这种理论上的分析恐怕难以抵挡社交平台的顽固的特征。即时通讯与社区化的媒体，虽然形式上生来就是全球化，但它的圈子的特性决定了，它很难走出一个统一的语言、文化社区。你加的好友越多，你们之间的黏性越强，社交平台会服从关系多数原则，最终产生排他性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">你知道阿里来往推出有时，发展不顺，这跟技术没多大关系。来往对抗的不是单一的微信、单一用户，而是一个强大的关系与黏性。微信那么长时间了，来往有啥资格一下拆散一个圈子，让它分崩离析呢。在同一个区域，即便存在多平台，一般还是一个吸纳更多，其他只是佐料。关系学里面里面有个马太效应。可以说，至少在中国，来往打败微信几乎不可能。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里若是抱着买下line就能在中国打败微信，在美国打败Facebook，也是可笑的事情。我认为，就是高价买下，本地政府给你完全开放运营，阿里本地的份额照样不会有多少提升，何况现在限制多多。Line现在只能借助第三方在中国运营，之前是360，现在是豌豆荚。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">说句实话，我丝毫不看好line在中国的拓展。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这倒不是否认阿里与line之间潜在合作的可能，如果阿里、软银想借力line拓展中国之外的市场，尤其是日本等国的话。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">你会觉得我对阿里收购line很悲观。如果仔细体会，我其实是在说社交平台的区域化特征，每家都只会有一两个优势的市场地盘。阿里不收购line，并不意味着拥有Kakao Talk股份的腾讯，能在全球强大多少，给阿里带来多少新的威胁。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">至少我看不出Kakao会给腾讯业务带来多少协同。我敢断言，Kakao与Daum后，它仍很难走出韩国，即便CEO Lee Sirgoo说正积极扩展东南亚市场。Kakao与Daum合并而不是选择独立IPO，或投靠国际巨头，我隐约感觉到它对全球市场拓展怀有谨慎与疑虑。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，若从投资角度看，那是另一回事。腾讯投资Kakao肯定是赚的。去年Q4，腾讯净利润非常一般，Kakao却出奇的好，为腾讯做了贡献。如今Kakao借壳上市，马化腾等于又有了最好的套现平台。但一个不易看到的细节是，Kakao与Daum宣布合并的当天，腾讯股价不涨反跌，较3月6日的历史天价已下跌12.7%。大概，投资人对合并后腾讯被稀释的利益不那么乐观。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">脸谱收购WhatsApp是因为，它们都集中在美国市场；Kakao与Daum合并，是因为它们都集中在韩国市场。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里与软银若是为了所谓生态，强硬收购Line，也只能得到日本等地的市场，对于大本营、美国市场都不会有多少直接帮助，还会因为与来往有潜在竞争，分散资源。当然，随着阿里国际化程度的提高，强化区域市场布局倒在情理之中，但眼下，这些还远没到火烧眉毛的时刻，它的来往现在都还没有长大，还需要先养着。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我替你猜了，此刻的阿里，收购Line是件于己于人都没有太大实质帮助的事。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">（声明：本文仅代表作者观点，不代表新浪网立场。）</span>\r\n</p>','新浪科技','http://tech.sina.com.cn/zl/post/detail/i/2014-05-28/pid_8453787.htm','2014-05-28 09:10:17',1,'/news/thumb/2014428/1401239417189.jpg','社交平台接连整合，阿里还会买Line吗？','admin','王如晨 '),(164,'<div>\r\n	<img alt=\"互联网女皇：移动是互联网用户增长的主要动力\" src=\"http://img1.gtimg.com/tech/pics/hv1/55/116/1609/104654860.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月29日消息，在今天召开的Code Conference大会上，被誉为“互联网女皇”的玛丽·米克尔（Mary Meeker）公布了2014年的年度互联网趋势报告。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">米克尔在报告中指出，虽然上网人数和智能手机使用者人数的增长狂潮可能已经宣告终结，但越来越多的用户都开始使用智能手机上网，而且未来移动上网人数的增长速度只会变得越来越快。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">据米克尔及其团队从多个来源收集的数据显示，全球互联网用户总数每年的增幅为不到10%，而且其增长速度正在日益放缓；全球智能手机用户总数每年的增幅为20%，但其增长速度也在放缓。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">但与此同时，移动数据流量则正在取得爆炸式的增长，其年度增幅达到了81%，而且增长速度正在加快，部分推动力来自于视频流量的增长。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">米克尔在报告中称，据StatCounter统计的数据显示，2014年5月份来自于手机的页面浏览量在总浏览量中所占比例为25%，相比之下去年同期仅为14%。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">另据视频平台Ooyala公布的数据显示，在用户观看在线视频的总时长中，来自于移动端的时长所占比例达到了22%，这一占比相当于去年同期的两倍。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140529/002967.htm','2014-05-29 06:39:24',1,'/news/thumb/2014429/1401316779381.jpg','互联网女皇：移动是互联网用户增长的主要动力','admin','瑞雪'),(165,'<div>\r\n	<img alt=\"斯诺登：我其实被训练成了美国政府的“间谍”\" src=\"http://img1.gtimg.com/tech/pics/hv1/213/201/1608/104611668.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">BI中文站 5月28报道</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">美国国家安全局(NSA)前雇员爱德华·斯诺登(Edward Snowden)日前在俄罗斯莫斯科接受美国全国广播公司(NBC)晚间新闻主播布莱恩·威廉姆斯(Brian Williams)采访时声称，他并不是外界所说的低级别黑客，而是被训练成了在海外从事秘密行动的间谍，有时还需要利用假名来掩盖自己的身份。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">从NBC网站周二披露的信息来看，斯诺登将自己描述成为美国高层服务的间谍，他称其曾是美国国防情报局(Defense Intelligence Agency)反情报学院的讲师，并暗中为中央情报局(CIA)和国安局工作。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">斯诺登在采访时说：“不过我是一个技术人才，一个技术专家。我不用与其他人共事。我要做的就是让系统为美国工作。我从事这一领域的各级别行动，从低级到高级。”</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">去年，当斯诺登披露美国“棱镜门”事件外逃后，美国政府刻意淡化其工作经历，只称其为国安局的系统管理员。同年6月份，美国总统贝拉克•奥巴马(Barack Obama)对记者表示：“我不打算派飞机去抓一个29岁的黑客。”</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">斯诺登就此对威廉姆斯表示，以上的美国官方措辞均具有误导性。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">美国国防情报局向NBC证实，斯诺登曾在该机构的三次会议上发表过讲话。另据两位消息人士透露，斯诺登曾在CIA海外工作站负责IT和通讯工作。然而，CIA拒绝就斯诺登在其机构所扮演的角色进行评论。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">在采访中，斯诺登还透露其能够改变自己的容貌，令自己都难以认出。</span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\"></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">据称，斯诺登已经“接触”到国安局服务器上的170万份文件，并最终将其中的20万份交给了记者格兰•格林沃德(Glenn Greenwald)和电影制作人罗拉•柏翠丝(Laura Poitras)。（李路）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140528/023094.htm','2014-05-29 06:41:30',1,'/news/thumb/2014429/1401316903001.jpg','斯诺登：我其实被训练成了美国政府的“间谍”','admin','李路'),(166,'<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:16px;\"><strong>【研究结论】</strong></span> \r\n</p>\r\n<p>\r\n	1.&nbsp;&nbsp; 餐饮O2O领域发展潜力很大，目前以团购、外卖、点餐订座等形式为主；\r\n</p>\r\n<p>\r\n	2.&nbsp;&nbsp; 用户的对O2O的需求是省钱省时间，餐厅的需求则是增加订单量和用户粘性，最终增加收益；\r\n</p>\r\n<p>\r\n	3.&nbsp;&nbsp; 过度迷信互联网，透支品牌是餐饮O2O的大忌。合理平衡线上与线下资源调配，方可健康发展。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<h2>\r\n		序手机里的餐馆\r\n	</h2>\r\n	<p>\r\n		随着几大巨头在O2O领域拓展布局，整个行业的融资额度被不断刷新。在今天的移动互联网里，似乎不提O2O，你的商业模型就不够新鲜。而随着手机应用和人们就餐需求的进一步结合，餐饮O2O在今年上半年变得格外火热。\r\n	</p>\r\n	<p>\r\n		一方面，具有消费能力的人群持续增长，带来服务业的整体升级；另一方面，移动互联网的普及，也加速了O2O领域的发展。\r\n	</p>\r\n	<div>\r\n		<img src=\"http://p.qpic.cn/ninja/0/ninja1401404935/0\" alt=\"\" title=\"\" /> \r\n	</div>\r\n	<p>\r\n		中国具有庞大的餐饮消费市场，根据国家统计局的数据，2013年中国餐饮收入累计实现25392亿元，尽管高端餐饮增长乏力，但大众化餐饮保持了10%以上的增长速度，随之带来的是餐饮O2O市场规模在近两年的急速增长。\r\n	</p>\r\n	<h2>\r\n		一餐饮O2O，有哪几种玩法？\r\n	</h2>\r\n	<p>\r\n		目前我们所指的餐饮O2O，主要指团购、优惠券，外卖，以及订座点餐这几个细分领域。\r\n	</p>\r\n	<p>\r\n		餐饮行业传统商家最早的“触网”经历，是十年前通过大众点评、爱帮这类网站，在线上展示自家信息。大众点评随后逐步建立起以用户UGC点评为核心的模式，帮助消费者做出决策，这个过程中第三方平台不介入交易，对商家来说本质上还是信息的曝光。\r\n	</p>\r\n	<div>\r\n		<img src=\"http://p.qpic.cn/ninja/0/ninja1401404885/0\" alt=\"\" title=\"\" /> \r\n	</div>\r\n	<p>\r\n		2010年前后团购在中国兴起，O2O概念也从此开始越来越热。团购可以直接帮助商家促成交易，可以带来大量客源，但在这一看似热闹的过程中，却只有一小部分商家受益。大部分餐饮企业因为短视而打破原有的价格和服务体系，反而伤害了本身品牌。“千团大战”之后还留存下来的主要团购玩家也仅剩美团、大众点评及糯米三家，前两者占据了70%的团购市场。\r\n	</p>\r\n	<p>\r\n		外卖是近一年来餐饮O2O领域被讨论最多的细分市场，被认为是继团购之后餐饮领域的下一个强需求爆发点。餐厅想在不增加固定成本的基础上，提高营业额，外卖成为一个不错的选择。当商户具备基本的互联网意识和相关的技术条件后，O2O外卖也即成为可能。\r\n	</p>\r\n	<p>\r\n		预定，也就是订座，目前的主要玩家是大众点评。从十年前的信息服务起步，大众点评先后发展出电子优惠券、团购，以及上线不足一年的预定服务，并逐步向交易链条靠拢。目前的预定数量占比仍然较小，但增长速度较快。\r\n	</p>\r\n	<p>\r\n		点餐这个领域有两类玩家，一类是大嘴巴这种从B端入手，试图完成从点餐到付款的交易闭环；另一类如番茄快点，绕过商家专注服务用户，仍以信息服务和消费引导为主。\r\n	</p>\r\n	<h2>\r\n		二O2O，给餐馆带来什么？\r\n	</h2>\r\n	<p>\r\n		不论是团购、外卖还是预定点餐，用户的需求是明确的——省钱或者省时间。但对于线下传统商家而言，他们的需求是什么？\r\n	</p>\r\n	<p>\r\n		整体上看，餐饮商家愿意转向线上，无非是为了提高曝光度，吸引更多的消费者，以此带来新用户并管理好老用户，最终达到提升营收的目的。\r\n	</p>\r\n	<p>\r\n		从在线营销和直接提升营收这两个维度看，不同的O2O形式也对应了商家不同的具体需求：\r\n	</p>\r\n	<p>\r\n		团购，即用相对优惠的价格吸引消费者，从线上引流，可以视为商家的一种营销手段；\r\n	</p>\r\n	<p>\r\n		外卖，如果说团购是折价的营销，外卖则可以帮助餐厅做正价销售，在限定的成本内有效地提高订单数量，直接提高销售额；\r\n	</p>\r\n	<p>\r\n		预定及点餐，相当于按效果付费广告，用户预定（点餐）并且到店消费，商家才需要支付给线上平台相关费用。这种形式可以有效地转化线上客流，转化率高并有助于管理老会员。同时，在线完成预定和点餐，餐厅可以节约一部分人力成本和时间成本。\r\n	</p>\r\n	<h2>\r\n		三&nbsp;商家的需求如何满足？\r\n	</h2>\r\n	<p>\r\n		既然明确了商家的需求，那么这些需求在线上到线下的过程中，实际解决效果如何呢？\r\n	</p>\r\n	<p>\r\n		1.成本能否承担？\r\n	</p>\r\n	<p>\r\n		不论是团购、外卖或预定点餐，里面的成本商家能不能消化？\r\n	</p>\r\n	<p>\r\n		首先从技术成本上看，虽然始于2010年的千团大战教育了一部分C端商户，让很多线下的商家集中了解了在线营销概念，也看到了互联网的巨大引流能力。但即使这样，线下商家在意识和技术上，都还是跟不上线上的发展节奏。\r\n	</p>\r\n	<p>\r\n		线下商户的互联网软硬件基础比较差，跟线上难以对接。比如点餐，商户需要将现有的财务系统对接点餐结账软件；餐厅预定，商户端需要有一个系统对桌位进行管理——在这些方面，餐厅商户的基础仍比较薄弱。\r\n	</p>\r\n	<p>\r\n		另外一项重要成本是服务。以外卖为例，商家目前可以选择的、第三方外卖平台，包括饿了么这种商家自行解决配送的形式，以及到家美食会这种提供物流给商家，收取一定交易佣金的形式。\r\n	</p>\r\n	<p>\r\n		还有商家选择自建配送，就需要负担相关的人力成本。若要保证在忙时配送速度，就需要新增配送员工。但倘若外卖订单数量有限，就无法覆盖新增的配送人力成本。\r\n	</p>\r\n	<p>\r\n		才第三方配送的成本是固定的。以到家美食会为例，目前每单交易抽取15%交易额作为佣金，同时收取用户六块钱配送费。从数字上看，这个第三方配送的成本也不低。\r\n	</p>\r\n	<p>\r\n		2. 能否留住老用户——线上流量如何能变成自己的?\r\n	</p>\r\n	<p>\r\n		用户的持续消费才是所有O2O形式的核心，精准营销和用户管理是商家最需要的。线上流量虽然大，但如何把这部分流量变成自己的客流，是最大的挑战。\r\n	</p>\r\n	<p>\r\n		团购存在的问题就很有代表性。冲着优惠来的消费者很难再以正价消费，另外不少商家“价格降服务也降”的行为，使得用户留存率大打折扣。过度的发起团购会造成用户留存率持续降低，客单价也会明显下滑。\r\n	</p>\r\n	<p>\r\n		外卖在解决商家“二次消费”的问题上，也面临不少难题。配送速度慢，菜品质量难以保证都影响了用户的留存。\r\n	</p>\r\n	<p>\r\n		3. 是从线上引流，还是线下反哺线上？\r\n	</p>\r\n	<p>\r\n		对于一部分拥有品牌知名度的餐饮及连锁餐饮企业，是否有必要通过第三方平台吸引客流？在线上参与第三方团购及外送的逻辑，到底是从线上往线下引入客流，还是把餐厅在线下的品牌影响力导入给第三方线上平台？\r\n	</p>\r\n	<p>\r\n		我们可以通过眉州东坡的案例来讨论这个问题。眉州东坡最早尝试过团购、外卖等第三方服务，到2013年，开始尝试建设自己的线上直销体系，其自营的400订餐网站也已上线。根据业内人士透露，眉州东坡自营销售体系接到的外卖订单已经超过第三方平台。\r\n	</p>\r\n	<p>\r\n		连锁餐饮如麦当劳、肯德基也是类似的情况，这部分餐饮企业已经拥有比较忠诚的老顾客以及足够的品牌知名度，需要做的是把线下有限空间内难以解决的消费需求，转移到线上。\r\n	</p>\r\n	<p>\r\n		对于这部分具有品牌影响力的餐饮企业来说，建立自己的线上直销体系可能是一种更合理的O2O解决办法。\r\n	</p>\r\n	<h2>\r\n		结语别迷信，一步一步来\r\n	</h2>\r\n	<p>\r\n		O2O像一个筐，什么都能往里装。但商业的逻辑总是万变不离其宗，我们探讨和研究一种商业形式的最大魅力，即在于找到可能被复制的关键模型。\r\n	</p>\r\n	<p>\r\n		对于餐饮O2O而言，不论形式是什么，我们通过互联网需要解决的，始终是连接商家和用户两端的需求。不过度透支，也别墨守陈规，让互联网和移动互联网合理地“为我所用”。\r\n	</p>\r\n</div>','腾讯科技','http://tech.qq.com/original/biznext/b026.html','2014-05-30 09:06:26',1,'/news/thumb/2014430/1401412001440.jpg','餐饮O2O反思： 过度折扣透支品牌的都是傻子','admin','陶然'),(167,'<div>\r\n	<img alt=\"80余IBM员工跳槽浪潮 安全隐患背后的市场博弈\" src=\"http://img1.gtimg.com/tech/pics/hv1/223/189/1610/104738668.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月30日消息，在外媒传出</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/IBM.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">IBM</span></a><span style=\"font-size:14px;\">硬件部门的80多名员工已经跳槽到浪潮后，今日有国内媒体进一步证实了这一消息。截至昨天，浪潮软件已经连续三天涨停。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在国内热议银行机构对IBM服务器的依赖是否威胁安全之际，中国服务器生产商浪潮集团发起了吸引IBM客户的行动。有报道称，浪潮在济南首次公布一项名为“I2I计划”（IBM to Inspur）的计划，目标是全面接管IBM X业务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管分析人士认为，银行业高端服务器选择余地不大，很难找到替代产品。但有消息称，中国邮政储蓄银行去年3月已开始试点使用浪潮制造的国产服务器产品。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">浪潮称，从去年开始，浪潮在金融等行业替换部分IBM服务器及相关设施。包括中国建设银行、邮政储蓄银行在内的多家国有银行储蓄所已经试点使用浪潮制造的国产服务器。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">浪潮高管称，自家服务器和小型机产品已经具备了全面接替IBM产品的能力。而在人才储备方面，浪潮就已经从IBM等国外服务器厂商中招募了大量专业人员。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">同时坊间有消息称，今年IBM大批员工离职。对上述消息IBM对此暂时不做评论。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">IBM业绩已经连续8个季度下滑，去年底IBM一度将业绩下滑原因归结为中国市场疲软。国外媒体将</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">微软</span></a><span style=\"font-size:14px;\">、IBM、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/CSCO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">思科</span></a><span style=\"font-size:14px;\">中国业绩不断下滑均归结为受“棱镜事件”影响。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但浪潮若要推翻IBM在中国的地位也非易事。该公司2011年收入367亿元人民币（59亿美元），只有IBM当年收入的5.5%。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140530/008332.htm','2014-05-30 09:08:19',1,'/news/thumb/2014430/1401412099938.jpg','80余IBM员工跳槽浪潮 安全隐患背后的市场博弈','admin','vikwang'),(168,'<div>\r\n	<img alt=\"谷歌进入电能领域：可能控制你的家庭用电\" src=\"http://img1.gtimg.com/tech/pics/hv1/246/199/1610/104741241.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">BI中文站 5月30日报道</span>\r\n</p>\r\n<p>\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)可以轻松成为又一家电力供应商，不仅因为谷歌在能源领域的投资，而且该公司斥资32亿美元收购了智能恒温器生产商Nest。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">谷歌已经在能源相关领域进行了多笔投资，包括家庭太阳能公司SunPower、Panhandle 2风电场，以及埃伦·马斯克（Elon Musk）旗下的公司SolarCity。谷歌总计在风能和太阳能项目上已经投资了超过10亿美元。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">与此同时，谷歌收购Nest“让家居行业的很多高管感觉如鲠在喉”，能源服务公司Tendril Networks首席执行官阿德里安·塔克（Adrian Tuck）认为。他表示，收购Nest可以给谷歌提供一个进入家居行业的后门，业内一致认为接下来五年电能行业的竞争将集中于家庭领域。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">收购Nest之后，谷歌可以利用其智能节能恒温器和烟雾探测器，推出大量的可销售需量反应相关服务，即便谷歌要与其参与投资的一些公司展开直接竞争。需量反应是面向房屋主人、帮助其节约能耗和支出的服务。Nest已经与多家电力公司建立起了需量反应项目，利用Nest恒温器平台管理高峰时段的用电。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">需量反应项目带来的电能节约可以由提供商再次出售到电力市场获得利润，或者返回到公司自身使用。到2030年，需量反应项目可以将美国高峰时段用电需求减少10%，进而创造一个价值35亿美元的市场。（小贝）</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">【美国Business Insider作品（简称“作品”）的中文翻译权及中文版版权均归腾讯公司独家所有。未经腾讯公司授权许可，任何组织、机构或个人不得对作品进行中文翻译或对作品中文版本实施转载、摘编或其他任何形式的使用行为，违者腾讯公司将追究其法律责任。】</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140530/009980.htm','2014-05-30 09:14:15',1,'/news/thumb/2014430/1401412455794.jpg','谷歌进入电能领域：可能控制你的家庭用电','admin','loiswang'),(169,'<div>\r\n	<img alt=\"摩根士丹利维持腾讯增持评级 列三大理由\" src=\"http://img1.gtimg.com/tech/pics/hv1/114/192/1610/104739324.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 5月30日消息，摩根士丹利今天发布研究报告，将腾讯（香港证券交易所股票代码：0700）的股票评级维持在“增持”（Overweight）不变。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">以下是报告内容摘要：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">概述：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">我们在旧金山主持召开了一次为期两天（5月27日到28日）的非交易路演，腾讯首席财务官</span><a href=\"http://t.qq.com/john#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">罗硕瀚</span></a><span style=\"font-size:14px;\">和首席战略官詹姆斯·米切尔（James Mitchell）出席。两位高管对投资者提出的一些主要问题进行了解答，内容涉及移动商业化、盈利前景以及腾讯与京东合作等主题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">——移动游戏业务表现稳健：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯第一季度移动游戏销售额环比激增200%，达到了3亿美元。腾讯的移动游戏用户人数（每日活跃用户人数为1.2亿人，月度活跃用户人数为2亿人，付费用户人数为2000万人）已经超过了PC游戏用户人数。在第一季度中，移动游戏的每用户平均收入（ARPU）提高至人民币80元到人民币90元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯预计，移动游戏的每用户平均收入将逐步向休闲游戏的每用户平均收入（人民币150元）靠拢，其推动力将来自于更多“中等硬核游戏”的发布以及更加方便的收费渠道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">——广告是移动商业化的下一个推动力：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在美国市场上，移动游戏在用户花费在移动端的总时间长度中的占比为32%，其次是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">（占比为17%），再次是各种浏览器（占比为14%）和社交通信（占比为9%到10%）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如果中国市场上的占比分布也与此类似，则腾讯在移动用户总使用时长中的占比将可达到30%到40%，这意味着腾讯正处于良好的位置上，将可通过移动广告的形式来获取盈利。腾讯已在最近启动了基于效果的移动广告服务，其点进率较PC广告的点进率高出2到10倍，每点击成本则低于后者。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">——盈利前景良好：</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯在过去几年时间里开展了积极的投资活动，目前已在盈利方面拥有了更大的灵活性。腾讯预计，公司员工人数将稳定增长（目前为2.5万人），营销支出则很可能将更加倾向于以特定的营销活动（如第一季度中为打车预订服务提供补贴等）为目标，而非采用结构性营销的方式。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯的业务组合正在朝着有利的方向发生转变（逐步远离电子商务，转而提高利润率较高的移动游戏销售额）。（瑞雪）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140530/008872.htm','2014-05-30 09:15:46',1,'/news/thumb/2014430/1401412546017.jpg','摩根士丹利维持腾讯增持评级 列三大理由','admin','瑞雪'),(170,'<div>\r\n	<img alt=\"消息称亚马逊今年夏天推出流媒体音乐服务\" src=\"http://img1.gtimg.com/tech/pics/hv1/117/165/1610/104732442.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 5月30日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">音乐界消息人士透露，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">将在今年夏天推出传闻已久的流媒体音乐服务。有报道称，亚马逊将为推出6个月以上的音乐制作一个目录，并向公司的Prime会员免费提供这些音乐。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管与规模更大、更加专业的竞争对手Spotify和Pandora相比，亚马逊的音乐数量比较少，但这项服务只是亚马逊吸引人们注册99美元Prime会员服务的又一个渠道。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Prime会员在亚马逊网站上的支出比非会员要多出将近一倍，因此亚马逊为会员提供了两天免费送货服务，尽可能增加Prime会员服务的吸引力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">流媒体音乐市场的竞争越来越激烈。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">刚刚斥资32亿美元收购了Beats，竞争原因就在于后者的流媒体音乐服务。随着人们转向Pandora等免费应用获取流媒体音乐，苹果iTunes下载量出现下滑。Pandora正在向年营收10亿美元迈进，Spotify每年的营收可能已经达到了12亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近有报道称亚马逊还在加强自己的流媒体视频内容。出售数字内容，包括电影、电视剧、书籍和音乐，而不是实体内容，有助于亚马逊在存储和送货方面节约成本。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">亚马逊已经与三大唱片公司中的两家达成了协议，即索尼音乐娱乐和华纳音乐集团。新闻聚合网站BuzzFeed报道称，亚马逊流媒体音乐服务将允许在多种设备上运行，用户播放歌曲的次数不受限制，而且具备一些离线功能。（小贝）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140530/004490.htm','2014-05-30 09:17:07',1,'/news/thumb/2014430/1401412627163.jpg','消息称亚马逊今年夏天推出流媒体音乐服务','admin','小贝'),(171,'<p>\r\n	<span style=\"font-size:14px;\"><img src=\"/upload/image/20140530/20140530103503_538.jpg\" alt=\"\" width=\"724\" height=\"483\" title=\"\" align=\"\" /><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“连接”——可以说是继平台、大数据、云计算，以及互联网思维之后互联网圈的又一流行词汇。至于流行的原因其实很简单，因为微信想要做的就是“连接一切”。还记张小龙在腾讯刚刚成立</span><a target=\"_blank\" href=\"http://www.36kr.com/p/%E6%88%90%E7%AB%8B%E5%BE%AE%E4%BF%A1%E4%BA%8B%E4%B8%9A%E7%BE%A4\"><span style=\"font-size:14px;\">微信事业群</span></a><span style=\"font-size:14px;\">时候的内部邮件么？</span>\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-size:14px;\">记住我们的愿景：连接人，连接企业，连接物体。让它们组成有机的自运转的系统，而不是构建分割的局部的商业模式。我们专注于基于连接能力的平台，并将平台开放给第三方接入，和第三方一起建造基于微信的人和服务的生态系统。系统思维也会帮助我们建造透明公正的商业体系，让系统在规则下运转，避免人为的干预。*</span>\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-size:14px;\">再一次，微信想要连接一切，不过这次瞄准的是连接人和商品，微信公众平台上线了“</span><a target=\"_blank\" href=\"http://www.36kr.com/p/212430.html\"><span style=\"font-size:14px;\">微信小店</span></a><span style=\"font-size:14px;\">”，一套基于微信支付，并且涵盖添加商品、商品管理、订单管理、货架管理、维权等功能的微信原生移动电商解决方案。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">而这一直也是像</span><a target=\"_blank\" href=\"http://koudaitong.com/\"><span style=\"font-size:14px;\">口袋通</span></a><span style=\"font-size:14px;\">、</span><a target=\"_blank\" href=\"http://wei.jd.com/\"><span style=\"font-size:14px;\">京东微店</span></a><span style=\"font-size:14px;\">、</span><a target=\"_blank\" href=\"http://www.weixinguang.com/\"><span style=\"font-size:14px;\">微信逛</span></a><span style=\"font-size:14px;\">、</span><a target=\"_blank\" href=\"http://weidian.koudai.com/weidian_offical_PC/\"><span style=\"font-size:14px;\">微店</span></a><span style=\"font-size:14px;\">这类的第三方，基于微信公众账号提供移动电商解决方案的产品迫切关心的消息。之前微信曾多次屏蔽的淘宝的链接，市面上一度有唱衰这类第三方产品的声音。然而随着</span><a target=\"_blank\" href=\"http://www.36kr.com/p/210145.html\"><span style=\"font-size:14px;\">微信支付接口的开放</span></a><span style=\"font-size:14px;\">，这些第三方移动电商，又朝气蓬勃了起来。而这一次微信电商国家队的出动，再一次将这些第三方创业者送上了风口浪尖。</span>\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-size:14px;\">微小店终于上线。就像微信不能只给你一个群发接口，必须有个基础且简单的群发功能一样，微信不能只给商户微信支付接口不给基础的货架和基本的交易流程。微小店上线后，我们现在花很大精力答疑解惑的那些超小商户有人管了。官方开始入手培养市场，我们就可以踏实的做真正卖家的服务。生态分工基本开始确立，产品服务很浅的人可以收摊回家了，慢走，不送！</span>\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-size:14px;\">这是“微信小店”上线后，口袋通创始人白鸦在朋友圈发的一段文字。在白鸦看来，微信电商出动国家队，反而是有助于培养市场，清洗掉那些滥竽充数的低级营销，因为只有退潮过后才能看见谁在裸泳。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">其实相似的场景前不久刚刚在“腾讯风铃”和“微信云”之间上演过。“</span><a target=\"_blank\" href=\"http://www.36kr.com/p/204924.html\"><span style=\"font-size:14px;\">腾讯风铃</span></a><span style=\"font-size:14px;\">”是腾讯官方的微信后台开发工具，“腾讯风铃”的出现一度让市面上的第三方微信后台开发商紧张不已，微信出动国家队是否意味着腾讯又要上演“走自己的路，让人家无路可走”的常规戏码？</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">而后没多久出现的“</span><a target=\"_blank\" href=\"http://www.36kr.com/p/209893.html\"><span style=\"font-size:14px;\">微信云</span></a><span style=\"font-size:14px;\">”让局面变得开朗起来，“微信云”是腾讯云团队主导的第三方微信公众号后台开发工具聚合平台，将部分优质的第三方开发商聚集在一起，尝试“收编”这些第三方的公众号后台开发商。不过附带的条款是，“微信云”强烈建议所有入驻“微信云”的服务商，将数据从其他云平台迁移到腾讯云上。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">据36氪了解，和当初的“微信云”有点类似，微信这次推出官方原生移动电商解决方案，一来是为了降低商家的门槛，商家即使没有技术开发能力，也可以很容易接入微信公众平台实现电商模式，真正让商家可以实现“零门槛”开店；</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">二是为了规范整和引导整个第三方的服务市场，区别于外部第三方利用微信公众平台已开放的接口能力提供的服务，“微信小店”支持原生商品详情体验，货架更简洁规范，体验也相对流畅和完善，就像白鸦所说的那样，微信不能只给商户微信支付接口不给基础的货架和基本的交易流程。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">然而更重要的是，微信原生的电商解决方案能够帮助微信在底层沉淀数据，将所有的基于微信平台的交易数据牢牢掌握在自己手里，任何第三方的开发者只能是基于微信开放的API进行二次开发。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">微信团队表示，未来还将针对不同商家的运营需求，在产品形态上提供更加丰富的“微信小店”体验和功能并提供更多电商解决方案，打造更强大的“微信小店”。部分有开发能力的商家，还可通过 API 接口的方式，自行开发商铺系统，通过相关的接口权限更方便的管理商品数据等内容，实现更多功能。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">也就是说，“微信小店”这套原生的电商解决方案只是基础方案，微信也允许有能力的开发商，在微信官方 API 的基础之上进行二次开发，但有一个很大的前提是，基础的用户数据必须在微信自己手中。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">举个比较简单的例子，“微信小店”这套原生的电商解决方案能够实现最基础的商品交易，而像会员管理、积分系统、优惠活动等“进阶功能”，只能是依靠第三方开发来实现。引用白鸦的话说就是：</span>\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style=\"font-size:14px;\">微信提供了基础功能，才能真正把商家数量拉起来，不然靠第三方拉动太慢了，第三方的能力太小杯水车薪拉不动一个行业。现在这样微信官方是拉动市场的，有能力有基础理解行业的第三方提供深入的方案和服务，生态链才算完整健康。</span>\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style=\"font-size:14px;\">用张小龙的话说就是，“我们专注于基于连接能力的平台，并将平台开放给第三方接入，和第三方一起建造基于微信的人和服务的生态系统。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">所以“微信小店”的出现对于第三方开发商来说，不仅不是挑战，反而是一次难得的机遇。微信国家队的出动，也有助于肃清市面上大多数滥竽充数的产品，甚至是引导第三方的开发商提升服务。不排除未来也会出一个类似“微信云”的产品，微信官方也可能尝试“收编”一些优质的第三方开发商，甚至是同样要求他们将数据迁移到腾讯云上来。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">之前我们曾经提到过，“</span><a target=\"_blank\" href=\"http://www.36kr.com/p/142517.html\"><span style=\"font-size:14px;\">移动电商不是电子商务的一次改良，而是一场推到重来的革命</span></a><span style=\"font-size:14px;\">”，移动电商之于当前电商，犹如当年电商之于传统零售业。虽然移动互联网正在快速发展，但移动电子商务产业链尚不成熟，新的大佬将在快速找到和适应移动电子商务发展的浪潮中成长起来。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">而微信，显然想要抓住这波浪潮，连接一切！</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">[36氪原创文章，作者: WANGJINGYU]</span>\r\n</p>','36氪','http://www.36kr.com/p/212443.html','2014-05-30 10:35:16',1,'/news/thumb/2014430/1401417316003.jpg','再一次连接一切，公众平台“微信小店”对于第三方创业者来说究竟是福是祸？','admin','WANGJINGYU'),(172,'<p>\r\n	<span style=\"font-size:14px;\"></span><img src=\"/upload/image/20140530/20140530104651_545.jpg\" alt=\"\" width=\"770\" height=\"512\" title=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">大数据公司</span><a target=\"_blank\" href=\"http://www.trifacta.com/\"><span style=\"font-size:14px;\">Trifacta</span></a><span style=\"font-size:14px;\">近日宣布已完成 C 轮 2500 万美元投资，领投机构 Ignition Partners，上两轮投资机构</span><a target=\"_blank\" href=\"http://www.36kr.com/p/208205.html\"><span style=\"font-size:14px;\">Greylock Partners</span></a><span style=\"font-size:14px;\">、</span><a target=\"_blank\" href=\"http://www.36kr.com/p/157129.html\"><span style=\"font-size:14px;\">Accel Partners</span></a><span style=\"font-size:14px;\">也有跟进。目前 Trifacta 总融资额为 4000 万美元，新一轮投资主要用于市场推广。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Trifacta 是 2012 年由三位美国高校计算机科学家成立的大数据公司。在整个大数据生态链中，它解决的是中间桥梁问题。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">一端是大数据技术底层人员在致力于数据的编译、存储和传输技术，一端是顶层的软件和服务试图在从已实现较好结构化的大量数据中提取有效信息。中间地带的数据清理大多却靠人工完成。有数据显示，80% 的数据科学家的时间耗在了数据清理上。Trifacta 则试图替代人工，起到中间桥梁作用，通过创建底层跨平台数据接口（传统的关系式数据库、Hadoop 集群）的方式，使得上层人员可在多个实体数据存储及处理系统上运行的 SQL 查询或 map reduce 代码。</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">Trifacta 目前还不愿意公布其客户情况，仅表示客户类型目前已涵盖政府、企业，而企业类型包含媒体、医疗、信息产业。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">收费标准是按机构的数据体量计算，从 10 万美元到 15 万美元不等。</span>\r\n</p>','36氪','http://www.36kr.com/p/212446.html','2014-05-30 10:47:40',1,'/news/thumb/2014430/1401418060174.jpg','打通大数据技术的底层与顶层，Trifacta宣布已完成C轮2500万美元融资','admin','丁伟峰'),(173,'<div>\r\n	<img alt=\"WhatsApp创始人：苹果iMessage抄袭有方\" src=\"http://img1.gtimg.com/tech/pics/hv1/160/55/1613/104899510.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">WhatsApp联合创始人简•库姆（腾讯科技配图）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 6月3日消息，美国</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">公司在当地时间周一召开的全球开发者大会(WWDC)上展示了多款新软件产品。不少人对此印象深刻，但也有人不买账。截至目前，至少有一位科技公司的创始人表达了不满的情绪。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">即时通信服务WhatsApp联合创始人简•库姆(Jan Koum)就挖苦苹果此次展示的一些iMessage新功能“抄袭”了WhatsApp。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">库姆在社交网站上发文指出：“对于苹果新操作系统iOS 8的iMessage服务能够‘借鉴’WhatsApp的大量功能，我感到受宠若惊。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">虽然库姆并未明确指出苹果对其iMessage的更新从哪些方面抄袭了WhatsApp，但是在对话中选择插入音频、视频以及定位信息等功能是WhatsApp已经率先实现的。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于我们的置评请求，库姆并未立即进行回应。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此前，苹果就有“借鉴”其他科技公司软件功能的历史。看来，在今年的全球开发者大会上，苹果誓将这一传统进行到底。</span> \r\n</p>\r\n<div>\r\n	<img alt=\"WhatsApp创始人：苹果iMessage抄袭有方\" src=\"http://img1.gtimg.com/tech/pics/hv1/251/55/1613/104899601.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在会上的展示中，苹果还展示了在用户没有特定选择的情况下，这些插入的音视频附件将“自动毁灭”。苹果指出，这一功能在于帮助用户节省手机储存空间，但实际上可能将对“阅后即焚”照片分享应用Snapchat造成威胁，因为后者发家的基础就是按时自动销毁对话中的图片。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，对于苹果的做法，Snapchat的回应就显得比库姆更加官方。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Snapchat一位发言人通过邮件表示：“我们很兴奋看到其他公司也开始使用默认删除功能。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">苹果除了在信息服务方面有“抄袭”嫌疑外，其还展示了一项类似Dropbox和Box公司产品的文件储存系统iCloud Drive。此外，苹果还宣称这项服务在照片储存上具有效果的更好，这对于Dropbox今年早些时候发布的图片管理应用Carousel可能是一个威胁。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于上述功能，Dropbox发言人表示“目前没有可以分享的信息”。与此同时，Box CEO则在Twitter赞扬苹果允许iCloud实现了各平台内容的同步。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据报道，Dropbox CEO和Box CEO均出席了苹果此次在旧金山召开的全球开发者大会。（李路）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140603/009267.htm','2014-06-03 09:16:12',1,'/news/thumb/201453/1401758192997.jpg','WhatsApp创始人：苹果iMessage“抄袭”有方','admin','李路'),(174,'<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<img alt=\"库克WWDC“嘲讽”安卓：用户不小心买错了\" src=\"http://img1.gtimg.com/tech/pics/hv1/45/16/1613/104889450.jpg\" /> \r\n</div>\r\n<p>\r\n	<span style=\"font-size:14px;\">腾讯数码讯（姚硕）在今年的WWDC上，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">带来了全新的iOS 8操作系统。在真正介绍iOS 8操作系统之前，库克卯足火力攻击了竞争对手——</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)的Android操作系统。库克“嘲讽”到：</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“去年有1亿3千万用户购买了他们人生中第一部iPhone手机，其中不少是从Android阵营中倒戈的。他们过去不小心买错了手机，而现在则找到了更好的体验和人生。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“iPhone在中国的用户中几乎有一半是从Android投奔过来的。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“89%的iPhone用户升级到了最新的iOS 7系统，而Android最新版本的用户占比才9%。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“很多Android用户用的还是4年前的系统，山顶洞人么。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">“（旧版本）Android用户得不到及时的安全升级，这不行啊，因为Android是手机</span><a href=\"http://tech.qq.com/virus/index.htm\" target=\"_blank\"><span style=\"font-size:14px;\">病毒</span></a><span style=\"font-size:14px;\">的主要贡献者。”</span>\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">，库克还真是让小绿机器人颜面扫地啊。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140603/002075.htm','2014-06-03 09:17:55',1,'/news/thumb/201453/1401758275016.jpg','库克WWDC“嘲讽”安卓：用户不小心买错了','admin','姚硕'),(175,'<div>\r\n	<img alt=\"中国确认棱镜项目对华窃密：微软谷歌都有配合\" src=\"http://img1.gtimg.com/tech/pics/hv1/114/15/1613/104889264.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">记者 孙冰|北京报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">5月26日， 国务院新闻办互联网新闻研究中心发布了一份名为《美国全球监听行动纪录》的报告，这份报告称：2013年6月，英国、美国和中国香港媒体相继根据美国国家安全局前雇员爱德华·斯诺登提供的文件，报道了美国国家安全局代号为“棱镜”的秘密项目，内容触目惊心。中国有关部门经过了几个月的查证，发现针对中国的窃密行为的内容基本属实。这也是“棱镜门”事件爆发近一年来，中国官方首次对涉及中国的监听窃密问题进行官方确认和表态。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">从政府到手机App,“棱镜”无处不在</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“棱镜门”爆发以后，全球媒体的相关报道纷至沓来，关于美国“棱镜”项目在中国涉及范围的各种传闻也层出不穷，而上述报告的出炉显示了中国有关部门在经过查证之后证实了很多媒体报道的内容，也就是说，美国“棱镜”大范围地笼罩中国并不是耸人听闻的传说，而是不可辩驳的事实。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“我们之所以过了这么长时间才对此事表态，说明我们的相关部门是进行了充分的调查取证的，我们是抱着审慎的态度，在掌握充分、确凿的证据之后才进行回应的。”国家信息化专家咨询委员会委员、国家信息中心专家委员会主任宁家骏告诉《中国经济周刊》。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">在这份报告中，确认了很多在美国“棱镜”项目中针对中国进行的监听和窃密行径，涉及范围包括中国政府和国家领导人、中资企业、科研机构、普通网民、广大手机用户等等，监听和窃密的广度和深度出乎很多人的意料。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">报告显示中国是美国非法窃听的主要目标之一，中国的政府机构是美国窃听的重点关照对象，金融和电信行业是攻击的主要目标，中国电信(</span><a href=\"http://t.qq.com/chinatelecom#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;\">微博</span></a><span style=\"font-size:16px;\">)、中国移动(</span><a href=\"http://t.qq.com/CMCC#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;\">微博</span></a><span style=\"font-size:16px;\">)、中国联通(</span><a href=\"http://t.qq.com/chinaunicom#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;\">微博</span></a><span style=\"font-size:16px;\">)，中国银行、中国工商银行、中国建设银行以及电信设备商华为都有涉及。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">美国国家安全局利用非法侵入中国主要电信公司等手段，窃取用户的手机数据，获取数以百万计短信内容，甚至由此得以追踪具有战略重要性的中国军方部门。华为更是“棱镜”重点侵入对象，报告称美国针对中国进行大规模网络进攻，并把中国领导人和华为公司列为目标。美国国家安全局多年前就已攻破了主要公司开发的几乎所有安全架构，其中包括华为，甚至还渗入华为的深圳总部，窃取员工的邮件往来，更有计划直接向华为的网络植入自己的“后门”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">美国国家安全局还对中国顶尖高等学府清华大学的主干网络发起大规模的黑客攻击。其中2013年1月的一次攻击中，至少63部电脑和服务器被黑，而中国六大骨干网之一的“中国教育和科研计算机网”就设在清华大学。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">除了这些重要的行业、部门和企业，一些和普通人生活密切相关的领域，也成为美国窃听和窃密的目标。在美国国家安全局内部，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">苹果</span></a><span style=\"font-size:16px;\">和安卓手机操作系统被称作“数据资源的金矿”，美英情报部门2007年就已合作监控手机应用程序，美国国家安全局一度将这方面的预算从2.04亿美元追加到7.67亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">美国国家安全局多年来一直从移动设备应用程序（App）中抓取个人数据，包括个人用户的位置数据、种族、年龄和其他个人资料，这些App包括用户众多的“愤怒的小鸟”、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">谷歌</span></a><span style=\"font-size:16px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;\">微博</span></a><span style=\"font-size:16px;\">)地图（Google Map）、脸谱（</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">Facebook</span></a><span style=\"font-size:16px;\">）、推特（Twitter）和网络相册Flickr等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">美英两国的情报人员甚至还假扮“玩家”，渗透入网络游戏《魔兽世界》、《第二</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:16px;\">生命</span></a><span style=\"font-size:16px;\">》中，收集电脑游戏玩家的记录，监视游戏玩家。而实际上，这两款游戏的中国玩家最多。更可怕的是，腾讯聊天软件QQ和中国移动的移动即时通信应用飞信竟然也在美国国家安全局的监视范围之内。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">对抗网络入侵需要决心与投入</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“棱镜门”事件的主角美国国家安全局（National Security Agency，简称NSA）是美国最为神秘的情报机构，由于过于神秘，完全不为外界甚至美国政府其他部门所了解，所以它的缩写NSA经常被戏称为“No Such Agency”（查无此局）。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">NSA是全世界单独雇用数学博士、计算机博士和语言学家最多的机构，它的总部建筑面积为15公顷，位于华盛顿以北的马里兰州米德堡，在距巴尔的摩市华盛顿公园几百米远的森林中，其规模比中央情报局总部还大，号称“神秘迷宫”。美国国家安全局最早是1952年根据杜鲁门总统的一项秘密指令从当时的军事部门中独立出来，用以加强情报通信工作，是美国情报机构的中枢，也是一个超脱于美国政治制度之外的特权机构。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“美国国家安全局拥有一群世界一流的计算机专家和网络安全专家，他们手里握有各种途径获取的漏洞和技术优势及工具，利用这些资源实施国家级的监听活动。这些人不是简单的黑客（Hacker，指热衷于研究系统和计算机及网络内部运作的人，通常喜爱自由且不受约束）或骇客（Cracker，指恶意非法地试图破解或破坏某个程序、系统及网络安全的人），因为他们的监听活动是一种政府主导的攻击行为，甚至更像是一种专业性极强的网络战，比如在关键节点核心设备中植入‘后门’，不仅可以大规模监听全球其他国家政府机构、企业、个人通信及隐私信息，更可出于某些政治或军事目的实施突然精确瘫痪目标网络。” 有中国“黑客教父”之称的元老级黑客、IDF实验室创始人万涛（网名为“黑客老鹰”）告诉《中国经济周刊》，他曾参与组织了2001年中美黑客大战。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">IDF实验室即Intelligence Defense Friends Laboratory（互联网情报威慑防御之友实验室），是一个民间信息网络安全爱好者的技术俱乐部，骨干成员由相关领域的专业人士、技术人员和业余爱好者共同组成，是一家希望为互联网和信息安全贡献力量的非营利组织。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">尽管是中国第一代黑客，但万涛后来转型为业界著名的实战派的网络安全专家，他牵头过中国电信、中国国际航空公司、中国人寿保险等多个重大网络安全项目，在网络安全业界资历颇深。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">可以肯定的是，中国政府部门、组织和公司深知网络安全问题的重要性，也在不遗余力地将自己的系统做到尽可能的安全，但遗憾的是并没有绝对的安全。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“安全圈流行一句话，叫‘系统只存在两种状态：已经被攻破和即将被攻破’，因为系统、设备都是人设计的，只要是人设计都存在缺陷或时间和能力上的局限，被发现和被攻破只是时间问题，可以想象一个国家政府（而且还是强大的美国）投入大量的人力、物力、财力到这样一个组织，而且这个组织还是由一大批全世界最绝顶聪明的人组成的，有什么事是无法做到的？”万涛说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">在万涛看来，因为攻击手段实在太多，攻击者采用10种方式攻击一个系统，只要有一种方式有效就成功了，但是在防范端，你得防住10种攻击方式才行。因此，以国家高度去实施网络安全防范这件事情，不在于其实现的难度而是在于决心和资源的投入。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">一个公司是无法对抗一个国家的，如果进攻者是国家级别的，那么防范者也需要进行国家层面的战略部署。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">此前，斯诺登对媒体披露，美国除了“棱镜”计划，还有其他计划，如：“主干道”、“码头”和“核子”等等，美国的网络“爪牙”超乎我们的想象。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">大数据时代，泄密的往往是普通日常信息</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">过去提到窃听，我们会想到巧妙隐藏针孔摄像头和安装在各种匪夷所思地点的窃听器，美国针对中国的窃听行径由来已久，在出口到中国的飞机上、中国使馆的墙壁里、飞过中国的卫星上、海底电缆上等都曾发现过美国的窃听和窃密设备，另外美国也会采取在使馆、外企和留学生当中安插和培养特工的方式，对中国进行“监控”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">而在今天这个互联网无处不在的世界，想要了解一个人的真实生活已经不需要这些，因为仅仅通过对这个人在网络世界留下的各种印记，就可以数据还原出这个人真实生活的方方面面。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">在著名美剧《疑犯追踪》（Person of Interest）中有这样一个情节，它展示了一个类似于“棱镜”的项目，足以让所有人惶恐不安。一个天才设计出一部机器，它能够收集在美国国土上活动的几乎所有人的信息，对信息数据进行分析后，机器能找出对美国国家安全有威胁的人，甚至能发现生命受到威胁或者对别人生命构成威胁的人。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">过去我们常常把数据和信息划分成不同的安全级别，安全级别越高防护措施越好。但是在大数据时代，泄密的往往不是那些关键性的保密数据，而是一些普通的日常性信息。比如，一个普通人一个月内的信用卡账单信息并没有太大的价值，但是如果是几百万甚至是几千万人几年的消费数据就可以分析出很有价值的信息，甚至能得到整个国家经济发展诸多核心指标。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“可以说，‘棱镜门’事件把中国信息安全带到了一个更宏观层面，因为云计算和大数据背景下，过去那种只是对一个小的系统或者设备做风险评估的方式已经不能适应今天的形势，而是要对整个行业做综合的整体评估。因为局部的风险一旦累加起来，尤其在大数据时代，通过零散信息可能会拼接出一个重要的信息。”宁家骏说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">报告中也提到，美国国家安全局拥有一种名为“无边界情报员”系统，这套系统以30天为周期，可以从全球网络系统中接收到970亿条信息，再通过比对信用卡或通讯记录等方式，能几近真实地还原个人的实时状况。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">云计算和大数据技术不仅使得人们现实行为大量地被虚拟成为数据，且强大的运算能力为存储和分析这些数据提供了过去无法想象的可能性。因此，在大数据时代，遍布网络上的那些普通信息一旦达到一定数量级或者一些看似不相关的数据一旦被整合起来，在大数据手段的综合分析与深度挖掘下，就可能会泄露出关系到国家的重要信息，这无疑是一个全新而严峻的挑战。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">如何对“棱镜”说NO</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">对于中国来说，“棱镜门”最大的意义就是唤醒了中国的危机意识，现在我们已经开始在一定程度上恢复了在网络安全方面曾经失去的话语权。宁家骏感受最深的就是顶层设计的加快。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">去年11月12日，中国共产党中央国家安全委员会（简称“国安委”）正式成立。今年2月27日，中央网络安全和信息化领导小组成立。这两个部门均由党和国家的最高领导人挂帅，可以说明确显示出我国对于加强网络安全和建设网络强国的决心。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“应该说一年来，我们有了比较大的改变，不仅成立了高规格的领导小组，又下设了一个强有力的办事机构，同时也整合各个部门的职能，可以说在战略上打下了一个很好的基础。”宁家骏说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">而“棱镜门”事件在产业中的影响力也已经开始显现，政府机构、金融、电信、教育等涉及国计民生的重要部门、行业和企业在进行网络建设的时候，都开始重视国产化和自主可控方面的问题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">但是，很多人会以为过去是因为我们大量使用的美国公司生产的网络设备，而这些公司与美国政府合作才导致大范围泄密和被监听的问题，只要尽快进行国产化替代就可以解决“棱镜”笼罩中国的问题，但在万涛看来，事情远没有那么简单。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“在已经公开的资料中显示，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">微软</span></a><span style=\"font-size:16px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">雅虎</span></a><span style=\"font-size:16px;\">、谷歌、脸谱、Paltalk、YouTube、Skype、美国在线和苹果公司都有在配合‘棱镜’计划。但是，即便这些公司不与美国国家安全局合作，美国国家安全局依然可以黑进他们的系统取得他们的重要资料，</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">只不过需要花费更长时间和更高昂的成本。比如美国国家安全局不需要找华为、腾讯或者中国移动合作，它可以直接入侵或者只需要从实体网络链路上动动手脚。”万涛说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">宁家骏和万涛都认为，最根本的方法：一是提高主观上的重视程度和防范意识，这不仅是某个部门、某个行业的事情，而是全社会每一个人都需要提升的；二是发展自己的产业，提升自主创新能力，掌握核心技术，这也是最根本的，因为只有自己的产品立得住才能真正拥有相对的安全。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“企业要自觉承担起更多的社会责任，当然政府也应该对任何与信息安全有关的企业进行审查，建立好全面监管的体系。”宁家骏说。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">“网络安全必须从顶层设计、战略布局、安全文化的重塑、人才培养、产业振兴等各方面从容不迫地循序渐进。比如，从法律上明确赋予国家机构和企业对于网络信息安全所承担的社会和经济责任，并引入金融保险业等保障补偿机制，大力支持用户信息权益维权，这样才能根本改善目前不太有利的IT治理现状。”万涛还提醒，要吸取之前美苏冷战和“星球大战”的历史教训，兼顾安全与发展的平衡。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140603/001801.htm','2014-06-03 09:19:22',1,'/news/thumb/201453/1401758362972.jpg','中国确认棱镜项目对华窃密：微软谷歌都有配合','admin','中国经济周刊'),(176,'<div>\r\n	<img alt=\"《财富》发布2014美国500强：苹果居第五\" src=\"http://img1.gtimg.com/tech/pics/hv1/38/4/1613/104886383.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">榜单前10（腾讯科技配图）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">腾讯科技讯 6月2日消息，《财富》发布2014年美国500强排行榜，零售巨头沃尔玛以4762.94亿美元的营收成功卫冕榜首，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">雅虎</span></a><span style=\"font-size:16px;\">跌出500强，这是九年来的头一次。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">今年，美国500强的上榜门槛提高到了49.6亿美元，较去年的48.2亿美元上升2.9%。而雅虎公司2013财年的营业收入下降6.1%至46.8亿美元，未能达到上榜门槛。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">科技公司方面，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">苹果</span></a><span style=\"font-size:16px;\">位居整体榜单中的第5，成为排名最高的科技公司，美国运营商AT&amp;T位列第11，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/HPQ.N.htm\" target=\"_blank\"><span style=\"font-size:16px;\">惠普</span></a><span style=\"font-size:16px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/IBM.N.htm\" target=\"_blank\"><span style=\"font-size:16px;\">IBM</span></a><span style=\"font-size:16px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">微软</span></a><span style=\"font-size:16px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">亚马逊</span></a><span style=\"font-size:16px;\">、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">谷歌</span></a><span style=\"font-size:16px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;\">微博</span></a><span style=\"font-size:16px;\">)均入选前50，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">Facebook</span></a><span style=\"font-size:16px;\">从去年的第482位跃升至今年的341位。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">以下为2014年《财富》美国500强排行榜中前10名的科技公司（括号数字代表榜单整体排名）：</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">苹果（5）、AT&amp;T（11）、惠普（17）、IBM（23）、微软（34）、亚马逊（35）、谷歌（46）、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/INTC.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">英特尔</span></a><span style=\"font-size:16px;\">（53）、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/CSCO.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">思科</span></a><span style=\"font-size:16px;\">（55）、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/ORCL.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">甲骨文</span></a><span style=\"font-size:16px;\">（82）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140602/017413.htm','2014-06-03 09:21:55',1,'/news/thumb/201453/1401758532157.jpg','《财富》发布2014美国500强：苹果居第五','admin','honestsun'),(177,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在今天的</span><a target=\"_blank\" href=\"http://www.36kr.com/tag/%3Ca%20target=\"><span style=\"font-size:14px;\">WWDC 2014</span></a><span style=\"font-size:14px;\">&nbsp;\"&gt;#</span><a target=\"_blank\" href=\"http://www.36kr.com/tag/wwdc%202014\"><span style=\"font-size:14px;\">WWDC 2014</span></a><span style=\"font-size:14px;\">#上，除了最受大家关注的</span><a target=\"_blank\" href=\"http://www.36kr.com/p/212510.html\"><span style=\"font-size:14px;\">OS X 10.10</span></a><span style=\"font-size:14px;\">以及</span><a target=\"_blank\" href=\"http://www.36kr.com/p/212509.html\"><span style=\"font-size:14px;\">iOS 8</span></a><span style=\"font-size:14px;\">，苹果还发布了一种全新的</span><a target=\"_blank\" href=\"https://developer.apple.com/swift/\"><span style=\"font-size:14px;\">编程语言Swift</span></a><span style=\"font-size:14px;\">。在苹果高管 Craig Federighi 的描述中，Swift 在各个方面优于 Objective-C，也不会有那么多复杂的符号和表达式。同时，Swift 更加快速、便利、高效、安全。除此之外，新的 Swift 语言依旧会与 Object-C 相兼容。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">更酷的是，在演示过程中，苹果还展示了能大大提升编程效率的实时代码效果预览功能（Swift Playground），即在屏幕左侧输入代码时，在右侧屏幕实时演示出代码执行效果。这就使得在编程开发过程中，开发人员可以快速的向前或向后预览代码，而各个环节的代码实现效果也会进行实时的展示，以此即可测试自己所开发的程序在各个环节的反应。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/8af2cf9137495c652aeb40ff2183e3c8.jpg\" alt=\"\" style=\"height:auto;\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Swift 允许开发者通过非常少的代码来实现更多的内容。全新 Swift 编程语言不仅改变了 Objective-C 复杂的语法，还保留了 Smalltalk 的动态特性，使其更简单易用。由于它可以与 Objective-C 兼容使用，因此开发人员可以在开发过程中进行无缝切换。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">Swift 完全支持 Xcode，并且开发指南将通过 iBookstore 来提供给广大开发者（</span><a target=\"_blank\" href=\"https://itunes.apple.com/us/book/the-swift-programming-language/id881256329?mt=11\"><span style=\"font-size:14px;\">点击这里下载</span></a><span style=\"font-size:14px;\">）。此外，开发者们也可以在年底 iOS 8 系统发布时开始提交通过 Swift 语言编写的新应用程序。</span>\r\n</p>','36氪','http://www.36kr.com/p/212513.html','2014-06-03 12:20:11',1,'/news/thumb/201453/1401769211612.png','苹果发布全新的编程语言Swift，支持代码效果实时预览','admin','patrick'),(178,'<div>\r\n	<img alt=\"国家顶级域名.CN回归中国20年\" src=\"http://img1.gtimg.com/tech/pics/hv1/81/101/1614/104976186.jpg\" /><span style=\"font-size:16px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">今年是国家顶级域名.CN回归中国20周年。昨日，中国互联网络信息中心(CNNIC)召开新闻发布会，庆祝国家级域名的回归。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">1994年5月21日，“中国互联网之父”钱天白教授和德国卡尔斯鲁厄大学Werner Zorn 教授，协助中国科学院计算机网络信息中心完成了中国国家顶级域名.CN服务器的设置，改变了中国的.CN顶级域名服务器一直放在国外的历史。从国家安全的角度来看，一旦发生特殊事件，如果国外域名公司不再为我国用户提供域名解析服务，那么所有我国企业和个人注册的国外域名将得不到解析，无法被访问。而.CN域名则可以通过采取一定措施保证在国内仍然畅行无阻。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140604/011819.htm','2014-06-04 08:39:36',1,'/news/thumb/201454/1401842417479.jpg','国家顶级域名.CN回归中国20年','admin','samxiao'),(179,'<div>\r\n	<img alt=\"谷歌一只高科技互联网气球坠毁\" src=\"http://img1.gtimg.com/tech/pics/hv1/92/67/1614/104967527.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">BI中文站 6月4日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">上周，飞行在华盛顿上空的一只</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;\">谷歌</span></a><span style=\"font-size:16px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;\">微博</span></a><span style=\"font-size:16px;\">)无人驾驶的高纬度气球缠住了空中的一根电线，并最终坠毁。据《西雅图时报》的消息称，这一结果也导致华盛顿地区的一些家庭出现了停电的情况。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">据称，谷歌已经向美国联邦航空管理局（FAA）发布了通告，声称该公司的一只气球将坠落，这样，联邦航空管理局就能够确保让其他航行器远离这一事故现场。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">当初谷歌在推出气球飞行试验项目时，率先在新西兰上空部署了30只气球，飞行在新西兰上空的12英里处。在看到了 这一试验项目取得了积极效果之后，谷歌又在美国本土部署了一些气球。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">谷歌的这一项目也就是高空热气球项目“Project Loon”，此项目最初的目的是，将互联网服务覆盖到全球此前一直没有互联网服务的地区。谷歌还打算进一步拓展这一计划，以在Project Loon的基础上，再进一步推出高能量的低空轨道卫星项目。事实上，据消息称，谷歌正计划斥资10亿美元，打造自家卫星互联网接入计划，以此为全球偏远地区居民提供互联网接入服务。就在这一消息出现之前不久，媒界刚刚暴出消息称，谷歌正在与卫星公司Skybox Imaging洽谈，拟以10亿美元的价格收购Skybox Imaging公司。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">气球崩溃坠毁一事，说明谷歌确实比较明智。谷歌并不想把所有的风险都维系在一只气球上面。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">谷歌公司的一位发言人通过电子邮件告诉BI称：“自从去年在新西兰推出Project Loon项目以来，我们一直在持续做一些研究性飞行，以此改进技术。我们与当地的空中交通管制机构进行了交流与协调，并安排了一支团队，主要负责气球落地后的恢复工作。”（悦潼）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140604/004889.htm','2014-06-04 08:59:55',1,'/news/thumb/201454/1401843612206.jpg','谷歌一只高科技互联网气球坠毁','admin','悦潼'),(180,'<div>\r\n	<img alt=\"从小人物到焦点人物：斯诺登的“棱镜门”\" src=\"http://img1.gtimg.com/tech/pics/hv1/188/177/1615/105060698.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">腾讯科技 娄池 6月5日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">美国马里兰州的小城Ellicot市早已经恢复了平静，几乎没有多少人记得，一年之前几乎全球各路记者都曾蜂拥到这个小镇全天守候，渴望能获得一位黑客的独家消息。这个黑客的名字叫斯诺登，去年的今天，他在英国《卫报》上正式曝光了“棱镜计划”——一项由美国国家安全局自2007年起开始实施的绝密级电子监听计划。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">泄密的官方黑客</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">现年30岁的斯诺登出生于北卡罗莱纳州沿岸的伊莉莎白市，后随家人搬到马里兰州Arundel县的Crofton市。资料显示，斯诺登在Arundel高中念了一年半后就因健康原因辍学。辍学后的斯诺登，靠着自学，通过GED考试拿到高中同等学力资格，得以申请大学，但斯诺登并未获得过任何大学的正式文凭。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2004年5月7日，斯诺登加入美国陆军，但仅仅几个月后，他在训练事故中双脚折断，而在9月28日被除役。后来他曾在国家安全局设置于马里兰大学的一处隐蔽设施担任警卫。在此之后，他又在中央情报局担任与信息技术安全有关的职务。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">对于他从除役到加入国家安全局的过程，外界一直未能了解到详细的信息，有猜测称，美国国安局或许是通过互联网招募黑客的方式选择了斯诺登。可以确认的信息是，自2007年开始，斯诺登已经开始为美国情报机构服务，他在美国的最后一份工作是在夏威夷的一个国家安全局设施内担任系统管理员。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2013年5月20日，斯诺登以治疗癫痫为理由申请暂时离职并取得批准，他飞抵香港入住美丽华酒店，并接受《卫报》并接受该报采访，他表示：“愿意牺牲掉这一切，因为美国政府利用他们正在秘密建造的这一个庞大监视机器摧毁隐私、互联网自由和世界各地人们的基本自由的行为让他良心不安”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">2013年6月5日，《卫报》及《华盛顿邮报》公布了斯诺登所披露的文档，美国政府监控全世界网民的电话与互联网的事实得以披露。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">在斯诺登本人的要求下，他的个人信息被公布，斯诺登成为了当年全球最热门的新闻人物，影响力甚至超越了泄漏五角大楼秘密文件的丹尼尔·艾尔斯伯格和泄密给维基解密的布拉德利·曼宁。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">波折的猫鼠游戏</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">挑战强大的美国政府并不是一件容易的事情，在香港期间，斯诺登曾寻求香港当地政府的庇护，而美国政府方面则表态称，斯诺登犯下泄露官方机密等数十项可以同时在香港和美国被起诉的罪名，足以进行引渡程序。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">随后，美国法院在2013年6月14日发出正式起诉斯诺登的临时拘捕令，并要求香港特区政府拘捕斯诺登并引渡返美国，6月18日，斯诺登通过中间人士向冰岛发出了申请避难的非正式请求，冰岛政府也证实已经收到斯诺登的避难请求。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">就在外界揣测冰岛能否同意斯诺登的避难请求时，斯诺登已经在维基解密组织的帮助下，搭乘俄罗斯航空公司(Aeroflot)客机从香港前往莫斯科。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">事实上，美国政府曾与香港地方政府就斯诺登问题进行过数度交锋，在美国政府施压香港政府引渡的同时，还作废了斯诺登的护照，意图将斯诺登困在香港，但厄瓜多尔政府于2013年6月17日即发给他一纸“特殊难民旅行证”做为替代美国护照的合法旅行证件。斯诺登凭此证合法离开香港，并入境俄罗斯。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">一个插曲是，2013年7月2日，在俄罗斯出席世界天然气出口国论坛峰会后回国的玻利维亚总统埃沃·莫拉莱斯的专机因被美国怀疑载有斯诺登，回国途中遭遇法国、葡萄牙、意大利、西班牙四个欧洲国家拒绝过境，迫使专机临时降落在奥地利，让斯诺登事件的影响力再次被放大。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">事实上，斯诺登从6月23日起在莫斯科舍列梅季耶沃机场中转区滞留，一直到8月才获得俄罗斯为期一年的临时避难身份。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">仍在发酵的棱镜门</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">据美国国家安全局信息，斯诺登可能向《卫报》及《华盛顿邮报》记者透露了近20万份机密文件，而根据斯诺登的表态，他仍持有相当数量的美国国家机密文件，就在上个月，他还表示，不会通过交换信息向巴西寻求避难。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">对于斯诺登向巴西寻求避难一事，外界的解读是斯诺登在俄罗斯的生活并不愉快，而斯诺登本人对媒体亦曾表示，“我这么辛辛苦苦地维护我们的权利和隐私，结果却陷在了俄罗斯这么一个地方，这真是令人伤心。我觉得在俄罗斯，人们的权利受到了不公平对待”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">种种迹象表明，斯诺登持有的巨大秘密让他仍难短期内淡出外界的视线，这位勇于对抗美国政府的黑客亦难以在俄罗斯真的走完余生，在8月临时避难身份到期后，斯诺登是否继续选择留在俄罗斯仍将是外界所关注的热门话题。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">事实上，即便斯诺登不去公布手中剩余的文件，“棱镜门”的冲击波也足以改变世界，一场针对信息安全的斗争开始白热化，就在上个月，中美两国还就信息安全问题就展开了数度交锋。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">斯诺登选择飞赴香港时并不会想到的是，就在本周，一位中国科技公司的高管还在私下向媒体感谢斯诺登，在过去一年间，该公司迅速从美资企业手中抢到了大量订单，其中最大的诱因就是安全问题。在俄罗斯和部分欧盟国家，也在上演类似的故事。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">从这个意义上说，斯诺登尽管没能改变美国政府对信息的监控，但是已经改变了全球科技市场的格局，而且这种改变仍将持续下去。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140605/007690.htm','2014-06-05 08:39:10',1,'/news/thumb/201455/1401928821220.jpg','从小人物到焦点人物：斯诺登的“棱镜门”','admin','娄池'),(181,'<p>\r\n	<img src=\"/upload/image/20140605/20140605084753_232.jpg\" alt=\"\" width=\"724\" height=\"482\" title=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">前两天的</span><a target=\"_blank\" href=\"http://www.36kr.com/p/212511.html\"><span style=\"font-size:16px;\">苹果WWDC 2014大会</span></a><span style=\"font-size:16px;\">上，苹果发布了自家的智能家居平台HomeKit。在一定的权限管理下，HomeKit 可以对家庭中的灯光、门锁、摄像头、插座开关等各种联网设备进行控制。场景模式与 Siri 的结合十分有趣，你可以睡觉前跟 Siri 说声“晚安”，然后等待大门自动上锁，灯光自动关闭。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">比较令人意外的是，在首批接入 HomeKit 的家电厂商中，除了大家熟悉的 PHILIPS、Honeywell 外，我们还看到了中国家电厂商海尔的 Logo。据36氪了解，海尔应该是首批接入苹果 HomeKit 平台的唯一中国厂商。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">至于是怎么牵手的，我从行业人士处听了一个八卦，大家且听且娱乐就好。话说几年前苹果就有做智能家居平台的想法，在中国也找了几个合作伙伴（但都是真正意义上的本土品牌），但进展一直不怎么理想。突然有一天，负责 HomeKit 项目的某高管，在香港维多利亚港看到海尔的广告牌，于是就展开了合作......</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">当然玩笑归玩笑，不过海尔和苹果的合作确实由来已久，苹果最新发布的 HomeKit 协议，在海尔内部也已经测试有一段时间了，基于 HomeKit 协议已经有比较成熟的产品原形了。但由于相关的保密协议，一直不被外界所知。顺带的36氪也了解了下海尔和苹果就 HomeKit 的合作方式，其他的家电厂商也可以有一个参考。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">海尔和苹果的智能家居平台，主要是通过 iPhone 实现和海尔家电的互通，iPhone 和家电设备时间的连接依然是通过WiFi协议（这也难怪大家一窝蜂的跑去做路由器）；但在通信层使用的是苹果的uap协议，应用层的连接则是使用的</span><a target=\"_blank\" href=\"http://www.haier.com/cn/business/uhome/\"><span style=\"font-size:16px;\">海尔自己的智能家居U+协议</span></a><span style=\"font-size:16px;\">；通过这几层协议，最终实现 iOS 对于家电的控制。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">举一个不大恰当的例子，苹果的 HomeKit 协议非常底层，它的作用仅限于让 iOS 平台和你的家居能够相互“认识”，但认识之后，想要做点什么，例如开个灯、开个空调什么的，仍然需要家电厂商在 HomeKit 的基础上进行二次开发。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">智能家居最需要解决的问题是，如何让家电设备连上 WiFi。让用户或者安装工人去设置空调的 IP 地址门槛相对较高，但现在大家基本都可以熟练的操作智能手机。HomeKit 起到的功能就是，用户直接通过 iPhone 就可以轻易让支持该协议的家电连网，而基于 HomeKit 二次开发的协议，则可以实现更加具体的操作上的功能。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">据36氪了解，海尔首批基于苹果 HomeKit 协议的产品主要是空调和空气盒子，目前已经在内部测试了，用户通过 iPhone 就可以实现对空气的监测，以及气温的调节，甚至是直接对 Siri 说有点冷，空调就会自动将温度调高。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">另外早在苹果 HomeKit 之前，新浪微博曾经和海信合作推出过“</span><a target=\"_blank\" href=\"http://www.36kr.com/p/206426.html\"><span style=\"font-size:16px;\">微博空调</span></a><span style=\"font-size:16px;\">”，实现的原理类似，通过微博指令对空调进行控制。所以不仅仅是苹果、Google、微软在布局智能家居，新浪微博、微信、小米等等，甚至 BAT 都在进行布局。如据36氪了解，现在基于微信平台，同样有比较完善的智能家居解决方案。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">而相应的，不同的互联网公司，不同的家电厂商也都有各自的标准，市场稍微有点乱，这也是所谓的“智能家居”一直雷声大雨点小的原因之一。而基于庞大的 iPhone 用户，以及平台的优势，苹果的 HomeKit 能够把智能家居玩起来么？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;\">题图来自</span><a target=\"_blank\" href=\"http://live.theverge.com/apple-wwdc-2014-live-blog/\"><span style=\"font-size:16px;\">THE VERGER</span></a> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','36氪','http://www.36kr.com/p/212586.html','2014-06-05 08:48:48',1,'/news/thumb/201455/1401929328599.jpg','独家：海尔牵手苹果HomeKit背后的故事，首款Siri空调已经蓄势待发','admin','WANGJINGYU'),(182,'<p>\r\n	<img src=\"/upload/image/20140606/20140606084548_622.jpg\" alt=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">腾讯科技 雷建平 6月6日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">再一次凭借巨额投资吸引了业界目光。只是这次阿里巴巴投资的对象既非大家熟悉的互联网公司，也非阿里巴巴极力扩张的金融领域，而是一间足球俱乐部。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">6月5日，阿里巴巴董事局主席</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">马云</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">)与恒大足球俱乐部负责人许家印宣布，阿里将向恒大方面支付12亿元，并持有恒大足球俱乐部50%股权。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">“从今年1月份我就开始忽悠他，有很多快乐，你不进来你不知道足球的快乐”，许家印表示自己确实一直在劝说马云进入足球领域。马云也表示，“投资足球就是投资快乐”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">不过，据熟悉马云的人士透露，此番阿里巴巴投资恒大俱乐部绝非马云喜欢足球那么简单，在一定程度上更是一种向上的示好，为旗下支付宝等业务在金融领域扩张寻找安全边界。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">当然，作为世界第一运动，穆里奇、埃尔克森、迪亚曼蒂等恒大足球队的明星球员在中国球迷们的耳中早已如雷贯耳，他们所能带来的影响力，早已不局限在中国国内。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">恒大的明星内援和外援结合的成功，也正好是给阿里巴巴业务线上B2B针对海外市场，天猫淘宝针对国内市场一次漂亮代言。对谋求上市的阿里巴巴来说，无疑增加了很多曝光度。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">途牛CFO杨嘉宏就对腾讯科技表示，买足球可看着是一次企业广告费用，引起的免费宣传值得，不像广告费花完就没有了。2亿美元的交易对市值千亿美元的阿里巴巴来说，也只是小案子。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">除了投资恒大足球俱乐部，最近2年来阿里巴巴及其周边公司一直在进行近乎疯狂的投资，包括</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">新浪</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">微博、优酷土豆、高德、UC等互联网公司相继进入阿里巴巴阵营。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">尤其是今年3月到4月，阿里巴巴的动作更加狂野，文化中国、银泰集团、恒生电子、华数等原本与互联网关系不大的企业，也通过资本与阿里巴巴更紧密联系在一起。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">就在昨晚，阿里的投资脚步仍在飞速迈进。银泰董事长沈国军透露，银泰商业将与阿里合资成立平台公司，银泰将银泰网资源注入，而阿里将投入10亿元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">据腾讯科技不完全统计，过去2年阿里体系相继通过投资和并购花费掉的资金已超80亿美元，不仅被喻为买下半个互联网，更被指买下整个世界。一个好奇的问题是，围绕着阿里巴巴生态展开的这一系列收购与阿里集团上市间又有何种联系？阿里并购企业的这些资金从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴投资资金从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">无论是战略入股优酷土豆、增持新浪微博、完全控股高德还是现在投资足球俱乐部，可以说，今年以来阿里巴巴玩的都是大手笔，那么，阿里巴巴这些钱从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">腾讯科技获悉，早在2013年4月，阿里以5.86亿美元购入新浪微博前夕，阿里巴巴就获得9家银行总计80亿美元的贷款授信。这也中国民营企业近年来获得的来自海外银行的最大规模授信。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">提供贷款的这九家银行分别是澳新银行、瑞士信贷集团、花旗集团、德意志银行、星展集团、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/HBC.N.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">汇丰控股</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">有限公司、摩根大通公司、摩根士丹利和瑞穗实业银行。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里集团这笔融资包括三部分，一笔25亿美元的三年期贷款、一笔40亿美元的五年期贷款以及一笔15亿美元的三年期循环信贷安排。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">据知情人士透露，阿里巴巴80亿美元的贷款授信均为信用贷款，贷款条件宽松，没有用任何实物做抵押。通常，这种信贷安排是基于银团对贷款企业的信用实力所采取的授信计划。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在协定的有效期内，只要企业的借款总额未超过最高限额，银行须满足企业任何时候提出的借款要求，可以随时在额度内提取使用，也可以提前归还。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">2012年，阿里巴巴还曾申请40亿美元的贷款，包括来自中国国家开发银行的20亿美元三年期和四年期贷款、来自国际债权人的20亿美元三年期和四年期贷款。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">不过，阿里巴巴前后120亿美元的贷款授信中有40亿美元是为</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴集团</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">私有化旗下上市公司、回购</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">雅虎</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">股份所进行的同等规模贷款再融资，真正可用投资的部分是80亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">如果阿里巴巴完全用这80亿美元进行投资与并购，也意味着阿里巴巴所获得的授信已所剩无几。不过，据腾讯科技了解，阿里巴巴还有很大一部分自有资金。</span> \r\n</p>\r\n<p>\r\n	<img alt=\"阿里2年疯狂并购耗资超80亿美元 整合成最大难题\" src=\"http://img1.gtimg.com/tech/pics/hv1/114/216/1616/105135594.jpg\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">据悉，阿里巴巴利润最近两年出现暴增，从2012年14.90亿美元提升到35.58亿美元。其中，2013年第四季度，阿里巴巴集团净利已达到13.6亿美元，超过同期腾讯与</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">百度</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">净利综合。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴营收大增主要依靠淘宝和天猫，天猫盈利有两种形式，一种是直通车，另一种是通过成交额收取交易费，正是天猫收取的交易费助推阿里巴巴营收快速增长，天猫是淘宝变现利器。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">一位电商人士对腾讯科技表示，淘宝将很多免费流量导入到天猫，天猫收取交易费一般在3%到5%之间，甚至更高，只要天猫平台GMV（成交总额）不断增长，天猫营收就能水涨船高。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">大量并购以私人名义进行 资金源自阿里</span> \r\n</p>\r\n<div>\r\n	<img alt=\"阿里2年疯狂并购耗资超80亿美元 整合成最大难题\" src=\"http://img1.gtimg.com/tech/pics/hv1/4/234/1616/105140074.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴2013年至迄今为止投资或并购案例（未计入规模小于1亿美元的交易）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴在投资或并购资产过程中有一个很明显的特点，即很多时候并不是以阿里巴巴集团的名义进行。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">如今年4月，华数传媒发布定增预案，向云溪投资非公开发行28667.10万股，募资总额65.36亿元。云溪投资普通合伙人是</span><a href=\"http://datalib.tech.qq.com/people/21/index.shtml\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">史玉柱</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/shiyuzhu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">)和云煌投资，有限合伙人为谢世煌，实际控制人为史玉柱和马云。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">作为一家广电系公司，华数传媒未来有成长为传媒帝国潜质，其业务有电视、互动电视、互联网电视、有线网络、IPTV等，有千万级的固定用户。当时就有分析人士指出，如能深入结合马云所掌控之阿里系庞大互联网资源，再联想的新兴火爆的客厅互联网，未来不可限量。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">不过，马云投资华数传媒的并购主体并非是阿里集团，而是做了较为复杂的安排，如在2014年3月27日、4月2日专门分别成立云煌投资和云溪投资两间公司来完成收购并持有华数传媒的20%股份，而谢世煌是马云密友，同时是阿里巴巴十八位创始人之一。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">关键问题是，华数传媒的融资中的资金并非是来自云溪投资本身，而是阿里集团旗下的浙江天猫技术有限公司，浙江天猫技术有限公司向云溪投资出借了60多亿贷款，期限10年，年复合利率8%。这使得出钱的阿里集团看上去与华数传媒只是利息收入关系，却风险自担。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">马云对恒生电子的收购也没有通过阿里集团进行，而是利用马云和谢世煌控制的浙江融信。阿里巴巴对天弘基金的收购同样如此，真正收购天弘基金的是支付宝母公司控股。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">但从本质看，围绕阿里巴巴生态展开的系列并购的大部分资金都来自阿里巴巴集团本身，并非来自马云或谢世煌等个人，这些并购大部分是为阿里巴巴集团估值做铺垫。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴快速疯狂并购背后也留下整合难题，最近典型案例是，阿里收购高德后，高德加速向移动互联网转型，业务向阿里巴巴生态迁移，但高德自身营收出现急剧下滑，并出现大幅亏损，高德的传统客户也在不断远离高德，阿里更被指出帮高德对手“扼杀”高德。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">分析人士指出，在花费如此多资金并购后，阿里也应适当放慢脚步，加速与这些公司进行业务整合，彼此需要真正发挥协同效应，阿里集团不能仅是财务投资者，只充当“送钱童子”角色。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140606/006794.htm','2014-06-06 08:46:43',1,'/news/thumb/201456/1402015627736.jpg','阿里2年疯狂并购耗资超80亿美元 整合成最大难题','admin',' 雷建平'),(183,'<div>\r\n	<img alt=\"阿里巴巴上市隐忧：员工套现走人\" src=\"http://img1.gtimg.com/tech/pics/hv1/68/184/1616/105127388.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">腾讯科技讯 6月5日消息，路透社报道称，在</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">准备有史以来规模最大的科技公司上市案同时，阿里巴巴已经着手指导员工如何处理即将套现的41亿美元现金。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">银行和理财规划师表示，一些员工已经询问宝马是否销售带有阿里巴巴标志色橙色的汽车，还有一些员工可能投资北美房产，或者投资中国初创公司，期待打造下一个阿里巴巴。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">但是，多年来阿里巴巴一直指导员工如何管理巨额现金，告诫他们切勿忘乎所以，挥金如土。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里联合创始人</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">马云</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">)和蔡崇信已是亿万富翁。上市后，若员工可以自由抛售股票，阿里巴巴还将出现更多的百万富翁。阿里巴巴向美国证交会提交的文件显示，自1999年开始，阿里巴巴就向员工提供股票期权和其他激励奖项，阿里现有和前员工共持有26.7%的股权。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">路透社统计25位分析师的平均估值显示，阿里巴巴估值为1520亿美元。在员工持股比例和公司规模方面，阿里巴巴要超过以往任何一家中国公司。上市之后，阿里巴巴管理层、软件工程师、销售和营销员工，乃至支付宝等相关公司都可以通过抛售股票获利。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">目前，阿里巴巴员工总数约为2万。通过公司此前的流动性计划，一些员工已经出售自己所持的部分股票。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">知情人士透露：“如果说一夜暴富就像毒液一般，那么现在时不时地给予少许剂量，公司不致于陷入混乱，这么做似乎像解毒。”</span>\r\n</p>\r\n<div>\r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">影响员工去留</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在招股书中，阿里巴巴承认，公司担忧员工在获得巨额财富后离开公司。阿里称：“对于我们而言，继续挽留和激励这些员工会非常困难，这笔财富将影响他们的去留。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">知情人士称，近年来，阿里巴巴高管已经与员工讨论过这笔“意外财富”如何改变他们的生活，警告他们切勿把财富全部挥霍在“炫耀物品”上。阿里前首席运营官关明生曾是参与讨论的高管之一，其他的演讲人和学者还谈到了领导能力、个人发展和商业目标。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴前任副总裁波特·埃利斯曼（Porter Erisman）表示：“从公司早期阶段，马云和关明生就考虑财富对员工的影响。”埃利斯曼为纪录片《扬子鳄》导演，该片记录了阿里巴巴最初十年的发展历程。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">埃利斯曼还表示：“我记得关明生就金钱意味着什么发表过演讲，他鼓励大家讲金钱看作一种提供更多选择的东西，但这些选择不一定是物质生活。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">如何花钱</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">与</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Facebook</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">上市之后的情形相似，新晋阿里巴巴百万富翁推高了高级汽车和住宅的需求量，推动了阿里巴巴总部所在地杭州的经济发展。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">据媒体报道，Facebook新富预订了私人太空旅行，并探索中美洲的玛雅遗址。</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">谷歌</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">微博</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">)上市之后，有的股东开始环球之旅，有的创立纪录片电影公司，还有人开了一家健康咖啡馆。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">路透社报道称，阿里巴巴员工已经询问宝马杭州经销商，问宝马是否有橙色车型。但中国政府提倡节俭行为，这将抑制阿里员工的炫耀性消费。另外，阿里选择在美国上市，员工抛售股票获得的大部分资金可能存储在海外，而不是回流阿里巴巴总部所在地。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">知情人士称：“阿里员工更愿意购买温哥华的地产，而购买法拉利和中国房地产的人并不多。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">投行和理财顾问预测，回流中国的阿里上市套现资金很可能投资新兴科技初创。在中国，杭州以盛产企业家而闻名。房地产咨询公司Knight Frank统计显示，截至去年，杭州的百万富翁数量已经超过560位。十年后，杭州的超高资产净值人士数量有望超过洛杉矶。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">知情人士称：“规模超过2万人的中国私人企业并不多。最为重要的是，阿里巴巴将给中国初创带来创业经验。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">股票禁售期</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">大部分阿里巴巴财富落入马云、蔡崇信和高级主管之手，这些人组成了阿里巴巴合伙人。阿里巴巴共有28位合伙人，其中22位来自阿里巴巴，6位来自阿里巴巴的关联公司或相关公司。合伙人共持有阿里巴巴14%的股份，价值超过210亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴并未公布首席执行官陆兆禧、首席财务官武卫、首席运营官</span><a href=\"http://t.qq.com/taobaoxiaoyaozi#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">张勇</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">、首席技术官王坚和总法律顾问石义德的持股比例。上述五人均为阿里巴巴合伙人，总持股比例可能不足1%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">一旦股票禁售期到期，阿里巴巴上市将为员工提供最大一次抛售股票的机会。相关文件显示，阿里巴巴上一次大规模抛售股票是在2011年，当时阿里员工向 DST Global、银湖等投资机构出售大约20亿美元股票。当年，马云抛售大约1.62亿美元股票，蔡崇信则套现1.08亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">同年，陆兆禧套现3770万美元，武卫套现499万美元，前首席运营官关明生套现4050万美元。阿里前副总裁彭翼捷套现460万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">目前，阿里巴巴最大的股东是日本软银，软银先持有34.4%的股份。第二大股东是</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">雅虎</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">，持有22.6%的股份。阿里巴巴的其他股份还包括银湖、DST Global和淡马锡。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">知情人士称，阿里巴巴员工无法通过IPO全部套现股票。多数员工可能需要经过数月乃至数年的时间，才能出售自己持有的股票。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">阿里巴巴B2B业务曾于2007年在港交所上市，上市6个月后，股东才允许在员工股票交易项目中出售40%的股票。一年后，阿里巴巴解禁剩余60%的股票。（熠辉）</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140605/043076.htm','2014-06-06 08:48:45',1,'/news/thumb/201456/1402015725708.jpg','阿里巴巴上市隐忧：员工套现走人','admin','熠辉'),(184,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">京华时报讯 清华大学医学院颜宁教授研究组在世界上首次解析了人源葡萄糖转运蛋白GLUT1的晶体结构，初步揭示了它的工作机制以及相关疾病的致病机理，在人类攻克癌症、糖尿病等重大疾病的探索道路上迈出了极为重要的一步。英国《自然》杂志以长文的形式正式刊发了这一成果。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">葡萄糖是地球上各种</span><a href=\"http://tech.qq.com/all/being1.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">生物</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">最重要、最基本的能量来源，也是人脑和神经系统最主要的供能物质。据估算，大脑平均每天消耗约120克葡萄糖，占人体葡萄糖总消耗量的一半以上。葡萄糖代谢的第一步就是进入细胞，但亲水的葡萄糖溶于水，而疏水的细胞膜就像一层油，因此，葡萄糖自身无法穿过细胞膜进入到细胞内发挥作用，必须依靠转运蛋白这个“运输机器”来完成。葡萄糖转运蛋白镶嵌于细胞膜上，如同在疏水的细胞膜上开了一扇一扇的门，能够将葡萄糖从细胞外转运到细胞内。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">颜宁教授介绍称，葡萄糖转运蛋白GLUT1几乎存在于人体的每一个细胞，是大脑、神经系统、肌肉等组织器官中最重要的葡萄糖转运蛋白，对维持人体正常生理功能极为重要。这种转运蛋白的功能完全缺失将致人死亡，功能部分缺失会导致大脑萎缩、智力低下、发育迟缓等疾病。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">同时，这种转运蛋白在癌细胞的新陈代谢中也发挥着重要功能。癌细胞需要消耗超量葡萄糖才能维持其生长扩增，转运蛋白GLUT1在细胞中显著过量往往意味着有癌变发生。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">“因此，如能研究清楚GLUT1的组成、结果和工作机理，就有可能通过调控它实现葡萄糖转运的人工干预。”颜宁教授说，这样既可以增加正常细胞的葡萄糖供应，达到治疗相关疾病的目的，又可以通过阻断葡萄糖供应“饿死”癌细胞。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140606/003543.htm','2014-06-06 08:53:31',1,'/news/thumb/201456/1402016011838.jpg','清华首次揭示葡萄糖转运蛋白晶体结构','admin','张晓鸽'),(185,'<div>\r\n	<img alt=\"迅雷将禁止下载美国影视剧 云加速业务或受影响\" src=\"http://img1.gtimg.com/tech/pics/hv1/172/6/1616/105082102.png\" /><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">腾讯科技讯（范晓东）6月5日消息，据外媒报道，迅雷与美国电影协会MPAA(Motion Picture Association of America)达成协议，将限制国内的美剧、电影的非法</span><a href=\"http://download.tech.qq.com/\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">下载</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">。据称，迅雷将推出一个复杂的版权监测系统，仅靠截图就可以识别用户下载的是什么电影或电视剧，并阻止用户下载盗版内容。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">不过，对此消息，迅雷官方目前对腾讯科技尚未予确认和评论。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">迅雷与美国电影协会MPAA达成协议， 是为了赴美上市清理版权上的障碍。公开信息显示，美国电影协会成立于1922年，是迪士尼、索尼、派拉蒙、福斯、环球和华纳这六大影视传媒巨头组成的商业交易协会，近两年该组织一直致力于打击世界各国盗版行为。2008年美国电影协会曾将迅雷告上法庭，针对迅雷的侵权行为向后者索赔700万人民币，去年该协会曾向美国贸易代表提交一个涉及侵权的网站和公司名单，中国的快播、迅雷和</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/RENN.N.htm\" target=\"_blank\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">人人</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">影视都在这份名单上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">2011年4月，迅雷在第一次启动赴美上市前夕，新闻集团默多克曾通过家族基金RW Investments在迅雷第三轮融资时向其注入2940万美元投资，这也是在版权方面为迅雷保驾护航。不过，当年迅雷此次上市依然折戟。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">为了再次成功赴美上市，迅雷近两年一直在加强向外界传达版权保护的声音，收到的版权诉讼案也呈现下降趋势。截止2014年3月31日，迅雷有17项版权侵权诉讼，涉及赔偿金额260万美元，在此后两个月，其中6个诉讼得以和解，剩下诉讼涉及的赔偿金额下降至10万美元。迅雷此前在2011年、2012年、2013分别收到176起、114起和72起诉讼。迅雷收到的侵权诉讼大部分狗狗搜索业务相关，而该项业务迅雷2010年已经以1471美元出售。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">不过，迅雷加强版权保护的举措对自身业务或将带来不利影响。迅雷目前的核心业务云加速订阅服务和用户下载需求直接相关，用户使用迅雷云加速服务来下载的内容包括游戏、视频、软件程序等，由于没有具体数据显示迅雷用户云加速内容的具体构成，目前尚无法判断迅雷停止美国影视剧下载对会员服务会带来怎样的冲击和影响。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140605/017375.htm','2014-06-06 08:55:14',1,'/news/thumb/201456/1402016114459.png','迅雷将禁止下载美国影视剧 为上市扫清障碍','admin','范晓东'),(186,'<p style=\"text-indent:2em;\">\r\n	<img src=\"/upload/image/20140606/20140606085846_394.jpg\" alt=\"\" width=\"700\" height=\"394\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">专注移动端的原生广告创业公司 Namo Media 今天在其官方博客中宣布了已经被 Twitter 收购的消息，已经有媒体指出具体的交易金额为 5000 万美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Namo Media 目前已经开始关停自己独立的服务，开始往 Twitter 现有的原生广告平台 MoPub 中整合。其 8 人的团队，多数也会加入 Twitter。Namo Media 曾于去年五月拿到过一笔数额为 190 万美元的种子轮融资，投资方包括 Andreessen Horowitz、Google Ventures 等。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Namo Media 是一家由数位 Google 前员工创建的移动端原生广告公司，主要帮助 App 开发者在移动端打造一种自然、优雅、不突兀的广告体验。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">Twitter 去年以 3.5 亿美元买下移动广告公司 ，收购 Namo Media 的目的是为了进一步加强 Twitter 在移动端的广告业务。</span> \r\n</p>','36氪','http://www.36kr.com/p/212632.html','2014-06-06 08:59:22',1,'/news/thumb/201456/1402016362037.jpg','Twitter 收购原生广告公司 Namo Media，传金额为5000万美元','admin','果子'),(187,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">陌生人实时语音社交应用“</span><a target=\"_blank\" href=\"http://www.inbilin.com/\"><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">比邻</span></a><span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">”今日宣布已完成 A 轮 1500 万美元融资，投资方包括启明创投、晨兴创投。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">在发布融资消息的同时，比邻同时宣布了几个用户数据：总注册用户目前已突破两千万，日通话总时常突破 1000 万分钟，女性用户占比 35%，90 后用户占比 75%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">另外，比邻同时还发布 3.0 版本，预计下周上线。新版本除了在 UI 上做了优化外，最大的特点是降低了和妹子的通话门槛。比如，原来它的随机呼叫按钮往往多数情况下匹配出的通话对象是男生，现在这个通话页面增加了一个选项，你可以只选择女性用户进行匹配。</span>\r\n</p>\r\n<p>\r\n	<img src=\"http://a.36krcnd.com/photo/2014/a9ec788a80a754c9665d1d853ee40351.jpg\" alt=\"\" style=\"height:auto;\" width=\"703\" height=\"450\" title=\"\" align=\"\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:16px;font-family:\'Microsoft YaHei\';\">比邻是一一款陌生人实时电话社交应用，去年 5 月上线，主打“拨一下，换一个妹子”，概念来自电影《爱情呼叫转移》的桥段。团队脱胎于厦门的一个团购项目，之后团队转战北京，通过另类的微电影营销方式走出一片天。据传，第一部团队的第一部微电影《什么叫做爱》为团队拿到第一批 500 万用户。之后团队顺利拿到天使，并逐渐走向的 90 后的陌生人电爱方向。</span>\r\n</p>','36氪','http://www.36kr.com/p/212613.html','2014-06-06 09:02:14',1,'/news/thumb/201456/1402016534337.png','陌生人实时电话社交应用“比邻”完成A轮1500万美元融资，投资方启明、晨兴，注册用户突破2000万','admin','丁伟峰'),(188,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">苹果自家的编程语言 Swift 一经</span><a target=\"_blank\" href=\"http://www.36kr.com/p/212513.html\"><span style=\"font-size:14px;line-height:2;\">推出</span></a><span style=\"font-size:14px;line-height:2;\">便引起了多方</span><a target=\"_blank\" href=\"http://www.36kr.com/p/212541.html\"><span style=\"font-size:14px;line-height:2;\">讨论</span></a><span style=\"font-size:14px;line-height:2;\">，一些人说 Swift 将会改变整个苹果的应用生态，一些人则认为这不过是一个玩具语言。因此今天我和</span><a target=\"_blank\" href=\"http://www.36kr.com/p/210004.html\"><span style=\"font-size:14px;line-height:2;\">极客学院</span></a><span style=\"font-size:14px;line-height:2;\">的创始人靳岩，以及</span><a target=\"_blank\" href=\"http://www.36kr.net/\"><span style=\"font-size:14px;line-height:2;\">氪加</span></a><span style=\"font-size:14px;line-height:2;\">的 iOS 开发工程师</span><a target=\"_blank\" href=\"http://weibo.com/206062899?topnav=1&wvr=5&topsug=1\"><span style=\"font-size:14px;line-height:2;\">卢侃</span></a><span style=\"font-size:14px;line-height:2;\">一起聊了聊 Swift 对互联网的影响。有趣的是，我们三个，一个是互联网的观察者（我），我一个是互联网技术教育的从业者（靳岩），一个是 iOS 应用的开发者（正为避免失业而开始看 Swift 的卢侃），都对 Swift 可能带来的前景感到兴奋。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">观察者暮山：</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">从一个旁观者的角度，我认为 Swift 的代表的是编程语言的基本发展方向。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">纵观计算机的发展史，我们可以看到，计算机编程语言在由以机器为中心向以人为中心发展，即，从更便于机器阅读的语言发展为更便于人类编写，更接近人类自然语言。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">最开始的电脑编程都是人工输入“0”和“1”的机器语言，完全以电脑为中心。后来大家觉得每天输“0”“1”效率实在太低了，便有人发明了汇编语言，用一些符合和字母来代替特定的“0”和“1”的组合。再后来，汇编语言也显得写起来太慢，如果想用汇编语言写一个较大的程序需要海量的代码。于是有人发明了 C 语言这门“高级语言”，让开发者本身能够更高效快速的编写代码，同时不太牺牲计算机读取代码的效率。然后 C 语言迅速成为了代码界的主流语言。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">尽管 C 语言比起最初的机器语言已经好懂很多，而且需要写的代码量更少了，但依然有人想，编程语言能不能更简单，更像人话？这就出现了脚本语言，比如大家熟知的 Python，Perl，以及我们的网站所用的 PHP。然而脚本语言并没有像 C 语言一样基本替代了汇编语言，这是为什么呢？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">最简单的原因便是，脚本语言运行效率较低。电脑并不理解脚本语言，因此，用脚本语言写的程序会被转化为机器语言，从而让计算机执行。然而问题是，这就好像我说中文，你说英语，我们之间隔了一个翻译，翻译给机器后总是会产生词不达意的情况，因此许多本来很简单的运行会被拖的冗长，从而降低了运行效率。而 C 语言等面向机器的语言则更像是一个懂英语的人用中文说话给翻译，他了解英语思考者的思路和逻辑，并且明确的用中文中类似的表达说出来，所以 C 语言的运行效率更高。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">而我对 Swift 看好的原因便是它既解决了脚本语言运行效率的问题，又继承了其简洁的语法和强大的功能。Swift 语言的发明者 Chris Lattner 之前最大的成就便是开发了编译系统 LLVM，能将高级语言转换为机器语言，也就是前文所说的“翻译”。Lattner 也因为 LLVM 其极大的提高了包括 Objective C 在内的诸多高级语言的执行效率而获得了美国计算机协会颁发的“软件系统奖”。这次 Lattner 开发 Swift 相当于从高级语言到编译器做了个全套，并且他表示 Swift 在许多方面的运行效率都优于 Objective C，而且远超的 Python。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">也就是说，如果 Swift 的运行效率真的像 Lattner 描述的那样，那么 Swift 代表的程序猿先进生产力的发展要求（提高编程效率），代表了计算机先进文化的发展方向（语法简洁，现代），代表了广大人民的根本利益（写起来爽，学起来快）。当然，前提是 Swift 真的像 Lattner 所说的那样强大。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">教育者靳岩：</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">我认为现在大家不论怎样高度评价 Swift 都是低估了它会对业界带来的影响。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">首先是他是一门新语言，而且关键是它是被苹果推动的，有非常好的应用场景。围绕 Swift 未来会出现与之相关的社区，开源代码，培训课程等...Swift 将会带动一整个与之相关的生态，而里面一个非常小的部分都有很大的商机。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">其次我个人也非常看好 Swift，因为它是苹果对自己的一次颠覆，而它对抗的正是代码界的官僚化。举个例子，现在 Java 都更新到 8.0，但现在大部分人用的都还是 Java 1.6，为什么大家不用有更多新特性的 Java 8.0 呢？说白了就是大家觉得 1.6 已经能做许多事情，懒得去看新功能了。而 Java 本身也一样，一度我都觉得它要死了，结果 Andorid 又把它救活了。但现在 Java 修修补补到 8.0 依然还是有许多问题是没法解决的，因为本身就是架构上的过时，那为何大家还在用它？因为那些大公司都用习惯 Java 了，没有勇气去换一个更现代更高效的语言，而 Swift 则是逼着公司和开发者去适应新的语言和功能。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">Swift 的情形和 Go（Google 发布的编程语言）不一样。大家都知道 Go 很好，但 Google 从来没说要大家用 Go 来写 Andorid 的应用。这就不像苹果，推出 Swift 后，对 Objective C 的支持肯定会逐渐减弱，最后完全转到 Swift，这就逼大家必须抛弃二十多年前发明的 Objective C 而必须用 Swift。退一步，如果用 Swift 的效率比 Objective C 高，你如果不用 Swift 在应用市场上的反应就会比别人慢，那还是逼你用 Swift。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">特别是这样一来，Google 最后还是只能要求大家用 Go 而不是 Java 来写 Andorid 的应用，这样对整个 IT 圈都是一件进步的事。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">iOS开发者卢侃：</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">自从 Swift 推出后小伙伴们都嘲笑我这个 Objective C 的开发者要失业了... 所以我最近一直在看 Swift...</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">事实上，我身边的很多人都在看 Swift，除了一些其他领域的 coder 外，也有人想从 Swift 作为编程学习的入门。但我觉得 Swift 并非一门为入门者准备的语言。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">Swift 参考了诸多主流脚本语言的语法，这让它在语法上非常容易，一些有经验的开发者花一两个小时看看开发指南就能上手，但开发应用和了解语法毕竟是不一样的事。举个例子，如果一个开发者本来做服务器端的人，那他可能完全不知道一款应用的开发模式（比如苹果推崇的 MVC) 模式，那么，尽管他对语言本身很熟悉，但和应用开发有关的一切都还是要重新学。因此，尽管 Swift 降低了编程语言的学习成本，但程序开发依然需要经验，所以很多人说 Swift 只是表面上把大家拉到了同一个起点，原本熟悉 iOS 的开发者还是拥有极大的优势。而对初学者来说，语言门槛之后还有许多门槛，不可能突然涌现出许多之前对编程没什么了解的开发者。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">当然，Swift 的特性会得到怎样的应用，能否提高 iOS 应用的性能等，我们可能需要在用 Swift 编写的应用上线后才能看到。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">我看 Swift 去了...</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">(可怜的即将失业的 Objective C 工程师...)</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">当然，我们对 Swift 的讨论都以它是一款开发 iOS 端和 OS X 端的编程语言为前提，并非讨论各种编程语言本身的优劣。目前 GitHub 上已经出现了一些 Swift 的开源</span><a target=\"_blank\" href=\"https://github.com/search?l=Swift&p=1&q=swift&ref=cmdform&type=Repositories\"><span style=\"font-size:14px;line-height:2;\">项目</span></a><span style=\"font-size:14px;line-height:2;\">，极客学院也</span><a target=\"_blank\" href=\"http://www.jikexueyuan.com/course/92.html\"><span style=\"font-size:14px;line-height:2;\">上线</span></a><span style=\"font-size:14px;line-height:2;\">了 Swift 的开发课程，有兴趣的同学可以去查看。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;line-height:2;\">36氪还会在之后继续报道和Swift有关的内容。并且，这次讨论代表了三个人从三个角度得出的观点，然而远非全部。大家可以把自己的观点发到report[at]36kr.com交流（记得留下联系方式），也可以在本文下方留言交流：）</span> \r\n</p>','36氪','http://www.36kr.com/p/212612.html','2014-06-06 09:03:56',1,'/news/thumb/201456/1402016636149.png','编程语言进化链的顶端：为什么说Swift正在颠覆整个互联网生态？','admin','暮山'),(189,'<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 雷建平 6月6日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a><span style=\"font-size:14px;\">再一次凭借巨额投资吸引了业界目光。只是这次阿里巴巴投资的对象既非大家熟悉的互联网公司，也非阿里巴巴极力扩张的金融领域，而是一间足球俱乐部。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6月5日，阿里巴巴董事局主席</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">马云</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)与恒大足球俱乐部负责人许家印宣布，阿里将向恒大方面支付12亿元，并持有恒大足球俱乐部50%股权。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“从今年1月份我就开始忽悠他，有很多快乐，你不进来你不知道足球的快乐”，许家印表示自己确实一直在劝说马云进入足球领域。马云也表示，“投资足球就是投资快乐”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，据熟悉马云的人士透露，此番阿里巴巴投资恒大俱乐部绝非马云喜欢足球那么简单，在一定程度上更是一种向上的示好，为旗下支付宝等业务在金融领域扩张寻找安全边界。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当然，作为世界第一运动，穆里奇、埃尔克森、迪亚曼蒂等恒大足球队的明星球员在中国球迷们的耳中早已如雷贯耳，他们所能带来的影响力，早已不局限在中国国内。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">恒大的明星内援和外援结合的成功，也正好是给阿里巴巴业务线上B2B针对海外市场，天猫淘宝针对国内市场一次漂亮代言。对谋求上市的阿里巴巴来说，无疑增加了很多曝光度。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">途牛CFO杨嘉宏就对腾讯科技表示，买足球可看着是一次企业广告费用，引起的免费宣传值得，不像广告费花完就没有了。2亿美元的交易对市值千亿美元的阿里巴巴来说，也只是小案子。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">除了投资恒大足球俱乐部，最近2年来阿里巴巴及其周边公司一直在进行近乎疯狂的投资，包括</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新浪</span></a><span style=\"font-size:14px;\">微博、优酷土豆、高德、UC等互联网公司相继进入阿里巴巴阵营。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尤其是今年3月到4月，阿里巴巴的动作更加狂野，文化中国、银泰集团、恒生电子、华数等原本与互联网关系不大的企业，也通过资本与阿里巴巴更紧密联系在一起。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">就在昨晚，阿里的投资脚步仍在飞速迈进。银泰董事长沈国军透露，银泰商业将与阿里合资成立平台公司，银泰将银泰网资源注入，而阿里将投入10亿元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据腾讯科技不完全统计，过去2年阿里体系相继通过投资和并购花费掉的资金已超80亿美元，不仅被喻为买下半个互联网，更被指买下整个世界。一个好奇的问题是，围绕着阿里巴巴生态展开的这一系列收购与阿里集团上市间又有何种联系？阿里并购企业的这些资金从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴投资资金从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">无论是战略入股优酷土豆、增持新浪微博、完全控股高德还是现在投资足球俱乐部，可以说，今年以来阿里巴巴玩的都是大手笔，那么，阿里巴巴这些钱从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技获悉，早在2013年4月，阿里以5.86亿美元购入新浪微博前夕，阿里巴巴就获得9家银行总计80亿美元的贷款授信。这也中国民营企业近年来获得的来自海外银行的最大规模授信。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">提供贷款的这九家银行分别是澳新银行、瑞士信贷集团、花旗集团、德意志银行、星展集团、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/HBC.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">汇丰控股</span></a><span style=\"font-size:14px;\">有限公司、摩根大通公司、摩根士丹利和瑞穗实业银行。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里集团这笔融资包括三部分，一笔25亿美元的三年期贷款、一笔40亿美元的五年期贷款以及一笔15亿美元的三年期循环信贷安排。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据知情人士透露，阿里巴巴80亿美元的贷款授信均为信用贷款，贷款条件宽松，没有用任何实物做抵押。通常，这种信贷安排是基于银团对贷款企业的信用实力所采取的授信计划。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在协定的有效期内，只要企业的借款总额未超过最高限额，银行须满足企业任何时候提出的借款要求，可以随时在额度内提取使用，也可以提前归还。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年，阿里巴巴还曾申请40亿美元的贷款，包括来自中国国家开发银行的20亿美元三年期和四年期贷款、来自国际债权人的20亿美元三年期和四年期贷款。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，阿里巴巴前后120亿美元的贷款授信中有40亿美元是为</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">私有化旗下上市公司、回购</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">股份所进行的同等规模贷款再融资，真正可用投资的部分是80亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如果阿里巴巴完全用这80亿美元进行投资与并购，也意味着阿里巴巴所获得的授信已所剩无几。不过，据腾讯科技了解，阿里巴巴还有很大一部分自有资金。</span> \r\n</p>\r\n<p>\r\n	<img alt=\"阿里2年疯狂并购耗资超80亿美元 整合成最大难题\" src=\"http://img1.gtimg.com/tech/pics/hv1/114/216/1616/105135594.jpg\" /> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据悉，阿里巴巴利润最近两年出现暴增，从2012年14.90亿美元提升到35.58亿美元。其中，2013年第四季度，阿里巴巴集团净利已达到13.6亿美元，超过同期腾讯与</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">净利综合。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴营收大增主要依靠淘宝和天猫，天猫盈利有两种形式，一种是直通车，另一种是通过成交额收取交易费，正是天猫收取的交易费助推阿里巴巴营收快速增长，天猫是淘宝变现利器。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一位电商人士对腾讯科技表示，淘宝将很多免费流量导入到天猫，天猫收取交易费一般在3%到5%之间，甚至更高，只要天猫平台GMV（成交总额）不断增长，天猫营收就能水涨船高。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">大量并购以私人名义进行 资金源自阿里</span> \r\n</p>\r\n<div>\r\n	<img alt=\"阿里2年疯狂并购耗资超80亿美元 整合成最大难题\" src=\"http://img1.gtimg.com/tech/pics/hv1/4/234/1616/105140074.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴2013年至迄今为止投资或并购案例（未计入规模小于1亿美元的交易）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴在投资或并购资产过程中有一个很明显的特点，即很多时候并不是以阿里巴巴集团的名义进行。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如今年4月，华数传媒发布定增预案，向云溪投资非公开发行28667.10万股，募资总额65.36亿元。云溪投资普通合伙人是</span><a href=\"http://datalib.tech.qq.com/people/21/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">史玉柱</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/shiyuzhu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)和云煌投资，有限合伙人为谢世煌，实际控制人为史玉柱和马云。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为一家广电系公司，华数传媒未来有成长为传媒帝国潜质，其业务有电视、互动电视、互联网电视、有线网络、IPTV等，有千万级的固定用户。当时就有分析人士指出，如能深入结合马云所掌控之阿里系庞大互联网资源，再联想的新兴火爆的客厅互联网，未来不可限量。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，马云投资华数传媒的并购主体并非是阿里集团，而是做了较为复杂的安排，如在2014年3月27日、4月2日专门分别成立云煌投资和云溪投资两间公司来完成收购并持有华数传媒的20%股份，而谢世煌是马云密友，同时是阿里巴巴十八位创始人之一。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">关键问题是，华数传媒的融资中的资金并非是来自云溪投资本身，而是阿里集团旗下的浙江天猫技术有限公司，浙江天猫技术有限公司向云溪投资出借了60多亿贷款，期限10年，年复合利率8%。这使得出钱的阿里集团看上去与华数传媒只是利息收入关系，却风险自担。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">马云对恒生电子的收购也没有通过阿里集团进行，而是利用马云和谢世煌控制的浙江融信。阿里巴巴对天弘基金的收购同样如此，真正收购天弘基金的是支付宝母公司控股。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但从本质看，围绕阿里巴巴生态展开的系列并购的大部分资金都来自阿里巴巴集团本身，并非来自马云或谢世煌等个人，这些并购大部分是为阿里巴巴集团估值做铺垫。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里巴巴快速疯狂并购背后也留下整合难题，最近典型案例是，阿里收购高德后，高德加速向移动互联网转型，业务向阿里巴巴生态迁移，但高德自身营收出现急剧下滑，并出现大幅亏损，高德的传统客户也在不断远离高德，阿里更被指出帮高德对手“扼杀”高德。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">分析人士指出，在花费如此多资金并购后，阿里也应适当放慢脚步，加速与这些公司进行业务整合，彼此需要真正发挥协同效应，阿里集团不能仅是财务投资者，只充当“送钱童子”角色。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140606/006794.htm','2014-06-07 06:48:41',1,'/news/thumb/201457/1402094937918.jpg','阿里2年疯狂并购耗资超80亿美元 钱从哪里来？','admin','雷建平'),(190,'<div>\r\n	<img alt=\"争议蘑菇街：转型8个月估值飙升10亿美元\" src=\"http://img1.gtimg.com/tech/pics/hv1/95/93/1618/105234260.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 胡祥宝 6月7日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">地处杭州的蘑菇街日前宣布获得新一轮超两亿美元融资，估值达到10亿美元。厚朴投资、挚信资本等共同领投。此举成为今年互联网投资领域一个大手笔，也引发电商行业人士对蘑菇街模式的高度关注。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">蘑菇街于2011年2月上线，去年10月，由于被阿里“封杀”接口，蘑菇街从原来的电商导购向服装类垂直电商平台转型，逐步去淘宝化。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">公开资料显示，蘑菇街进行过两轮共计2000余万美元的融资：2011年，A轮投资方贝塔斯曼，B轮投资方启明创投；2012年10月，完成B+轮融资，IDG领投。根据一般性的融资案例推算，前两轮投资方控股比例应在10-20%，当时有媒体称蘑菇街估值为2亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">仅仅在转型8个月后，蘑菇街的估值就增至5倍。蘑菇街凭什么让资本方沽出10亿美元的高价？以当前正在上市路上的迅雷来参照，发展10年，估值仅8亿美元；已经上市的电商</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/DANG.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">当当网</span></a><span style=\"font-size:14px;\">市值8亿美元，兰亭集势仅为2.7亿美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在投资人眼中，转型后的蘑菇街最大价值在哪里？这个支撑其高估值的服装垂直电商平台模式和原来依托淘宝的电商导购模式到底有何不同？在成功转型过程又有着怎样的干货值得我们去研读。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技独家采访蘑菇街CEO陈琪和众多投资人，以求揭开其中的秘密。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">高估值三大支撑点 受益</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/VIPS.N.htm\" target=\"_blank\"><span style=\"font-size:14px;\">唯品会</span></a><span style=\"font-size:14px;\"> 和聚美优品</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">蘑菇街推出之初，是国外Pinterest的变种，走电商社区模式，上游通过兴趣图片分享形成精准化的女性购物社区，下游直接链接淘宝，再通过淘宝交易，形成商务闭环。由于受到阿里封杀，去年10月，蘑菇街正式启动电商平台优店，探索垂直女性服装电商。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">精准用户群的增长潜力成为蘑菇街高估值的首个支撑点。据蘑菇街官方披露的数据显示，2013年10月初，转型后当月蘑菇街的交易额就达到了1.2亿元，目前，这一数据达到3亿元，据此估算其收入近1800万元（按交易额的6%来算），交易额在8个月内增长幅度150%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">蘑菇街CEO陈琪在接受腾讯科技独家采访时透露，蘑菇街收入主要为优店商品的售卖提成。截至目前，月度活跃用户达6000万，日均UV 650万，在近半年时间里增长都超过200%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，蘑菇街用户99%集中在20～26岁的一二线城市女性，客单价120元左右，退货率不到5%，复购率超过50%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">陈琪认为投资者给予蘑菇街如此高估值的原因还有3点：其一，切入的细分行业前景诱人。蘑菇街定位在时尚女性消费，特别是女性服装在线交易额每年高达数千亿，市场空间巨大；其二，蘑菇街经过三年多时间，特别是导购运营时期就积累了8千万精准的女性电商人群和丰富的女性服装选品经验；其三，蘑菇街超过60%的单月交易额来自移动平台，移动端用户访问量占比超10%，移动电商给投资者足够想象空间。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">易观分析师庞亿明告诉腾讯科技，PC时代，蘑菇街定位社会化电商的导购平台，对淘宝依赖较大，在移动互联网市场环境下，有更大的空间。凭借其已有的用户资源和流量，可直接导入，迅速实现对转型后的电商平台布局。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，蘑菇街做的是“她”经济，消费力、活跃度很抢眼。蘑菇街能在如此短时间内获资本认可，很大程度上是受到唯品会、聚美优品等垂直电商的刺激而陡升。目前，唯品会市值高达90多亿美元，聚美优品市值高达40多亿美元，这些女性电商正成为资本市场追捧的对象，也为蘑菇街进行了资本层面背书。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">模式从轻到重 流量从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">蘑菇街和对手美丽说，最开始的电商导购之所以能迅速发展，是因为抓住了淘宝商家这棵大树。淘宝就像个大超市，蘑菇街则是将大超市中挑选过滤后搞成了个精品屋。用户简化了获取有效信息的路径，淘宝获得流量和交易，蘑菇街获得分成。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">电商导购模式过程，蘑菇街主要做好选品，只管让用户找到喜欢的商品即可，不对接商家、仓储、物流和支付环节，属于轻模式。而转型后，用户购买前中后，整体流程都需要重新打磨，模式变重，但毕竟“自建电商”对蘑菇街充满诱惑而又可摆脱淘宝这个“巨人”对他们命运的把控。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">陈琪认为，在蘑菇街转型的时候是团队状态最好的时候，“就像发洪水，那个时候所有人都会凝聚在一块。”而这也正是蘑菇街转型成功的一大原因。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在业内观察人士看来，转做女性服装垂直电商后，包括支付、上游商家供应链等都让蘑菇街变得更重，很多玩法随之改变。但在之前电商导购积累的选品实力和用户关系价值的挖掘为蘑菇街的转型奠定了坚实的基础。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">区别于美丽说（偏媒体属性，靠自身运营即PGC拉动用户），蘑菇街主要偏社交属性，依靠用户自身所产生的内容即UGC为主，其用户关系链也是潜在的杀手锏。此外，蘑菇街积累了有足够影响力的口碑、有最为核心的优质用户流量，陈琪透露，蘑菇街的用户转化率高达7%~8%，高于淘宝七倍，这些都成为蘑菇街耕耘电商的有效武器。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据陈琪介绍，对于入驻商家的选择，蘑菇街设定两项考核标准，一是商家的服务能力、运营能力，二是商品时尚度。整体通过审核的商家比例占20%，保持2万家的精品。因为大部分商家都是在淘宝上开店，激烈竞争和过度压榨下，商家们也倾向于蘑菇街这样的新渠道。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得一提的是，蘑菇街自建电商后，流量是至关重要的一环，从何而来？</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在转型之初，大家都认为蘑菇街的流量会受到冲击，因为蘑菇街商品种类丰富度大降，流量或将跌至之前的一半。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过陈琪发现，过往两年多打造出的“蘑菇街”品牌逐渐获得用户认可，“我们的一些店铺开起来之后，用户对蘑菇街这个品牌的认可从而引发购买。”</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而且转型之后，蘑菇街移动端的涨幅达到60%，购买频率达到了PC端的4倍。移动端的兴起，也冲淡了PC端流量的冲击。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此外，在脱离了支付宝的怀抱后，蘑菇街选择了进驻公众账号，并接入微信支付获取流量。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">推荐精准决定未来价值 路途中挑战仍存</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">诚然，融资后确实可支撑蘑菇街更好的发展，要真正实现好的价值，呈上靓丽的成绩单才是根本。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">蘑菇街宣称，新轮融资将投入到消费者体验提升、商家平台建设和团队发展。在未来的发展道路上，蘑菇街还将面临着诸多挑战。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">首先，用户的消费习惯尚需长时间培养。“蘑菇街上的东西看起来漂亮，但担心其质量和售后服务，所以还是不敢买。”许多用户如此强调。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">其次，眼下国电商实力越来越集中在阿里和京东的平台上。一方面，转型后的蘑菇街，必然面临淘宝、天猫、京东等平台的竞争；另一方面，蘑菇街走细分品类的差异化，只做女性时尚消费，服装、饰品、箱包，也将面临唯品会、聚美优品等各自在细分垂直女性电商的分流。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于未来，或许正如一蘑菇街产品经理所说：“和淘宝乱糟糟的搜索结果模式相比，蘑菇街本质上就是一种推荐、发现引擎，用户需要引擎来发现好的产品和服务，其引擎做的越好，价值就越高。”而在这条新路上， 蘑菇街还需要更多的摸索。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140607/012866.htm','2014-06-07 20:14:23',1,'/news/thumb/201457/1402143299538.jpg','争议蘑菇街：转型8个月估值飙升10亿美元','admin','胡祥宝'),(191,'<div>\r\n	<img alt=\"传谷歌斥1500万美元收购流媒体音乐服务商Songza\" src=\"http://img1.gtimg.com/tech/pics/hv1/189/131/1618/105244044.png\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯 6月7日消息</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据美国《纽约邮报》日前援引两名知情人士的消息指出，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)联合创始人和首席执行官拉里-佩奇(Larry Page)正在寻求以1500万美元的价格收购总部位于纽约长岛地区的流媒体音乐服务提供商Songza，同时聘请了美国知名投资银行Mesa Global打理这笔交易。据悉，Songza到目前为止成立已有6年时间，该服务的活跃用户数达到了550万。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">事实上，当前的音乐内容管理以及如何根据用户喜好的不同为他们推荐音乐已经成为了流媒体音乐服务战场中竞争最激烈的一条战线。而目前Songza面临的最主要竞争对手是Spotify和Pandora，后者分别拥有2400万和7700万活跃用户。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“谷歌的开价大约是1500万美元左右，但现在的问题是Songza是否愿意接受这一报价”一名不愿透露姓名的消息灵通人士说道。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">与此同时，另一名消息人士则透露称，由于佩奇希望一举击败其他竞争对手，因此他对Songza给出的实际报价要比这一传闻中的金额高得多。应该说，相较于Spotify和Pandora目前分别为40亿和50亿美元的估值，谷歌为Songza 所提出的1500万美元的报价的确是相当低廉。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">《纽约邮报》曾在6月4日就报道称，谷歌一直在寻求收购流媒体音乐服务，而一个拥有自己品牌知名度的企业则会是它的主要考虑目标。对此，有业内人士分析认为，因为该公司目前月费为9.99美元的Google Play Music All Access市场表现不佳，所以谷歌亟需重新定义自己的产品阵营。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">当前，部分流媒体服务主要基于用户在播放列表中选择的歌手信息为他们提供类似风格的音乐推荐。然而，Songza主要通过用户当前在做的事来为他们推荐音乐。比如，Songza会根据用户当前状态为其定制音乐播放列表，而该服务的主界面上就有两个推荐播放列表，它们分别是“在办公室工作”和“增加能量”。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">更为贴心的是，即便用户在洗手间里，Songza也可以为你推荐音乐。据Songza官网介绍称，约翰尼-卡什（Johnny Cash）的《Ring of Fire》和Salt n’ Pepa的《Push It》是目前Songza用户在如厕时的最受欢迎选择。需要指出的是，这一免费音乐服务还开始引入了广告机制，同时为一些合作品牌创建特有的播放列表。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此前，Songza已经从</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">亚马逊</span></a><span style=\"font-size:14px;\">和贾斯汀-比伯（Justin Bieber）经纪人斯科特-布劳恩（Scooter Braun）处获得了470万美元投资。而在不久前，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">苹果</span></a><span style=\"font-size:14px;\">刚刚以30亿美元的价格收购了同样拥有旗下流媒体音乐服务Beats Music的Beats公司，该公司主要通过聘请音乐业内专家创建播放列表的方式同其他流媒体服务展开差异化竞争。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，Songza联合创始人伊莱亚斯-罗曼(Elias Roman)和谷歌方面均拒绝就此发表置评。（汤姆）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140607/016781.htm','2014-06-07 20:16:12',1,'/news/thumb/201457/1402143393384.png','传谷歌斥1500万美元收购流媒体音乐服务商Songza','admin','shulaiyang'),(192,'<div>\r\n	<img alt=\"桑德伯格抛售Facebook股票 套现1800万美元\" src=\"http://img1.gtimg.com/tech/pics/hv1/243/129/1618/105243588.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">BI中文站 6月7日 报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据一份提交给美国证券交易委员会（SEC）的文件显示，</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">&nbsp;COO谢丽尔-桑德伯格（Sheryl Sandberg）一直在不断地抛售其所持有的Facebook股票。就在本周四，她又刚刚套现了1800万美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从今年2月以来，她已抛售了逾1.52亿美元的股票，售价从每股58美元到72美元不等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这些都是计划好的交易，这就是说桑德伯格是在定期销售股票，而不是为了应对公司的突发事件。科技高管按照这种方式兑现其所持有的公司股票并不鲜见。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从2012年以来，她兑现的股票通常在1700万美元左右。因此，周四的交易对于她来说再平常不过。不过，令人感到咋舌的是，大科技公司的高管们居然能够在一个月内交易将近2000万美元的股票。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在周四交易之后，桑德伯格仍然拥有将近800万股Facebook股票。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但是，人们并不清楚她会将这些现金投向何处。她很可能会悄悄支持她看中的某些慈善机构，包括她自己设立的Lean In组织。尽管她是一位出了名的慷慨的慈善家，但是她对于捐赠金额和对象往往守口如瓶。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">桑德伯格已计划将其大多数资金捐赠出去。在今年5月，桑德伯格加入了比尔-盖茨（Bill Gates）和沃伦-巴菲特（Warren Buffet）的“捐赠承诺”（The Giving Pledge）计划，承诺向慈善组织至少捐赠其一半的财富。但是，她尚未公开她的承诺信。在这种承诺信中，捐赠者往往会解释他们为何做出这种承诺以及他们准备支持哪类慈善事业。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">桑德伯格拥有足够的财富可以捐赠。据《福布斯》杂志估计，她的资产现在约为10亿美元。（乐学）</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140607/016604.htm','2014-06-07 20:18:19',1,'/news/thumb/201457/1402143499905.jpg','桑德伯格抛售Facebook股票 套现1800万美元','admin','乐学'),(193,'<div style=\"text-align:center;\">\r\n	<img alt=\"雅虎移动战略的“操刀人”卡航\" src=\"http://img1.gtimg.com/tech/pics/hv1/65/79/1619/105295685.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/YHOO.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">雅虎</span></a><span style=\"font-size:14px;\">移动战略的“操刀人”卡航（腾讯科技配图）</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯&nbsp;6月9日消息，梅耶尔执掌雅虎之后，进行了40多项移动互联网的并购。近日，雅虎移动战略的“操刀人”卡航（Adam-Cahan）接受媒体采访，披露了雅虎移动战略推进的一些内幕。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">卡航目前率领着雅虎的移动业务部门。他介绍，两年前，梅耶尔计划推进雅虎的移动互联网产品，她希望设立一个新的部门，集中开发，当时，卡航则认为，没有必要设立独立部门，应该雅虎所有的业务部门都关注移动化。不过，在进行了40多项并购之后，卡航开始相信，设立集中的部门来进行移动产品攻关，这是一个明智之举。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在梅耶尔到来之前，雅虎已经显出疲态，在</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">谷歌</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">Facebook</span></a><span style=\"font-size:14px;\">等对手纷纷向移动互联网迁移之时，雅虎大部分服务仍然面对用电脑上网的网民，拿得出手的APP寥若星辰。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在一系列收购之后，雅虎已经取得了一些成效。目前在八亿多人的月度活跃用户中，超过一半（4.3亿人）来自移动设备。不过，由于移动产品的商业模式还不成熟，梅耶尔大量的收购，并未能够增长雅虎的广告收入，这让她持续面临董事会压力。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为对比的是，抢走了雅虎显示广告老大位置的Facebook，如今六成的广告收入已经来自移动设备。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">卡航表示，他和梅耶尔意识到，在移动互联网方面，雅虎动作太迟，比对手晚了一年到一年半的时间。如何追赶？只能靠快速收购拥有移动产品的新创公司。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">卡航对媒体直言：“绝大部分的收购，是人才并购。”众所周知的是，诸多收购完成之后，被收购对象的产品被关闭，人才转入其他雅虎应用项目。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2012年，雅虎从事移动APP开发的人才，只有37人，如今已经增加到了500人。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">而在今年一月份，卡航的团队，又再度拿下一个新创公司Aviate，据称和谷歌Now类似，属于下一代的推送式、智能化搜索引擎。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">卡航还透露，雅虎的移动业务，目前仍采取一个部门集中开发的模式。不过梅耶尔过去曾经向他承诺，每年年底，都将会对雅虎的移动产品进展进行评估，从而决定是否继续设立一个独立部门进行开发。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">然而需要指出的是，梅耶尔迄今为止最大的收购项目是社交网络兼轻博客平台Tumblr，耗资10亿美元，其他的收购项目基本毫不知名，没有获得类似WhatsApp这样的明星应用。由于并购来的人才队伍用于将传统的雅虎财经、体育、邮箱、Flickr等产品移动化，再加上创新不足，迄今为止，雅虎仍然缺乏一款标志性的的旗舰APP。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">之前，雅虎通过收购，挖来了英国一个17岁的优秀开发员，并根据其新闻聚合技术开发了新闻阅读客户端NewsDigest，不过这款APP，并未产生雅虎期待的市场冲击力。（晨曦）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140609/009727.htm','2014-06-09 09:09:43',1,'/news/thumb/201459/1402276201360.jpg','雅虎移动战略操刀人：落后对手一年半 并购为人才','admin','晨曦'),(194,'<div style=\"text-align:center;\">\r\n	<img alt=\"美国学者盗用超级计算机挖比特币 币值不够电费\" src=\"http://img1.gtimg.com/tech/pics/hv1/244/58/1619/105290509.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技讯&nbsp;6月9日消息，比特币的风靡一时，让全世界许多渴望暴富者购置“比特币挖矿机”去挖掘比特币。最近，美国学术界爆出一宗丑闻，一位研究人员，居然利用政府基金支持的高校超级计算机，秘密挖掘比特币，结果遭到了禁止使用超级计算机资源的严厉处罚。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">所谓的挖矿机，是配置了专用比特币挖掘软件和算法的电脑设备，在比特币掀起热潮之后，一些厂商还专门推出了高性能的挖矿机，其耗电量居高不下。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">美国</span><a href=\"http://tech.qq.com/science.htm\" target=\"_blank\"><span style=\"font-size:14px;\">科学</span></a><span style=\"font-size:14px;\">基金会在三月份的一份检查报告中，披露了这一丑闻，报告并未提到具体的研究人员的身份。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据称，这位学术研究人员，分别利用了两所美国大学的超级计算机来挖掘比特币，但是战绩实在是可怜，他只挖到了12到16枚比特币，折合成美元相当于八千到一万美元。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">被外界发现后，这位研究人员谎称自己是在超级计算机上进行测试研究，不过两所大学均证实，并未授权这位研究者进行任何利用超级计算机的测试。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这两所大学均报告，这名涉事的研究者，通过远程登录的方式使用了超级计算机，他千方百计藏匿自己的身份，甚至首先登录欧洲的一个计算机站点，然后再返回登录美国大学的超级计算机。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据美国福布斯网站等媒体报道，学术界人士利用政府和高校的超级计算机，来挖掘比特币，这种丑闻已经有先例。比如，之前哈佛大学的一位研究人员以及英国伦敦帝国学院的一名学生，先后被发现利用高校计算机为自己牟取钱财。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">然而，利用学术研究的超级计算机挖掘比特币，可能是一个误区。《比特币杂志》的编辑BrianCohen介绍说，现在市场上有了性能强劲的比特币挖矿机，高校的超级计算机性能无法和挖矿机相提并论，另外利用超级计算机挖掘比特币也缺乏常识，这些高性能计算机耗电量巨大，而所挖到的比特币价值，还不够支付计算机的电费。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">根据美国科学基金会的这份报告，在调查结果出炉之后，基金会全面封杀了这名研究者，他将被禁止使用政府资助的超级计算机资源。（晨曦）</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140609/007358.htm','2014-06-09 09:11:45',1,'/news/thumb/201459/1402276318030.jpg','美国学者盗用超级计算机挖比特币 币值不够电费','admin','晨曦'),(195,'<div style=\"text-align:center;\">\r\n	<img alt=\"Dropbox的创始人德鲁休斯顿\" src=\"http://img1.gtimg.com/tech/pics/hv1/86/30/1584/103007336.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	Dropbox创始人德鲁-休斯顿\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	腾讯科技讯&nbsp;6月8日消息,<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/FB.OQ.htm\" target=\"_blank\">Facebook</a>斥资190亿美元收购WhatsApp，以及<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AAPL.OQ.htm\" target=\"_blank\">苹果</a>新版iMessage对于移动聊天领先者的“赤裸裸山寨”，表明了手机聊天工具正在成为互联网巨头的标配产品。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	正准备上市的云存储巨头Dropbox，日前宣布，收购了移动聊天工具开发商Droptalk，Dropbox希望传统的通过电子邮件共享文件的方式，未来能够切换到通过聊天工具快速分享云存储文件的链接。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Dropbox已经成为云存储的老大，用户不久前突破三亿人，估值超过百亿美元。Dropbox上市之后，将直接和<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/AMZN.OQ.htm\" target=\"_blank\">亚马逊</a>、<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/GOOG.OQ.htm\" target=\"_blank\">谷歌</a>(<a href=\"http://t.qq.com/googlechina#pref=qqcom.keyword\" target=\"_blank\">微博</a>)、<a href=\"http://stockhtm.finance.qq.com/astock/ggcx/MSFT.OQ.htm\" target=\"_blank\">微软</a>等云计算巨头对垒，媒体分析称，在上市之前，Dropbox必须利用现有的现金，加速收购新创公司，增强自身业务“肌肉”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Droptalk方面证实了被Dropbox收购的消息，巧合的是，这家被收购公司的名字里，也有“Drop”的字样，而这个“Drop”，反映的是该公司在文件分享和信息沟通方面的理念。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	Droptalk的产品其实还在雏形阶段，目前面向一部分用户提供了测试版服务，用户聊天通过Chrome浏览器的一款插件来进行，主要用途是分享私密的网盘文件链接等信息。按照计划，该公司未来将会开发面向iOS和安卓操作系统的聊天客户端。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	据报道，Droptalk的几位创始人，之前曾在LinkedIn和Facebook等社交网络从事技术开发工作，一年前成立该公司。在宣布被收购消息时，几位创始人表示，他们开发Droptalk的目的，就是“消灭”传统的电子邮件，代之以浏览器网页界面上的文字聊天。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	据称，用户利用Droptalk，可以在平板和智能手机的浏览器中随意聊天，无需在收发电子邮件。另外，某个用户如果对云存储的共享目录和文件进行了更新，所有的好友可以在聊天界面中自动发现更新。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	目前，整个Droptalk公司的员工只有五个人，在收购完成后，五个人均将加盟Dropbox公司，Droptalk这一实体也将被注销。科技媒体预测，Dropbox可能会把该公司的聊天产品和技术，整合到云存储产品线中。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	近一两年来，Dropbox已经开始了转型，从传统的文件存储服务商，转变为能够识别用户内容的“数字内容组织管理商”，比如在照片和视频上，Dropbox通过收购新创公司，提供了许多创新、智能的管理服务。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	不过，尽管拥有了三亿多用户，在这些用户的相互分享和沟通上，Dropbox形成了一个短板。媒体分析称，围绕用户网盘内容分享的移动聊天，将让Dropbox的云存储服务再上一个台阶。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	目前，Dropbox和另外一个云存储对手Box，在上市上展开了一场较量。之前Box提交上市申请，后来又宣布延期。与此同时，Dropbox尚未提交招股书，仍然在通过产品频繁升级和收购新创公司，加强上市之前的业务建设。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	值得一提的是，Dropbox对于聊天类资产，早有“算盘”。就在上个月，Dropbox收购了一家名为Zulip的公司，对方主要研发面向企业内部员工的协作聊天工具，而被收购时，尚未发布正式产品，很显然这是一次“人才队伍并购”。\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<ul>\r\n		<li>\r\n			四月份，Dropbox任命了新的首席财务官，被外界认为开始准备上市。随着上市临近，加上获得3.5亿美元的风险投资，Dropbox近期仍有可能频繁进行收购。\r\n		</li>\r\n	</ul>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>','腾讯科技','http://tech.qq.com/a/20140609/000808.htm','2014-06-09 09:14:17',1,'/news/thumb/201459/1402276457544.jpg','Dropbox上市前弥补移动聊天软肋：购Droptalk','admin','晨曦'),(196,'<div>\r\n	<span style=\"font-size:14px;\"></span><img alt=\"阿里无线架构再调整 俞永福出任无线事业群总裁\" src=\"http://img1.gtimg.com/tech/pics/hv1/108/134/1621/105439803.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 宗秀倩 6月11日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">与UC优视联合宣布，UC优视全资融入阿里巴巴集团，并组建阿里UC移动事业群。UC优视董事长兼CEO俞永福(</span><a href=\"http://t.qq.com/yu_yongfu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)将担任UC移动事业群总裁，进入阿里集团最高决策团队——阿里集团战略决策委员会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">过去两年，整个阿里集团在移动互联网入口焦虑症的驱使下，希望通过双线来实现“ALL-IN无线”。一条线是打造自有核心产品，如支付宝钱包、来往和手机淘宝；另一条线则是马不停蹄地并购和战略投资细分领域的领先者，如高德、UC、</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/SINA.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">新浪</span></a><span style=\"font-size:14px;\">微博、陌陌等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">强推自有核心产品目前并没有形成超级入口，疯狂并购也并没有给阿里带来足够的安全感，反而带来了电商、O2O和社交等多重业务整合和协同的新难题，现在，这个难题抛给了俞永福和他带领的UC。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从独立发展到委身</span><a href=\"http://stockhtm.finance.qq.com/hk/ggcx/01688.htm\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴</span></a>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在去年接受阿里战略投资后，俞永福此前曾高调表示，“从此不会谣传UC被谁收购，只有UC收购谁。”在此之后，UC于去年下半年完成了对PP助手的收购，并表示三年内拿出30亿人民币用来收购和建立生态链。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在2013年3月阿里花费5.06亿美元从晨兴、联创策源手中接盘战略投资UC后，经过一轮增持，阿里巴巴持有UC股份已达66%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">此次全资融入阿里之后，UC已经不再寻求独立发展。这种变化背后的原因，俞永福希望期待更快实现化学反应。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他认为，依托UC在移动上的优势，结合阿里在相关行业的深耕布局，让彼此成为对方发展壮大中的更大变量，催化出更加惊人的化学反应。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福一统移动事业群</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">UC官方表示，以UC优视为基础设立的阿里UC移动事业群，将是阿里巴巴在阿里电商事业群、云计算大数据事业群之后的新事业群。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">该事业群除了现有UC集团业务团队，未来还将整合阿里集团其他相关业务和团队，负责包括浏览器业务、搜索业务、LBS业务、九游移动游戏平台业务、PP移动应用分发业务、爱书旗移动阅读业务等建设和发展。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">这可视为阿里在无线业务上的再度调整。从去年到今年，阿里在无线架构上的调整已经超过三次，无线事业部的管理权几度易主。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2013年1月10日，阿里对集团现有业务架构和组织将进行调整，成立25个事业部。随后在去年9月，阿里又成立网络通讯事业部和淘点点事业部。此次调整中，阿里CEO陆兆禧则亲自挂帅移动业务。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今年3月，阿里针对无线进行人事和架构调整，COO</span><a href=\"http://t.qq.com/taobaoxiaoyaozi#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">张勇</span></a><span style=\"font-size:14px;\">接替陆兆禧挂帅无线业务，负责淘点点的王煜磊成为天猫兼聚划算总裁。此次变动，陆兆禧宣告挂帅无线时隔不到半年。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">移动端入口焦虑症</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">受移动端入口分散特性的影响，阿里在PC端的海量流量优势并没有移植到移动端。在频繁的架构调整和无线负责人的变换中，阿里曾经试图将支付宝钱包、来往和手机淘宝打造成拥有几亿用户的超级入口，直到目前这种策略并未成功。移动电商对海量流量的强需求，使得阿里在移动入口上的焦虑比其他大公司更突出，这也是不断寻求并购的原因之一。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近两年来，阿里巴巴及其关联公司一直在进行移动互联网的投资和并购，大的产品包括战略入股新浪微博、优酷土豆，全资收购高德，以及以66%的绝对控股优势战略入股UC。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从资本的逻辑上来看，阿里在移动互联网领域展开地毯式的投资收购，主要用以扩大四方面的业务和资源外延：一是购买用户和流量，如投资UC;二是获取大数据，如投资高德、友盟;三是获取社交关系，如新浪微博、陌陌；四是布局O2O，如美团、快的打车等。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">用移动搜索打通电商入口</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里这番密集的资本布局稍稍疏解了入口的焦虑，带来的另一问题是，这些业务并没有和阿里核心业务电商进行有序协同。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">现在，阿里把整合的重任交给了俞永福和他的UC。一个说的通的原因是，UC今年上半年的产品已经证明了自己的资源整合能力。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在2013年3月阿里花费5.06亿美元从晨兴、联创策源手中接盘战略投资UC后，经过一轮增持，阿里巴巴持有UC股份已达66%。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">作为阿里绝对控股的子公司，在投资和增持前后，UC对阿里资产的内部整合已经开始，并在今年上半年悉数交出了整合成果。一块是整合原来的淘宝浏览器，于今年4月发布UC电脑版浏览器业务，另一块资产则是整合原有的“一搜”全网搜索，紧接着发布了“神马搜索”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">两个业务投射着在当初阿里入股时UC瞄准的战略方向：一是移动电商，UC浏览器要加上购物、支付和金融等服务；二是强化UC的入口地位。在过去10年的发展中，UC已经拥有了5亿用户以及背后的应用分发和游戏联运能力。去年下半年，UC全资收购了越狱分发应用市场PP助手，UC已经完成了Android和iOS的双平台移动分发布局。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福已经找到了用移动搜索打通移动电商的方法。在他看来，PC端的现实困难是，阿里封闭了通向</span><a href=\"http://stockhtm.finance.qq.com/astock/ggcx/BIDU.OQ.htm\" target=\"_blank\"><span style=\"font-size:14px;\">百度</span></a><span style=\"font-size:14px;\">的数据通道，这直接导致PC端搜索和阿里电商之间割裂，百度的用户只能到达淘宝，但没法具体到某一件商品。阿里的搜索只能在淘宝和天猫内部使用。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">从PC端到移动端，用户从搜索里寻找商品的需求并没有没有改变。有了UC和阿里的战略投资关系，阿里相当于拥有自己的搜索平台，从外部到内部，用户可以通过移动搜索到达淘宝，也可抵达淘宝内部的具体商品，PC时代的屏蔽墙就这样可以拆掉了，流量导入自然而言。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福难题：如何整合阿里庞大资源</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据腾讯科技不完全统计，过去2年阿里体系相继通过投资和并购花费掉的资金已超80亿美元，不 仅被喻为买下半个互联网，更被指买下整个世界,但阿里巴巴快速疯狂并购背后也留下整合的问 题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">最近典型案例是，阿里收购高德后，高德加速向移动互联网转型，业务向阿里巴巴生态迁移，但 高德自身营收出现急剧下滑，并出现大幅亏损，高德的传统客户也在不断远离高德，阿里更被指 出帮高德对手“扼杀”高德。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在打通了移动搜索和淘宝的流量之后，UC整合阿里并购来的其他资源将成为新的难题。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福一直在强调UC的主导地位，甚至他把和阿里的关系定位于“以我为主，为我所用”。阿里 之于UC，除了资金和人才，更重要的是生态系统，包括阿里巴巴的流量联盟，俞永福认为，不用 好阿里巴巴联盟就属于自己傻。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在整合阿里体系的其他资源上，已有合作的先例。典型的案例是新浪微博。此前，有媒体向俞永 福发问，UC是否有做自媒体平台的计划。俞永福认为，自己不会做，但可以给新浪微博的自媒体 平台导送流量。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">阿里已经给俞永福留出了整合的权限，新成立的事业群除了现有UC集团业务团队，未来还将整合阿里集团其他相关业务和团队，负责包括浏览器业务、搜索业务、LBS业务、九游移动游戏平台业务、PP移动应用分发业务、爱书旗移动阅读业务等。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140611/019226.htm','2014-06-12 08:54:19',1,'/news/thumb/2014512/1402534474859.jpg','阿里收购UC：俞永福能止马云移动入口之痛吗','admin','宗秀倩'),(197,'<div>\r\n	<img alt=\"站在马云棋盘上的棋手俞永福\" src=\"http://img1.gtimg.com/tech/pics/hv1/184/141/1622/105506689.jpg\" /><span style=\"font-size:14px;\"></span> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 宗秀倩 6月12日报道</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">6月11日上午9点，UC优视董事长俞永福(</span><a href=\"http://t.qq.com/yu_yongfu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)发了一条微博：“一个重要的决定：合聚变！ ”二十分钟后，官方新闻稿放出，这桩号称中国移动(</span><a href=\"http://t.qq.com/CMCC#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)互联网历史上最大的并购交易正式亮相，据称交易估值超过两个91无线的价格，即超过38亿美元。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在UC官方新闻稿的重要位置，这场并购被描述为“UC全资融入</span><a href=\"http://t.qq.com/AlibabaGroup#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">阿里巴巴集团</span></a><span style=\"font-size:14px;\">“,UC所在的北京优盛中心办公室里，随处可见的液晶电视里无一例外地显示着“合聚变”三个字以及阿里和UC的LOGO，大红的底色洋溢着欢庆的气息，就像一场胜利。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“事比较大，没提前和各位打招呼，抱歉！”下午4点，俞永福满面春风的走进会议室，对来访的媒体表达歉意。“未来我有机会领导更大的一个业务群，不光是阿里UC这个群，在万亿规模的互联网企业量级，中国只有两家公司”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但俞永福高涨的情绪并未能打消外界的疑惑，尽管他在内部邮件中强调两家公司在文化上的高度一致，但俞显然并不具备</span><a href=\"http://datalib.tech.qq.com/people/1/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">马云</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/tncmayun#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)般的扭曲力，当媒体将整合的问题抛向俞永福，甚至对其整合的预期效果有质疑时，他情绪略微反弹，“你不相信我？我是投资整合高手！”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福的底气源自UC在移动业务上的强势，他借棋释疑：围棋中有棋眼一说，一旦占领棋眼，即可取得绝对性的优势。而互联网行业的棋眼主要有三：游览器、搜索和分发渠道，所有企业都会猛攻这三个领域，而UC过去十年创业史可谓在三个棋眼上奠定了好的基础，这不仅让UC卖出了一个好价钱，也还给了俞永福一个进入阿里整合内部资源的机会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福强调自己认为这次整合不是并购，他是阿里的重要个人股东和合伙人。同时他否认了UC和阿里的汇报关系，仅表示并购后自己的汇报对象变了，从此前汇报给UC董事会变成现在的阿里战略决策委员会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他似乎想强调的信息是，自己仍然是一个谋局的棋手，尽管此刻他已经站在马云的棋盘上。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">1+1大于2最好</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于UC跟阿里的业务整合，俞永福的预期是要做到1+1大于2。做不到这一点，资本就减值了。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福也承认过去阿里有诸多不成功的整合。阿里的格局、人才还充足，在非电商的领域也有做众多布局和投资。为什么没有成大气候，在俞永福看来是缺了一个环节，没有形成流量生长循环。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他倾向于把电商和非电商业务区分来看。阿里比较强的两个业务比如电商和云计算、大数据领域，整合还不错，就跟腾讯在非电商领域这一块做的很不错类似。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">如何做到1+1大于2，他认同腾讯科技所提的“互补”理念。互补不仅仅是业务，他还强调核心管理团队的组建，要能力互补。在他看来，整合成功的关键要素，从人到业务都要互补。阿里是电商做的不错，UC是非电商做得不错，这其实是能够成功的前提。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福还希望未来的整合能够上升到更高的高度，他定义为跨界。让公司和团队能够“蜕变”，</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">但这个过程有很多挑战。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他说，能够做两个不同的业务都能够取得成功的人，他自己佩服的五体投地。这一点上，巨人集团的</span><a href=\"http://datalib.tech.qq.com/people/21/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">史玉柱</span></a><span style=\"font-size:14px;\">(</span><a href=\"http://t.qq.com/shiyuzhu#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)是“Superman（超人）”，他自己还不是。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有所为有所不为</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">尽管俞永福认为，自己不是超人，但对投资整合而言，自己还有底气的。一是自己原本是投资人出身，擅长资本运作。二是，也是更重要的，过去几年来UC自身在团队和业务上的整合的实战经验增加了他的自信。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">UC自身的整合可以分作两部分。团队方面，主要是九游和PP助手。2009 年UC收购手游平台九游，埋头苦干3 年后，2012 年发布UC九游开放平台。目前，在手游分发渠道上，以九游为主的UC 平台名列第二。2014 年九游将给合作伙伴带来 1 亿美元分成，2015 年这一数字有望超过 15 亿人民币。另一个去年下半年UC全资收购的PP助手，在半年的整合中，整合还算顺利，不过目前没具体数据披露。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一个是今年UC力推的两大业务，PC端浏览器和神马搜索，都是在整合阿里资产的基础上推出。一块是整合原来的淘宝浏览器，于今年4月发布UC电脑版浏览器业务，另一块资产则是整合原有的“一搜”全网搜索，紧接着发布了“神马搜索”。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对比俞永福在UC移动事业群成立之后需要整合的业务，其中，浏览器业务、搜索业务、九游移动游戏平台业务、PP移动应用分发业务和爱书旗移动阅读业务等都是UC自身业务，整合上没有太大难度。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">业内并不太熟悉“爱书旗”，现在爱书旗公司和UC在北京同在一座大厦办公。当腾讯科技向俞永福询问爱书旗时，“这是UC自己的业务，被你发现了，这是UC的另一个潜水艇。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">有难度有碰撞的业务来自两块，一是LBS业务，二是手游业务。前者关乎高德，后者关乎阿里的另一个刚成立的事业群——数字娱乐事业群，刘春宁担任该事业群总裁。游戏平台也是数字娱乐事业群版图的一部分。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福确认未来将整合高德和其他相关的上市公司，他认为，LBS与移动搜索有天然的联系，这也是LBS业务纳入UC移动事业群的主要原因。他不想多谈整合高德的具体细节，理由是高德被阿里全资收购后，尚未退市。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">值得注意的是，UC移动事业群和数字娱乐事业群在游戏平台上的交集让整合问题有些微妙。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他倾向于用自己的逻辑分清楚UC九游的游戏平台和数字娱乐事业群的游戏平台的区别。前者侧重分发，主要面向用户，后者则是着重一些国际游戏的引入。俞永福又说，UC九游也会做游戏的引入和联运。未来两个事业群在游戏平台上的博弈可想而知。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福言语间不想在UC并入阿里之初就展露掠夺者的姿态。他强调专注在自己的范围和业务集群有互动，有相关性的业务之上。在浏览器、搜索、应用发行、LBS之上的游戏和阅读，以及国际化的平台上拓展业务。在UC并入阿里前后的区别在于业务节奏的把控，以及控制自己的贪婪。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一方面，他又强调有所为有所不为。“永福的消化能力也是有限的，我一定考虑团队的宽度，哪些业务应该整合，哪些业务不要现在整合，要根据自己的吞吐能力。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">体系内类独立发展</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">2013年和2014年两年的GMIC大会上，俞永福对公司走向的表态大不相同。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">去年5月，在接受阿里战略投资后，俞永福高调表示，“从此不会谣传UC被谁收购，只有UC收购谁。”他表示，三年内拿出30亿人民币用来收购和建立生态链。果然，在去年下半年，UC完成了对越狱分发渠道PP助手的收购，完善了在Android和iOS的双平台布局。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">一年以后的4月份，阿里提出全资并购的提议，俞永福在五一期间经过思考后，并在5月6日的GMIC会上向业内暗示，做出了一个“重要的决定。”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“你什么时候变心的？”</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">面对变心、食言的质问，俞永福没有正面回答。他说，从做投资到创业最看中是八个字“仰望星空、脚踏实地”，战略思考要非常清晰，随着产业的格局的变化调整你的战略。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福的另一巧妙之处在于，他用自己擅长的资本逻辑否认了“并购”的定性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">俞永福认为，此次并购与其他并购案例不同。其他并购案都是以现金的形式，此次阿里收购UC是采取的大额股票换股的方式，他认为这点表明阿里以合伙人的心态对待UC团队，这是特殊之处。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">另一点是，在面对UC并入阿里后俞永福向谁汇报的问题上，俞永福巧妙否认了UC和阿里的汇报关系。在此次并购后，只是俞永福自己的汇报对象变了，从此前汇报给UC董事会变成现在的阿里战略决策委员会。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">他强调汇报问题，一个原因是在UC并入阿里后，UC到底听谁的这关乎战略走向。俞永福认为，没有汇报的关系，UC还是按照“永福”的思路取走，公司可以保持产品战略的连贯性。</span>\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">“独立自主发展还是被收购，这不存在光荣不光荣的问题。只是事业生涯中的两种选择，绝没有对和错。最重要是两种选择中自己的战略思考”。俞永福强调。</span>\r\n</p>','腾讯科技','http://tech.qq.com/a/20140612/011758.htm','2014-06-12 08:56:19',1,'/news/thumb/2014512/1402534579510.jpg','站在马云棋盘上的棋手俞永福','admin','宗秀倩'),(198,'<div style=\"text-align:center;\">\r\n	<img alt=\"中移动董事长：4G流量打破月清零 还可分享他人\" src=\"http://img1.gtimg.com/tech/pics/hv1/22/158/1621/105445837.jpg\" /> \r\n</div>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">腾讯科技 郭晓峰 6月11日报道</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">今日，2014年GSMA亚洲移动通信博览会在上海开幕，“构建互联世界”是本届展会主题。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">中国移动(</span><a href=\"http://t.qq.com/CMCC#pref=qqcom.keyword\" target=\"_blank\"><span style=\"font-size:14px;\">微博</span></a><span style=\"font-size:14px;\">)通信集团公司董事长</span><a href=\"http://datalib.tech.qq.com/people/37/index.shtml\" target=\"_blank\"><span style=\"font-size:14px;\">奚国华</span></a><span style=\"font-size:14px;\">做了题为《携手共赢，共创移动互联精彩世界》的主题演讲，他表示：移动互联网是国家经济发展的新引擎，就4G而言，2014年预计中国TD-LTE基站建设将超过50万个。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">据了解，中移动今年4G建设力度空前绝后，整体投资将超过2400亿元。奚国华透露，将进一步降低4G准入门槛，尤其是在资费方面，将会不断优化，降低了使用门槛和流量单价，延长流量使用周期，还有流量分享、流量提醒、引导客户升级等举措。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">目前，随着虚拟运营商业务的落地，其灵活的资费吸引了无数用户眼球，一定程度上也刺激了传统运营商不断创新流量产品。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">5月14日，中国移动对外宣布，降低4G入门价格，下调资费，推出流量季度包、半年包，打破“流量月清零”做法;电信联通也开展各种形式的流量促销。如广东移动在推出类似“团购”的4G流量共享套餐后，还计划在近期推出流量转赠业务，用不完的4G流量，可转赠给其他用户，这实际上意味着间接实现流量“不清零”。而这样的做法将会逐步在全国推广。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">提到下一步发展规划，他表示，今年年底前4G覆盖达到340个城市及地区，销售4G终端超过1亿部，发展5000万4G用户。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">在终端方面，今年前4个月中移动已卖出6700万TD-SCDMA终端，这主要是由于中移动还在不断优化4G网络，终端厂商还在逐步转到4G终端，还没有形成规模。对于下半年，奚国华透露，将主要以TD-LTE 4G终端为主。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">对于市场关注的终端是三模还是五模，奚国华解释称，两者都重要，三模依然有其市场需求，五模是满足漫游、高端等用户，所以究竟需要哪个还要看市场需求。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">按照中移动的规划，未来的终端策略是3G/4G并重，所以，整体销量目标是1.9至2.2亿部，3G/4G各占50%。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">终端是承载移动互联网发展的基础，中移动在今年也有意加大自有品牌终端的推进，前不久刚刚发布业界首款五模千元4G手机，不过外界更多把此举看做中移动对终端的引领，而并非像其他手机厂商侧重销售量。</span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<br />\r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"font-size:14px;\">不过，中国移动还将继续加大终端资源投入。奚国华透露，中国移动将继续扩大销量，构建连锁+电商+协同的高效渠道运营体系，转变资源使用的结构，构建健康度评价模型。</span> \r\n</p>','腾讯科技','http://tech.qq.com/a/20140611/025934.htm','2014-06-12 08:58:54',1,'/news/thumb/2014512/1402534748190.jpg','中移动董事长：4G流量打破月清零 还可分享他人','admin','郭晓峰');
UNLOCK TABLES;
/*!40000 ALTER TABLE `news` ENABLE KEYS */;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `avatar` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `nickname` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  `blog_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK36EBCB7474B930` (`blog_id`),
  CONSTRAINT `FK36EBCB7474B930` FOREIGN KEY (`blog_id`) REFERENCES `blog` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `user`
--


/*!40000 ALTER TABLE `user` DISABLE KEYS */;
LOCK TABLES `user` WRITE;
INSERT INTO `user` VALUES (1,'1c4ca4238a0b923820dcc509a6f75849b.jpg',NULL,'admin','cae2b610d4955e05007e7a88b5121efd','admin',NULL);
UNLOCK TABLES;
/*!40000 ALTER TABLE `user` ENABLE KEYS */;

--
-- Table structure for table `webstatistics`
--

DROP TABLE IF EXISTS `webstatistics`;
CREATE TABLE `webstatistics` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `ip` varchar(512) DEFAULT NULL,
  `url` varchar(512) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `id` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3317 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `webstatistics`
--


/*!40000 ALTER TABLE `webstatistics` DISABLE KEYS */;
LOCK TABLES `webstatistics` WRITE;
INSERT INTO `webstatistics` VALUES (1,'123.121.207.38','http://www.eleword.net:80/index.htm','2014-04-24 01:46:12'),(2,'123.121.207.38','http://www.eleword.net:80/index.htm','2014-04-24 01:47:28'),(3,'123.121.207.38','http://www.eleword.net:80/article/31.htm','2014-04-24 01:47:34'),(4,'123.121.207.38','http://www.eleword.net:80/aboutme.htm','2014-04-24 01:48:18'),(5,'123.121.207.38','http://www.eleword.net:80/index.htm','2014-04-24 06:38:00'),(6,'123.121.207.38','http://www.eleword.net:80/article/31.htm','2014-04-24 06:50:24'),(7,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 08:39:20'),(8,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-24 08:47:26'),(9,'124.207.82.22','http://www.eleword.net:80/article/23.htm','2014-04-24 08:48:45'),(10,'124.207.82.22','http://www.eleword.net:80/article/32.htm','2014-04-24 09:05:47'),(11,'124.207.82.22','http://www.eleword.net:80/article/32.htm','2014-04-24 09:05:49'),(12,'124.207.82.22','http://www.eleword.net:80/article/32.htm','2014-04-24 09:05:49'),(13,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 09:05:54'),(14,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 09:06:04'),(15,'124.207.82.22','http://www.eleword.net:80/category/7.htm','2014-04-24 09:06:06'),(16,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-04-24 10:11:18'),(17,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 10:13:02'),(18,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 10:13:04'),(19,'124.207.82.22','http://www.eleword.net:80/article/32.htm','2014-04-24 10:13:10'),(20,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-04-24 10:14:18'),(21,'202.99.16.22','http://www.eleword.net:80/article/30.htm','2014-04-24 10:14:28'),(22,'124.207.82.22','http://www.eleword.net:80/article/30.htm','2014-04-24 12:30:08'),(23,'124.207.82.22','http://www.eleword.net:80/article/33.htm','2014-04-24 12:31:26'),(24,'124.207.82.22','http://www.eleword.net:80/article/33.htm','2014-04-24 12:31:28'),(25,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 12:31:42'),(26,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 12:31:43'),(27,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-24 14:42:17'),(28,'124.207.82.22','http://www.eleword.net:80/article/33.htm','2014-04-24 14:58:53'),(29,'123.121.207.38','http://www.eleword.net:80/index.htm','2014-04-24 18:53:50'),(30,'123.121.207.38','http://www.eleword.net:80/article/33.htm','2014-04-24 18:55:43'),(31,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-25 10:55:01'),(32,'124.207.82.22','http://www.eleword.net:80/article/33.htm','2014-04-25 11:13:37'),(33,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-25 11:13:43'),(34,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-25 13:18:09'),(35,'124.207.82.22','http://www.eleword.net:80/category/10.htm','2014-04-25 14:11:33'),(36,'124.207.82.22','http://www.eleword.net:80/article/25.htm','2014-04-25 14:11:36'),(37,'123.121.196.16','http://www.eleword.net:80/article/30.htm','2014-04-25 20:31:59'),(38,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-25 20:34:59'),(39,'123.121.196.16','http://www.eleword.net:80/article/33.htm','2014-04-25 20:35:07'),(40,'123.121.196.16','http://www.eleword.net:80/article/26.htm','2014-04-25 20:35:13'),(41,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-04-26 00:12:00'),(42,'66.249.79.182','http://www.eleword.net:80/aboutme.htm','2014-04-26 00:18:07'),(43,'66.249.79.118','http://www.eleword.net:80/article/14.htm','2014-04-26 00:23:49'),(44,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 05:55:22'),(45,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 06:21:00'),(46,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:21:03'),(47,'123.121.196.16','http://www.eleword.net:80/aboutme.htm','2014-04-26 06:21:04'),(48,'123.121.196.16','http://www.eleword.net:80/news/1.htm','2014-04-26 06:23:14'),(49,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:23:22'),(50,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 06:23:31'),(51,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:38:37'),(52,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:39:52'),(53,'123.121.196.16','http://www.eleword.net:80/news/3.htm','2014-04-26 06:39:56'),(54,'123.121.196.16','http://www.eleword.net:80/news/1.htm','2014-04-26 06:48:25'),(55,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 06:48:33'),(56,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:50:39'),(57,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:52:33'),(58,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:54:17'),(59,'123.121.196.16','http://www.eleword.net:80/news/6.htm','2014-04-26 06:54:19'),(60,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 06:54:32'),(61,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:56:02'),(62,'123.121.196.16','http://www.eleword.net:80/news/7.htm','2014-04-26 06:56:09'),(63,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 06:58:19'),(64,'123.121.196.16','http://www.eleword.net:80/news/8.htm','2014-04-26 06:58:20'),(65,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 06:58:45'),(66,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 07:45:32'),(67,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 07:45:34'),(68,'123.121.196.16','http://www.eleword.net:80/news/9.htm','2014-04-26 07:45:38'),(69,'123.121.196.16','http://www.eleword.net:80/news/9.htm','2014-04-26 07:46:13'),(70,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 07:46:29'),(71,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 07:50:50'),(72,'123.121.196.16','http://www.eleword.net:80/news/10.htm','2014-04-26 07:50:53'),(73,'123.121.196.16','http://www.eleword.net:80/news/11.htm','2014-04-26 07:53:24'),(74,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 07:53:28'),(75,'123.121.196.16','http://www.eleword.net:80/news/11.htm','2014-04-26 07:53:39'),(76,'123.121.196.16','http://www.eleword.net:80/news/10.htm','2014-04-26 07:54:46'),(77,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 07:59:10'),(78,'123.121.196.16','http://www.eleword.net:80/news/11.htm','2014-04-26 08:03:12'),(79,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:03:21'),(80,'123.121.196.16','http://www.eleword.net:80/category/3.htm','2014-04-26 08:03:25'),(81,'123.121.196.16','http://www.eleword.net:80/aboutme.htm','2014-04-26 08:03:26'),(82,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:13:05'),(83,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 08:17:03'),(84,'123.121.196.16','http://www.eleword.net:80/news/12.htm','2014-04-26 08:17:08'),(85,'123.121.196.16','http://www.eleword.net:80/news/12.htm','2014-04-26 08:17:09'),(86,'123.121.196.16','http://www.eleword.net:80/article/34.htm','2014-04-26 08:21:12'),(87,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:21:18'),(88,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:22:16'),(89,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 08:24:30'),(90,'123.121.196.16','http://www.eleword.net:80/news/13.htm','2014-04-26 08:24:33'),(91,'123.121.196.16','http://www.eleword.net:80/aboutme.htm','2014-04-26 08:25:42'),(92,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:25:44'),(93,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 08:34:44'),(94,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:34:56'),(95,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 08:34:56'),(96,'123.121.196.16','http://www.eleword.net:80/news/14.htm','2014-04-26 08:35:10'),(97,'112.90.78.22','http://www.eleword.net:80/index.htm','2014-04-26 08:48:55'),(98,'115.236.159.162','http://www.eleword.net:80/index.htm','2014-04-26 08:48:55'),(99,'119.147.146.193','http://www.eleword.net:80/index.htm','2014-04-26 08:48:55'),(100,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 09:00:24'),(101,'123.121.196.16','http://www.eleword.net:80/news/15.htm','2014-04-26 09:00:28'),(102,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 09:02:00'),(103,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 09:02:02'),(104,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 09:09:07'),(105,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 09:09:11'),(106,'123.121.196.16','http://www.eleword.net:80/news/16.htm','2014-04-26 09:09:13'),(107,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 09:13:18'),(108,'123.121.196.16','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-04-26 09:13:25'),(109,'123.121.196.16','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-04-26 09:13:26'),(110,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-26 09:21:01'),(111,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-26 09:21:47'),(112,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 09:22:41'),(113,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-26 09:22:44'),(114,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-26 09:24:01'),(115,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-26 10:30:10'),(116,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 10:30:12'),(117,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 10:30:13'),(118,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 10:34:23'),(119,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 10:34:28'),(120,'123.121.196.16','http://www.eleword.net:80/news/15.htm','2014-04-26 10:34:33'),(121,'123.121.196.16','http://www.eleword.net:80/category/5.htm','2014-04-26 10:34:50'),(122,'66.249.79.150','http://www.eleword.net:80/article/24.htm','2014-04-26 10:48:47'),(123,'66.249.79.150','http://www.eleword.net:80/category/7.htm','2014-04-26 10:53:25'),(124,'66.249.79.150','http://www.eleword.net:80/article/32.htm','2014-04-26 10:59:01'),(125,'66.249.79.150','http://www.eleword.net:80/category/8.htm','2014-04-26 11:03:43'),(126,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 11:10:19'),(127,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 11:10:21'),(128,'123.121.196.16','http://www.eleword.net:80/news/11.htm','2014-04-26 11:10:35'),(129,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-04-26 13:46:18'),(130,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 15:02:16'),(131,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 15:02:27'),(132,'123.121.196.16','http://www.eleword.net:80/news/16.htm','2014-04-26 15:02:31'),(133,'123.121.196.16','http://www.eleword.net:80/article/36.htm','2014-04-26 15:29:07'),(134,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 15:29:10'),(135,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-26 15:29:20'),(136,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 18:30:58'),(137,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 20:44:38'),(138,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-26 22:13:37'),(139,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-26 22:13:49'),(140,'123.121.196.16','http://www.eleword.net:80/news/15.htm','2014-04-26 22:14:00'),(141,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 05:24:39'),(142,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 05:24:41'),(143,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 05:24:41'),(144,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 05:24:45'),(145,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 06:16:26'),(146,'123.121.196.16','http://www.eleword.net:80/news/17.htm','2014-04-27 06:31:59'),(147,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 06:32:01'),(148,'123.121.196.16','http://www.eleword.net:80/news/18.htm','2014-04-27 06:36:56'),(149,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 06:37:03'),(150,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 06:39:51'),(151,'123.121.196.16','http://www.eleword.net:80/news/18.htm','2014-04-27 07:42:13'),(152,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 07:54:39'),(153,'123.121.196.16','http://www.eleword.net:80/news/18.htm','2014-04-27 10:33:42'),(154,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 10:35:55'),(155,'123.121.196.16','http://www.eleword.net:80/news/17.htm','2014-04-27 10:35:57'),(156,'123.121.196.16','http://www.eleword.net:80/news/16.htm','2014-04-27 10:36:33'),(157,'123.121.196.16','http://www.eleword.net:80/news/15.htm','2014-04-27 10:37:06'),(158,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 14:43:18'),(159,'123.121.196.16','http://www.eleword.net:80/article/35.htm','2014-04-27 14:43:21'),(160,'27.105.6.73','http://www.eleword.net:80/index.htm','2014-04-27 19:37:45'),(161,'123.121.196.16','http://www.eleword.net:80/index.htm','2014-04-27 19:58:42'),(162,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 20:00:31'),(163,'123.121.196.16','http://www.eleword.net:80/article/30.htm','2014-04-27 20:00:49'),(164,'123.121.196.16','http://www.eleword.net:80/news/10.htm','2014-04-27 20:01:31'),(165,'123.121.196.16','http://www.eleword.net:80/aboutme.htm','2014-04-27 20:07:47'),(166,'123.121.196.16','http://www.eleword.net:80/news/19.htm','2014-04-27 20:15:32'),(167,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 20:15:34'),(168,'123.121.196.16','http://www.eleword.net:80/news.htm','2014-04-27 20:19:14'),(169,'123.121.196.16','http://www.eleword.net:80/news/20.htm','2014-04-27 20:19:18'),(170,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-04-27 20:30:11'),(171,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-04-27 20:30:12'),(172,'93.229.212.200','http://www.eleword.net:80/index.htm','2014-04-28 06:27:54'),(173,'93.229.212.200','http://www.eleword.net:80/aboutme.htm','2014-04-28 06:28:18'),(174,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 08:35:45'),(175,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:37:15'),(176,'124.207.82.22','http://www.eleword.net:80/news/21.htm','2014-04-28 08:47:25'),(177,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:47:37'),(178,'124.207.82.22','http://www.eleword.net:80/news/22.htm','2014-04-28 08:48:50'),(179,'124.207.82.22','http://www.eleword.net:80/news/22.htm','2014-04-28 08:48:51'),(180,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:48:55'),(181,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:48:58'),(182,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:49:00'),(183,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:49:03'),(184,'124.207.82.22','http://www.eleword.net:80/news/23.htm','2014-04-28 08:50:31'),(185,'124.207.82.22','http://www.eleword.net:80/news/23.htm','2014-04-28 08:50:32'),(186,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 08:51:49'),(187,'124.207.82.22','http://www.eleword.net:80/news/24.htm','2014-04-28 08:51:50'),(188,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 08:52:13'),(189,'124.207.82.22','http://www.eleword.net:80/news/16.htm','2014-04-28 08:57:15'),(190,'42.120.74.192','http://www.eleword.net:80/index.htm','2014-04-28 09:43:25'),(191,'42.120.74.192','http://www.eleword.net:80/article/17.htm','2014-04-28 09:43:33'),(192,'42.120.74.192','http://www.eleword.net:80/category/1.htm','2014-04-28 09:43:41'),(193,'42.120.74.192','http://www.eleword.net:80/article/1.htm','2014-04-28 09:43:44'),(194,'124.207.82.22','http://www.eleword.net:80/article/17.htm','2014-04-28 09:51:52'),(195,'124.207.82.22','http://www.eleword.net:80/category/1.htm','2014-04-28 09:51:57'),(196,'124.207.82.22','http://www.eleword.net:80/article/1.htm','2014-04-28 09:52:01'),(197,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 09:52:20'),(198,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 11:10:57'),(199,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 15:15:29'),(200,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-04-28 15:15:31'),(201,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 15:18:58'),(202,'124.207.82.22','http://www.eleword.net:80/news/20.htm','2014-04-28 15:19:15'),(203,'124.207.82.22','http://www.eleword.net:80/news/24.htm','2014-04-28 15:19:41'),(204,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 15:19:44'),(205,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 15:19:49'),(206,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-04-28 15:19:52'),(207,'124.207.82.22','http://www.eleword.net:80/news/24.htm','2014-04-28 15:19:56'),(208,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 16:07:31'),(209,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-04-28 16:08:21'),(210,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-04-28 16:08:59'),(211,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-04-28 16:09:42'),(212,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 16:09:50'),(213,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 16:09:54'),(214,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-28 16:10:12'),(215,'124.207.82.22','http://www.eleword.net:80/category/12.htm','2014-04-28 16:10:14'),(216,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-04-28 16:13:13'),(217,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 16:59:06'),(218,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-28 17:20:08'),(219,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-28 18:45:43'),(220,'123.121.207.46','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-04-28 18:45:55'),(221,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-28 20:51:28'),(222,'123.121.207.46','http://www.eleword.net:80/article/37.htm','2014-04-28 21:20:25'),(223,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-29 05:35:40'),(224,'110.75.105.47','http://www.eleword.net:80/article/17.htm','2014-04-29 08:58:42'),(225,'110.75.105.47','http://www.eleword.net:80/index.htm','2014-04-29 08:58:45'),(226,'110.75.216.253','http://www.eleword.net:80/article/1.htm','2014-04-29 08:59:28'),(227,'110.75.105.155','http://www.eleword.net:80/index.htm','2014-04-29 09:12:14'),(228,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-29 09:53:15'),(229,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-29 09:53:18'),(230,'124.207.82.22','http://www.eleword.net:80/news/24.htm','2014-04-29 09:53:22'),(231,'124.207.82.22','http://www.eleword.net:80/article/35.htm','2014-04-29 10:00:15'),(232,'203.208.60.88','http://www.eleword.net:80/article/28.htm','2014-04-29 11:02:57'),(233,'110.75.105.216','http://www.eleword.net:80/article/17.htm','2014-04-29 12:11:15'),(234,'110.75.105.198','http://www.eleword.net:80/article/1.htm','2014-04-29 17:58:36'),(235,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-29 18:58:25'),(236,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-29 19:13:13'),(237,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 05:50:26'),(238,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 05:50:33'),(239,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:12:00'),(240,'123.121.207.46','http://www.eleword.net:80/news/25.htm','2014-04-30 06:12:01'),(241,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:15:17'),(242,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:15:45'),(243,'123.121.207.46','http://www.eleword.net:80/news/26.htm','2014-04-30 06:15:47'),(244,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:18:42'),(245,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:20:45'),(246,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 06:20:52'),(247,'123.121.207.46','http://www.eleword.net:80/news/28.htm','2014-04-30 06:20:54'),(248,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:24:24'),(249,'123.121.207.46','http://www.eleword.net:80/news/29.htm','2014-04-30 06:24:25'),(250,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:27:01'),(251,'123.121.207.46','http://www.eleword.net:80/news/30.htm','2014-04-30 06:27:02'),(252,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:28:34'),(253,'123.121.207.46','http://www.eleword.net:80/news/31.htm','2014-04-30 06:28:36'),(254,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:30:53'),(255,'123.121.207.46','http://www.eleword.net:80/news/32.htm','2014-04-30 06:30:58'),(256,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 06:32:15'),(257,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:32:16'),(258,'123.121.207.46','http://www.eleword.net:80/news/33.htm','2014-04-30 06:32:21'),(259,'123.121.207.46','http://www.eleword.net:80/news/33.htm','2014-04-30 06:32:50'),(260,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:32:57'),(261,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:34:42'),(262,'123.121.207.46','http://www.eleword.net:80/news/34.htm','2014-04-30 06:34:44'),(263,'123.121.207.46','http://www.eleword.net:80/news/34.htm','2014-04-30 06:35:00'),(264,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 06:35:12'),(265,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:39:42'),(266,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:39:48'),(267,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:39:51'),(268,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:46:43'),(269,'123.121.207.46','http://www.eleword.net:80/news/35.htm','2014-04-30 06:46:45'),(270,'123.121.207.46','http://www.eleword.net:80/news/35.htm','2014-04-30 06:47:08'),(271,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:49:45'),(272,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 06:50:45'),(273,'123.121.207.46','http://www.eleword.net:80/news/36.htm','2014-04-30 06:50:46'),(274,'123.121.207.46','http://www.eleword.net:80/news/36.htm','2014-04-30 06:51:20'),(275,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 06:51:50'),(276,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 08:43:15'),(277,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-30 08:43:18'),(278,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-30 09:14:42'),(279,'124.207.82.22','http://www.eleword.net:80/news/36.htm','2014-04-30 09:14:44'),(280,'124.207.82.22','http://www.eleword.net:80/news/35.htm','2014-04-30 09:52:00'),(281,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 12:21:44'),(282,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-04-30 12:25:09'),(283,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-04-30 12:25:10'),(284,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-30 12:25:11'),(285,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 12:36:06'),(286,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-30 12:36:09'),(287,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 12:36:42'),(288,'203.30.252.5','http://www.eleword.net:80/index.htm','2014-04-30 14:35:10'),(289,'203.30.252.5','http://www.eleword.net:80/aboutme.htm','2014-04-30 14:35:18'),(290,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 15:22:01'),(291,'124.207.82.22','http://www.eleword.net:80/article/38.htm','2014-04-30 16:03:38'),(292,'124.207.82.22','http://www.eleword.net:80/article/38.htm','2014-04-30 16:03:40'),(293,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 16:03:49'),(294,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-04-30 17:19:16'),(295,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-30 17:19:19'),(296,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-04-30 17:19:20'),(297,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 19:36:23'),(298,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-04-30 19:37:24'),(299,'123.121.207.46','http://www.eleword.net:80/news/36.htm','2014-04-30 19:38:19'),(300,'123.121.207.46','http://www.eleword.net:80/news/35.htm','2014-04-30 19:38:33'),(301,'123.121.207.46','http://www.eleword.net:80/aboutme.htm','2014-04-30 19:38:52'),(302,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 19:43:56'),(303,'66.249.65.150','http://www.eleword.net:80/index.htm','2014-04-30 21:28:50'),(304,'66.249.65.150','http://www.eleword.net:80/news.htm','2014-04-30 21:38:52'),(305,'180.172.53.68','http://www.eleword.net:80/index.htm','2014-04-30 22:05:10'),(306,'180.172.53.68','http://www.eleword.net:80/category/2.htm','2014-04-30 22:05:17'),(307,'66.249.65.182','http://www.eleword.net:80/article/38.htm','2014-04-30 22:43:45'),(308,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-04-30 22:49:58'),(309,'123.121.207.46','http://www.eleword.net:80/aboutme.htm','2014-04-30 22:54:13'),(310,'66.249.65.150','http://www.eleword.net:80/category/1.htm','2014-05-01 01:38:39'),(311,'66.249.65.150','http://www.eleword.net:80/article/22.htm','2014-05-01 01:53:47'),(312,'66.249.65.214','http://www.eleword.net:80/article/36.htm','2014-05-01 03:09:04'),(313,'66.249.65.118','http://www.eleword.net:80/article/23.htm','2014-05-01 03:19:11'),(314,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-05-01 03:28:57'),(315,'66.249.65.182','http://www.eleword.net:80/article/30.htm','2014-05-01 03:33:57'),(316,'66.249.65.118','http://www.eleword.net:80/category/6.htm','2014-05-01 03:47:19'),(317,'66.249.65.150','http://www.eleword.net:80/article/37.htm','2014-05-01 04:01:36'),(318,'66.249.65.118','http://www.eleword.net:80/article/25.htm','2014-05-01 04:08:46'),(319,'66.249.65.182','http://www.eleword.net:80/article/18.htm','2014-05-01 04:23:35'),(320,'66.249.65.150','http://www.eleword.net:80/article/21.htm','2014-05-01 04:43:15'),(321,'66.249.65.150','http://www.eleword.net:80/category/14.htm','2014-05-01 04:49:07'),(322,'66.249.65.118','http://www.eleword.net:80/article/1.htm','2014-05-01 04:58:48'),(323,'66.249.65.118','http://www.eleword.net:80/article/33.htm','2014-05-01 05:03:51'),(324,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-05-01 05:06:05'),(325,'66.249.65.214','http://www.eleword.net:80/category/11.htm','2014-05-01 05:53:53'),(326,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-05-01 06:03:32'),(327,'123.121.207.46','http://www.eleword.net:80/go.htm','2014-05-01 06:03:37'),(328,'123.121.207.46','http://www.eleword.net:80/search.htm','2014-05-01 06:03:42'),(329,'123.121.207.46','http://www.eleword.net:80/go.htm','2014-05-01 06:03:48'),(330,'123.121.207.46','http://www.eleword.net:80/go.htm','2014-05-01 06:04:32'),(331,'123.121.207.46','http://www.eleword.net:80/search.htm','2014-05-01 06:06:13'),(332,'123.121.207.46','http://www.eleword.net:80/category/1.htm','2014-05-01 06:06:18'),(333,'123.121.207.46','http://www.eleword.net:80/article/1.htm','2014-05-01 06:06:20'),(334,'123.121.207.46','http://www.eleword.net:80/search.htm','2014-05-01 06:06:24'),(335,'123.121.207.46','http://www.eleword.net:80/aboutme.htm','2014-05-01 06:06:34'),(336,'123.121.207.46','http://www.eleword.net:80/search.htm','2014-05-01 06:06:51'),(337,'123.121.207.46','http://www.eleword.net:80/article/36.htm','2014-05-01 06:13:01'),(338,'123.121.207.46','http://www.eleword.net:80/search.htm','2014-05-01 06:13:05'),(339,'123.121.207.46','http://www.eleword.net:80/article/30.htm','2014-05-01 06:13:19'),(340,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-05-01 06:48:06'),(341,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-05-01 06:48:08'),(342,'123.121.207.46','http://www.eleword.net:80/news/37.htm','2014-05-01 06:48:09'),(343,'66.249.65.214','http://www.eleword.net:80/article/34.htm','2014-05-01 06:52:20'),(344,'123.121.207.46','http://www.eleword.net:80/news/38.htm','2014-05-01 06:52:28'),(345,'123.121.207.46','http://www.eleword.net:80/news/38.htm','2014-05-01 06:52:30'),(346,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-05-01 06:52:35'),(347,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-05-01 06:52:40'),(348,'123.121.207.46','http://www.eleword.net:80/news/39.htm','2014-05-01 06:57:34'),(349,'123.121.207.46','http://www.eleword.net:80/news/39.htm','2014-05-01 06:57:36'),(350,'123.121.207.46','http://www.eleword.net:80/news.htm','2014-05-01 06:57:42'),(351,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-05-01 06:57:51'),(352,'123.121.207.46','http://www.eleword.net:80/article/39.htm','2014-05-01 06:59:48'),(353,'123.121.207.46','http://www.eleword.net:80/index.htm','2014-05-01 06:59:51'),(354,'123.121.207.46','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-01 06:59:54'),(355,'66.249.65.214','http://www.eleword.net:80/article/26.htm','2014-05-01 07:19:00'),(356,'66.249.65.150','http://www.eleword.net:80/article/39.htm','2014-05-01 07:37:45'),(357,'66.249.65.182','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-01 07:43:38'),(358,'66.249.65.214','http://www.eleword.net:80/category/4.htm','2014-05-01 07:55:56'),(359,'66.249.65.182','http://www.eleword.net:80/article/8.htm','2014-05-01 08:27:28'),(360,'66.249.65.214','http://www.eleword.net:80/article/29.htm','2014-05-01 08:55:13'),(361,'66.249.65.214','http://www.eleword.net:80/article/20.htm','2014-05-01 09:30:58'),(362,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 10:24:45'),(363,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-01 10:24:56'),(364,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-01 10:25:04'),(365,'221.220.202.189','http://www.eleword.net:80/article/24.htm','2014-05-01 10:25:16'),(366,'66.249.65.182','http://www.eleword.net:80/category/9.htm','2014-05-01 10:26:28'),(367,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-01 10:26:31'),(368,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 10:26:32'),(369,'221.220.202.189','http://www.eleword.net:80/news/40.htm','2014-05-01 11:05:01'),(370,'221.220.202.189','http://www.eleword.net:80/news/40.htm','2014-05-01 11:05:04'),(371,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:07:39'),(372,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:07:41'),(373,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:07:43'),(374,'221.220.202.189','http://www.eleword.net:80/news/40.htm','2014-05-01 11:07:50'),(375,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:07:51'),(376,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:12:51'),(377,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:13:46'),(378,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:14:26'),(379,'221.220.202.189','http://www.eleword.net:80/article/39.htm','2014-05-01 11:14:27'),(380,'221.220.202.189','http://www.eleword.net:80/article/39.htm','2014-05-01 11:14:29'),(381,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:22:15'),(382,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:22:23'),(383,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:24:09'),(384,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-01 11:26:01'),(385,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-01 11:26:09'),(386,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:01'),(387,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:02'),(388,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:02'),(389,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:03'),(390,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:03'),(391,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:04'),(392,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:05'),(393,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:05'),(394,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:07'),(395,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:08'),(396,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:31:08'),(397,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:32:41'),(398,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:32:44'),(399,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:34:41'),(400,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:37:12'),(401,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:45:35'),(402,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:45:37'),(403,'221.220.202.189','http://www.eleword.net:80/news/41.htm','2014-05-01 11:45:41'),(404,'221.220.202.189','http://www.eleword.net:80/news/41.htm','2014-05-01 11:45:42'),(405,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:47:17'),(406,'221.220.202.189','http://www.eleword.net:80/news/42.htm','2014-05-01 11:47:18'),(407,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:47:23'),(408,'66.249.65.150','http://www.eleword.net:80/category/12.htm','2014-05-01 11:52:14'),(409,'221.220.202.189','http://www.eleword.net:80/news/43.htm','2014-05-01 11:55:11'),(410,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 11:55:19'),(411,'221.220.202.189','http://www.eleword.net:80/news/44.htm','2014-05-01 11:58:27'),(412,'221.220.202.189','http://www.eleword.net:80/news/44.htm','2014-05-01 11:58:28'),(413,'221.220.202.189','http://www.eleword.net:80/news/44.htm','2014-05-01 11:58:36'),(414,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:58:41'),(415,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 11:59:01'),(416,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 12:28:16'),(417,'221.220.202.189','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-01 12:28:23'),(418,'221.220.202.189','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-01 12:28:26'),(419,'221.220.202.189','http://www.eleword.net:80/article/37.htm','2014-05-01 12:28:28'),(420,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-01 12:29:16'),(421,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-01 12:29:19'),(422,'221.220.202.189','http://www.eleword.net:80/article/1.htm','2014-05-01 12:29:25'),(423,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-01 12:31:57'),(424,'66.249.65.182','http://www.eleword.net:80/category/5.htm','2014-05-01 12:50:16'),(425,'66.249.65.182','http://www.eleword.net:80/article/9.htm','2014-05-01 12:58:12'),(426,'66.249.65.150','http://www.eleword.net:80/article/19.htm','2014-05-01 13:08:50'),(427,'66.249.65.182','http://www.eleword.net:80/article/27.htm','2014-05-01 13:13:20'),(428,'66.249.65.182','http://www.eleword.net:80/index.htm','2014-05-01 14:47:10'),(429,'66.249.65.150','http://www.eleword.net:80/go.htm','2014-05-01 17:53:33'),(430,'66.249.65.118','http://www.eleword.net:80/news/36.htm','2014-05-01 18:04:08'),(431,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 18:09:18'),(432,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-01 18:09:40'),(433,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-01 18:09:55'),(434,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-01 18:09:57'),(435,'66.249.65.118','http://www.eleword.net:80/news/33.htm','2014-05-01 18:13:03'),(436,'66.249.65.150','http://www.eleword.net:80/news/16.htm','2014-05-01 18:23:20'),(437,'66.249.65.150','http://www.eleword.net:80/news/28.htm','2014-05-01 18:28:13'),(438,'66.249.65.182','http://www.eleword.net:80/news/20.htm','2014-05-01 18:33:38'),(439,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 20:40:31'),(440,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 20:40:37'),(441,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 20:50:34'),(442,'221.220.202.189','http://www.eleword.net:80/category/11.htm','2014-05-01 20:50:45'),(443,'221.220.202.189','http://www.eleword.net:80/category/11.htm','2014-05-01 20:50:47'),(444,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-01 20:50:56'),(445,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-01 20:51:02'),(446,'221.220.202.189','http://www.eleword.net:80/article/8.htm','2014-05-01 20:51:13'),(447,'221.220.202.189','http://www.eleword.net:80/article/37.htm','2014-05-01 20:51:28'),(448,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-01 20:51:47'),(449,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 20:52:01'),(450,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-01 23:49:40'),(451,'66.249.64.220','http://www.eleword.net:80/xzqtzyuxnslwgq.html','2014-05-02 00:12:55'),(452,'66.249.64.220','http://www.eleword.net:80/news/26.htm','2014-05-02 02:03:38'),(453,'66.249.64.220','http://www.eleword.net:80/news/29.htm','2014-05-02 02:08:34'),(454,'66.249.64.220','http://www.eleword.net:80/news/31.htm','2014-05-02 02:13:29'),(455,'66.249.64.220','http://www.eleword.net:80/news/23.htm','2014-05-02 07:16:58'),(456,'66.249.64.225','http://www.eleword.net:80/news/18.htm','2014-05-02 07:17:22'),(457,'66.249.64.220','http://www.eleword.net:80/article/33.htm','2014-05-02 07:17:47'),(458,'66.249.64.225','http://www.eleword.net:80/news/34.htm','2014-05-02 08:14:59'),(459,'66.249.64.220','http://www.eleword.net:80/article/17.htm','2014-05-02 08:15:24'),(460,'66.249.64.230','http://www.eleword.net:80/news.htm','2014-05-02 08:15:48'),(461,'66.249.64.225','http://www.eleword.net:80/news.htm','2014-05-02 08:16:13'),(462,'66.249.64.225','http://www.eleword.net:80/news/7.htm','2014-05-02 08:23:34'),(463,'66.249.64.225','http://www.eleword.net:80/news/3.htm','2014-05-02 08:27:39'),(464,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-02 08:28:40'),(465,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-02 08:28:41'),(466,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-02 08:28:55'),(467,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-02 08:29:18'),(468,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-02 08:29:34'),(469,'66.249.64.220','http://www.eleword.net:80/news/5.htm','2014-05-02 08:33:22'),(470,'66.249.64.225','http://www.eleword.net:80/news/8.htm','2014-05-02 08:38:18'),(471,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-02 08:39:39'),(472,'66.249.64.230','http://www.eleword.net:80/news/6.htm','2014-05-02 08:48:09'),(473,'66.249.64.230','http://www.eleword.net:80/news/9.htm','2014-05-02 08:53:28'),(474,'66.249.64.230','http://www.eleword.net:80/news/1.htm','2014-05-02 08:59:04'),(475,'66.249.64.225','http://www.eleword.net:80/news/4.htm','2014-05-02 09:13:11'),(476,'66.249.64.230','http://www.eleword.net:80/news/15.htm','2014-05-02 09:23:47'),(477,'66.249.64.225','http://www.eleword.net:80/news/25.htm','2014-05-02 09:27:16'),(478,'66.249.64.225','http://www.eleword.net:80/news/24.htm','2014-05-02 09:27:52'),(479,'66.249.64.225','http://www.eleword.net:80/article/31.htm','2014-05-02 09:28:29'),(480,'66.249.64.220','http://www.eleword.net:80/news/14.htm','2014-05-02 09:28:30'),(481,'66.249.64.230','http://www.eleword.net:80/article/25.htm','2014-05-02 09:29:04'),(482,'66.249.64.220','http://www.eleword.net:80/news/11.htm','2014-05-02 09:34:01'),(483,'66.249.64.230','http://www.eleword.net:80/news/10.htm','2014-05-02 09:39:01'),(484,'66.249.64.225','http://www.eleword.net:80/news/13.htm','2014-05-02 09:43:19'),(485,'66.249.64.230','http://www.eleword.net:80/news/12.htm','2014-05-02 09:48:30'),(486,'66.249.64.225','http://www.eleword.net:80/news.htm','2014-05-02 09:53:43'),(487,'66.249.64.225','http://www.eleword.net:80/news/27.htm','2014-05-02 10:39:52'),(488,'66.249.64.220','http://www.eleword.net:80/article/16.htm','2014-05-02 10:40:09'),(489,'66.249.64.220','http://www.eleword.net:80/news/30.htm','2014-05-02 10:40:37'),(490,'66.249.64.205','http://www.eleword.net:80/category/6.htm','2014-05-02 10:41:14'),(491,'66.249.64.225','http://www.eleword.net:80/category/13.htm','2014-05-02 12:13:25'),(492,'66.249.64.230','http://www.eleword.net:80/category/2.htm','2014-05-02 12:14:06'),(493,'66.249.64.230','http://www.eleword.net:80/news/17.htm','2014-05-02 12:14:47'),(494,'66.249.64.220','http://www.eleword.net:80/category/7.htm','2014-05-02 12:15:30'),(495,'66.249.64.230','http://www.eleword.net:80/article/4.htm','2014-05-02 12:49:01'),(496,'66.249.64.225','http://www.eleword.net:80/article/15.htm','2014-05-02 13:48:15'),(497,'66.249.64.230','http://www.eleword.net:80/article/3.htm','2014-05-02 13:48:56'),(498,'66.249.64.225','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-02 13:49:07'),(499,'66.249.64.230','http://www.eleword.net:80/news/32.htm','2014-05-02 13:49:39'),(500,'66.249.64.230','http://www.eleword.net:80/article/28.htm','2014-05-02 13:50:21'),(501,'66.249.64.225','http://www.eleword.net:80/news/21.htm','2014-05-02 14:20:25'),(502,'66.249.64.230','http://www.eleword.net:80/category/11.htm','2014-05-02 14:21:02'),(503,'66.249.64.225','http://www.eleword.net:80/news/22.htm','2014-05-02 14:21:44'),(504,'66.249.64.220','http://www.eleword.net:80/article/5.htm','2014-05-02 14:52:03'),(505,'66.249.64.225','http://www.eleword.net:80/article/2.htm','2014-05-02 14:58:23'),(506,'66.249.64.220','http://www.eleword.net:80/category/9.htm','2014-05-02 14:59:06'),(507,'66.249.64.220','http://www.eleword.net:80/news/35.htm','2014-05-02 14:59:34'),(508,'66.249.64.220','http://www.eleword.net:80/article/11.htm','2014-05-02 15:03:36'),(509,'66.249.64.210','http://www.eleword.net:80/article/12.htm','2014-05-02 15:08:32'),(510,'66.249.64.210','http://www.eleword.net:80/article/13.htm','2014-05-02 15:13:33'),(511,'66.249.64.215','http://www.eleword.net:80/article/10.htm','2014-05-02 15:18:30'),(512,'66.249.64.220','http://www.eleword.net:80/article/19.htm','2014-05-02 15:18:43'),(513,'66.249.64.220','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-02 15:28:30'),(514,'66.249.64.230','http://www.eleword.net:80/aboutme.htm','2014-05-02 15:43:31'),(515,'66.249.64.225','http://www.eleword.net:80/news/19.htm','2014-05-02 15:53:26'),(516,'66.249.64.220','http://www.eleword.net:80/news/25.htm','2014-05-02 15:58:41'),(517,'66.249.64.230','http://www.eleword.net:80/article/24.htm','2014-05-02 16:02:53'),(518,'66.249.64.225','http://www.eleword.net:80/article/6.htm','2014-05-02 16:24:31'),(519,'66.249.64.225','http://www.eleword.net:80/article/7.htm','2014-05-02 16:33:45'),(520,'66.249.64.220','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-02 16:48:30'),(521,'66.249.64.230','http://www.eleword.net:80/article/40.htm','2014-05-02 16:53:29'),(522,'66.249.64.230','http://www.eleword.net:80/category/15.htm','2014-05-02 16:58:33'),(523,'66.249.67.118','http://www.eleword.net:80/news/2.htm','2014-05-02 19:03:43'),(524,'66.249.67.118','http://www.eleword.net:80/news/44.htm','2014-05-02 19:08:31'),(525,'66.249.67.150','http://www.eleword.net:80/news/43.htm','2014-05-02 19:13:28'),(526,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-02 20:02:22'),(527,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-02 20:02:26'),(528,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-02 20:02:29'),(529,'221.220.202.189','http://www.eleword.net:80/search.htm','2014-05-02 20:02:32'),(530,'221.220.202.189','http://www.eleword.net:80/article/8.htm','2014-05-02 20:02:34'),(531,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-02 20:02:43'),(532,'221.220.202.189','http://www.eleword.net:80/article/35.htm','2014-05-02 20:03:16'),(533,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-02 20:07:02'),(534,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-02 20:07:05'),(535,'221.220.202.189','http://www.eleword.net:80/article/40.htm','2014-05-02 20:07:08'),(536,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-02 20:10:09'),(537,'220.181.132.216','http://www.eleword.net:80/index.htm','2014-05-02 20:12:00'),(538,'220.181.132.16','http://www.eleword.net:80/index.htm','2014-05-02 20:12:06'),(539,'220.181.132.197','http://www.eleword.net:80/index.htm','2014-05-02 20:12:54'),(540,'221.220.202.189','http://www.eleword.net:80/category/1.htm','2014-05-02 20:19:14'),(541,'221.220.202.189','http://www.eleword.net:80/article/1.htm','2014-05-02 20:19:15'),(542,'221.220.202.189','http://www.eleword.net:80/category/15.htm','2014-05-02 20:30:00'),(543,'221.220.202.189','http://www.eleword.net:80/article/39.htm','2014-05-02 20:30:01'),(544,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-02 21:21:58'),(545,'66.249.67.118','http://www.eleword.net:80/article/35.htm','2014-05-02 22:44:51'),(546,'101.199.108.54','http://www.eleword.net:80/index.htm','2014-05-02 23:07:47'),(547,'106.120.160.119','http://www.eleword.net:80/index.htm','2014-05-02 23:09:00'),(548,'101.199.112.53','http://www.eleword.net:80/index.htm','2014-05-02 23:09:23'),(549,'66.249.67.118','http://www.eleword.net:80/news/38.htm','2014-05-03 01:27:03'),(550,'66.249.67.182','http://www.eleword.net:80/news/11.htm','2014-05-03 01:27:17'),(551,'66.249.67.182','http://www.eleword.net:80/index.htm','2014-05-03 01:57:07'),(552,'66.249.67.150','http://www.eleword.net:80/news/42.htm','2014-05-03 01:58:43'),(553,'66.249.67.118','http://www.eleword.net:80/news/40.htm','2014-05-03 02:03:42'),(554,'66.249.67.182','http://www.eleword.net:80/news/13.htm','2014-05-03 02:09:35'),(555,'66.249.67.118','http://www.eleword.net:80/news/1.htm','2014-05-03 02:17:37'),(556,'66.249.67.150','http://www.eleword.net:80/article/11.htm','2014-05-03 02:45:59'),(557,'66.249.67.118','http://www.eleword.net:80/category/15.htm','2014-05-03 03:36:05'),(558,'66.249.67.118','http://www.eleword.net:80/news/6.htm','2014-05-03 03:36:19'),(559,'66.249.67.182','http://www.eleword.net:80/article/40.htm','2014-05-03 04:43:12'),(560,'66.249.67.150','http://www.eleword.net:80/news.htm','2014-05-03 04:43:26'),(561,'66.249.67.118','http://www.eleword.net:80/article/31.htm','2014-05-03 05:21:29'),(562,'66.249.67.182','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-03 06:11:07'),(563,'66.249.67.150','http://www.eleword.net:80/category/3.htm','2014-05-03 06:12:46'),(564,'66.249.67.118','http://www.eleword.net:80/article/5.htm','2014-05-03 06:18:26'),(565,'66.249.67.150','http://www.eleword.net:80/category/11.htm','2014-05-03 06:20:48'),(566,'66.249.67.150','http://www.eleword.net:80/article/3.htm','2014-05-03 06:37:49'),(567,'66.249.67.150','http://www.eleword.net:80/news/39.htm','2014-05-03 07:09:30'),(568,'66.249.67.150','http://www.eleword.net:80/news/37.htm','2014-05-03 07:15:09'),(569,'66.249.67.118','http://www.eleword.net:80/category/10.htm','2014-05-03 07:15:24'),(570,'66.249.67.182','http://www.eleword.net:80/article/12.htm','2014-05-03 07:34:33'),(571,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-03 07:52:52'),(572,'221.220.202.189','http://www.eleword.net:80/article/40.htm','2014-05-03 07:52:55'),(573,'66.249.67.182','http://www.eleword.net:80/news/41.htm','2014-05-03 08:10:14'),(574,'66.249.67.118','http://www.eleword.net:80/article/28.htm','2014-05-03 08:10:28'),(575,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-03 08:24:34'),(576,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-03 08:24:37'),(577,'221.220.202.189','http://www.eleword.net:80/news/39.htm','2014-05-03 08:24:58'),(578,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-03 08:25:20'),(579,'221.220.202.189','http://www.eleword.net:80/news.htm','2014-05-03 08:25:23'),(580,'221.220.202.189','http://www.eleword.net:80/article/36.htm','2014-05-03 08:46:07'),(581,'221.220.202.189','http://www.eleword.net:80/news/39.htm','2014-05-03 08:48:43'),(582,'221.220.202.189','http://www.eleword.net:80/go.htm','2014-05-03 08:48:48'),(583,'221.220.202.189','http://www.eleword.net:80/aboutme.htm','2014-05-03 08:48:49'),(584,'221.220.202.189','http://www.eleword.net:80/index.htm','2014-05-03 08:48:52'),(585,'66.249.67.118','http://www.eleword.net:80/news.htm','2014-05-03 09:07:39'),(586,'66.249.67.118','http://www.eleword.net:80/category/7.htm','2014-05-03 10:23:46'),(587,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-03 11:19:17'),(588,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-03 11:19:22'),(589,'123.121.221.45','http://www.eleword.net:80/article/33.htm','2014-05-03 11:19:26'),(590,'66.249.67.150','http://www.eleword.net:80/article/24.htm','2014-05-03 11:44:49'),(591,'204.236.226.210','http://www.eleword.net:80/index.htm','2014-05-03 12:32:50'),(592,'204.236.226.210','http://www.eleword.net:80/aboutme.htm','2014-05-03 12:33:27'),(593,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-03 12:54:31'),(594,'66.249.67.182','http://www.eleword.net:80/index.htm','2014-05-03 13:00:41'),(595,'66.249.67.118','http://www.eleword.net:80/index.htm','2014-05-03 13:08:30'),(596,'123.121.221.45','http://www.eleword.net:80/category/7.htm','2014-05-03 13:09:57'),(597,'123.121.221.45','http://www.eleword.net:80/article/17.htm','2014-05-03 13:10:00'),(598,'66.249.67.150','http://www.eleword.net:80/index.htm','2014-05-03 14:14:05'),(599,'66.249.67.182','http://www.eleword.net:80/aboutme.htm','2014-05-03 15:04:55'),(600,'66.249.67.150','http://www.eleword.net:80/category/6.htm','2014-05-03 16:11:12'),(601,'66.249.67.150','http://www.eleword.net:80/article/19.htm','2014-05-03 17:27:37'),(602,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-03 20:07:26'),(603,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-03 20:32:26'),(604,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-03 20:32:26'),(605,'101.226.33.224','http://www.eleword.net:80/index.htm','2014-05-03 20:59:28'),(606,'66.249.73.141','http://www.eleword.net:80/news.htm','2014-05-04 07:19:56'),(607,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 08:24:30'),(608,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-04 08:24:42'),(609,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-04 08:24:48'),(610,'66.249.73.140','http://www.eleword.net:80/category/6.htm','2014-05-04 08:26:48'),(611,'124.207.82.22','http://www.eleword.net:80/news/45.htm','2014-05-04 08:37:13'),(612,'124.207.82.22','http://www.eleword.net:80/news/45.htm','2014-05-04 08:37:15'),(613,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 08:37:17'),(614,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 08:37:18'),(615,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 08:37:19'),(616,'124.207.82.22','http://www.eleword.net:80/article/31.htm','2014-05-04 08:59:21'),(617,'124.207.82.22','http://www.eleword.net:80/category/15.htm','2014-05-04 08:59:38'),(618,'124.207.82.22','http://www.eleword.net:80/article/39.htm','2014-05-04 08:59:39'),(619,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 09:02:17'),(620,'124.207.82.22','http://www.eleword.net:80/news/46.htm','2014-05-04 09:02:18'),(621,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 09:03:32'),(622,'124.207.82.22','http://www.eleword.net:80/news/47.htm','2014-05-04 09:03:33'),(623,'124.207.82.22','http://www.eleword.net:80/news/48.htm','2014-05-04 09:08:40'),(624,'124.207.82.22','http://www.eleword.net:80/news/49.htm','2014-05-04 09:09:59'),(625,'124.207.82.22','http://www.eleword.net:80/news/49.htm','2014-05-04 09:10:00'),(626,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 09:10:06'),(627,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 09:10:11'),(628,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 09:11:06'),(629,'124.207.82.22','http://www.eleword.net:80/news/29.htm','2014-05-04 09:19:58'),(630,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 09:23:40'),(631,'66.249.73.138','http://www.eleword.net:80/category/7.htm','2014-05-04 09:37:58'),(632,'66.249.73.143','http://www.eleword.net:80/article/24.htm','2014-05-04 10:36:47'),(633,'66.249.73.142','http://www.eleword.net:80/aboutme.htm','2014-05-04 11:35:08'),(634,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 12:22:58'),(635,'124.207.82.22','http://www.eleword.net:80/news/50.htm','2014-05-04 12:24:36'),(636,'124.207.82.22','http://www.eleword.net:80/news/50.htm','2014-05-04 12:24:38'),(637,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 12:24:46'),(638,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 12:24:49'),(639,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-04 12:24:51'),(640,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-04 12:32:36'),(641,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-05-04 12:38:06'),(642,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 12:39:03'),(643,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-04 12:39:03'),(644,'66.249.73.143','http://www.eleword.net:80/index.htm','2014-05-04 13:30:35'),(645,'66.249.73.144','http://www.eleword.net:80/article/32.htm','2014-05-04 14:16:50'),(646,'66.249.73.144','http://www.eleword.net:80/category/8.htm','2014-05-04 14:39:35'),(647,'66.249.73.138','http://www.eleword.net:80/article/33.htm','2014-05-04 15:02:24'),(648,'66.249.73.141','http://www.eleword.net:80/category/12.htm','2014-05-04 15:25:20'),(649,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-04 19:28:26'),(650,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-04 20:26:09'),(651,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-04 20:47:42'),(652,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-04 20:48:06'),(653,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-04 20:48:09'),(654,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-04 20:48:19'),(655,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-04 20:49:32'),(656,'123.121.221.45','http://www.eleword.net:80/aboutme.htm','2014-05-04 20:50:26'),(657,'123.121.221.45','http://www.eleword.net:80/category/7.htm','2014-05-04 22:07:47'),(658,'123.121.221.45','http://www.eleword.net:80/article/17.htm','2014-05-04 22:07:54'),(659,'66.249.73.137','http://www.eleword.net:80/go.htm','2014-05-04 22:52:02'),(660,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 00:11:31'),(661,'123.121.221.45','http://www.eleword.net:80/category/7.htm','2014-05-05 00:11:34'),(662,'123.121.221.45','http://www.eleword.net:80/article/17.htm','2014-05-05 00:11:37'),(663,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 05:52:52'),(664,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-05 06:47:51'),(665,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-05 06:47:51'),(666,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 06:47:54'),(667,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 06:47:58'),(668,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 06:48:05'),(669,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 06:48:13'),(670,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 06:48:19'),(671,'123.121.221.45','http://www.eleword.net:80/article/36.htm','2014-05-05 06:48:22'),(672,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 06:57:20'),(673,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 07:06:15'),(674,'123.121.221.45','http://www.eleword.net:80/article/42.htm','2014-05-05 07:06:16'),(675,'123.121.221.45','http://www.eleword.net:80/article/41.htm','2014-05-05 07:06:20'),(676,'123.121.221.45','http://www.eleword.net:80/article/41.htm','2014-05-05 07:06:22'),(677,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 07:06:26'),(678,'123.121.221.45','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-05 07:06:30'),(679,'123.121.221.45','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-05 07:06:30'),(680,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 08:41:38'),(681,'124.207.82.22','http://www.eleword.net:80/news/51.htm','2014-05-05 08:48:15'),(682,'124.207.82.22','http://www.eleword.net:80/news/52.htm','2014-05-05 08:51:11'),(683,'124.207.82.22','http://www.eleword.net:80/news/52.htm','2014-05-05 08:51:50'),(684,'124.207.82.22','http://www.eleword.net:80/news/53.htm','2014-05-05 08:52:57'),(685,'124.207.82.22','http://www.eleword.net:80/news/53.htm','2014-05-05 08:52:58'),(686,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 08:52:59'),(687,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-05 08:53:00'),(688,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-05 08:53:01'),(689,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-05 08:53:01'),(690,'124.207.82.22','http://www.eleword.net:80/news/54.htm','2014-05-05 08:57:43'),(691,'124.207.82.22','http://www.eleword.net:80/news/54.htm','2014-05-05 08:58:19'),(692,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-05 08:58:23'),(693,'124.207.82.22','http://www.eleword.net:80/news/55.htm','2014-05-05 09:01:22'),(694,'124.207.82.22','http://www.eleword.net:80/news/55.htm','2014-05-05 09:01:23'),(695,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-05 09:01:28'),(696,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 09:02:18'),(697,'124.207.82.22','http://www.eleword.net:80/article/42.htm','2014-05-05 09:02:24'),(698,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 09:02:51'),(699,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 09:04:39'),(700,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-05 09:04:39'),(701,'124.207.82.22','http://www.eleword.net:80/article/43.htm','2014-05-05 10:03:55'),(702,'124.207.82.22','http://www.eleword.net:80/article/43.htm','2014-05-05 10:04:00'),(703,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:04:02'),(704,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:04:08'),(705,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:24:07'),(706,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:24:35'),(707,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:25:26'),(708,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:26:13'),(709,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:26:24'),(710,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:26:24'),(711,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:27:04'),(712,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:27:19'),(713,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:27:25'),(714,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:27:31'),(715,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:27:47'),(716,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:27:54'),(717,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:28:04'),(718,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-05 10:29:15'),(719,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-05 10:29:16'),(720,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-05 10:29:18'),(721,'66.249.73.138','http://www.eleword.net:80/category/7.htm','2014-05-05 10:30:03'),(722,'66.249.73.143','http://www.eleword.net:80/article/42.htm','2014-05-05 10:38:27'),(723,'66.249.73.141','http://www.eleword.net:80/article/41.htm','2014-05-05 10:43:23'),(724,'124.207.82.22','http://www.eleword.net:80/news/55.htm','2014-05-05 10:46:51'),(725,'123.125.22.46','http://www.eleword.net:80/news/55.htm','2014-05-05 10:46:56'),(726,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-05 10:46:59'),(727,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:47:09'),(728,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 10:47:09'),(729,'124.207.82.22','http://www.eleword.net:80/article/40.htm','2014-05-05 10:48:01'),(730,'66.249.73.140','http://www.eleword.net:80/article/43.htm','2014-05-05 10:48:10'),(731,'66.249.73.139','http://www.eleword.net:80/index.htm','2014-05-05 11:59:19'),(732,'66.249.73.144','http://www.eleword.net:80/index.htm','2014-05-05 12:08:25'),(733,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 12:27:47'),(734,'66.249.73.143','http://www.eleword.net:80/category/3.htm','2014-05-05 13:29:44'),(735,'66.249.73.141','http://www.eleword.net:80/article/31.htm','2014-05-05 13:35:26'),(736,'66.249.73.144','http://www.eleword.net:80/article/28.htm','2014-05-05 14:30:25'),(737,'66.249.73.137','http://www.eleword.net:80/category/11.htm','2014-05-05 16:52:00'),(738,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-05 17:04:28'),(739,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 18:44:24'),(740,'123.121.221.45','http://www.eleword.net:80/article/43.htm','2014-05-05 18:46:25'),(741,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 18:48:55'),(742,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 18:48:56'),(743,'123.121.221.45','http://www.eleword.net:80/article/31.htm','2014-05-05 19:12:21'),(744,'123.121.221.45','http://www.eleword.net:80/aboutme.htm','2014-05-05 19:12:23'),(745,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-05 19:12:24'),(746,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 19:12:31'),(747,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 19:12:40'),(748,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-05 19:13:17'),(749,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-05 19:13:24'),(750,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-05 20:18:35'),(751,'123.121.221.45','http://www.eleword.net:80/article/29.htm','2014-05-05 20:19:22'),(752,'123.121.221.45','http://www.eleword.net:80/article/38.htm','2014-05-05 20:28:46'),(753,'66.249.73.143','http://www.eleword.net:80/aboutme.htm','2014-05-05 23:41:49'),(754,'58.38.12.41','http://www.eleword.net:80/article/26.htm','2014-05-06 00:31:57'),(755,'66.249.73.143','http://www.eleword.net:80/category/8.htm','2014-05-06 02:32:47'),(756,'112.90.196.36','http://www.eleword.net:80/article/26.htm','2014-05-06 07:55:54'),(757,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 08:37:54'),(758,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 08:44:32'),(759,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 08:44:33'),(760,'124.207.82.22','http://www.eleword.net:80/news/56.htm','2014-05-06 08:44:34'),(761,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 08:53:29'),(762,'124.207.82.22','http://www.eleword.net:80/news/57.htm','2014-05-06 08:53:33'),(763,'124.207.82.22','http://www.eleword.net:80/news/58.htm','2014-05-06 08:55:05'),(764,'124.207.82.22','http://www.eleword.net:80/news/58.htm','2014-05-06 08:55:08'),(765,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 08:55:10'),(766,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 08:55:10'),(767,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 08:55:11'),(768,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 08:58:18'),(769,'124.207.82.22','http://www.eleword.net:80/news/60.htm','2014-05-06 08:58:20'),(770,'124.207.82.22','http://www.eleword.net:80/news/60.htm','2014-05-06 09:00:10'),(771,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 09:00:12'),(772,'124.207.82.22','http://www.eleword.net:80/news/61.htm','2014-05-06 09:00:14'),(773,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 09:00:18'),(774,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 09:04:23'),(775,'124.207.82.22','http://www.eleword.net:80/news/62.htm','2014-05-06 09:04:32'),(776,'124.207.82.22','http://www.eleword.net:80/news/62.htm','2014-05-06 09:04:32'),(777,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 09:04:35'),(778,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 09:05:28'),(779,'124.207.82.22','http://www.eleword.net:80/article/41.htm','2014-05-06 09:05:34'),(780,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 09:05:39'),(781,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-06 09:23:06'),(782,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 12:24:43'),(783,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 12:24:46'),(784,'124.207.82.22','http://www.eleword.net:80/news/63.htm','2014-05-06 12:24:48'),(785,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-06 12:29:27'),(786,'124.207.82.22','http://www.eleword.net:80/news/64.htm','2014-05-06 12:29:29'),(787,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-06 12:33:18'),(788,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-06 12:33:19'),(789,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-06 12:33:21'),(790,'66.249.73.139','http://www.eleword.net:80/index.htm','2014-05-06 12:33:36'),(791,'124.207.82.22','http://www.eleword.net:80/article/43.htm','2014-05-06 12:36:53'),(792,'124.207.82.22','http://www.eleword.net:80/news/62.htm','2014-05-06 12:37:56'),(793,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-06 16:52:09'),(794,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-06 16:52:20'),(795,'119.147.146.195','http://www.eleword.net:80/index.htm','2014-05-06 20:02:20'),(796,'119.147.146.195','http://www.eleword.net:80/index.htm','2014-05-06 20:02:20'),(797,'180.153.206.22','http://www.eleword.net:80/index.htm','2014-05-06 20:29:47'),(798,'125.114.119.111','http://www.eleword.net:80/article/26.htm','2014-05-06 20:37:15'),(799,'101.199.112.55','http://www.eleword.net:80/index.htm','2014-05-06 20:49:02'),(800,'220.181.132.216','http://www.eleword.net:80/index.htm','2014-05-06 20:50:02'),(801,'101.199.112.49','http://www.eleword.net:80/index.htm','2014-05-06 20:50:17'),(802,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 02:09:24'),(803,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 02:09:33'),(804,'123.121.221.45','http://www.eleword.net:80/news/64.htm','2014-05-07 02:11:12'),(805,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-07 02:11:14'),(806,'123.121.221.45','http://www.eleword.net:80/aboutme.htm','2014-05-07 02:11:15'),(807,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 02:11:21'),(808,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-05-07 03:54:51'),(809,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 06:12:41'),(810,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-07 06:12:45'),(811,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-07 06:12:48'),(812,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-07 06:13:14'),(813,'123.121.221.45','http://www.eleword.net:80/article/43.htm','2014-05-07 06:13:18'),(814,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 06:44:20'),(815,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 06:49:44'),(816,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 06:49:45'),(817,'123.121.221.45','http://www.eleword.net:80/news/65.htm','2014-05-07 06:49:46'),(818,'123.121.221.45','http://www.eleword.net:80/news/66.htm','2014-05-07 06:51:02'),(819,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 06:51:05'),(820,'123.121.221.45','http://www.eleword.net:80/news/68.htm','2014-05-07 06:53:57'),(821,'123.121.221.45','http://www.eleword.net:80/news/69.htm','2014-05-07 06:55:00'),(822,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 06:55:04'),(823,'123.121.221.45','http://www.eleword.net:80/news/71.htm','2014-05-07 06:56:58'),(824,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 06:56:59'),(825,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 06:58:41'),(826,'123.121.221.45','http://www.eleword.net:80/news/73.htm','2014-05-07 06:58:43'),(827,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 06:58:49'),(828,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 06:58:54'),(829,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 07:00:02'),(830,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 07:00:03'),(831,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 07:00:04'),(832,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-07 07:00:04'),(833,'123.121.221.45','http://www.eleword.net:80/news/74.htm','2014-05-07 07:00:05'),(834,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 07:00:07'),(835,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-07 07:00:08'),(836,'117.136.38.193','http://www.eleword.net:80/index.htm','2014-05-07 07:23:57'),(837,'117.136.38.193','http://www.eleword.net:80/news.htm','2014-05-07 07:24:12'),(838,'117.136.38.193','http://www.eleword.net:80/news/72.htm','2014-05-07 07:24:25'),(839,'188.102.168.93','http://www.eleword.net:80/index.htm','2014-05-07 08:10:17'),(840,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 08:42:02'),(841,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-07 08:43:11'),(842,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-07 08:43:14'),(843,'124.207.82.22','http://www.eleword.net:80/article/7.htm','2014-05-07 08:43:18'),(844,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 08:43:34'),(845,'124.207.82.22','http://www.eleword.net:80/news/72.htm','2014-05-07 08:43:44'),(846,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 08:51:20'),(847,'124.207.82.22','http://www.eleword.net:80/news/75.htm','2014-05-07 08:51:22'),(848,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 08:53:11'),(849,'124.207.82.22','http://www.eleword.net:80/news/76.htm','2014-05-07 08:53:33'),(850,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 08:53:41'),(851,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 08:53:44'),(852,'124.207.82.22','http://www.eleword.net:80/news/77.htm','2014-05-07 09:01:30'),(853,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 09:01:33'),(854,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 09:02:34'),(855,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-07 09:02:58'),(856,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 09:05:33'),(857,'124.207.82.22','http://www.eleword.net:80/article/43.htm','2014-05-07 09:06:11'),(858,'124.207.82.22','http://www.eleword.net:80/article/23.htm','2014-05-07 09:06:33'),(859,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 09:47:47'),(860,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 09:47:56'),(861,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-07 09:47:57'),(862,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-07 09:48:00'),(863,'124.207.82.22','http://www.eleword.net:80/news/75.htm','2014-05-07 09:48:04'),(864,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 09:49:08'),(865,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 09:51:05'),(866,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 09:51:37'),(867,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 11:09:05'),(868,'124.207.82.22','http://www.eleword.net:80/article/44.htm','2014-05-07 11:10:58'),(869,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-07 11:11:05'),(870,'124.207.82.22','http://www.eleword.net:80/category/4.htm','2014-05-07 11:11:12'),(871,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-07 11:11:18'),(872,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-05-07 19:48:51'),(873,'66.249.79.118','http://www.eleword.net:80/article/44.htm','2014-05-07 22:13:35'),(874,'66.249.79.150','http://www.eleword.net:80/article/24.htm','2014-05-07 23:52:13'),(875,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 02:28:35'),(876,'123.121.221.45','http://www.eleword.net:80/article/44.htm','2014-05-08 02:29:00'),(877,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-08 02:29:08'),(878,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-08 02:29:15'),(879,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 03:48:14'),(880,'123.121.221.45','http://www.eleword.net:80/article/44.htm','2014-05-08 03:48:26'),(881,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-08 03:48:31'),(882,'123.121.221.45','http://www.eleword.net:80/go.htm','2014-05-08 03:48:38'),(883,'123.121.221.45','http://www.eleword.net:80/search.htm','2014-05-08 03:48:41'),(884,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 06:39:10'),(885,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 06:39:43'),(886,'123.121.221.45','http://www.eleword.net:80/aboutme.htm','2014-05-08 06:39:44'),(887,'123.121.221.45','http://www.eleword.net:80/aboutme.htm','2014-05-08 06:39:45'),(888,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 06:39:50'),(889,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 06:45:21'),(890,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 06:45:22'),(891,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-08 06:45:25'),(892,'123.121.221.45','http://www.eleword.net:80/news/79.htm','2014-05-08 06:45:27'),(893,'123.121.221.45','http://www.eleword.net:80/news.htm','2014-05-08 06:47:29'),(894,'123.121.221.45','http://www.eleword.net:80/news/81.htm','2014-05-08 06:47:30'),(895,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-08 06:47:34'),(896,'66.249.79.182','http://www.eleword.net:80/category/8.htm','2014-05-08 08:59:53'),(897,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-08 09:10:34'),(898,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-08 09:14:44'),(899,'124.207.82.22','http://www.eleword.net:80/category/8.htm','2014-05-08 09:15:41'),(900,'124.207.82.22','http://www.eleword.net:80/category/8.htm','2014-05-08 09:15:43'),(901,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-08 09:15:58'),(902,'124.207.82.22','http://www.eleword.net:80/article/24.htm','2014-05-08 09:16:09'),(903,'124.207.82.22','http://www.eleword.net:80/article/43.htm','2014-05-08 09:18:47'),(904,'124.207.82.22','http://www.eleword.net:80/category/15.htm','2014-05-08 09:18:48'),(905,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-05-08 09:47:19'),(906,'123.121.221.45','http://www.eleword.net:80/index.htm','2014-05-09 05:27:18'),(907,'123.121.221.45','http://www.eleword.net:80/article/44.htm','2014-05-09 05:40:25'),(908,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-09 08:33:06'),(909,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-09 08:33:08'),(910,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-09 08:33:09'),(911,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-09 08:34:03'),(912,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-09 08:35:23'),(913,'124.207.82.22','http://www.eleword.net:80/news/88.htm','2014-05-09 08:35:24'),(914,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-09 08:35:27'),(915,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-09 08:52:29'),(916,'124.207.82.22','http://www.eleword.net:80/article/42.htm','2014-05-09 08:52:45'),(917,'124.207.82.22','http://www.eleword.net:80/article/44.htm','2014-05-09 08:57:14'),(918,'180.76.5.146','http://www.eleword.net:80/index.htm','2014-05-09 09:48:30'),(919,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-09 10:57:52'),(920,'124.207.82.22','http://www.eleword.net:80/category/16.htm','2014-05-09 10:57:56'),(921,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-09 10:57:58'),(922,'124.207.82.22','http://www.eleword.net:80/news/69.htm','2014-05-09 10:58:06'),(923,'220.181.108.169','http://www.eleword.net:80/index.htm','2014-05-09 11:37:37'),(924,'66.249.79.182','http://www.eleword.net:80/article/24.htm','2014-05-09 12:33:55'),(925,'66.249.74.214','http://www.eleword.net:80/category/16.htm','2014-05-09 12:38:45'),(926,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-09 19:50:51'),(927,'123.121.211.210','http://www.eleword.net:80/article/37.htm','2014-05-09 19:52:37'),(928,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-09 22:17:10'),(929,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-09 22:17:10'),(930,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-09 23:47:04'),(931,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-09 23:47:07'),(932,'123.121.211.210','http://www.eleword.net:80/go.htm','2014-05-09 23:47:10'),(933,'123.121.211.210','http://www.eleword.net:80/article/45.htm','2014-05-09 23:50:16'),(934,'123.121.211.210','http://www.eleword.net:80/article/45.htm','2014-05-09 23:50:21'),(935,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-09 23:50:23'),(936,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-09 23:51:09'),(937,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-09 23:51:20'),(938,'123.121.211.210','http://www.eleword.net:80/aboutme.htm','2014-05-09 23:51:24'),(939,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-10 00:01:28'),(940,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-10 00:01:34'),(941,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-10 00:01:42'),(942,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-10 00:01:46'),(943,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-10 00:01:48'),(944,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-10 00:01:57'),(945,'113.111.190.121','http://www.eleword.net:80/article/26.htm','2014-05-10 00:05:33'),(946,'123.121.211.210','http://www.eleword.net:80/article/46.htm','2014-05-10 00:24:05'),(947,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 00:24:08'),(948,'162.244.13.25','http://www.eleword.net:80/article/26.htm','2014-05-10 05:40:40'),(949,'162.244.13.25','http://www.eleword.net:80/comments/26.htm','2014-05-10 05:40:44'),(950,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 06:01:18'),(951,'123.121.211.210','http://www.eleword.net:80/article/47.htm','2014-05-10 06:03:27'),(952,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 06:03:35'),(953,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 14:11:23'),(954,'123.121.211.210','http://www.eleword.net:80/article/47.htm','2014-05-10 14:16:57'),(955,'208.115.124.136','http://www.eleword.net:80/article/33.htm','2014-05-10 14:59:35'),(956,'208.115.124.136','http://www.eleword.net:80/article/22.htm','2014-05-10 14:59:35'),(957,'208.115.124.136','http://www.eleword.net:80/article/28.htm','2014-05-10 14:59:36'),(958,'208.115.124.136','http://www.eleword.net:80/article/18.htm','2014-05-10 14:59:36'),(959,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 15:36:39'),(960,'123.121.211.210','http://www.eleword.net:80/article/47.htm','2014-05-10 15:36:45'),(961,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 22:00:05'),(962,'123.121.211.210','http://www.eleword.net:80/go.htm','2014-05-10 22:02:14'),(963,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-10 22:02:16'),(964,'123.121.211.210','http://www.eleword.net:80/article/46.htm','2014-05-10 22:10:43'),(965,'123.121.211.210','http://www.eleword.net:80/category/15.htm','2014-05-10 22:10:48'),(966,'123.121.211.210','http://www.eleword.net:80/article/43.htm','2014-05-10 22:10:50'),(967,'123.121.211.210','http://www.eleword.net:80/article/47.htm','2014-05-10 22:11:09'),(968,'66.249.79.150','http://www.eleword.net:80/category/8.htm','2014-05-10 22:22:03'),(969,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-10 22:36:59'),(970,'123.121.211.210','http://www.eleword.net:80/article/47.htm','2014-05-10 22:37:13'),(971,'192.99.12.128','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-10 22:54:09'),(972,'192.99.12.128','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-10 22:54:12'),(973,'157.55.32.96','http://www.eleword.net:80/index.htm','2014-05-10 22:55:14'),(974,'66.249.79.118','http://www.eleword.net:80/article/33.htm','2014-05-10 23:04:10'),(975,'66.249.79.150','http://www.eleword.net:80/article/31.htm','2014-05-10 23:31:04'),(976,'116.193.168.26','http://www.eleword.net:80/article/26.htm','2014-05-11 00:19:21'),(977,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-11 05:34:47'),(978,'123.121.211.210','http://www.eleword.net:80/article/47.htm','2014-05-11 05:34:49'),(979,'66.249.79.182','http://www.eleword.net:80/aboutme.htm','2014-05-11 09:50:10'),(980,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-05-11 09:58:51'),(981,'66.249.79.150','http://www.eleword.net:80/article/47.htm','2014-05-11 10:03:49'),(982,'66.249.74.205','http://www.eleword.net:80/article/46.htm','2014-05-11 10:08:49'),(983,'66.249.79.118','http://www.eleword.net:80/article/45.htm','2014-05-11 10:13:50'),(984,'66.249.79.118','http://www.eleword.net:80/category/17.htm','2014-05-11 10:18:53'),(985,'66.249.79.150','http://www.eleword.net:80/category/16.htm','2014-05-11 10:23:57'),(986,'66.249.79.182','http://www.eleword.net:80/news.htm','2014-05-11 11:26:27'),(987,'66.249.79.182','http://www.eleword.net:80/news/68.htm','2014-05-11 11:33:19'),(988,'66.249.79.182','http://www.eleword.net:80/news/80.htm','2014-05-11 11:33:36'),(989,'66.249.79.118','http://www.eleword.net:80/news/73.htm','2014-05-11 11:33:55'),(990,'66.249.79.150','http://www.eleword.net:80/news/86.htm','2014-05-11 11:38:42'),(991,'66.249.79.118','http://www.eleword.net:80/news/69.htm','2014-05-11 11:43:50'),(992,'208.115.124.136','http://www.eleword.net:80/article/19.htm','2014-05-11 11:44:05'),(993,'66.249.79.118','http://www.eleword.net:80/news/85.htm','2014-05-11 11:48:49'),(994,'66.249.79.182','http://www.eleword.net:80/news/88.htm','2014-05-11 11:54:00'),(995,'66.249.79.150','http://www.eleword.net:80/news/77.htm','2014-05-11 11:58:28'),(996,'66.249.79.118','http://www.eleword.net:80/news/87.htm','2014-05-11 12:03:49'),(997,'66.249.79.182','http://www.eleword.net:80/news/83.htm','2014-05-11 12:08:50'),(998,'66.249.79.182','http://www.eleword.net:80/news/71.htm','2014-05-11 12:13:49'),(999,'66.249.79.150','http://www.eleword.net:80/news/81.htm','2014-05-11 12:18:33'),(1000,'66.249.79.150','http://www.eleword.net:80/news/82.htm','2014-05-11 12:23:51'),(1001,'66.249.79.182','http://www.eleword.net:80/news/79.htm','2014-05-11 12:28:51'),(1002,'66.249.79.150','http://www.eleword.net:80/news/84.htm','2014-05-11 12:33:46'),(1003,'66.249.79.150','http://www.eleword.net:80/news/72.htm','2014-05-11 12:38:48'),(1004,'66.249.79.150','http://www.eleword.net:80/article/26.htm','2014-05-11 12:41:08'),(1005,'66.249.79.118','http://www.eleword.net:80/news/78.htm','2014-05-11 12:43:56'),(1006,'66.249.79.182','http://www.eleword.net:80/news/70.htm','2014-05-11 12:48:41'),(1007,'66.249.79.150','http://www.eleword.net:80/news/76.htm','2014-05-11 12:53:49'),(1008,'66.249.79.150','http://www.eleword.net:80/news/74.htm','2014-05-11 12:58:25'),(1009,'66.249.79.150','http://www.eleword.net:80/news/75.htm','2014-05-11 13:03:49'),(1010,'66.249.79.150','http://www.eleword.net:80/news.htm','2014-05-11 13:08:37'),(1011,'66.249.79.182','http://www.eleword.net:80/news.htm','2014-05-11 13:13:43'),(1012,'162.244.13.25','http://www.eleword.net:80/article/22.htm','2014-05-11 13:31:56'),(1013,'162.244.13.25','http://www.eleword.net:80/comments/22.htm','2014-05-11 13:31:58'),(1014,'66.249.79.150','http://www.eleword.net:80/category/6.htm','2014-05-11 14:14:19'),(1015,'66.249.79.150','http://www.eleword.net:80/category/3.htm','2014-05-11 15:21:40'),(1016,'66.249.79.150','http://www.eleword.net:80/article/32.htm','2014-05-11 16:20:03'),(1017,'66.249.79.182','http://www.eleword.net:80/category/7.htm','2014-05-11 17:03:56'),(1018,'123.125.71.48','http://www.eleword.net:80/article/25.htm','2014-05-11 17:41:07'),(1019,'66.249.79.118','http://www.eleword.net:80/category/11.htm','2014-05-11 19:11:11'),(1020,'66.249.73.142','http://www.eleword.net:80/article/28.htm','2014-05-11 20:47:06'),(1021,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-11 20:57:46'),(1022,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-11 20:57:54'),(1023,'66.249.73.137','http://www.eleword.net:80/article/26.htm','2014-05-11 22:00:48'),(1024,'208.115.124.136','http://www.eleword.net:80/article/29.htm','2014-05-11 22:37:36'),(1025,'66.249.73.137','http://www.eleword.net:80/index.htm','2014-05-11 23:29:19'),(1026,'66.249.73.139','http://www.eleword.net:80/article/25.htm','2014-05-11 23:35:02'),(1027,'66.249.73.137','http://www.eleword.net:80/category/11.htm','2014-05-11 23:53:10'),(1028,'66.249.73.143','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-12 00:32:08'),(1029,'66.249.73.139','http://www.eleword.net:80/article/28.htm','2014-05-12 05:22:37'),(1030,'208.115.124.136','http://www.eleword.net:80/article/33.htm','2014-05-12 05:23:54'),(1031,'66.249.73.138','http://www.eleword.net:80/article/24.htm','2014-05-12 07:50:54'),(1032,'66.249.73.142','http://www.eleword.net:80/article/33.htm','2014-05-12 07:53:49'),(1033,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:30:50'),(1034,'124.207.82.22','http://www.eleword.net:80/news/90.htm','2014-05-12 08:36:48'),(1035,'124.207.82.22','http://www.eleword.net:80/news/90.htm','2014-05-12 08:37:05'),(1036,'124.207.82.22','http://www.eleword.net:80/news/90.htm','2014-05-12 08:37:06'),(1037,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:39:08'),(1038,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-12 08:39:09'),(1039,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-12 08:39:10'),(1040,'124.207.82.22','http://www.eleword.net:80/news/92.htm','2014-05-12 08:39:17'),(1041,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-12 08:41:20'),(1042,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-05-12 08:46:11'),(1043,'124.207.82.22','http://www.eleword.net:80/article/48.htm','2014-05-12 08:47:05'),(1044,'124.207.82.22','http://www.eleword.net:80/article/49.htm','2014-05-12 08:50:08'),(1045,'124.207.82.22','http://www.eleword.net:80/article/49.htm','2014-05-12 08:50:10'),(1046,'124.207.82.22','http://www.eleword.net:80/article/49.htm','2014-05-12 08:51:49'),(1047,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:51:53'),(1048,'124.207.82.22','http://www.eleword.net:80/article/48.htm','2014-05-12 08:51:58'),(1049,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:51:59'),(1050,'124.207.82.22','http://www.eleword.net:80/article/49.htm','2014-05-12 08:52:28'),(1051,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:54:06'),(1052,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-05-12 08:54:11'),(1053,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:54:15'),(1054,'124.207.82.22','http://www.eleword.net:80/article/50.htm','2014-05-12 08:54:45'),(1055,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 08:57:15'),(1056,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-12 10:15:14'),(1057,'180.76.6.20','http://www.eleword.net:80/index.htm','2014-05-12 13:07:50'),(1058,'66.249.73.137','http://www.eleword.net:80/article/32.htm','2014-05-12 13:59:51'),(1059,'157.56.93.60','http://www.eleword.net:80/index.htm','2014-05-12 14:01:17'),(1060,'66.249.73.142','http://www.eleword.net:80/article/48.htm','2014-05-12 16:33:32'),(1061,'66.249.73.138','http://www.eleword.net:80/article/50.htm','2014-05-12 16:38:40'),(1062,'66.249.73.138','http://www.eleword.net:80/article/49.htm','2014-05-12 16:43:35'),(1063,'66.249.73.141','http://www.eleword.net:80/category/9.htm','2014-05-12 17:54:34'),(1064,'123.30.135.76','http://www.eleword.net:80/article/26.htm','2014-05-12 18:10:55'),(1065,'66.249.73.139','http://www.eleword.net:80/category/1.htm','2014-05-12 18:53:14'),(1066,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-12 19:42:33'),(1067,'123.121.211.210','http://www.eleword.net:80/article/50.htm','2014-05-12 19:42:40'),(1068,'66.249.73.141','http://www.eleword.net:80/article/22.htm','2014-05-12 19:52:32'),(1069,'208.115.124.136','http://www.eleword.net:80/article/34.htm','2014-05-12 19:54:15'),(1070,'66.249.73.140','http://www.eleword.net:80/article/23.htm','2014-05-12 20:40:14'),(1071,'66.249.73.144','http://www.eleword.net:80/article/30.htm','2014-05-12 21:48:53'),(1072,'208.115.124.136','http://www.eleword.net:80/article/20.htm','2014-05-12 22:01:03'),(1073,'66.249.73.140','http://www.eleword.net:80/article/21.htm','2014-05-12 22:49:28'),(1074,'208.115.124.136','http://www.eleword.net:80/article/31.htm','2014-05-12 23:18:45'),(1075,'66.249.73.139','http://www.eleword.net:80/category/4.htm','2014-05-12 23:32:07'),(1076,'66.249.73.143','http://www.eleword.net:80/category/13.htm','2014-05-12 23:38:43'),(1077,'66.249.73.140','http://www.eleword.net:80/category/5.htm','2014-05-12 23:57:50'),(1078,'66.249.73.144','http://www.eleword.net:80/article/34.htm','2014-05-13 00:07:05'),(1079,'66.249.73.141','http://www.eleword.net:80/article/29.htm','2014-05-13 00:57:46'),(1080,'66.249.73.144','http://www.eleword.net:80/category/8.htm','2014-05-13 01:42:05'),(1081,'123.125.71.47','http://www.eleword.net:80/article/25.htm','2014-05-13 01:42:28'),(1082,'66.249.73.143','http://www.eleword.net:80/article/20.htm','2014-05-13 01:55:31'),(1083,'66.249.73.139','http://www.eleword.net:80/category/5.htm','2014-05-13 02:35:26'),(1084,'208.115.124.136','http://www.eleword.net:80/article/24.htm','2014-05-13 03:05:43'),(1085,'208.115.124.136','http://www.eleword.net:80/article/22.htm','2014-05-13 03:17:32'),(1086,'66.249.73.143','http://www.eleword.net:80/category/12.htm','2014-05-13 04:00:03'),(1087,'208.115.124.136','http://www.eleword.net:80/article/30.htm','2014-05-13 04:27:48'),(1088,'208.115.124.136, 191.185.40.126','http://www.eleword.net:80/comments/30.htm','2014-05-13 04:27:51'),(1089,'208.115.124.136','http://www.eleword.net:80/article/30.htm','2014-05-13 04:27:54'),(1090,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:05:11'),(1091,'123.121.211.210','http://www.eleword.net:80/article/51.htm','2014-05-13 05:08:01'),(1092,'123.121.211.210','http://www.eleword.net:80/article/50.htm','2014-05-13 05:08:17'),(1093,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:08:24'),(1094,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:08:26'),(1095,'123.121.211.210','http://www.eleword.net:80/article/52.htm','2014-05-13 05:10:29'),(1096,'123.121.211.210','http://www.eleword.net:80/article/52.htm','2014-05-13 05:15:12'),(1097,'123.121.211.210','http://www.eleword.net:80/article/53.htm','2014-05-13 05:34:15'),(1098,'123.121.211.210','http://www.eleword.net:80/article/53.htm','2014-05-13 05:34:17'),(1099,'123.121.211.210','http://www.eleword.net:80/article/55.htm','2014-05-13 05:41:21'),(1100,'123.121.211.210','http://www.eleword.net:80/article/55.htm','2014-05-13 05:41:27'),(1101,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:41:33'),(1102,'123.121.211.210','http://www.eleword.net:80/go.htm','2014-05-13 05:41:37'),(1103,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-13 05:41:39'),(1104,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:41:45'),(1105,'123.121.211.210','http://www.eleword.net:80/news/95.htm','2014-05-13 05:45:09'),(1106,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-13 05:46:05'),(1107,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-13 05:46:07'),(1108,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:47:15'),(1109,'123.121.211.210','http://www.eleword.net:80/news/96.htm','2014-05-13 05:51:54'),(1110,'123.121.211.210','http://www.eleword.net:80/news/97.htm','2014-05-13 05:53:28'),(1111,'123.121.211.210','http://www.eleword.net:80/news/98.htm','2014-05-13 05:55:36'),(1112,'123.121.211.210','http://www.eleword.net:80/news/99.htm','2014-05-13 05:57:11'),(1113,'123.121.211.210','http://www.eleword.net:80/news/100.htm','2014-05-13 05:58:43'),(1114,'123.121.211.210','http://www.eleword.net:80/news/100.htm','2014-05-13 05:58:44'),(1115,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:58:50'),(1116,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-13 05:58:52'),(1117,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 05:59:12'),(1118,'123.121.211.210','http://www.eleword.net:80/article/55.htm','2014-05-13 05:59:19'),(1119,'123.121.211.210','http://www.eleword.net:80/article/55.htm','2014-05-13 06:02:51'),(1120,'123.121.211.210','http://www.eleword.net:80/article/41.htm','2014-05-13 06:06:30'),(1121,'123.121.211.210','http://www.eleword.net:80/article/55.htm','2014-05-13 06:21:15'),(1122,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 06:21:16'),(1123,'123.121.211.210','http://www.eleword.net:80/article/56.htm','2014-05-13 06:21:17'),(1124,'123.121.211.210','http://www.eleword.net:80/article/56.htm','2014-05-13 06:21:19'),(1125,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 06:22:05'),(1126,'66.249.73.140','http://www.eleword.net:80/category/7.htm','2014-05-13 06:49:28'),(1127,'117.136.0.90','http://www.eleword.net:80/index.htm','2014-05-13 07:35:28'),(1128,'117.136.0.90','http://www.eleword.net:80/article/55.htm','2014-05-13 08:28:57'),(1129,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 08:33:01'),(1130,'124.207.82.22','http://www.eleword.net:80/article/56.htm','2014-05-13 08:40:07'),(1131,'124.207.82.22','http://www.eleword.net:80/article/30.htm','2014-05-13 09:06:50'),(1132,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 09:08:08'),(1133,'124.207.82.22','http://www.eleword.net:80/article/57.htm','2014-05-13 09:10:30'),(1134,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 09:10:40'),(1135,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-13 09:10:42'),(1136,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-13 09:16:43'),(1137,'124.207.82.22','http://www.eleword.net:80/news/97.htm','2014-05-13 09:16:45'),(1138,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-13 09:16:49'),(1139,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-13 09:16:52'),(1140,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 09:25:39'),(1141,'124.207.82.22','http://www.eleword.net:80/article/58.htm','2014-05-13 09:35:35'),(1142,'124.207.82.22','http://www.eleword.net:80/article/58.htm','2014-05-13 09:35:38'),(1143,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 09:35:46'),(1144,'124.207.82.22','http://www.eleword.net:80/article/58.htm','2014-05-13 09:35:47'),(1145,'66.249.73.138','http://www.eleword.net:80/article/30.htm','2014-05-13 10:32:34'),(1146,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 12:27:41'),(1147,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 12:44:44'),(1148,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 12:44:45'),(1149,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-13 12:50:06'),(1150,'208.115.124.136','http://www.eleword.net:80/article/18.htm','2014-05-13 13:52:15'),(1151,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 19:09:12'),(1152,'123.121.211.210','http://www.eleword.net:80/article/58.htm','2014-05-13 19:10:57'),(1153,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-13 20:26:23'),(1154,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-13 20:26:53'),(1155,'123.121.211.210','http://www.eleword.net:80/article/58.htm','2014-05-13 20:38:37'),(1156,'66.249.65.195','http://www.eleword.net:80/index.htm','2014-05-13 21:54:39'),(1157,'66.249.65.178','http://www.eleword.net:80/article/53.htm','2014-05-13 22:03:41'),(1158,'66.249.65.178','http://www.eleword.net:80/article/57.htm','2014-05-13 22:08:22'),(1159,'66.249.65.195','http://www.eleword.net:80/article/54.htm','2014-05-13 22:18:29'),(1160,'66.249.65.195','http://www.eleword.net:80/article/55.htm','2014-05-13 22:23:33'),(1161,'66.249.65.178','http://www.eleword.net:80/article/51.htm','2014-05-13 22:28:39'),(1162,'66.249.65.212','http://www.eleword.net:80/article/52.htm','2014-05-13 22:33:36'),(1163,'66.249.65.178','http://www.eleword.net:80/article/56.htm','2014-05-13 22:38:45'),(1164,'66.249.65.178','http://www.eleword.net:80/article/58.htm','2014-05-13 22:43:41'),(1165,'66.249.65.195','http://www.eleword.net:80/category/19.htm','2014-05-13 22:48:37'),(1166,'66.249.65.195','http://www.eleword.net:80/category/18.htm','2014-05-13 22:53:39'),(1167,'66.249.65.195','http://www.eleword.net:80/category/8.htm','2014-05-14 00:14:26'),(1168,'66.249.65.195','http://www.eleword.net:80/aboutme.htm','2014-05-14 00:17:52'),(1169,'66.249.65.178','http://www.eleword.net:80/category/9.htm','2014-05-14 00:19:26'),(1170,'123.121.211.210','http://www.eleword.net:80/article/58.htm','2014-05-14 05:40:20'),(1171,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 05:40:25'),(1172,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 05:40:26'),(1173,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 05:40:28'),(1174,'123.121.211.210','http://www.eleword.net:80/go.htm','2014-05-14 05:47:59'),(1175,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-14 05:48:02'),(1176,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-14 05:48:13'),(1177,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-14 05:48:22'),(1178,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 05:54:39'),(1179,'123.121.211.210','http://www.eleword.net:80/news/101.htm','2014-05-14 05:56:52'),(1180,'123.121.211.210','http://www.eleword.net:80/news/101.htm','2014-05-14 05:57:00'),(1181,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 05:57:15'),(1182,'123.121.211.210','http://www.eleword.net:80/news/101.htm','2014-05-14 05:57:15'),(1183,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 05:57:18'),(1184,'123.121.211.210','http://www.eleword.net:80/news/101.htm','2014-05-14 05:57:19'),(1185,'123.121.211.210','http://www.eleword.net:80/news/102.htm','2014-05-14 05:58:22'),(1186,'123.121.211.210','http://www.eleword.net:80/news/103.htm','2014-05-14 05:59:32'),(1187,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 05:59:44'),(1188,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 05:59:45'),(1189,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 06:01:57'),(1190,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 06:43:13'),(1191,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-14 06:43:15'),(1192,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-14 06:43:15'),(1193,'119.147.146.189','http://www.eleword.net:80/index.htm','2014-05-14 06:43:19'),(1194,'123.121.211.210','http://www.eleword.net:80/article/48.htm','2014-05-14 06:43:24'),(1195,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 06:52:53'),(1196,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 06:54:53'),(1197,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 06:54:57'),(1198,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 06:57:27'),(1199,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 06:57:36'),(1200,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 06:57:37'),(1201,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 06:57:48'),(1202,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 06:57:50'),(1203,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 06:57:51'),(1204,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 07:06:18'),(1205,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 07:06:19'),(1206,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 07:06:20'),(1207,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 07:06:46'),(1208,'180.153.163.191','http://www.eleword.net:80/index.htm','2014-05-14 07:13:14'),(1209,'101.226.66.180','http://www.eleword.net:80/index.htm','2014-05-14 07:13:14'),(1210,'123.121.211.210','http://www.eleword.net:80/article/55.htm','2014-05-14 07:13:20'),(1211,'101.226.65.107','http://www.eleword.net:80/article/48.htm','2014-05-14 07:13:23'),(1212,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 07:13:33'),(1213,'123.121.211.210','http://www.eleword.net:80/article/58.htm','2014-05-14 07:13:39'),(1214,'101.226.33.239','http://www.eleword.net:80/index.htm','2014-05-14 07:17:20'),(1215,'101.226.33.237','http://www.eleword.net:80/news/105.htm','2014-05-14 07:24:52'),(1216,'112.64.235.87','http://www.eleword.net:80/news.htm','2014-05-14 07:27:36'),(1217,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 08:42:23'),(1218,'66.249.65.178','http://www.eleword.net:80/article/24.htm','2014-05-14 08:44:11'),(1219,'124.207.82.22','http://www.eleword.net:80/news/105.htm','2014-05-14 08:59:24'),(1220,'124.207.82.22','http://www.eleword.net:80/news/105.htm','2014-05-14 08:59:36'),(1221,'124.207.82.22','http://www.eleword.net:80/news/105.htm','2014-05-14 08:59:37'),(1222,'124.207.82.22','http://www.eleword.net:80/category/1.htm','2014-05-14 08:59:43'),(1223,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-05-14 08:59:48'),(1224,'124.207.82.22','http://www.eleword.net:80/article/59.htm','2014-05-14 09:04:31'),(1225,'124.207.82.22','http://www.eleword.net:80/article/59.htm','2014-05-14 09:05:34'),(1226,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:05:41'),(1227,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:06:29'),(1228,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-14 09:06:30'),(1229,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 09:06:31'),(1230,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 09:06:32'),(1231,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-05-14 09:08:15'),(1232,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-05-14 09:08:16'),(1233,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:08:32'),(1234,'124.207.82.22','http://www.eleword.net:80/news/106.htm','2014-05-14 09:27:41'),(1235,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 09:27:43'),(1236,'124.207.82.22','http://www.eleword.net:80/news/106.htm','2014-05-14 09:27:55'),(1237,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 09:27:57'),(1238,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 09:27:59'),(1239,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 09:28:01'),(1240,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:28:09'),(1241,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:28:09'),(1242,'124.207.82.22','http://www.eleword.net:80/news/86.htm','2014-05-14 09:28:22'),(1243,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:31:35'),(1244,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-14 09:31:37'),(1245,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:31:54'),(1246,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-14 09:31:58'),(1247,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-14 09:32:15'),(1248,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:32:20'),(1249,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:33:01'),(1250,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-14 09:33:14'),(1251,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 09:33:15'),(1252,'66.249.65.195','http://www.eleword.net:80/article/34.htm','2014-05-14 10:09:16'),(1253,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 11:36:41'),(1254,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 11:36:46'),(1255,'124.207.82.22','http://www.eleword.net:80/news/105.htm','2014-05-14 11:36:48'),(1256,'124.207.82.22','http://www.eleword.net:80/news/104.htm','2014-05-14 11:37:17'),(1257,'124.207.82.22','http://www.eleword.net:80/article/40.htm','2014-05-14 11:41:07'),(1258,'220.181.132.19','http://www.eleword.net:80/index.htm','2014-05-14 13:21:41'),(1259,'220.181.132.216','http://www.eleword.net:80/index.htm','2014-05-14 13:22:01'),(1260,'220.181.132.15','http://www.eleword.net:80/index.htm','2014-05-14 13:22:10'),(1261,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 13:37:08'),(1262,'124.207.82.22','http://www.eleword.net:80/article/60.htm','2014-05-14 13:39:47'),(1263,'124.207.82.22','http://www.eleword.net:80/article/60.htm','2014-05-14 13:39:50'),(1264,'124.207.82.22','http://www.eleword.net:80/article/60.htm','2014-05-14 13:40:35'),(1265,'124.207.82.22','http://www.eleword.net:80/article/60.htm','2014-05-14 13:40:44'),(1266,'124.207.82.22','http://www.eleword.net:80/category/20.htm','2014-05-14 13:40:56'),(1267,'124.207.82.22','http://www.eleword.net:80/category/20.htm','2014-05-14 13:40:56'),(1268,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 13:40:57'),(1269,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 14:42:01'),(1270,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 14:42:03'),(1271,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-05-14 15:40:45'),(1272,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-05-14 15:41:12'),(1273,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 15:41:13'),(1274,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-05-14 15:41:39'),(1275,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 15:41:50'),(1276,'124.207.82.22','http://www.eleword.net:80/article/62.htm','2014-05-14 15:51:01'),(1277,'124.207.82.22','http://www.eleword.net:80/article/62.htm','2014-05-14 15:51:12'),(1278,'124.207.82.22','http://www.eleword.net:80/article/62.htm','2014-05-14 15:51:54'),(1279,'124.207.82.22','http://www.eleword.net:80/article/62.htm','2014-05-14 15:51:59'),(1280,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 15:52:03'),(1281,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-05-14 15:52:11'),(1282,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 15:52:12'),(1283,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-14 15:52:13'),(1284,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-14 15:52:13'),(1285,'124.207.82.22','http://www.eleword.net:80/news/105.htm','2014-05-14 15:52:16'),(1286,'124.207.82.22','http://www.eleword.net:80/article/63.htm','2014-05-14 16:19:13'),(1287,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 16:19:18'),(1288,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 16:20:08'),(1289,'124.207.82.22','http://www.eleword.net:80/article/43.htm','2014-05-14 16:20:24'),(1290,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-14 16:21:01'),(1291,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 16:21:10'),(1292,'124.207.82.22','http://www.eleword.net:80/category/13.htm','2014-05-14 16:21:24'),(1293,'124.207.82.22','http://www.eleword.net:80/article/34.htm','2014-05-14 16:21:25'),(1294,'124.207.82.22','http://www.eleword.net:80/article/60.htm','2014-05-14 16:30:39'),(1295,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 16:41:12'),(1296,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 16:41:59'),(1297,'124.207.82.22','http://www.eleword.net:80/article/64.htm','2014-05-14 16:47:08'),(1298,'124.207.82.22','http://www.eleword.net:80/article/64.htm','2014-05-14 16:47:10'),(1299,'124.207.82.22','http://www.eleword.net:80/article/64.htm','2014-05-14 16:47:52'),(1300,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-14 16:48:00'),(1301,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 20:01:17'),(1302,'123.121.211.210','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-14 20:01:19'),(1303,'123.121.211.210','http://www.eleword.net:80/category/18.htm','2014-05-14 20:01:24'),(1304,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 20:01:30'),(1305,'123.121.211.210','http://www.eleword.net:80/article/51.htm','2014-05-14 20:01:40'),(1306,'123.121.211.210','http://www.eleword.net:80/news/105.htm','2014-05-14 20:01:45'),(1307,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 20:03:08'),(1308,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 21:22:21'),(1309,'123.121.211.210','http://www.eleword.net:80/article/64.htm','2014-05-14 21:22:22'),(1310,'123.121.211.210','http://www.eleword.net:80/article/64.htm','2014-05-14 21:52:17'),(1311,'123.121.211.210','http://www.eleword.net:80/go.htm','2014-05-14 21:52:46'),(1312,'123.121.211.210','http://www.eleword.net:80/news.htm','2014-05-14 21:52:48'),(1313,'123.121.211.210','http://www.eleword.net:80/search.htm','2014-05-14 21:53:01'),(1314,'123.121.211.210','http://www.eleword.net:80/index.htm','2014-05-14 21:53:12'),(1315,'123.125.71.34','http://www.eleword.net:80/category/3.htm','2014-05-14 22:19:18'),(1316,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 04:15:30'),(1317,'123.121.206.187','http://www.eleword.net:80/go.htm','2014-05-15 04:15:36'),(1318,'123.121.206.187','http://www.eleword.net:80/search.htm','2014-05-15 04:15:40'),(1319,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 04:15:44'),(1320,'123.121.206.187','http://www.eleword.net:80/article/64.htm','2014-05-15 04:18:32'),(1321,'123.121.206.187','http://www.eleword.net:80/search.htm','2014-05-15 04:18:39'),(1322,'123.121.206.187','http://www.eleword.net:80/category/14.htm','2014-05-15 04:19:20'),(1323,'123.121.206.187','http://www.eleword.net:80/article/65.htm','2014-05-15 04:31:05'),(1324,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 04:31:10'),(1325,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 04:35:36'),(1326,'123.121.206.187','http://www.eleword.net:80/news/107.htm','2014-05-15 04:37:32'),(1327,'123.121.206.187','http://www.eleword.net:80/news/107.htm','2014-05-15 04:37:33'),(1328,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 04:37:40'),(1329,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 04:40:51'),(1330,'123.121.206.187','http://www.eleword.net:80/category/18.htm','2014-05-15 04:54:17'),(1331,'123.121.206.187','http://www.eleword.net:80/article/56.htm','2014-05-15 04:54:18'),(1332,'123.121.206.187','http://www.eleword.net:80/article/46.htm','2014-05-15 04:54:25'),(1333,'123.121.206.187','http://www.eleword.net:80/category/12.htm','2014-05-15 04:59:38'),(1334,'123.121.206.187','http://www.eleword.net:80/article/57.htm','2014-05-15 04:59:39'),(1335,'61.219.10.223','http://www.eleword.net:80/index.htm','2014-05-15 09:45:27'),(1336,'180.76.6.14','http://www.eleword.net:80/index.htm','2014-05-15 11:06:56'),(1337,'118.69.226.81','http://www.eleword.net:80/article/26.htm','2014-05-15 12:23:39'),(1338,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 15:17:46'),(1339,'123.121.206.187','http://www.eleword.net:80/go.htm','2014-05-15 15:20:06'),(1340,'123.121.206.187','http://www.eleword.net:80/search.htm','2014-05-15 15:20:09'),(1341,'123.121.206.187','http://www.eleword.net:80/category/14.htm','2014-05-15 15:22:21'),(1342,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:30:56'),(1343,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:31:38'),(1344,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:32:24'),(1345,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:32:25'),(1346,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:32:26'),(1347,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:32:32'),(1348,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:32:34'),(1349,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 15:32:40'),(1350,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 15:32:49'),(1351,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 15:32:50'),(1352,'123.121.206.187','http://www.eleword.net:80/news/109.htm','2014-05-15 15:47:46'),(1353,'123.121.206.187','http://www.eleword.net:80/news/109.htm','2014-05-15 15:47:47'),(1354,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 15:48:33'),(1355,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 15:51:59'),(1356,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 15:52:00'),(1357,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 15:52:01'),(1358,'123.121.206.187','http://www.eleword.net:80/news/111.htm','2014-05-15 15:58:29'),(1359,'123.121.206.187','http://www.eleword.net:80/news/112.htm','2014-05-15 15:59:43'),(1360,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 15:59:52'),(1361,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 15:59:53'),(1362,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 15:59:54'),(1363,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:01:42'),(1364,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:01:52'),(1365,'123.121.206.187','http://www.eleword.net:80/news/113.htm','2014-05-15 16:01:53'),(1366,'123.121.206.187','http://www.eleword.net:80/news/114.htm','2014-05-15 16:03:10'),(1367,'123.121.206.187','http://www.eleword.net:80/news/114.htm','2014-05-15 16:03:12'),(1368,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:03:13'),(1369,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:03:14'),(1370,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:07:48'),(1371,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:08:04'),(1372,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:08:10'),(1373,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:08:11'),(1374,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:08:12'),(1375,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:08:13'),(1376,'123.121.206.187','http://www.eleword.net:80/news/115.htm','2014-05-15 16:09:34'),(1377,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:09:36'),(1378,'123.121.206.187','http://www.eleword.net:80/news/116.htm','2014-05-15 16:10:43'),(1379,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:10:45'),(1380,'123.121.206.187','http://www.eleword.net:80/news/117.htm','2014-05-15 16:12:34'),(1381,'123.121.206.187','http://www.eleword.net:80/news/117.htm','2014-05-15 16:12:35'),(1382,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:12:37'),(1383,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:12:39'),(1384,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:13:00'),(1385,'123.121.206.187','http://www.eleword.net:80/news/117.htm','2014-05-15 16:13:02'),(1386,'123.121.206.187','http://www.eleword.net:80/news/118.htm','2014-05-15 16:16:40'),(1387,'123.121.206.187','http://www.eleword.net:80/news/118.htm','2014-05-15 16:16:40'),(1388,'123.121.206.187','http://www.eleword.net:80/news/119.htm','2014-05-15 16:20:16'),(1389,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:20:18'),(1390,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:31:53'),(1391,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:31:55'),(1392,'123.121.206.187','http://www.eleword.net:80/news/120.htm','2014-05-15 16:32:09'),(1393,'123.121.206.187','http://www.eleword.net:80/news/120.htm','2014-05-15 16:32:10'),(1394,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:32:11'),(1395,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:32:11'),(1396,'123.121.206.187','http://www.eleword.net:80/news/120.htm','2014-05-15 16:42:53'),(1397,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:43:51'),(1398,'123.121.206.187','http://www.eleword.net:80/article/66.htm','2014-05-15 16:43:55'),(1399,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:43:58'),(1400,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:44:36'),(1401,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:46:24'),(1402,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:46:33'),(1403,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:46:35'),(1404,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:47:02'),(1405,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:48:10'),(1406,'123.121.206.187','http://www.eleword.net:80/news/123.htm','2014-05-15 16:49:27'),(1407,'123.121.206.187','http://www.eleword.net:80/news/123.htm','2014-05-15 16:49:27'),(1408,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:49:35'),(1409,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-15 16:49:41'),(1410,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 16:53:18'),(1411,'123.121.206.187','http://www.eleword.net:80/category/16.htm','2014-05-15 17:04:08'),(1412,'123.121.206.187','http://www.eleword.net:80/article/67.htm','2014-05-15 17:20:57'),(1413,'123.121.206.187','http://www.eleword.net:80/article/67.htm','2014-05-15 17:23:32'),(1414,'123.121.206.187','http://www.eleword.net:80/category/16.htm','2014-05-15 17:23:37'),(1415,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 17:23:39'),(1416,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 18:48:56'),(1417,'123.121.206.187','http://www.eleword.net:80/article/67.htm','2014-05-15 18:49:04'),(1418,'123.121.206.187','http://www.eleword.net:80/category/9.htm','2014-05-15 18:51:02'),(1419,'123.121.206.187','http://www.eleword.net:80/article/68.htm','2014-05-15 18:53:08'),(1420,'123.121.206.187','http://www.eleword.net:80/article/68.htm','2014-05-15 18:53:09'),(1421,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 18:53:14'),(1422,'123.121.206.187','http://www.eleword.net:80/article/68.htm','2014-05-15 18:53:54'),(1423,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 18:54:01'),(1424,'123.121.206.187','http://www.eleword.net:80/article/68.htm','2014-05-15 19:41:38'),(1425,'123.121.206.187','http://www.eleword.net:80/article/68.htm','2014-05-15 19:44:55'),(1426,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 19:46:45'),(1427,'123.121.206.187','http://www.eleword.net:80/article/68.htm','2014-05-15 19:47:27'),(1428,'123.121.206.187','http://www.eleword.net:80/article/62.htm','2014-05-15 19:53:14'),(1429,'123.121.206.187','http://www.eleword.net:80/article/69.htm','2014-05-15 19:58:03'),(1430,'123.121.206.187','http://www.eleword.net:80/article/69.htm','2014-05-15 19:58:05'),(1431,'123.121.206.187','http://www.eleword.net:80/article/69.htm','2014-05-15 19:59:53'),(1432,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 20:00:25'),(1433,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 20:00:31'),(1434,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 20:00:36'),(1435,'123.121.206.187','http://www.eleword.net:80/article/69.htm','2014-05-15 20:02:41'),(1436,'123.121.206.187','http://www.eleword.net:80/article/70.htm','2014-05-15 20:21:12'),(1437,'123.121.206.187','http://www.eleword.net:80/article/70.htm','2014-05-15 20:21:34'),(1438,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 20:23:31'),(1439,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-15 20:23:54'),(1440,'66.249.64.230','http://www.eleword.net:80/index.htm','2014-05-16 01:01:53'),(1441,'66.249.64.230','http://www.eleword.net:80/index.htm','2014-05-16 02:30:06'),(1442,'66.249.64.230','http://www.eleword.net:80/article/61.htm','2014-05-16 02:38:35'),(1443,'66.249.64.225','http://www.eleword.net:80/article/60.htm','2014-05-16 02:43:32'),(1444,'66.249.64.230','http://www.eleword.net:80/article/66.htm','2014-05-16 02:48:38'),(1445,'66.249.64.220','http://www.eleword.net:80/article/67.htm','2014-05-16 02:53:38'),(1446,'66.249.64.220','http://www.eleword.net:80/article/70.htm','2014-05-16 02:58:10'),(1447,'66.249.64.230','http://www.eleword.net:80/article/63.htm','2014-05-16 03:03:27'),(1448,'66.249.64.225','http://www.eleword.net:80/article/64.htm','2014-05-16 03:08:40'),(1449,'66.249.64.225','http://www.eleword.net:80/article/62.htm','2014-05-16 03:13:36'),(1450,'66.249.64.230','http://www.eleword.net:80/article/59.htm','2014-05-16 03:18:40'),(1451,'66.249.64.225','http://www.eleword.net:80/article/69.htm','2014-05-16 03:23:35'),(1452,'66.249.64.220','http://www.eleword.net:80/article/65.htm','2014-05-16 03:28:37'),(1453,'66.249.64.220','http://www.eleword.net:80/article/68.htm','2014-05-16 03:33:49'),(1454,'66.249.64.220','http://www.eleword.net:80/category/23.htm','2014-05-16 03:38:43'),(1455,'66.249.64.220','http://www.eleword.net:80/category/20.htm','2014-05-16 03:43:23'),(1456,'66.249.64.225','http://www.eleword.net:80/category/21.htm','2014-05-16 03:49:00'),(1457,'66.249.64.220','http://www.eleword.net:80/category/22.htm','2014-05-16 03:52:58'),(1458,'66.249.64.220','http://www.eleword.net:80/index.htm','2014-05-16 03:58:14'),(1459,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 04:40:58'),(1460,'123.121.206.187','http://www.eleword.net:80/go.htm','2014-05-16 04:40:59'),(1461,'123.121.206.187','http://www.eleword.net:80/search.htm','2014-05-16 04:41:03'),(1462,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-16 04:41:16'),(1463,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-16 04:41:20'),(1464,'123.121.206.187','http://www.eleword.net:80/news/126.htm','2014-05-16 04:41:32'),(1465,'123.121.206.187','http://www.eleword.net:80/news/126.htm','2014-05-16 04:41:56'),(1466,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-16 04:41:57'),(1467,'123.121.206.187','http://www.eleword.net:80/search.htm','2014-05-16 04:42:32'),(1468,'123.121.206.187','http://www.eleword.net:80/news/127.htm','2014-05-16 04:44:03'),(1469,'123.121.206.187','http://www.eleword.net:80/news/129.htm','2014-05-16 04:46:18'),(1470,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-16 04:46:21'),(1471,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-16 04:48:23'),(1472,'123.121.206.187','http://www.eleword.net:80/news.htm','2014-05-16 04:50:03'),(1473,'123.121.206.187','http://www.eleword.net:80/news/131.htm','2014-05-16 04:50:04'),(1474,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 04:50:07'),(1475,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 04:50:08'),(1476,'123.121.206.187','http://www.eleword.net:80/article/71.htm','2014-05-16 04:53:27'),(1477,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 04:53:32'),(1478,'123.121.206.187','http://www.eleword.net:80/article/58.htm','2014-05-16 05:02:54'),(1479,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 05:05:00'),(1480,'123.121.206.187','http://www.eleword.net:80/article/72.htm','2014-05-16 05:05:01'),(1481,'123.121.206.187','http://www.eleword.net:80/article/72.htm','2014-05-16 05:11:14'),(1482,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 05:11:25'),(1483,'117.136.0.95','http://www.eleword.net:80/index.htm','2014-05-16 07:52:20'),(1484,'117.136.0.95','http://www.eleword.net:80/article/72.htm','2014-05-16 07:52:40'),(1485,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 08:26:52'),(1486,'124.207.82.22','http://www.eleword.net:80/category/2.htm','2014-05-16 08:27:14'),(1487,'124.207.82.22','http://www.eleword.net:80/news/132.htm','2014-05-16 08:54:57'),(1488,'124.207.82.22','http://www.eleword.net:80/news/132.htm','2014-05-16 08:54:58'),(1489,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-16 08:54:59'),(1490,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-16 08:54:59'),(1491,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-16 08:55:00'),(1492,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 09:27:29'),(1493,'124.207.82.22','http://www.eleword.net:80/article/73.htm','2014-05-16 09:28:46'),(1494,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 09:34:19'),(1495,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 09:34:25'),(1496,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 09:45:49'),(1497,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-16 09:47:48'),(1498,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-16 09:47:52'),(1499,'124.207.82.22','http://www.eleword.net:80/article/47.htm','2014-05-16 09:48:04'),(1500,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 09:48:45'),(1501,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:12:02'),(1502,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 10:12:11'),(1503,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 10:12:36'),(1504,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:12:37'),(1505,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:13:09'),(1506,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:14:06'),(1507,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:14:06'),(1508,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:14:06'),(1509,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:14:09'),(1510,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 10:14:20'),(1511,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:17:26'),(1512,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:17:42'),(1513,'124.207.82.22','http://www.eleword.net:80/article/74.htm','2014-05-16 10:17:59'),(1514,'220.181.132.196','http://www.eleword.net:80/index.htm','2014-05-16 10:59:13'),(1515,'220.181.132.216','http://www.eleword.net:80/index.htm','2014-05-16 10:59:57'),(1516,'101.199.108.118','http://www.eleword.net:80/index.htm','2014-05-16 11:00:08'),(1517,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 11:28:45'),(1518,'220.181.108.85','http://www.eleword.net:80/aboutme.htm','2014-05-16 12:45:06'),(1519,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-16 12:57:35'),(1520,'124.207.82.22','http://www.eleword.net:80/news/124.htm','2014-05-16 12:57:50'),(1521,'124.207.82.22','http://www.eleword.net:80/news/130.htm','2014-05-16 13:02:36'),(1522,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-16 13:03:03'),(1523,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-16 13:03:05'),(1524,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 13:24:10'),(1525,'124.207.82.22','http://www.eleword.net:80/article/73.htm','2014-05-16 13:24:56'),(1526,'124.207.82.22','http://www.eleword.net:80/category/1.htm','2014-05-16 13:25:09'),(1527,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 17:19:51'),(1528,'124.207.82.22','http://www.eleword.net:80/article/75.htm','2014-05-16 17:21:43'),(1529,'124.207.82.22','http://www.eleword.net:80/article/75.htm','2014-05-16 17:21:48'),(1530,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-16 17:21:51'),(1531,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 20:56:09'),(1532,'123.121.206.187','http://www.eleword.net:80/article/75.htm','2014-05-16 20:56:26'),(1533,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-16 21:57:55'),(1534,'123.121.206.187','http://www.eleword.net:80/article/74.htm','2014-05-16 21:57:57'),(1535,'66.249.73.137','http://www.eleword.net:80/index.htm','2014-05-16 21:58:29'),(1536,'66.249.73.144','http://www.eleword.net:80/category/7.htm','2014-05-17 00:47:31'),(1537,'66.249.73.137','http://www.eleword.net:80/category/4.htm','2014-05-17 01:12:04'),(1538,'66.249.73.138','http://www.eleword.net:80/article/38.htm','2014-05-17 02:21:41'),(1539,'123.121.206.187','http://www.eleword.net:80/index.htm','2014-05-17 02:24:52'),(1540,'123.121.206.187','http://www.eleword.net:80/article/75.htm','2014-05-17 02:25:05'),(1541,'66.249.73.139','http://www.eleword.net:80/category/1.htm','2014-05-17 02:40:17'),(1542,'123.125.71.115','http://www.eleword.net:80/article/30.htm','2014-05-17 02:49:41'),(1543,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-17 21:29:09'),(1544,'204.236.226.210','http://www.eleword.net:80/article/26.htm','2014-05-18 04:34:02'),(1545,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:09:47'),(1546,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:27:51'),(1547,'123.121.216.169','http://www.eleword.net:80/news/134.htm','2014-05-18 07:32:21'),(1548,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:32:44'),(1549,'123.121.216.169','http://www.eleword.net:80/news/135.htm','2014-05-18 07:33:39'),(1550,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:33:41'),(1551,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:34:03'),(1552,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:34:04'),(1553,'123.121.216.169','http://www.eleword.net:80/news/137.htm','2014-05-18 07:39:53'),(1554,'123.121.216.169','http://www.eleword.net:80/news/139.htm','2014-05-18 07:42:06'),(1555,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:42:12'),(1556,'123.121.216.169','http://www.eleword.net:80/news/141.htm','2014-05-18 07:47:52'),(1557,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:47:54'),(1558,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:48:32'),(1559,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:48:34'),(1560,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:49:57'),(1561,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:49:58'),(1562,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:49:59'),(1563,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:50:01'),(1564,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:50:02'),(1565,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 07:53:31'),(1566,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:53:32'),(1567,'123.121.216.169','http://www.eleword.net:80/news/145.htm','2014-05-18 07:53:33'),(1568,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:54:46'),(1569,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:55:17'),(1570,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 07:55:20'),(1571,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 08:00:17'),(1572,'123.121.216.169','http://www.eleword.net:80/news.htm','2014-05-18 08:00:19'),(1573,'220.181.108.96','http://www.eleword.net:80/article/27.htm','2014-05-18 10:00:27'),(1574,'123.121.216.169','http://www.eleword.net:80/index.htm','2014-05-18 11:36:15'),(1575,'66.249.79.150','http://www.eleword.net:80/article/41.htm','2014-05-18 12:32:53'),(1576,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-05-18 17:19:58'),(1577,'66.249.79.150','http://www.eleword.net:80/article/75.htm','2014-05-18 17:28:41'),(1578,'66.249.79.182','http://www.eleword.net:80/article/72.htm','2014-05-18 17:33:13'),(1579,'66.249.79.150','http://www.eleword.net:80/article/74.htm','2014-05-18 17:38:26'),(1580,'66.249.79.182','http://www.eleword.net:80/article/73.htm','2014-05-18 17:43:38'),(1581,'66.249.79.182','http://www.eleword.net:80/article/71.htm','2014-05-18 17:48:28'),(1582,'66.249.79.182','http://www.eleword.net:80/category/25.htm','2014-05-18 17:53:37'),(1583,'66.249.79.150','http://www.eleword.net:80/category/26.htm','2014-05-18 17:58:14'),(1584,'66.249.79.118','http://www.eleword.net:80/category/24.htm','2014-05-18 18:03:37'),(1585,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 09:09:23'),(1586,'124.207.82.22','http://www.eleword.net:80/article/75.htm','2014-05-19 09:09:40'),(1587,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-19 09:09:50'),(1588,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-19 09:15:24'),(1589,'124.207.82.22','http://www.eleword.net:80/news/145.htm','2014-05-19 09:15:27'),(1590,'66.249.79.150','http://www.eleword.net:80/article/50.htm','2014-05-19 09:16:01'),(1591,'124.207.82.22','http://www.eleword.net:80/news/135.htm','2014-05-19 09:16:44'),(1592,'124.207.82.22','http://www.eleword.net:80/news/146.htm','2014-05-19 09:21:27'),(1593,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-19 09:24:14'),(1594,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-19 09:24:15'),(1595,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-19 09:24:48'),(1596,'124.207.82.22','http://www.eleword.net:80/news/146.htm','2014-05-19 09:24:52'),(1597,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 09:24:58'),(1598,'66.249.79.150','http://www.eleword.net:80/article/30.htm','2014-05-19 09:25:19'),(1599,'66.249.79.182','http://www.eleword.net:80/article/36.htm','2014-05-19 09:41:54'),(1600,'124.207.82.22','http://www.eleword.net:80/article/71.htm','2014-05-19 10:24:44'),(1601,'124.207.82.22','http://www.eleword.net:80/category/15.htm','2014-05-19 10:24:48'),(1602,'124.207.82.22','http://www.eleword.net:80/article/69.htm','2014-05-19 10:24:51'),(1603,'66.249.79.118','http://www.eleword.net:80/news.htm','2014-05-19 14:12:01'),(1604,'66.249.79.150','http://www.eleword.net:80/category/6.htm','2014-05-19 14:15:35'),(1605,'66.249.79.118','http://www.eleword.net:80/news/133.htm','2014-05-19 14:19:48'),(1606,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 15:04:15'),(1607,'113.200.249.83','http://www.eleword.net:80/index.htm','2014-05-19 15:36:26'),(1608,'66.249.79.182','http://www.eleword.net:80/news/141.htm','2014-05-19 15:54:04'),(1609,'66.249.79.118','http://www.eleword.net:80/news/138.htm','2014-05-19 15:58:53'),(1610,'66.249.79.118','http://www.eleword.net:80/news/136.htm','2014-05-19 16:14:28'),(1611,'66.249.79.182','http://www.eleword.net:80/aboutme.htm','2014-05-19 16:20:19'),(1612,'124.207.82.22','http://www.eleword.net:80/article/76.htm','2014-05-19 16:41:39'),(1613,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 16:42:04'),(1614,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 16:42:05'),(1615,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 16:42:06'),(1616,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 16:42:07'),(1617,'124.207.82.22','http://www.eleword.net:80/article/62.htm','2014-05-19 16:42:09'),(1618,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-19 17:09:47'),(1619,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-19 17:09:51'),(1620,'124.207.82.22','http://www.eleword.net:80/news/147.htm','2014-05-19 17:11:58'),(1621,'124.207.82.22','http://www.eleword.net:80/article/77.htm','2014-05-19 17:13:11'),(1622,'124.207.82.22','http://www.eleword.net:80/article/77.htm','2014-05-19 17:13:42'),(1623,'66.249.79.118','http://www.eleword.net:80/news/140.htm','2014-05-19 17:29:30'),(1624,'66.249.79.150','http://www.eleword.net:80/news/142.htm','2014-05-19 17:38:46'),(1625,'66.249.79.182','http://www.eleword.net:80/news/128.htm','2014-05-19 17:43:52'),(1626,'66.249.79.150','http://www.eleword.net:80/news/135.htm','2014-05-19 17:48:23'),(1627,'66.249.79.150','http://www.eleword.net:80/news/146.htm','2014-05-19 17:53:36'),(1628,'66.249.79.182','http://www.eleword.net:80/news/144.htm','2014-05-19 17:58:43'),(1629,'66.249.79.118','http://www.eleword.net:80/news/143.htm','2014-05-19 18:03:43'),(1630,'66.249.79.182','http://www.eleword.net:80/category/11.htm','2014-05-19 18:05:10'),(1631,'66.249.79.182','http://www.eleword.net:80/news/134.htm','2014-05-19 18:08:34'),(1632,'220.181.51.81','http://www.eleword.net:80/index.htm','2014-05-19 18:09:54'),(1633,'220.181.51.75','http://www.eleword.net:80/index.htm','2014-05-19 18:09:54'),(1634,'66.249.79.118','http://www.eleword.net:80/news/145.htm','2014-05-19 18:13:59'),(1635,'66.249.79.150','http://www.eleword.net:80/news/126.htm','2014-05-19 18:18:54'),(1636,'66.249.79.182','http://www.eleword.net:80/news/129.htm','2014-05-19 18:23:14'),(1637,'66.249.79.118','http://www.eleword.net:80/news/132.htm','2014-05-19 18:28:45'),(1638,'66.249.79.150','http://www.eleword.net:80/news/137.htm','2014-05-19 18:33:52'),(1639,'66.249.79.150','http://www.eleword.net:80/news/139.htm','2014-05-19 18:39:23'),(1640,'66.249.79.150','http://www.eleword.net:80/news/131.htm','2014-05-19 19:23:51'),(1641,'66.249.79.150','http://www.eleword.net:80/news/130.htm','2014-05-19 19:28:52'),(1642,'66.249.79.150','http://www.eleword.net:80/news/127.htm','2014-05-19 19:37:44'),(1643,'66.249.79.150','http://www.eleword.net:80/category/13.htm','2014-05-19 19:43:24'),(1644,'66.249.79.118','http://www.eleword.net:80/news.htm','2014-05-19 19:43:49'),(1645,'66.249.79.118','http://www.eleword.net:80/news.htm','2014-05-19 19:46:46'),(1646,'66.249.79.182','http://www.eleword.net:80/category/2.htm','2014-05-19 19:50:39'),(1647,'66.249.79.118','http://www.eleword.net:80/news.htm','2014-05-19 19:53:36'),(1648,'66.249.79.182','http://www.eleword.net:80/article/77.htm','2014-05-19 19:58:52'),(1649,'66.249.79.182','http://www.eleword.net:80/article/76.htm','2014-05-19 20:03:49'),(1650,'66.249.79.182','http://www.eleword.net:80/article/19.htm','2014-05-19 20:21:25'),(1651,'112.64.235.246','http://www.eleword.net:80/index.htm','2014-05-19 20:37:08'),(1652,'220.181.108.111','http://www.eleword.net:80/category/6.htm','2014-05-19 20:46:21'),(1653,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 20:57:54'),(1654,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 21:01:19'),(1655,'123.121.201.93','http://www.eleword.net:80/article/76.htm','2014-05-19 21:01:21'),(1656,'123.121.201.93','http://www.eleword.net:80/article/76.htm','2014-05-19 21:02:40'),(1657,'123.121.201.93','http://www.eleword.net:80/article/76.htm','2014-05-19 21:02:42'),(1658,'123.121.201.93','http://www.eleword.net:80/article/77.htm','2014-05-19 21:04:34'),(1659,'66.249.73.143','http://www.eleword.net:80/index.htm','2014-05-19 22:24:00'),(1660,'66.249.73.143','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-19 22:27:25'),(1661,'66.249.73.140','http://www.eleword.net:80/article/35.htm','2014-05-19 22:50:13'),(1662,'66.249.73.141','http://www.eleword.net:80/article/28.htm','2014-05-19 22:50:24'),(1663,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 23:04:37'),(1664,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-19 23:04:39'),(1665,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-19 23:04:47'),(1666,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-19 23:04:53'),(1667,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-19 23:05:04'),(1668,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-19 23:05:12'),(1669,'123.121.201.93','http://www.eleword.net:80/news.htm','2014-05-19 23:05:31'),(1670,'123.121.201.93','http://www.eleword.net:80/article/77.htm','2014-05-19 23:09:09'),(1671,'123.121.201.93','http://www.eleword.net:80/article/77.htm','2014-05-19 23:09:10'),(1672,'123.121.201.93','http://www.eleword.net:80/article/77.htm','2014-05-19 23:10:27'),(1673,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 23:10:32'),(1674,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-19 23:10:37'),(1675,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-19 23:10:39'),(1676,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-19 23:10:43'),(1677,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 23:10:45'),(1678,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 23:10:45'),(1679,'123.121.201.93','http://www.eleword.net:80/news.htm','2014-05-19 23:10:47'),(1680,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 23:10:58'),(1681,'123.121.201.93','http://www.eleword.net:80/article/76.htm','2014-05-19 23:11:24'),(1682,'123.121.201.93','http://www.eleword.net:80/category/25.htm','2014-05-19 23:12:55'),(1683,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-19 23:16:51'),(1684,'66.249.73.142','http://www.eleword.net:80/category/18.htm','2014-05-19 23:31:09'),(1685,'66.249.73.137','http://www.eleword.net:80/article/54.htm','2014-05-20 01:00:47'),(1686,'66.249.73.140','http://www.eleword.net:80/article/58.htm','2014-05-20 01:04:22'),(1687,'66.249.73.141','http://www.eleword.net:80/news/45.htm','2014-05-20 06:33:44'),(1688,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-20 06:41:52'),(1689,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-20 06:41:56'),(1690,'123.121.201.93','http://www.eleword.net:80/news.htm','2014-05-20 06:41:57'),(1691,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-20 06:42:01'),(1692,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-20 06:42:20'),(1693,'123.121.201.93','http://www.eleword.net:80/article/78.htm','2014-05-20 06:46:01'),(1694,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-20 06:46:13'),(1695,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-20 06:46:25'),(1696,'123.121.201.93','http://www.eleword.net:80/article/76.htm','2014-05-20 06:46:28'),(1697,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-20 08:30:17'),(1698,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-20 08:31:26'),(1699,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-20 08:31:43'),(1700,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-05-20 08:31:45'),(1701,'124.207.82.22','http://www.eleword.net:80/news/148.htm','2014-05-20 08:40:49'),(1702,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-20 08:40:50'),(1703,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-20 08:40:53'),(1704,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-20 08:41:14'),(1705,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-05-20 08:42:33'),(1706,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-20 08:42:34'),(1707,'124.207.82.22','http://www.eleword.net:80/news/149.htm','2014-05-20 08:42:35'),(1708,'124.207.82.22','http://www.eleword.net:80/article/79.htm','2014-05-20 09:19:13'),(1709,'124.207.82.22','http://www.eleword.net:80/article/79.htm','2014-05-20 09:19:29'),(1710,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-20 09:19:36'),(1711,'124.207.82.22','http://www.eleword.net:80/news/131.htm','2014-05-20 09:19:45'),(1712,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-20 09:19:54'),(1713,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-20 14:23:43'),(1714,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-20 14:23:52'),(1715,'124.207.82.22','http://www.eleword.net:80/news/149.htm','2014-05-20 14:23:54'),(1716,'124.207.82.22','http://www.eleword.net:80/article/80.htm','2014-05-20 15:04:43'),(1717,'66.249.79.118','http://www.eleword.net:80/category/19.htm','2014-05-20 15:07:44'),(1718,'66.249.79.182','http://www.eleword.net:80/article/80.htm','2014-05-20 15:13:30'),(1719,'66.249.79.150','http://www.eleword.net:80/article/78.htm','2014-05-20 15:18:37'),(1720,'124.207.82.22','http://www.eleword.net:80/article/80.htm','2014-05-20 15:21:38'),(1721,'124.207.82.22','http://www.eleword.net:80/article/80.htm','2014-05-20 15:21:55'),(1722,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-20 15:22:00'),(1723,'66.249.79.118','http://www.eleword.net:80/article/79.htm','2014-05-20 15:22:59'),(1724,'124.207.82.22','http://www.eleword.net:80/category/17.htm','2014-05-20 15:23:41'),(1725,'124.207.82.22','http://www.eleword.net:80/category/17.htm','2014-05-20 15:23:44'),(1726,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-05-20 16:20:27'),(1727,'66.249.79.150','http://www.eleword.net:80/news.htm','2014-05-20 16:30:24'),(1728,'66.249.79.118','http://www.eleword.net:80/news/147.htm','2014-05-20 16:37:16'),(1729,'66.249.79.150','http://www.eleword.net:80/news/149.htm','2014-05-20 16:43:17'),(1730,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-20 16:47:31'),(1731,'124.207.82.22','http://www.eleword.net:80/article/76.htm','2014-05-20 16:47:34'),(1732,'66.249.79.150','http://www.eleword.net:80/news/148.htm','2014-05-20 16:48:15'),(1733,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-20 19:09:01'),(1734,'123.121.201.93','http://www.eleword.net:80/article/80.htm','2014-05-20 19:09:36'),(1735,'123.125.71.106','http://www.eleword.net:80/article/62.htm','2014-05-20 20:50:49'),(1736,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 06:29:00'),(1737,'123.121.201.93','http://www.eleword.net:80/article/80.htm','2014-05-21 06:29:08'),(1738,'123.121.201.93','http://www.eleword.net:80/article/81.htm','2014-05-21 06:42:06'),(1739,'123.121.201.93','http://www.eleword.net:80/article/81.htm','2014-05-21 06:43:23'),(1740,'123.121.201.93','http://www.eleword.net:80/article/81.htm','2014-05-21 06:43:36'),(1741,'123.121.201.93','http://www.eleword.net:80/article/81.htm','2014-05-21 06:44:50'),(1742,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 06:48:16'),(1743,'124.207.82.22','http://www.eleword.net:80/article/80.htm','2014-05-21 08:39:35'),(1744,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 08:39:51'),(1745,'124.207.82.22','http://www.eleword.net:80/article/82.htm','2014-05-21 09:20:21'),(1746,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 10:23:23'),(1747,'124.207.82.22','http://www.eleword.net:80/article/81.htm','2014-05-21 10:33:38'),(1748,'124.207.82.22','http://www.eleword.net:80/article/83.htm','2014-05-21 10:37:31'),(1749,'124.207.82.22','http://www.eleword.net:80/article/83.htm','2014-05-21 10:38:57'),(1750,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 10:39:35'),(1751,'124.207.82.22','http://www.eleword.net:80/category/6.htm','2014-05-21 10:47:43'),(1752,'124.207.82.22','http://www.eleword.net:80/article/84.htm','2014-05-21 10:49:52'),(1753,'124.207.82.22','http://www.eleword.net:80/article/84.htm','2014-05-21 10:51:05'),(1754,'124.207.82.22','http://www.eleword.net:80/article/84.htm','2014-05-21 10:51:06'),(1755,'124.207.82.22','http://www.eleword.net:80/article/84.htm','2014-05-21 10:52:34'),(1756,'124.207.82.22','http://www.eleword.net:80/article/84.htm','2014-05-21 10:53:06'),(1757,'124.207.82.22','http://www.eleword.net:80/category/26.htm','2014-05-21 10:53:11'),(1758,'124.207.82.22','http://www.eleword.net:80/article/85.htm','2014-05-21 11:03:22'),(1759,'124.207.82.22','http://www.eleword.net:80/article/85.htm','2014-05-21 11:03:31'),(1760,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-21 11:03:37'),(1761,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 11:03:40'),(1762,'124.207.82.22','http://www.eleword.net:80/article/86.htm','2014-05-21 11:05:13'),(1763,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 11:08:26'),(1764,'124.207.82.22','http://www.eleword.net:80/category/16.htm','2014-05-21 11:08:37'),(1765,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 11:11:01'),(1766,'124.207.82.22','http://www.eleword.net:80/article/67.htm','2014-05-21 11:11:06'),(1767,'124.207.82.22','http://www.eleword.net:80/news/149.htm','2014-05-21 11:32:35'),(1768,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 11:36:47'),(1769,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 12:18:32'),(1770,'180.166.198.126','http://www.eleword.net:80/article/26.htm','2014-05-21 14:50:16'),(1771,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 16:24:37'),(1772,'124.207.82.22','http://www.eleword.net:80/article/87.htm','2014-05-21 16:27:32'),(1773,'124.207.82.22','http://www.eleword.net:80/category/6.htm','2014-05-21 16:27:34'),(1774,'124.207.82.22','http://www.eleword.net:80/article/88.htm','2014-05-21 16:30:12'),(1775,'124.207.82.22','http://www.eleword.net:80/article/88.htm','2014-05-21 16:30:36'),(1776,'124.207.82.22','http://www.eleword.net:80/article/88.htm','2014-05-21 16:30:38'),(1777,'124.207.82.22','http://www.eleword.net:80/article/88.htm','2014-05-21 16:30:49'),(1778,'124.207.82.22','http://www.eleword.net:80/article/89.htm','2014-05-21 16:33:34'),(1779,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 16:33:40'),(1780,'124.207.82.22','http://www.eleword.net:80/article/90.htm','2014-05-21 16:35:13'),(1781,'124.207.82.22','http://www.eleword.net:80/article/91.htm','2014-05-21 16:36:02'),(1782,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 16:36:04'),(1783,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-21 16:36:07'),(1784,'124.207.82.22','http://www.eleword.net:80/category/6.htm','2014-05-21 16:36:14'),(1785,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-21 16:36:17'),(1786,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 19:00:52'),(1787,'111.93.234.82, 66.249.80.190','http://www.eleword.net:80/category/11.htm','2014-05-21 20:13:45'),(1788,'111.93.234.82, 66.249.80.190','http://www.eleword.net:80/article/26.htm','2014-05-21 20:13:55'),(1789,'180.153.201.15','http://www.eleword.net:80/index.htm','2014-05-21 20:34:38'),(1790,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 23:36:27'),(1791,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 23:36:32'),(1792,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 23:55:54'),(1793,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-21 23:55:59'),(1794,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-21 23:56:03'),(1795,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-21 23:58:51'),(1796,'123.121.201.93','http://www.eleword.net:80/news.htm','2014-05-21 23:58:53'),(1797,'123.121.201.93','http://www.eleword.net:80/article/90.htm','2014-05-21 23:59:04'),(1798,'123.121.201.93','http://www.eleword.net:80/article/90.htm','2014-05-22 00:01:23'),(1799,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 00:01:29'),(1800,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 00:02:42'),(1801,'123.121.201.93','http://www.eleword.net:80/article/92.htm','2014-05-22 00:09:45'),(1802,'123.121.201.93','http://www.eleword.net:80/article/92.htm','2014-05-22 00:09:57'),(1803,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 00:09:59'),(1804,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-22 00:10:05'),(1805,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-22 00:10:08'),(1806,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-22 00:10:12'),(1807,'123.121.201.93','http://www.eleword.net:80/article/86.htm','2014-05-22 00:10:20'),(1808,'220.181.108.186','http://www.eleword.net:80/category/20.htm','2014-05-22 00:43:05'),(1809,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 06:18:34'),(1810,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 06:18:36'),(1811,'123.121.201.93','http://www.eleword.net:80/article/92.htm','2014-05-22 06:18:38'),(1812,'123.121.201.93','http://www.eleword.net:80/article/92.htm','2014-05-22 06:50:56'),(1813,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 06:51:20'),(1814,'123.121.201.93','http://www.eleword.net:80/article/87.htm','2014-05-22 06:52:09'),(1815,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 07:09:51'),(1816,'123.121.201.93','http://www.eleword.net:80/article/94.htm','2014-05-22 07:11:13'),(1817,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 07:11:20'),(1818,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 08:17:32'),(1819,'124.207.82.22','http://www.eleword.net:80/article/93.htm','2014-05-22 08:18:10'),(1820,'124.207.82.22','http://www.eleword.net:80/article/95.htm','2014-05-22 08:47:53'),(1821,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 08:48:43'),(1822,'124.207.82.22','http://www.eleword.net:80/article/96.htm','2014-05-22 08:49:05'),(1823,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 08:50:42'),(1824,'124.207.82.22','http://www.eleword.net:80/category/12.htm','2014-05-22 08:50:53'),(1825,'124.207.82.22','http://www.eleword.net:80/article/37.htm','2014-05-22 08:50:55'),(1826,'124.207.82.22','http://www.eleword.net:80/category/6.htm','2014-05-22 08:51:03'),(1827,'124.207.82.22','http://www.eleword.net:80/category/6.htm','2014-05-22 08:51:03'),(1828,'124.207.82.22','http://www.eleword.net:80/article/87.htm','2014-05-22 09:48:02'),(1829,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 11:37:55'),(1830,'124.207.82.22','http://www.eleword.net:80/article/87.htm','2014-05-22 12:29:54'),(1831,'124.207.82.22','http://www.eleword.net:80/article/88.htm','2014-05-22 12:30:16'),(1832,'124.207.82.22','http://www.eleword.net:80/article/94.htm','2014-05-22 12:30:45'),(1833,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 12:53:58'),(1834,'124.207.82.22','http://www.eleword.net:80/article/99.htm','2014-05-22 13:04:40'),(1835,'124.207.82.22','http://www.eleword.net:80/article/100.htm','2014-05-22 13:05:42'),(1836,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 13:05:49'),(1837,'124.207.82.22','http://www.eleword.net:80/article/101.htm','2014-05-22 13:06:38'),(1838,'124.207.82.22','http://www.eleword.net:80/article/102.htm','2014-05-22 13:07:31'),(1839,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 13:07:42'),(1840,'124.207.82.22','http://www.eleword.net:80/article/103.htm','2014-05-22 13:08:13'),(1841,'124.207.82.22','http://www.eleword.net:80/article/103.htm','2014-05-22 13:08:15'),(1842,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 13:08:22'),(1843,'124.207.82.22','http://www.eleword.net:80/article/103.htm','2014-05-22 13:08:31'),(1844,'124.207.82.22','http://www.eleword.net:80/article/104.htm','2014-05-22 13:09:24'),(1845,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 13:11:20'),(1846,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 13:11:23'),(1847,'124.207.82.22','http://www.eleword.net:80/article/24.htm','2014-05-22 13:11:25'),(1848,'124.207.82.22','http://www.eleword.net:80/article/24.htm','2014-05-22 13:11:28'),(1849,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-22 13:11:33'),(1850,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 13:11:40'),(1851,'124.207.82.22','http://www.eleword.net:80/article/84.htm','2014-05-22 13:25:05'),(1852,'124.207.82.22','http://www.eleword.net:80/article/105.htm','2014-05-22 14:36:44'),(1853,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 14:37:16'),(1854,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 14:37:16'),(1855,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 14:38:24'),(1856,'124.207.82.22','http://www.eleword.net:80/article/82.htm','2014-05-22 14:38:35'),(1857,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 14:53:56'),(1858,'124.207.82.22','http://www.eleword.net:80/article/103.htm','2014-05-22 14:54:15'),(1859,'124.207.82.22','http://www.eleword.net:80/category/22.htm','2014-05-22 14:54:25'),(1860,'124.207.82.22','http://www.eleword.net:80/article/68.htm','2014-05-22 14:54:26'),(1861,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 14:56:52'),(1862,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 15:56:59'),(1863,'124.207.82.22','http://www.eleword.net:80/category/17.htm','2014-05-22 15:57:30'),(1864,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-22 16:00:22'),(1865,'124.207.82.22','http://www.eleword.net:80/article/105.htm','2014-05-22 16:00:23'),(1866,'124.207.82.22','http://www.eleword.net:80/article/32.htm','2014-05-22 16:01:13'),(1867,'220.181.132.216','http://www.eleword.net:80/index.htm','2014-05-22 17:15:02'),(1868,'101.199.108.52','http://www.eleword.net:80/index.htm','2014-05-22 17:15:08'),(1869,'101.199.108.118','http://www.eleword.net:80/index.htm','2014-05-22 17:16:29'),(1870,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 18:59:19'),(1871,'123.121.201.93','http://www.eleword.net:80/article/105.htm','2014-05-22 19:00:08'),(1872,'123.125.71.89','http://www.eleword.net:80/article/19.htm','2014-05-22 20:19:18'),(1873,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 21:21:08'),(1874,'123.121.201.93','http://www.eleword.net:80/article/106.htm','2014-05-22 21:22:01'),(1875,'123.121.201.93','http://www.eleword.net:80/article/106.htm','2014-05-22 21:24:57'),(1876,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 21:25:08'),(1877,'220.181.108.82','http://www.eleword.net:80/index.htm','2014-05-22 22:19:15'),(1878,'123.121.201.93','http://www.eleword.net:80/article/108.htm','2014-05-22 22:43:48'),(1879,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 22:43:54'),(1880,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 22:43:54'),(1881,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-22 22:45:39'),(1882,'123.121.201.93','http://www.eleword.net:80/article/105.htm','2014-05-22 22:56:58'),(1883,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-23 00:21:28'),(1884,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-23 00:21:31'),(1885,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-23 00:21:34'),(1886,'123.121.201.93','http://www.eleword.net:80/news.htm','2014-05-23 00:21:45'),(1887,'123.121.201.93','http://www.eleword.net:80/article/105.htm','2014-05-23 00:22:04'),(1888,'123.121.201.93','http://www.eleword.net:80/article/105.htm','2014-05-23 00:27:26'),(1889,'220.181.108.105','http://www.eleword.net:80/article/53.htm','2014-05-23 00:43:08'),(1890,'123.125.71.25','http://www.eleword.net:80/category/3.htm','2014-05-23 04:02:58'),(1891,'61.135.190.224','http://www.eleword.net:80/index.htm','2014-05-23 04:15:47'),(1892,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-23 06:47:09'),(1893,'123.121.201.93','http://www.eleword.net:80/article/104.htm','2014-05-23 06:47:24'),(1894,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-23 06:49:16'),(1895,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-23 06:49:19'),(1896,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-23 06:49:25'),(1897,'123.121.201.93','http://www.eleword.net:80/article/88.htm','2014-05-23 06:49:39'),(1898,'123.121.201.93','http://www.eleword.net:80/article/105.htm','2014-05-23 06:49:45'),(1899,'123.121.201.93','http://www.eleword.net:80/go.htm','2014-05-23 06:49:53'),(1900,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-23 06:49:54'),(1901,'123.121.201.93','http://www.eleword.net:80/search.htm','2014-05-23 06:49:59'),(1902,'123.125.71.75','http://www.eleword.net:80/article/68.htm','2014-05-23 06:59:04'),(1903,'123.121.201.93','http://www.eleword.net:80/article/109.htm','2014-05-23 07:16:00'),(1904,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 08:42:28'),(1905,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-23 08:48:31'),(1906,'124.207.82.22','http://www.eleword.net:80/article/105.htm','2014-05-23 08:48:56'),(1907,'124.207.82.22','http://www.eleword.net:80/article/110.htm','2014-05-23 09:09:02'),(1908,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 09:22:36'),(1909,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 09:22:55'),(1910,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 09:24:06'),(1911,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 09:29:16'),(1912,'123.125.71.85','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-23 09:47:39'),(1913,'124.207.82.22','http://www.eleword.net:80/article/114.htm','2014-05-23 10:19:17'),(1914,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 10:19:23'),(1915,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-23 12:23:38'),(1916,'124.207.82.22','http://www.eleword.net:80/news/134.htm','2014-05-23 12:24:43'),(1917,'124.207.82.22','http://www.eleword.net:80/news/150.htm','2014-05-23 12:29:42'),(1918,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-23 12:29:44'),(1919,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-23 12:30:08'),(1920,'124.207.82.22','http://www.eleword.net:80/article/11.htm','2014-05-23 12:30:17'),(1921,'124.207.82.22','http://www.eleword.net:80/news/151.htm','2014-05-23 12:32:15'),(1922,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-23 12:32:17'),(1923,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 12:32:23'),(1924,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 12:32:23'),(1925,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 12:32:24'),(1926,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-23 12:33:34'),(1927,'124.207.82.22','http://www.eleword.net:80/news/152.htm','2014-05-23 12:33:36'),(1928,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-23 13:49:29'),(1929,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 13:49:31'),(1930,'124.207.82.22','http://www.eleword.net:80/article/93.htm','2014-05-23 13:49:51'),(1931,'124.207.82.22','http://www.eleword.net:80/article/30.htm','2014-05-23 13:50:12'),(1932,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 13:50:16'),(1933,'124.207.82.22','http://www.eleword.net:80/article/114.htm','2014-05-23 13:50:18'),(1934,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 16:09:13'),(1935,'124.207.82.22','http://www.eleword.net:80/article/115.htm','2014-05-23 16:13:47'),(1936,'124.207.82.22','http://www.eleword.net:80/article/115.htm','2014-05-23 16:13:50'),(1937,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-23 16:13:59'),(1938,'220.181.108.94','http://www.eleword.net:80/article/74.htm','2014-05-23 19:01:13'),(1939,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-23 19:32:10'),(1940,'123.121.201.93','http://www.eleword.net:80/article/114.htm','2014-05-23 19:41:13'),(1941,'123.121.201.93','http://www.eleword.net:80/article/114.htm','2014-05-23 19:42:19'),(1942,'123.121.201.93','http://www.eleword.net:80/article/115.htm','2014-05-23 19:56:09'),(1943,'123.121.201.93','http://www.eleword.net:80/article/105.htm','2014-05-23 19:56:15'),(1944,'180.153.206.34','http://www.eleword.net:80/index.htm','2014-05-23 20:33:56'),(1945,'123.125.71.96','http://www.eleword.net:80/article/41.htm','2014-05-24 01:17:41'),(1946,'220.181.108.177','http://www.eleword.net:80/aboutme.htm','2014-05-24 01:24:21'),(1947,'61.135.190.102','http://www.eleword.net:80/index.htm','2014-05-24 04:20:06'),(1948,'123.121.201.93','http://www.eleword.net:80/index.htm','2014-05-24 05:16:34'),(1949,'117.136.38.5','http://www.eleword.net:80/index.htm','2014-05-24 06:14:17'),(1950,'117.136.38.5','http://www.eleword.net:80/article/115.htm','2014-05-24 06:14:31'),(1951,'220.181.108.104','http://www.eleword.net:80/category/25.htm','2014-05-24 09:07:09'),(1952,'61.135.190.224','http://www.eleword.net:80/index.htm','2014-05-24 12:04:19'),(1953,'220.181.108.144','http://www.eleword.net:80/article/75.htm','2014-05-24 17:50:56'),(1954,'123.125.71.23','http://www.eleword.net:80/category/2.htm','2014-05-24 17:54:15'),(1955,'183.5.141.116','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-24 20:00:40'),(1956,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-24 23:13:45'),(1957,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-24 23:13:46'),(1958,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-25 02:09:25'),(1959,'123.121.226.109','http://www.eleword.net:80/article/115.htm','2014-05-25 02:09:28'),(1960,'123.125.71.58','http://www.eleword.net:80/category/24.htm','2014-05-25 02:50:58'),(1961,'123.125.71.21','http://www.eleword.net:80/article/70.htm','2014-05-25 05:10:03'),(1962,'220.181.108.162','http://www.eleword.net:80/article/73.htm','2014-05-25 06:47:23'),(1963,'203.208.60.195','http://www.eleword.net:80/index.htm','2014-05-25 08:28:48'),(1964,'123.125.71.21','http://www.eleword.net:80/article/69.htm','2014-05-25 09:04:29'),(1965,'203.208.60.191','http://www.eleword.net:80/index.htm','2014-05-25 09:24:00'),(1966,'123.125.71.69','http://www.eleword.net:80/category/22.htm','2014-05-25 12:57:09'),(1967,'61.135.190.223','http://www.eleword.net:80/index.htm','2014-05-25 13:52:08'),(1968,'203.208.60.190','http://www.eleword.net:80/category/1.htm','2014-05-25 13:55:57'),(1969,'203.208.60.190','http://www.eleword.net:80/category/12.htm','2014-05-25 13:56:05'),(1970,'203.208.60.190','http://www.eleword.net:80/article/22.htm','2014-05-25 13:56:45'),(1971,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-25 14:03:43'),(1972,'203.208.60.196','http://www.eleword.net:80/aboutme.htm','2014-05-25 14:08:53'),(1973,'203.208.60.196','http://www.eleword.net:80/category/4.htm','2014-05-25 14:13:30'),(1974,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-25 14:14:56'),(1975,'203.208.60.194','http://www.eleword.net:80/category/5.htm','2014-05-25 14:18:53'),(1976,'203.208.60.193','http://www.eleword.net:80/article/98.htm','2014-05-25 14:23:48'),(1977,'203.208.60.196','http://www.eleword.net:80/article/72.htm','2014-05-25 14:28:24'),(1978,'203.208.60.191','http://www.eleword.net:80/category/6.htm','2014-05-25 14:33:42'),(1979,'123.121.226.109','http://www.eleword.net:80/article/115.htm','2014-05-25 14:36:06'),(1980,'203.208.60.190','http://www.eleword.net:80/category/7.htm','2014-05-25 14:38:05'),(1981,'203.208.60.190','http://www.eleword.net:80/article/45.htm','2014-05-25 14:38:14'),(1982,'203.208.60.195','http://www.eleword.net:80/article/81.htm','2014-05-25 14:38:43'),(1983,'203.208.60.190','http://www.eleword.net:80/article/32.htm','2014-05-25 14:43:46'),(1984,'203.208.60.195','http://www.eleword.net:80/article/30.htm','2014-05-25 14:48:49'),(1985,'203.208.60.190','http://www.eleword.net:80/article/97.htm','2014-05-25 14:53:36'),(1986,'123.121.226.109','http://www.eleword.net:80/news/153.htm','2014-05-25 14:57:13'),(1987,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 14:57:14'),(1988,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 14:57:15'),(1989,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 14:57:32'),(1990,'123.121.226.109','http://www.eleword.net:80/news/154.htm','2014-05-25 14:58:31'),(1991,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 14:58:33'),(1992,'203.208.60.193','http://www.eleword.net:80/article/99.htm','2014-05-25 14:58:39'),(1993,'123.121.226.109','http://www.eleword.net:80/news/155.htm','2014-05-25 14:59:51'),(1994,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 14:59:53'),(1995,'123.121.226.109','http://www.eleword.net:80/news/156.htm','2014-05-25 15:00:52'),(1996,'123.121.226.109','http://www.eleword.net:80/news/156.htm','2014-05-25 15:00:53'),(1997,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 15:00:54'),(1998,'203.208.60.191','http://www.eleword.net:80/article/57.htm','2014-05-25 15:02:01'),(1999,'203.208.60.190','http://www.eleword.net:80/article/96.htm','2014-05-25 15:03:48'),(2000,'203.208.60.196','http://www.eleword.net:80/category/2.htm','2014-05-25 15:08:30'),(2001,'203.208.60.193','http://www.eleword.net:80/category/3.htm','2014-05-25 15:13:31'),(2002,'123.121.226.109','http://www.eleword.net:80/news/157.htm','2014-05-25 15:13:42'),(2003,'123.121.226.109','http://www.eleword.net:80/news/157.htm','2014-05-25 15:13:43'),(2004,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-25 15:13:45'),(2005,'203.208.60.195','http://www.eleword.net:80/category/10.htm','2014-05-25 15:18:46'),(2006,'203.208.60.191','http://www.eleword.net:80/article/104.htm','2014-05-25 15:23:37'),(2007,'203.208.60.191','http://www.eleword.net:80/category/13.htm','2014-05-25 15:28:36'),(2008,'203.208.60.192','http://www.eleword.net:80/article/113.htm','2014-05-25 15:33:38'),(2009,'203.208.60.193','http://www.eleword.net:80/article/103.htm','2014-05-25 15:38:44'),(2010,'203.208.60.196','http://www.eleword.net:80/category/25.htm','2014-05-25 15:43:40'),(2011,'203.208.60.194','http://www.eleword.net:80/article/101.htm','2014-05-25 15:48:39'),(2012,'203.208.60.191','http://www.eleword.net:80/article/108.htm','2014-05-25 15:53:51'),(2013,'203.208.60.194','http://www.eleword.net:80/article/105.htm','2014-05-25 15:58:43'),(2014,'203.208.60.196','http://www.eleword.net:80/category/19.htm','2014-05-25 16:04:30'),(2015,'203.208.60.196','http://www.eleword.net:80/category/17.htm','2014-05-25 16:13:51'),(2016,'203.208.60.190','http://www.eleword.net:80/category/26.htm','2014-05-25 16:18:43'),(2017,'203.208.60.192','http://www.eleword.net:80/article/106.htm','2014-05-25 16:23:40'),(2018,'203.208.60.195','http://www.eleword.net:80/article/56.htm','2014-05-25 16:24:32'),(2019,'203.208.60.192','http://www.eleword.net:80/category/18.htm','2014-05-25 16:28:46'),(2020,'23.228.228.167','http://www.eleword.net:80/index.htm','2014-05-25 16:32:33'),(2021,'203.208.60.194','http://www.eleword.net:80/category/11.htm','2014-05-25 16:33:40'),(2022,'203.208.60.195','http://www.eleword.net:80/category/27.htm','2014-05-25 16:38:48'),(2023,'23.228.228.167','http://www.eleword.net:80/article/112.htm','2014-05-25 16:41:04'),(2024,'203.208.60.190','http://www.eleword.net:80/article/112.htm','2014-05-25 16:43:39'),(2025,'23.228.228.167','http://www.eleword.net:80/news.htm','2014-05-25 16:44:59'),(2026,'23.228.228.167','http://www.eleword.net:80/aboutme.htm','2014-05-25 16:45:00'),(2027,'203.208.60.191','http://www.eleword.net:80/article/115.htm','2014-05-25 16:48:39'),(2028,'203.208.60.190','http://www.eleword.net:80/article/100.htm','2014-05-25 16:53:56'),(2029,'203.208.60.191','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-25 16:58:49'),(2030,'203.208.60.196','http://www.eleword.net:80/news.htm','2014-05-25 17:03:44'),(2031,'203.208.60.194','http://www.eleword.net:80/article/75.htm','2014-05-25 17:08:35'),(2032,'203.208.60.190','http://www.eleword.net:80/article/89.htm','2014-05-25 17:13:47'),(2033,'203.208.60.192','http://www.eleword.net:80/article/20.htm','2014-05-25 17:14:19'),(2034,'203.208.60.192','http://www.eleword.net:80/article/90.htm','2014-05-25 17:18:50'),(2035,'203.208.60.194','http://www.eleword.net:80/article/92.htm','2014-05-25 17:23:51'),(2036,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-25 17:26:37'),(2037,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-25 17:26:38'),(2038,'203.208.60.195','http://www.eleword.net:80/article/31.htm','2014-05-25 17:28:55'),(2039,'203.208.60.193','http://www.eleword.net:80/article/85.htm','2014-05-25 17:33:50'),(2040,'203.208.60.192','http://www.eleword.net:80/article/55.htm','2014-05-25 17:38:40'),(2041,'203.208.60.195','http://www.eleword.net:80/article/84.htm','2014-05-25 17:43:43'),(2042,'203.208.60.193','http://www.eleword.net:80/article/74.htm','2014-05-25 17:48:43'),(2043,'203.208.60.196','http://www.eleword.net:80/category/9.htm','2014-05-25 17:53:41'),(2044,'203.208.60.192','http://www.eleword.net:80/article/94.htm','2014-05-25 18:01:25'),(2045,'203.208.60.191','http://www.eleword.net:80/article/93.htm','2014-05-25 18:08:45'),(2046,'203.208.60.193','http://www.eleword.net:80/article/58.htm','2014-05-25 18:13:39'),(2047,'203.208.60.193','http://www.eleword.net:80/article/86.htm','2014-05-25 18:18:42'),(2048,'203.208.60.193','http://www.eleword.net:80/article/91.htm','2014-05-25 18:25:19'),(2049,'203.208.60.192','http://www.eleword.net:80/article/35.htm','2014-05-25 18:30:10'),(2050,'203.208.60.190','http://www.eleword.net:80/article/83.htm','2014-05-25 18:33:51'),(2051,'203.208.60.191','http://www.eleword.net:80/article/23.htm','2014-05-25 18:38:09'),(2052,'203.208.60.192','http://www.eleword.net:80/article/88.htm','2014-05-25 18:38:41'),(2053,'203.208.60.191','http://www.eleword.net:80/article/18.htm','2014-05-25 18:45:30'),(2054,'203.208.60.192','http://www.eleword.net:80/article/73.htm','2014-05-25 18:47:24'),(2055,'203.208.60.191','http://www.eleword.net:80/article/87.htm','2014-05-25 18:53:48'),(2056,'203.208.60.195','http://www.eleword.net:80/article/27.htm','2014-05-25 18:54:02'),(2057,'203.208.60.190','http://www.eleword.net:80/index.htm','2014-05-25 18:58:49'),(2058,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-25 19:03:06'),(2059,'203.208.60.196','http://www.eleword.net:80/article/24.htm','2014-05-25 19:06:34'),(2060,'203.208.60.195','http://www.eleword.net:80/index.htm','2014-05-25 19:08:24'),(2061,'123.121.226.109','http://www.eleword.net:80/article/116.htm','2014-05-25 19:10:18'),(2062,'123.121.226.109','http://www.eleword.net:80/article/116.htm','2014-05-25 19:10:21'),(2063,'123.121.226.109','http://www.eleword.net:80/article/116.htm','2014-05-25 19:10:50'),(2064,'123.121.226.109','http://www.eleword.net:80/article/116.htm','2014-05-25 19:11:59'),(2065,'203.208.60.196','http://www.eleword.net:80/article/33.htm','2014-05-25 19:18:47'),(2066,'203.208.60.195','http://www.eleword.net:80/article/28.htm','2014-05-25 19:23:49'),(2067,'203.208.60.191','http://www.eleword.net:80/article/29.htm','2014-05-25 19:29:22'),(2068,'123.121.226.109','http://www.eleword.net:80/article/117.htm','2014-05-25 19:39:43'),(2069,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-25 19:41:29'),(2070,'203.208.60.190','http://www.eleword.net:80/article/95.htm','2014-05-25 21:18:57'),(2071,'203.208.60.193','http://www.eleword.net:80/article/114.htm','2014-05-25 21:23:40'),(2072,'203.208.60.193','http://www.eleword.net:80/article/117.htm','2014-05-25 21:28:56'),(2073,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-25 21:59:38'),(2074,'203.208.60.190','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-26 01:41:27'),(2075,'203.208.60.190','http://www.eleword.net:80/category/5.htm','2014-05-26 01:56:07'),(2076,'203.208.60.191','http://www.eleword.net:80/article/102.htm','2014-05-26 02:23:39'),(2077,'203.208.60.194','http://www.eleword.net:80/category/13.htm','2014-05-26 02:24:58'),(2078,'203.208.60.191','http://www.eleword.net:80/article/110.htm','2014-05-26 02:29:03'),(2079,'123.125.71.60','http://www.eleword.net:80/category/13.htm','2014-05-26 03:05:04'),(2080,'123.125.71.78','http://www.eleword.net:80/index.htm','2014-05-26 04:11:34'),(2081,'203.208.60.191','http://www.eleword.net:80/article/52.htm','2014-05-26 04:47:34'),(2082,'123.125.71.26','http://www.eleword.net:80/category/4.htm','2014-05-26 05:38:00'),(2083,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-26 06:21:54'),(2084,'123.121.226.109','http://www.eleword.net:80/go.htm','2014-05-26 06:25:53'),(2085,'123.121.226.109','http://www.eleword.net:80/search.htm','2014-05-26 06:25:57'),(2086,'123.121.226.109','http://www.eleword.net:80/article/88.htm','2014-05-26 06:26:04'),(2087,'123.121.226.109','http://www.eleword.net:80/article/118.htm','2014-05-26 06:26:38'),(2088,'123.121.226.109','http://www.eleword.net:80/article/118.htm','2014-05-26 06:26:44'),(2089,'123.121.226.109','http://www.eleword.net:80/article/118.htm','2014-05-26 06:27:05'),(2090,'123.121.226.109','http://www.eleword.net:80/article/119.htm','2014-05-26 06:28:37'),(2091,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-26 06:31:10'),(2092,'123.121.226.109','http://www.eleword.net:80/article/120.htm','2014-05-26 06:32:51'),(2093,'123.121.226.109','http://www.eleword.net:80/article/120.htm','2014-05-26 06:35:44'),(2094,'123.121.226.109','http://www.eleword.net:80/article/120.htm','2014-05-26 06:36:10'),(2095,'123.121.226.109','http://www.eleword.net:80/article/121.htm','2014-05-26 06:37:08'),(2096,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-26 06:37:13'),(2097,'123.121.226.109','http://www.eleword.net:80/article/122.htm','2014-05-26 06:39:10'),(2098,'123.121.226.109','http://www.eleword.net:80/article/122.htm','2014-05-26 06:39:11'),(2099,'123.121.226.109','http://www.eleword.net:80/article/123.htm','2014-05-26 06:40:55'),(2100,'123.121.226.109','http://www.eleword.net:80/article/124.htm','2014-05-26 06:46:40'),(2101,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-26 06:46:44'),(2102,'123.121.226.109','http://www.eleword.net:80/article/125.htm','2014-05-26 06:47:51'),(2103,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-26 06:47:58'),(2104,'123.121.226.109','http://www.eleword.net:80/category/28.htm','2014-05-26 06:47:59'),(2105,'123.121.226.109','http://www.eleword.net:80/category/28.htm','2014-05-26 06:48:01'),(2106,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 08:24:31'),(2107,'203.208.60.193','http://www.eleword.net:80/article/109.htm','2014-05-26 08:27:41'),(2108,'203.208.60.191','http://www.eleword.net:80/article/107.htm','2014-05-26 08:33:50'),(2109,'124.207.82.22','http://www.eleword.net:80/category/8.htm','2014-05-26 08:45:28'),(2110,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 08:45:52'),(2111,'124.207.82.22','http://www.eleword.net:80/article/126.htm','2014-05-26 09:11:26'),(2112,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 09:12:02'),(2113,'124.207.82.22','http://www.eleword.net:80/article/126.htm','2014-05-26 09:20:59'),(2114,'124.207.82.22','http://www.eleword.net:80/article/126.htm','2014-05-26 09:21:11'),(2115,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 09:21:14'),(2116,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 09:21:34'),(2117,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 09:21:36'),(2118,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 09:21:43'),(2119,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 09:21:50'),(2120,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 10:17:54'),(2121,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 10:21:09'),(2122,'124.207.82.22','http://www.eleword.net:80/article/125.htm','2014-05-26 10:33:40'),(2123,'124.207.82.22','http://www.eleword.net:80/category/6.htm','2014-05-26 10:33:46'),(2124,'124.207.82.22','http://www.eleword.net:80/article/105.htm','2014-05-26 10:34:02'),(2125,'124.207.82.22','http://www.eleword.net:80/article/102.htm','2014-05-26 10:47:05'),(2126,'124.207.82.22','http://www.eleword.net:80/article/103.htm','2014-05-26 10:47:44'),(2127,'124.207.82.22','http://www.eleword.net:80/article/100.htm','2014-05-26 10:49:16'),(2128,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 12:23:03'),(2129,'220.181.108.178','http://www.eleword.net:80/article/104.htm','2014-05-26 14:08:13'),(2130,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 14:30:49'),(2131,'220.181.108.80','http://www.eleword.net:80/article/93.htm','2014-05-26 14:41:33'),(2132,'61.135.190.224','http://www.eleword.net:80/index.htm','2014-05-26 14:42:19'),(2133,'203.208.60.193','http://www.eleword.net:80/article/122.htm','2014-05-26 15:03:52'),(2134,'203.208.60.194','http://www.eleword.net:80/article/123.htm','2014-05-26 15:08:59'),(2135,'203.208.60.190','http://www.eleword.net:80/category/11.htm','2014-05-26 16:51:02'),(2136,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 17:23:00'),(2137,'124.207.82.22','http://www.eleword.net:80/article/127.htm','2014-05-26 17:23:32'),(2138,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-26 17:23:39'),(2139,'123.125.71.22','http://www.eleword.net:80/category/6.htm','2014-05-26 17:46:43'),(2140,'203.208.60.192','http://www.eleword.net:80/article/120.htm','2014-05-26 20:58:40'),(2141,'203.208.60.194','http://www.eleword.net:80/article/119.htm','2014-05-26 21:03:47'),(2142,'203.208.60.190','http://www.eleword.net:80/article/121.htm','2014-05-26 21:08:47'),(2143,'203.208.60.193','http://www.eleword.net:80/article/118.htm','2014-05-26 21:13:26'),(2144,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-26 21:13:54'),(2145,'123.121.226.109','http://www.eleword.net:80/article/127.htm','2014-05-26 21:14:10'),(2146,'203.208.60.194','http://www.eleword.net:80/article/124.htm','2014-05-26 21:28:46'),(2147,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-27 00:07:07'),(2148,'123.121.226.109','http://www.eleword.net:80/go.htm','2014-05-27 00:07:12'),(2149,'123.121.226.109','http://www.eleword.net:80/search.htm','2014-05-27 00:07:22'),(2150,'123.121.226.109','http://www.eleword.net:80/article/64.htm','2014-05-27 00:07:30'),(2151,'123.121.226.109','http://www.eleword.net:80/article/128.htm','2014-05-27 00:29:05'),(2152,'203.208.60.191','http://www.eleword.net:80/category/6.htm','2014-05-27 01:58:50'),(2153,'203.208.60.191','http://www.eleword.net:80/article/125.htm','2014-05-27 01:58:55'),(2154,'203.208.60.196','http://www.eleword.net:80/category/28.htm','2014-05-27 02:03:27'),(2155,'220.181.108.174','http://www.eleword.net:80/category/7.htm','2014-05-27 03:07:28'),(2156,'203.208.60.192','http://www.eleword.net:80/category/10.htm','2014-05-27 03:25:39'),(2157,'203.208.60.196','http://www.eleword.net:80/index.htm','2014-05-27 04:04:05'),(2158,'203.208.60.192','http://www.eleword.net:80/index.htm','2014-05-27 04:08:50'),(2159,'203.208.60.193','http://www.eleword.net:80/article/43.htm','2014-05-27 04:16:09'),(2160,'203.208.60.190','http://www.eleword.net:80/article/26.htm','2014-05-27 04:25:28'),(2161,'203.208.60.192','http://www.eleword.net:80/article/44.htm','2014-05-27 04:27:17'),(2162,'203.208.60.192','http://www.eleword.net:80/article/25.htm','2014-05-27 05:22:30'),(2163,'203.208.60.191','http://www.eleword.net:80/category/19.htm','2014-05-27 05:33:08'),(2164,'203.208.60.190','http://www.eleword.net:80/category/9.htm','2014-05-27 06:18:35'),(2165,'203.208.60.190','http://www.eleword.net:80/category/1.htm','2014-05-27 06:21:52'),(2166,'203.208.60.194','http://www.eleword.net:80/category/2.htm','2014-05-27 06:28:09'),(2167,'203.208.60.193','http://www.eleword.net:80/category/4.htm','2014-05-27 06:34:20'),(2168,'123.125.71.113','http://www.eleword.net:80/category/17.htm','2014-05-27 06:52:15'),(2169,'203.208.60.196','http://www.eleword.net:80/category/26.htm','2014-05-27 07:18:37'),(2170,'220.181.108.105','http://www.eleword.net:80/article/102.htm','2014-05-27 07:25:35'),(2171,'123.125.71.100','http://www.eleword.net:80/category/1.htm','2014-05-27 08:32:13'),(2172,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-27 08:35:32'),(2173,'124.207.82.22','http://www.eleword.net:80/article/102.htm','2014-05-27 08:35:50'),(2174,'203.208.60.192','http://www.eleword.net:80/article/74.htm','2014-05-27 08:41:59'),(2175,'203.208.60.190','http://www.eleword.net:80/article/128.htm','2014-05-27 08:53:55'),(2176,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-05-27 08:57:20'),(2177,'203.208.60.196','http://www.eleword.net:80/article/127.htm','2014-05-27 08:58:27'),(2178,'124.207.82.22','http://www.eleword.net:80/article/129.htm','2014-05-27 09:16:26'),(2179,'124.207.82.22','http://www.eleword.net:80/article/129.htm','2014-05-27 09:16:32'),(2180,'124.207.82.22','http://www.eleword.net:80/article/129.htm','2014-05-27 09:17:41'),(2181,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-27 09:17:52'),(2182,'124.207.82.22','http://www.eleword.net:80/category/12.htm','2014-05-27 09:18:11'),(2183,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-27 09:18:42'),(2184,'124.207.82.22','http://www.eleword.net:80/article/129.htm','2014-05-27 09:18:52'),(2185,'124.207.82.22','http://www.eleword.net:80/article/130.htm','2014-05-27 09:29:37'),(2186,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-27 09:29:44'),(2187,'203.208.60.191','http://www.eleword.net:80/category/6.htm','2014-05-27 09:33:20'),(2188,'203.208.60.194','http://www.eleword.net:80/category/29.htm','2014-05-27 09:38:28'),(2189,'203.208.60.194','http://www.eleword.net:80/article/129.htm','2014-05-27 09:39:10'),(2190,'203.208.60.194','http://www.eleword.net:80/article/130.htm','2014-05-27 09:48:48'),(2191,'203.208.60.193','http://www.eleword.net:80/category/18.htm','2014-05-27 10:26:36'),(2192,'123.125.71.18','http://www.eleword.net:80/article/92.htm','2014-05-27 11:04:13'),(2193,'203.208.60.193','http://www.eleword.net:80/article/57.htm','2014-05-27 11:32:07'),(2194,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-27 12:38:35'),(2195,'38.100.21.63','http://www.eleword.net:80/index.htm','2014-05-27 12:44:11'),(2196,'38.100.21.63','http://www.eleword.net:80/article/123.htm','2014-05-27 12:44:12'),(2197,'38.100.21.63','http://www.eleword.net:80/category/21.htm','2014-05-27 12:44:13'),(2198,'38.100.21.63','http://www.eleword.net:80/article/113.htm','2014-05-27 12:44:13'),(2199,'38.100.21.63','http://www.eleword.net:80/article/116.htm','2014-05-27 12:44:14'),(2200,'38.100.21.63','http://www.eleword.net:80/article/112.htm','2014-05-27 12:44:14'),(2201,'38.100.21.63','http://www.eleword.net:80/article/130.htm','2014-05-27 12:44:15'),(2202,'38.100.21.63','http://www.eleword.net:80/aboutme.htm','2014-05-27 12:44:16'),(2203,'38.100.21.63','http://www.eleword.net:80/article/109.htm','2014-05-27 12:44:16'),(2204,'38.100.21.63','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-05-27 12:44:16'),(2205,'203.208.60.195','http://www.eleword.net:80/category/9.htm','2014-05-27 13:02:46'),(2206,'203.208.60.192','http://www.eleword.net:80/news.htm','2014-05-27 13:35:54'),(2207,'203.208.60.190','http://www.eleword.net:80/news/157.htm','2014-05-27 14:48:37'),(2208,'203.208.60.192','http://www.eleword.net:80/news/150.htm','2014-05-27 14:53:34'),(2209,'157.55.32.87','http://www.eleword.net:80/index.htm','2014-05-27 15:02:01'),(2210,'203.208.60.190','http://www.eleword.net:80/aboutme.htm','2014-05-27 15:05:52'),(2211,'123.125.71.79','http://www.eleword.net:80/category/18.htm','2014-05-27 16:01:00'),(2212,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-27 16:19:18'),(2213,'124.207.82.22','http://www.eleword.net:80/article/131.htm','2014-05-27 16:20:11'),(2214,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-27 16:20:29'),(2215,'203.208.60.191','http://www.eleword.net:80/category/1.htm','2014-05-27 16:21:14'),(2216,'203.208.60.196','http://www.eleword.net:80/article/131.htm','2014-05-27 16:28:45'),(2217,'203.208.60.190','http://www.eleword.net:80/category/7.htm','2014-05-27 16:31:32'),(2218,'220.181.108.109','http://www.eleword.net:80/article/87.htm','2014-05-27 16:38:00'),(2219,'203.208.60.196','http://www.eleword.net:80/category/25.htm','2014-05-27 17:29:54'),(2220,'203.208.60.195','http://www.eleword.net:80/category/12.htm','2014-05-27 17:32:31'),(2221,'203.208.60.190','http://www.eleword.net:80/category/5.htm','2014-05-27 18:45:28'),(2222,'222.73.76.253','http://www.eleword.net:80/index.htm','2014-05-27 20:35:14'),(2223,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-27 21:14:35'),(2224,'123.121.226.109','http://www.eleword.net:80/article/132.htm','2014-05-27 21:17:37'),(2225,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-27 21:18:18'),(2226,'220.181.51.80','http://www.eleword.net:80/index.htm','2014-05-27 23:20:17'),(2227,'220.181.51.76','http://www.eleword.net:80/index.htm','2014-05-27 23:20:17'),(2228,'61.135.190.101','http://www.eleword.net:80/index.htm','2014-05-28 00:42:24'),(2229,'203.208.60.190','http://www.eleword.net:80/news/152.htm','2014-05-28 00:48:49'),(2230,'203.208.60.190','http://www.eleword.net:80/news/154.htm','2014-05-28 00:53:16'),(2231,'123.125.71.72','http://www.eleword.net:80/aboutme.htm','2014-05-28 04:23:27'),(2232,'203.208.60.195','http://www.eleword.net:80/article/33.htm','2014-05-28 04:30:38'),(2233,'220.181.108.144','http://www.eleword.net:80/category/10.htm','2014-05-28 04:37:12'),(2234,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-28 05:49:37'),(2235,'203.208.60.193','http://www.eleword.net:80/news/156.htm','2014-05-28 06:08:38'),(2236,'203.208.60.196','http://www.eleword.net:80/news/151.htm','2014-05-28 06:13:30'),(2237,'203.208.60.193','http://www.eleword.net:80/news/155.htm','2014-05-28 06:18:30'),(2238,'220.181.108.183','http://www.eleword.net:80/category/21.htm','2014-05-28 07:00:46'),(2239,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-28 08:48:57'),(2240,'124.207.82.22','http://www.eleword.net:80/news/158.htm','2014-05-28 08:50:47'),(2241,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 08:50:48'),(2242,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 08:50:49'),(2243,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 08:51:11'),(2244,'124.207.82.22','http://www.eleword.net:80/news/160.htm','2014-05-28 08:53:58'),(2245,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 08:54:00'),(2246,'124.207.82.22','http://www.eleword.net:80/news/161.htm','2014-05-28 08:58:13'),(2247,'124.207.82.22','http://www.eleword.net:80/news/162.htm','2014-05-28 08:59:35'),(2248,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 08:59:38'),(2249,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 09:01:56'),(2250,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-28 09:01:59'),(2251,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-28 09:02:04'),(2252,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-28 09:02:05'),(2253,'124.207.82.22','http://www.eleword.net:80/article/131.htm','2014-05-28 09:02:10'),(2254,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-28 09:02:20'),(2255,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-28 09:02:22'),(2256,'124.207.82.22','http://www.eleword.net:80/article/132.htm','2014-05-28 09:02:24'),(2257,'124.207.82.22','http://www.eleword.net:80/news/163.htm','2014-05-28 09:10:29'),(2258,'124.207.82.22','http://www.eleword.net:80/news/163.htm','2014-05-28 09:10:33'),(2259,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-28 09:11:09'),(2260,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-28 10:22:06'),(2261,'203.208.60.193','http://www.eleword.net:80/index.htm','2014-05-28 10:33:58'),(2262,'203.208.60.192','http://www.eleword.net:80/news/153.htm','2014-05-28 10:57:02'),(2263,'124.207.82.22','http://www.eleword.net:80/article/132.htm','2014-05-28 10:57:37'),(2264,'203.208.60.194','http://www.eleword.net:80/article/82.htm','2014-05-28 11:02:56'),(2265,'203.208.60.191','http://www.eleword.net:80/article/54.htm','2014-05-28 11:08:43'),(2266,'220.181.108.87','http://www.eleword.net:80/article/106.htm','2014-05-28 11:55:29'),(2267,'180.76.6.62','http://www.eleword.net:80/index.htm','2014-05-28 12:22:15'),(2268,'123.125.71.43','http://www.eleword.net:80/article/96.htm','2014-05-28 12:41:56'),(2269,'123.125.71.13','http://www.eleword.net:80/article/98.htm','2014-05-28 13:15:11'),(2270,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-28 20:23:30'),(2271,'123.121.226.109','http://www.eleword.net:80/article/110.htm','2014-05-28 20:24:28'),(2272,'123.125.71.45','http://www.eleword.net:80/article/15.htm','2014-05-28 21:17:00'),(2273,'220.181.108.170','http://www.eleword.net:80/article/99.htm','2014-05-28 21:35:44'),(2274,'220.181.108.75','http://www.eleword.net:80/news.htm','2014-05-28 22:45:15'),(2275,'157.55.35.108','http://www.eleword.net:80/index.htm','2014-05-28 22:55:42'),(2276,'220.181.108.166','http://www.eleword.net:80/category/24.htm','2014-05-29 00:04:51'),(2277,'203.208.60.194','http://www.eleword.net:80/article/22.htm','2014-05-29 06:07:51'),(2278,'203.208.60.194','http://www.eleword.net:80/category/3.htm','2014-05-29 06:07:52'),(2279,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-29 06:37:14'),(2280,'123.121.226.109','http://www.eleword.net:80/news/164.htm','2014-05-29 06:39:51'),(2281,'123.121.226.109','http://www.eleword.net:80/news/164.htm','2014-05-29 06:39:52'),(2282,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-29 06:39:53'),(2283,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-29 06:39:53'),(2284,'123.121.226.109','http://www.eleword.net:80/news.htm','2014-05-29 06:41:45'),(2285,'123.121.226.109','http://www.eleword.net:80/news/165.htm','2014-05-29 06:41:46'),(2286,'123.121.226.109','http://www.eleword.net:80/news/146.htm','2014-05-29 07:02:11'),(2287,'203.208.60.196','http://www.eleword.net:80/article/23.htm','2014-05-29 07:26:51'),(2288,'203.208.60.196','http://www.eleword.net:80/article/74.htm','2014-05-29 07:26:57'),(2289,'203.208.60.192','http://www.eleword.net:80/article/75.htm','2014-05-29 08:43:34'),(2290,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 08:55:32'),(2291,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-29 09:03:03'),(2292,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:03:05'),(2293,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 09:03:50'),(2294,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 09:04:47'),(2295,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 09:04:47'),(2296,'124.207.82.22','http://www.eleword.net:80/category/12.htm','2014-05-29 09:04:50'),(2297,'124.207.82.22','http://www.eleword.net:80/category/12.htm','2014-05-29 09:04:51'),(2298,'124.207.82.22','http://www.eleword.net:80/article/133.htm','2014-05-29 09:04:51'),(2299,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 09:04:53'),(2300,'124.207.82.22','http://www.eleword.net:80/article/133.htm','2014-05-29 09:09:05'),(2301,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:11:13'),(2302,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:11:25'),(2303,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:11:28'),(2304,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:11:31'),(2305,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:11:37'),(2306,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-29 09:12:04'),(2307,'124.207.82.22','http://www.eleword.net:80/article/120.htm','2014-05-29 09:12:16'),(2308,'124.207.82.22','http://www.eleword.net:80/article/132.htm','2014-05-29 09:12:19'),(2309,'124.207.82.22','http://www.eleword.net:80/category/24.htm','2014-05-29 09:12:25'),(2310,'124.207.82.22','http://www.eleword.net:80/category/1.htm','2014-05-29 09:12:26'),(2311,'124.207.82.22','http://www.eleword.net:80/article/41.htm','2014-05-29 09:12:28'),(2312,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-29 09:12:31'),(2313,'124.207.82.22','http://www.eleword.net:80/article/112.htm','2014-05-29 09:12:36'),(2314,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-29 09:16:24'),(2315,'203.208.60.195','http://www.eleword.net:80/category/18.htm','2014-05-29 10:37:51'),(2316,'203.208.60.194','http://www.eleword.net:80/article/133.htm','2014-05-29 10:48:52'),(2317,'123.125.71.110','http://www.eleword.net:80/category/8.htm','2014-05-29 12:29:21'),(2318,'101.199.108.120','http://www.eleword.net:80/index.htm','2014-05-29 13:46:23'),(2319,'220.181.132.216','http://www.eleword.net:80/index.htm','2014-05-29 13:48:01'),(2320,'220.181.132.19','http://www.eleword.net:80/index.htm','2014-05-29 13:48:58'),(2321,'124.126.95.63','http://www.eleword.net:80/index.htm','2014-05-29 14:10:39'),(2322,'182.118.53.251','http://www.eleword.net:80/index.htm','2014-05-29 14:11:48'),(2323,'61.135.190.102','http://www.eleword.net:80/index.htm','2014-05-29 15:47:46'),(2324,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 15:52:05'),(2325,'124.207.82.22','http://www.eleword.net:80/article/134.htm','2014-05-29 15:54:05'),(2326,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-29 15:54:10'),(2327,'123.121.226.109','http://www.eleword.net:80/index.htm','2014-05-29 19:27:37'),(2328,'123.121.226.109','http://www.eleword.net:80/article/134.htm','2014-05-29 19:27:46'),(2329,'220.181.108.100','http://www.eleword.net:80/category/4.htm','2014-05-29 19:43:02'),(2330,'123.121.226.109','http://www.eleword.net:80/article/134.htm','2014-05-29 20:27:17'),(2331,'220.181.108.175','http://www.eleword.net:80/article/110.htm','2014-05-29 20:45:59'),(2332,'203.208.60.190','http://www.eleword.net:80/article/14.htm','2014-05-30 00:24:24'),(2333,'203.208.60.192','http://www.eleword.net:80/aboutme.htm','2014-05-30 00:34:04'),(2334,'220.181.108.183','http://www.eleword.net:80/article/117.htm','2014-05-30 00:36:24'),(2335,'203.208.60.196','http://www.eleword.net:80/category/4.htm','2014-05-30 00:43:36'),(2336,'203.208.60.193','http://www.eleword.net:80/category/1.htm','2014-05-30 00:48:24'),(2337,'203.208.60.193','http://www.eleword.net:80/category/25.htm','2014-05-30 00:53:32'),(2338,'203.208.60.190','http://www.eleword.net:80/article/134.htm','2014-05-30 00:58:39'),(2339,'203.208.60.191','http://www.eleword.net:80/news/2.htm','2014-05-30 01:37:18'),(2340,'203.208.60.192','http://www.eleword.net:80/category/15.htm','2014-05-30 02:06:41'),(2341,'203.208.60.195','http://www.eleword.net:80/article/46.htm','2014-05-30 02:13:46'),(2342,'203.208.60.192','http://www.eleword.net:80/go.htm','2014-05-30 02:37:29'),(2343,'123.125.71.95','http://www.eleword.net:80/article/95.htm','2014-05-30 02:50:03'),(2344,'203.208.60.191','http://www.eleword.net:80/category/19.htm','2014-05-30 03:53:03'),(2345,'203.208.60.190','http://www.eleword.net:80/category/25.htm','2014-05-30 03:59:16'),(2346,'203.208.60.196','http://www.eleword.net:80/category/4.htm','2014-05-30 04:23:06'),(2347,'123.125.71.97','http://www.eleword.net:80/article/122.htm','2014-05-30 04:24:56'),(2348,'203.208.60.190','http://www.eleword.net:80/news/22.htm','2014-05-30 04:26:19'),(2349,'203.208.60.195','http://www.eleword.net:80/category/18.htm','2014-05-30 05:21:55'),(2350,'123.125.71.17','http://www.eleword.net:80/category/10.htm','2014-05-30 05:34:11'),(2351,'203.208.60.190','http://www.eleword.net:80/news.htm','2014-05-30 06:24:39'),(2352,'203.208.60.193','http://www.eleword.net:80/news/108.htm','2014-05-30 06:33:46'),(2353,'123.121.198.248','http://www.eleword.net:80/index.htm','2014-05-30 07:10:43'),(2354,'123.121.198.248','http://www.eleword.net:80/category/14.htm','2014-05-30 07:10:59'),(2355,'203.208.60.194','http://www.eleword.net:80/article/7.htm','2014-05-30 07:29:16'),(2356,'203.208.60.191','http://www.eleword.net:80/article/3.htm','2014-05-30 08:30:09'),(2357,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 08:54:43'),(2358,'124.207.82.22','http://www.eleword.net:80/article/134.htm','2014-05-30 08:55:12'),(2359,'124.207.82.22','http://www.eleword.net:80/article/135.htm','2014-05-30 09:00:09'),(2360,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 09:00:15'),(2361,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 09:00:16'),(2362,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-05-30 09:00:18'),(2363,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-05-30 09:00:24'),(2364,'124.207.82.22','http://www.eleword.net:80/article/88.htm','2014-05-30 09:00:36'),(2365,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-05-30 09:01:02'),(2366,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 09:06:55'),(2367,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:06:56'),(2368,'124.207.82.22','http://www.eleword.net:80/news/166.htm','2014-05-30 09:06:59'),(2369,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 09:14:23'),(2370,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:14:25'),(2371,'124.207.82.22','http://www.eleword.net:80/news/168.htm','2014-05-30 09:14:27'),(2372,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:15:55'),(2373,'124.207.82.22','http://www.eleword.net:80/news/169.htm','2014-05-30 09:15:55'),(2374,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:15:59'),(2375,'124.207.82.22','http://www.eleword.net:80/news/170.htm','2014-05-30 09:17:09'),(2376,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:17:12'),(2377,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:17:26'),(2378,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 09:17:35'),(2379,'203.208.60.195','http://www.eleword.net:80/article/11.htm','2014-05-30 09:23:53'),(2380,'203.208.60.190','http://www.eleword.net:80/article/135.htm','2014-05-30 09:29:06'),(2381,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 10:19:24'),(2382,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 10:19:26'),(2383,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 10:35:27'),(2384,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 10:35:28'),(2385,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 10:35:29'),(2386,'124.207.82.22','http://www.eleword.net:80/news/171.htm','2014-05-30 10:35:31'),(2387,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 10:35:41'),(2388,'203.208.60.195','http://www.eleword.net:80/news/4.htm','2014-05-30 10:38:10'),(2389,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-05-30 10:47:48'),(2390,'124.207.82.22','http://www.eleword.net:80/news/172.htm','2014-05-30 10:47:49'),(2391,'124.207.82.22','http://www.eleword.net:80/news/172.htm','2014-05-30 10:48:17'),(2392,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-05-30 10:48:27'),(2393,'124.207.82.22','http://www.eleword.net:80/article/31.htm','2014-05-30 10:49:02'),(2394,'220.181.108.76','http://www.eleword.net:80/index.htm','2014-05-30 11:03:45'),(2395,'203.208.60.193','http://www.eleword.net:80/article/15.htm','2014-05-30 11:34:25'),(2396,'203.208.60.191','http://www.eleword.net:80/news/38.htm','2014-05-30 12:32:54'),(2397,'203.208.60.195','http://www.eleword.net:80/news/15.htm','2014-05-30 13:31:10'),(2398,'203.208.60.194','http://www.eleword.net:80/news/28.htm','2014-05-30 14:36:52'),(2399,'203.208.60.195','http://www.eleword.net:80/article/38.htm','2014-05-30 15:23:06'),(2400,'203.208.60.191','http://www.eleword.net:80/index.htm','2014-05-30 16:24:30'),(2401,'123.121.206.79','http://www.eleword.net:80/index.htm','2014-05-30 19:38:50'),(2402,'101.226.33.240','http://www.eleword.net:80/index.htm','2014-05-30 20:37:48'),(2403,'38.99.82.246','http://www.eleword.net:80/index.htm','2014-05-30 20:59:04'),(2404,'123.121.206.79','http://www.eleword.net:80/index.htm','2014-05-30 21:41:50'),(2405,'121.15.220.147','http://www.eleword.net:80/article/26.htm','2014-05-30 22:39:54'),(2406,'123.125.71.34','http://www.eleword.net:80/article/14.htm','2014-05-30 22:47:12'),(2407,'123.121.206.79','http://www.eleword.net:80/index.htm','2014-05-30 23:18:59'),(2408,'203.208.60.191','http://www.eleword.net:80/news/116.htm','2014-05-31 00:04:05'),(2409,'203.208.60.190','http://www.eleword.net:80/news/123.htm','2014-05-31 00:15:32'),(2410,'123.121.207.1','http://www.eleword.net:80/index.htm','2014-05-31 01:02:21'),(2411,'38.99.82.248','http://www.eleword.net:80/index.htm','2014-05-31 02:08:08'),(2412,'61.135.190.101','http://www.eleword.net:80/index.htm','2014-05-31 04:41:55'),(2413,'123.125.71.104','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-05-31 05:45:24'),(2414,'203.208.60.193','http://www.eleword.net:80/news/103.htm','2014-05-31 05:53:06'),(2415,'203.208.60.192','http://www.eleword.net:80/news/119.htm','2014-05-31 05:58:53'),(2416,'203.208.60.192','http://www.eleword.net:80/news/105.htm','2014-05-31 06:02:49'),(2417,'220.181.108.90','http://www.eleword.net:80/article/128.htm','2014-05-31 06:14:23'),(2418,'203.208.60.194','http://www.eleword.net:80/news/125.htm','2014-05-31 11:37:49'),(2419,'220.181.108.152','http://www.eleword.net:80/category/12.htm','2014-05-31 11:39:20'),(2420,'123.125.71.22','http://www.eleword.net:80/category/5.htm','2014-05-31 11:42:40'),(2421,'123.125.71.71','http://www.eleword.net:80/article/8.htm','2014-05-31 13:02:14'),(2422,'220.181.108.123','http://www.eleword.net:80/article/4.htm','2014-05-31 14:07:33'),(2423,'123.121.207.1','http://www.eleword.net:80/index.htm','2014-05-31 14:14:38'),(2424,'123.121.207.1','http://www.eleword.net:80/category/12.htm','2014-05-31 14:31:21'),(2425,'123.121.207.1','http://www.eleword.net:80/article/133.htm','2014-05-31 14:31:23'),(2426,'123.121.207.1','http://www.eleword.net:80/go.htm','2014-05-31 14:31:44'),(2427,'123.121.207.1','http://www.eleword.net:80/search.htm','2014-05-31 14:31:46'),(2428,'123.121.207.1','http://www.eleword.net:80/search.htm','2014-05-31 14:34:02'),(2429,'123.121.207.1','http://www.eleword.net:80/article/81.htm','2014-05-31 14:34:09'),(2430,'123.121.207.1','http://www.eleword.net:80/article/137.htm','2014-05-31 14:38:02'),(2431,'123.121.207.1','http://www.eleword.net:80/article/137.htm','2014-05-31 14:38:40'),(2432,'123.121.207.1','http://www.eleword.net:80/index.htm','2014-05-31 14:44:56'),(2433,'123.121.207.1','http://www.eleword.net:80/index.htm','2014-05-31 14:45:04'),(2434,'220.181.108.182','http://www.eleword.net:80/category/9.htm','2014-05-31 17:00:35'),(2435,'203.208.60.192','http://www.eleword.net:80/index.htm','2014-05-31 17:15:41'),(2436,'220.181.108.91','http://www.eleword.net:80/index.htm','2014-05-31 20:22:18'),(2437,'220.181.108.179','http://www.eleword.net:80/news/148.htm','2014-05-31 21:40:22'),(2438,'203.208.60.192','http://www.eleword.net:80/news/118.htm','2014-05-31 21:43:46'),(2439,'203.208.60.193','http://www.eleword.net:80/article/137.htm','2014-05-31 21:50:16'),(2440,'220.181.108.160','http://www.eleword.net:80/category/28.htm','2014-06-01 00:06:49'),(2441,'31.34.233.6','http://www.eleword.net:80/article/26.htm','2014-06-01 00:08:40'),(2442,'220.181.108.160','http://www.eleword.net:80/news.htm','2014-06-01 01:01:27'),(2443,'220.181.108.106','http://www.eleword.net:80/article/103.htm','2014-06-01 01:18:20'),(2444,'220.181.108.183','http://www.eleword.net:80/article/134.htm','2014-06-01 03:00:50'),(2445,'203.208.60.194','http://www.eleword.net:80/news/120.htm','2014-06-01 03:45:46'),(2446,'61.135.190.222','http://www.eleword.net:80/index.htm','2014-06-01 04:43:02'),(2447,'117.136.38.186','http://www.eleword.net:80/index.htm','2014-06-01 08:33:13'),(2448,'203.208.60.194','http://www.eleword.net:80/news/111.htm','2014-06-01 08:43:35'),(2449,'203.208.60.195','http://www.eleword.net:80/news/124.htm','2014-06-01 08:49:40'),(2450,'220.181.108.160','http://www.eleword.net:80/news.htm','2014-06-01 08:53:47'),(2451,'123.125.71.41','http://www.eleword.net:80/news/146.htm','2014-06-01 10:41:42'),(2452,'61.135.190.224','http://www.eleword.net:80/index.htm','2014-06-01 11:38:07'),(2453,'220.181.108.75','http://www.eleword.net:80/category/21.htm','2014-06-01 12:33:10'),(2454,'203.208.60.192','http://www.eleword.net:80/index.htm','2014-06-01 14:04:20'),(2455,'203.208.60.194','http://www.eleword.net:80/news/114.htm','2014-06-01 16:23:20'),(2456,'203.208.60.192','http://www.eleword.net:80/news/121.htm','2014-06-01 16:40:22'),(2457,'42.96.174.104','http://www.eleword.net:80/news.htm','2014-06-01 17:04:10'),(2458,'123.121.211.43','http://www.eleword.net:80/index.htm','2014-06-01 18:59:06'),(2459,'123.121.211.43','http://www.eleword.net:80/news.htm','2014-06-01 19:07:55'),(2460,'123.121.211.43','http://www.eleword.net:80/news.htm','2014-06-01 19:08:11'),(2461,'123.121.211.43','http://www.eleword.net:80/news.htm','2014-06-01 19:08:36'),(2462,'123.121.211.43','http://www.eleword.net:80/news.htm','2014-06-01 19:11:25'),(2463,'123.121.211.43','http://www.eleword.net:80/aboutme.htm','2014-06-01 19:17:55'),(2464,'123.121.211.43','http://www.eleword.net:80/index.htm','2014-06-01 20:00:36'),(2465,'220.181.108.84','http://www.eleword.net:80/category/7.htm','2014-06-01 20:13:18'),(2466,'116.209.3.54, 119.147.225.229','http://www.eleword.net:80/news.htm','2014-06-01 20:33:19'),(2467,'203.208.60.194','http://www.eleword.net:80/article/135.htm','2014-06-01 22:01:27'),(2468,'203.208.60.192','http://www.eleword.net:80/article/131.htm','2014-06-01 22:17:13'),(2469,'203.208.60.190','http://www.eleword.net:80/news/115.htm','2014-06-01 22:33:43'),(2470,'203.208.60.195','http://www.eleword.net:80/article/132.htm','2014-06-01 22:36:57'),(2471,'203.208.60.190','http://www.eleword.net:80/category/29.htm','2014-06-01 22:42:06'),(2472,'123.125.71.90','http://www.eleword.net:80/article/129.htm','2014-06-01 23:06:27'),(2473,'220.181.108.88','http://www.eleword.net:80/index.htm','2014-06-02 00:18:44'),(2474,'203.208.60.192','http://www.eleword.net:80/article/134.htm','2014-06-02 00:31:58'),(2475,'220.181.108.99','http://www.eleword.net:80/category/26.htm','2014-06-02 00:38:15'),(2476,'203.208.60.191','http://www.eleword.net:80/index.htm','2014-06-02 04:37:16'),(2477,'203.208.60.192','http://www.eleword.net:80/news/104.htm','2014-06-02 06:10:21'),(2478,'203.208.60.195','http://www.eleword.net:80/news/107.htm','2014-06-02 06:33:51'),(2479,'123.121.211.43','http://www.eleword.net:80/index.htm','2014-06-02 07:31:41'),(2480,'123.121.211.43','http://www.eleword.net:80/article/137.htm','2014-06-02 07:31:45'),(2481,'123.125.71.48','http://www.eleword.net:80/article/88.htm','2014-06-02 09:23:57'),(2482,'123.121.211.43','http://www.eleword.net:80/index.htm','2014-06-02 09:32:36'),(2483,'123.121.211.43','http://www.eleword.net:80/index.htm','2014-06-02 09:50:31'),(2484,'123.121.211.43','http://www.eleword.net:80/article/137.htm','2014-06-02 09:50:38'),(2485,'220.181.108.95','http://www.eleword.net:80/news/156.htm','2014-06-02 09:53:56'),(2486,'61.135.190.219','http://www.eleword.net:80/index.htm','2014-06-02 11:50:17'),(2487,'220.181.108.109','http://www.eleword.net:80/article/64.htm','2014-06-02 11:58:11'),(2488,'203.208.60.190','http://www.eleword.net:80/news/109.htm','2014-06-02 12:08:29'),(2489,'203.208.60.193','http://www.eleword.net:80/news/122.htm','2014-06-02 12:17:49'),(2490,'123.121.211.43','http://www.eleword.net:80/index.htm','2014-06-02 12:27:39'),(2491,'203.208.60.194','http://www.eleword.net:80/article/5.htm','2014-06-02 16:36:02'),(2492,'203.208.60.194','http://www.eleword.net:80/category/30.htm','2014-06-02 16:43:06'),(2493,'203.208.60.192','http://www.eleword.net:80/news/110.htm','2014-06-02 16:45:45'),(2494,'220.181.108.123','http://www.eleword.net:80/article/16.htm','2014-06-02 16:53:07'),(2495,'203.208.60.196','http://www.eleword.net:80/news/117.htm','2014-06-02 16:54:41'),(2496,'123.125.71.56','http://www.eleword.net:80/article/132.htm','2014-06-02 19:00:02'),(2497,'112.64.235.254','http://www.eleword.net:80/index.htm','2014-06-02 20:39:28'),(2498,'123.121.215.131','http://www.eleword.net:80/index.htm','2014-06-02 20:40:29'),(2499,'123.125.71.115','http://www.eleword.net:80/article/57.htm','2014-06-02 21:01:07'),(2500,'203.208.60.193','http://www.eleword.net:80/news/113.htm','2014-06-02 22:48:52'),(2501,'220.181.108.153','http://www.eleword.net:80/news/146.htm','2014-06-02 23:53:44'),(2502,'203.208.60.193','http://www.eleword.net:80/category/8.htm','2014-06-03 00:45:50'),(2503,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 09:04:14'),(2504,'124.207.82.22','http://www.eleword.net:80/article/137.htm','2014-06-03 09:13:11'),(2505,'124.207.82.22','http://www.eleword.net:80/news/173.htm','2014-06-03 09:16:15'),(2506,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:16:16'),(2507,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:16:18'),(2508,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:16:35'),(2509,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:17:58'),(2510,'124.207.82.22','http://www.eleword.net:80/news/174.htm','2014-06-03 09:17:59'),(2511,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 09:18:05'),(2512,'124.207.82.22','http://www.eleword.net:80/news/175.htm','2014-06-03 09:19:24'),(2513,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:19:25'),(2514,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 09:19:34'),(2515,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:19:37'),(2516,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:21:58'),(2517,'124.207.82.22','http://www.eleword.net:80/news/176.htm','2014-06-03 09:22:14'),(2518,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 09:22:21'),(2519,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 09:22:27'),(2520,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 09:23:44'),(2521,'124.207.82.22','http://www.eleword.net:80/article/138.htm','2014-06-03 10:40:48'),(2522,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 10:40:51'),(2523,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 10:40:51'),(2524,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年6月.htm','2014-06-03 10:40:54'),(2525,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年6月.htm','2014-06-03 10:40:55'),(2526,'124.207.82.22','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-06-03 10:41:03'),(2527,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 10:41:21'),(2528,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 11:34:52'),(2529,'124.207.82.22','http://www.eleword.net:80/article/114.htm','2014-06-03 11:34:54'),(2530,'61.135.190.222','http://www.eleword.net:80/index.htm','2014-06-03 11:49:47'),(2531,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 12:09:08'),(2532,'124.207.82.22','http://www.eleword.net:80/article/139.htm','2014-06-03 12:14:38'),(2533,'124.207.82.22','http://www.eleword.net:80/article/139.htm','2014-06-03 12:14:58'),(2534,'124.207.82.22','http://www.eleword.net:80/article/139.htm','2014-06-03 12:14:59'),(2535,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 12:16:02'),(2536,'124.207.82.22','http://www.eleword.net:80/category/30.htm','2014-06-03 12:16:07'),(2537,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 12:16:09'),(2538,'124.207.82.22','http://www.eleword.net:80/news/177.htm','2014-06-03 12:20:13'),(2539,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 12:20:14'),(2540,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-03 12:20:15'),(2541,'203.208.60.192','http://www.eleword.net:80/news.htm','2014-06-03 12:59:06'),(2542,'61.135.190.72','http://www.eleword.net:80/news.htm','2014-06-03 13:15:58'),(2543,'203.208.60.195','http://www.eleword.net:80/article/136.htm','2014-06-03 13:19:16'),(2544,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 13:20:19'),(2545,'124.207.82.22','http://www.eleword.net:80/article/136.htm','2014-06-03 13:22:44'),(2546,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 14:49:46'),(2547,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-03 17:00:55'),(2548,'124.207.82.22','http://www.eleword.net:80/article/137.htm','2014-06-03 17:01:08'),(2549,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-06-03 17:04:58'),(2550,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-06-03 17:05:22'),(2551,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-06-03 17:05:27'),(2552,'202.99.16.22','http://www.eleword.net:80/article/140.htm','2014-06-03 17:05:55'),(2553,'220.181.108.84','http://www.eleword.net:80/category/28.htm','2014-06-03 19:01:09'),(2554,'123.121.215.131','http://www.eleword.net:80/index.htm','2014-06-03 19:26:38'),(2555,'203.208.60.195','http://www.eleword.net:80/index.htm','2014-06-03 19:33:54'),(2556,'220.181.108.160','http://www.eleword.net:80/article/38.htm','2014-06-03 20:19:59'),(2557,'203.208.60.195','http://www.eleword.net:80/category/8.htm','2014-06-03 20:29:10'),(2558,'203.208.60.196','http://www.eleword.net:80/article/140.htm','2014-06-03 20:38:48'),(2559,'123.125.71.115','http://www.eleword.net:80/article/123.htm','2014-06-03 21:27:16'),(2560,'123.125.71.116','http://www.eleword.net:80/index.htm','2014-06-03 23:49:07'),(2561,'203.208.60.193','http://www.eleword.net:80/category/13.htm','2014-06-04 00:25:19'),(2562,'203.208.60.196','http://www.eleword.net:80/article/138.htm','2014-06-04 00:53:31'),(2563,'203.208.60.190','http://www.eleword.net:80/article/56.htm','2014-06-04 01:53:52'),(2564,'203.208.60.195','http://www.eleword.net:80/category/11.htm','2014-06-04 02:04:09'),(2565,'203.208.60.194','http://www.eleword.net:80/index.htm','2014-06-04 02:09:39'),(2566,'203.208.60.194','http://www.eleword.net:80/category/17.htm','2014-06-04 02:36:39'),(2567,'123.125.71.32','http://www.eleword.net:80/article/115.htm','2014-06-04 03:48:47'),(2568,'203.208.60.190','http://www.eleword.net:80/index.htm','2014-06-04 03:56:16'),(2569,'123.125.71.91','http://www.eleword.net:80/article/137.htm','2014-06-04 04:03:48'),(2570,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 08:29:49'),(2571,'203.208.60.193','http://www.eleword.net:80/article/129.htm','2014-06-04 08:31:29'),(2572,'124.207.82.22','http://www.eleword.net:80/news/178.htm','2014-06-04 08:40:01'),(2573,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-04 08:40:02'),(2574,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-04 08:40:21'),(2575,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-04 08:55:54'),(2576,'124.207.82.22','http://www.eleword.net:80/news/179.htm','2014-06-04 08:59:56'),(2577,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-04 08:59:58'),(2578,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-04 09:00:14'),(2579,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 09:00:16'),(2580,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 09:10:13'),(2581,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-06-04 09:11:00'),(2582,'202.99.16.22','http://www.eleword.net:80/article/138.htm','2014-06-04 09:11:15'),(2583,'202.99.16.22','http://www.eleword.net:80/news.htm','2014-06-04 09:11:58'),(2584,'124.207.82.22','http://www.eleword.net:80/article/119.htm','2014-06-04 09:14:59'),(2585,'124.207.82.22','http://www.eleword.net:80/category/18.htm','2014-06-04 09:16:04'),(2586,'124.207.82.22','http://www.eleword.net:80/article/55.htm','2014-06-04 09:16:05'),(2587,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 09:23:50'),(2588,'124.207.82.22','http://www.eleword.net:80/article/120.htm','2014-06-04 09:25:53'),(2589,'124.207.82.22','http://www.eleword.net:80/category/25.htm','2014-06-04 09:43:48'),(2590,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-06-04 09:43:58'),(2591,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-04 09:44:01'),(2592,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-04 09:44:08'),(2593,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-04 09:44:13'),(2594,'124.207.82.22','http://www.eleword.net:80/category/4.htm','2014-06-04 09:44:17'),(2595,'124.207.82.22','http://www.eleword.net:80/article/62.htm','2014-06-04 09:44:26'),(2596,'124.207.82.22','http://www.eleword.net:80/article/61.htm','2014-06-04 09:44:32'),(2597,'204.236.226.210','http://www.eleword.net:80/index.htm','2014-06-04 10:12:40'),(2598,'203.208.60.196','http://www.eleword.net:80/article/110.htm','2014-06-04 10:43:39'),(2599,'220.181.108.168','http://www.eleword.net:80/category/27.htm','2014-06-04 11:11:00'),(2600,'203.208.60.191','http://www.eleword.net:80/category/25.htm','2014-06-04 11:21:16'),(2601,'124.207.82.22','http://www.eleword.net:80/category/16.htm','2014-06-04 11:27:31'),(2602,'203.208.60.193','http://www.eleword.net:80/article/109.htm','2014-06-04 11:28:36'),(2603,'124.207.82.22','http://www.eleword.net:80/category/16.htm','2014-06-04 11:36:08'),(2604,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 11:36:14'),(2605,'204.236.226.210','http://www.eleword.net:80/aboutme.htm','2014-06-04 11:37:41'),(2606,'61.135.190.220','http://www.eleword.net:80/index.htm','2014-06-04 11:50:22'),(2607,'202.99.16.22','http://www.eleword.net:80/category/1.htm','2014-06-04 12:18:06'),(2608,'202.99.16.22','http://www.eleword.net:80/article/70.htm','2014-06-04 12:18:10'),(2609,'203.208.60.194','http://www.eleword.net:80/articles/archive/2014年6月.htm','2014-06-04 12:29:36'),(2610,'203.208.60.194','http://www.eleword.net:80/category/9.htm','2014-06-04 13:37:33'),(2611,'203.208.60.190','http://www.eleword.net:80/category/26.htm','2014-06-04 14:20:39'),(2612,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 16:48:39'),(2613,'124.207.82.22','http://www.eleword.net:80/article/141.htm','2014-06-04 16:49:05'),(2614,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-04 16:49:12'),(2615,'220.181.108.148','http://www.eleword.net:80/article/125.htm','2014-06-04 16:59:28'),(2616,'202.99.16.22','http://www.eleword.net:80/index.htm','2014-06-04 17:24:03'),(2617,'202.99.16.22','http://www.eleword.net:80/article/134.htm','2014-06-04 17:25:35'),(2618,'203.208.60.194','http://www.eleword.net:80/articles/archive/2014年6月.htm','2014-06-04 17:56:57'),(2619,'203.208.60.193','http://www.eleword.net:80/article/141.htm','2014-06-04 18:03:24'),(2620,'203.208.60.194','http://www.eleword.net:80/news.htm','2014-06-04 18:43:40'),(2621,'203.208.60.193','http://www.eleword.net:80/category/6.htm','2014-06-04 18:47:22'),(2622,'203.208.60.196','http://www.eleword.net:80/news/160.htm','2014-06-04 18:49:34'),(2623,'203.208.60.196','http://www.eleword.net:80/category/10.htm','2014-06-04 19:55:01'),(2624,'66.249.65.216','http://www.eleword.net:80/category/7.htm','2014-06-04 20:12:00'),(2625,'123.125.71.102','http://www.eleword.net:80/aboutme.htm','2014-06-04 20:49:10'),(2626,'66.249.65.216','http://www.eleword.net:80/aboutme.htm','2014-06-04 21:10:58'),(2627,'66.249.65.229','http://www.eleword.net:80/category/5.htm','2014-06-04 21:15:00'),(2628,'66.249.65.216','http://www.eleword.net:80/category/19.htm','2014-06-04 21:52:29'),(2629,'66.249.65.203','http://www.eleword.net:80/category/12.htm','2014-06-04 22:53:47'),(2630,'66.249.65.203','http://www.eleword.net:80/category/3.htm','2014-06-04 22:54:24'),(2631,'123.121.215.131','http://www.eleword.net:80/index.htm','2014-06-04 22:57:35'),(2632,'123.121.215.131','http://www.eleword.net:80/article/141.htm','2014-06-04 22:57:38'),(2633,'123.121.215.131','http://www.eleword.net:80/news.htm','2014-06-04 22:57:43'),(2634,'123.121.215.131','http://www.eleword.net:80/news/179.htm','2014-06-04 22:57:44'),(2635,'123.121.215.131','http://www.eleword.net:80/category/1.htm','2014-06-04 22:57:48'),(2636,'123.121.215.131','http://www.eleword.net:80/article/140.htm','2014-06-04 23:00:36'),(2637,'123.121.215.131','http://www.eleword.net:80/article/142.htm','2014-06-04 23:37:18'),(2638,'66.249.65.229','http://www.eleword.net:80/category/4.htm','2014-06-05 00:09:04'),(2639,'66.249.65.203','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-06-05 01:11:05'),(2640,'66.249.65.216','http://www.eleword.net:80/category/18.htm','2014-06-05 02:14:22'),(2641,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 06:39:49'),(2642,'123.121.199.136','http://www.eleword.net:80/article/142.htm','2014-06-05 06:40:15'),(2643,'123.121.199.136','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-06-05 06:40:41'),(2644,'123.121.199.136','http://www.eleword.net:80/news/156.htm','2014-06-05 06:42:32'),(2645,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-05 06:43:02'),(2646,'123.121.199.136','http://www.eleword.net:80/category/14.htm','2014-06-05 06:43:10'),(2647,'123.121.199.136','http://www.eleword.net:80/category/14.htm','2014-06-05 06:46:33'),(2648,'123.121.199.136','http://www.eleword.net:80/article/143.htm','2014-06-05 06:46:34'),(2649,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 06:47:30'),(2650,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-05 06:47:35'),(2651,'66.249.65.203','http://www.eleword.net:80/news/172.htm','2014-06-05 06:48:51'),(2652,'66.249.65.229','http://www.eleword.net:80/news/159.htm','2014-06-05 06:53:34'),(2653,'66.249.65.216','http://www.eleword.net:80/news/179.htm','2014-06-05 06:58:50'),(2654,'66.249.65.203','http://www.eleword.net:80/article/133.htm','2014-06-05 07:02:53'),(2655,'66.249.65.216','http://www.eleword.net:80/news/177.htm','2014-06-05 07:03:28'),(2656,'66.249.65.229','http://www.eleword.net:80/article/45.htm','2014-06-05 07:05:02'),(2657,'66.249.65.229','http://www.eleword.net:80/news/170.htm','2014-06-05 07:08:35'),(2658,'66.249.65.229','http://www.eleword.net:80/news/164.htm','2014-06-05 07:13:41'),(2659,'66.249.65.229','http://www.eleword.net:80/news/165.htm','2014-06-05 07:18:43'),(2660,'66.249.65.203','http://www.eleword.net:80/news/176.htm','2014-06-05 07:22:51'),(2661,'10.239.159.34, 221.179.140.171','http://www.eleword.net:80/index.htm','2014-06-05 07:25:49'),(2662,'10.239.159.34, 221.179.140.171','http://www.eleword.net:80/article/139.htm','2014-06-05 07:26:24'),(2663,'66.249.65.229','http://www.eleword.net:80/news/174.htm','2014-06-05 07:28:48'),(2664,'66.249.65.229','http://www.eleword.net:80/news/161.htm','2014-06-05 07:33:47'),(2665,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-05 08:34:32'),(2666,'180.76.6.41','http://www.eleword.net:80/index.htm','2014-06-05 08:36:31'),(2667,'124.207.82.22','http://www.eleword.net:80/news/180.htm','2014-06-05 08:39:30'),(2668,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:32'),(2669,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:34'),(2670,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:46'),(2671,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:46'),(2672,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:48'),(2673,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:51'),(2674,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:51'),(2675,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:39:51'),(2676,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:40:03'),(2677,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:40:03'),(2678,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:40:27'),(2679,'124.207.82.22','http://www.eleword.net:80/news/181.htm','2014-06-05 08:48:59'),(2680,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-05 08:49:02'),(2681,'124.207.82.22','http://www.eleword.net:80/news/181.htm','2014-06-05 08:49:16'),(2682,'124.207.82.22','http://www.eleword.net:80/news/181.htm','2014-06-05 08:49:32'),(2683,'124.207.82.22','http://www.eleword.net:80/category/14.htm','2014-06-05 09:05:38'),(2684,'124.207.82.22','http://www.eleword.net:80/news/173.htm','2014-06-05 09:08:01'),(2685,'124.207.82.22','http://www.eleword.net:80/article/143.htm','2014-06-05 09:08:07'),(2686,'124.207.82.22','http://www.eleword.net:80/article/53.htm','2014-06-05 09:22:17'),(2687,'124.207.82.22','http://www.eleword.net:80/category/5.htm','2014-06-05 09:22:37'),(2688,'124.207.82.22','http://www.eleword.net:80/article/9.htm','2014-06-05 09:22:38'),(2689,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-05 09:57:19'),(2690,'124.207.82.22','http://www.eleword.net:80/article/122.htm','2014-06-05 10:33:56'),(2691,'66.249.65.203','http://www.eleword.net:80/news/167.htm','2014-06-05 12:08:35'),(2692,'66.249.65.216','http://www.eleword.net:80/news/162.htm','2014-06-05 12:12:18'),(2693,'66.249.65.216','http://www.eleword.net:80/news/171.htm','2014-06-05 12:19:09'),(2694,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-05 12:19:49'),(2695,'66.249.65.229','http://www.eleword.net:80/category/5.htm','2014-06-05 12:28:14'),(2696,'66.249.65.203','http://www.eleword.net:80/news/163.htm','2014-06-05 12:28:38'),(2697,'66.249.65.229','http://www.eleword.net:80/news/168.htm','2014-06-05 12:33:35'),(2698,'66.249.65.203','http://www.eleword.net:80/news/169.htm','2014-06-05 12:38:34'),(2699,'66.249.65.229','http://www.eleword.net:80/news/178.htm','2014-06-05 12:42:59'),(2700,'66.249.65.229','http://www.eleword.net:80/news/173.htm','2014-06-05 12:48:59'),(2701,'66.249.65.203','http://www.eleword.net:80/news/166.htm','2014-06-05 12:52:47'),(2702,'66.249.65.203','http://www.eleword.net:80/news/175.htm','2014-06-05 12:58:43'),(2703,'66.249.65.203','http://www.eleword.net:80/article/109.htm','2014-06-05 13:01:48'),(2704,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-05 14:41:35'),(2705,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-06-05 14:41:46'),(2706,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-05 14:41:50'),(2707,'66.249.65.229','http://www.eleword.net:80/category/9.htm','2014-06-05 14:54:23'),(2708,'195.95.167.6','http://www.eleword.net:80/article/26.htm','2014-06-05 16:11:50'),(2709,'66.249.65.229','http://www.eleword.net:80/article/107.htm','2014-06-05 16:21:19'),(2710,'123.125.71.55','http://www.eleword.net:80/index.htm','2014-06-05 16:27:46'),(2711,'66.249.65.216','http://www.eleword.net:80/category/12.htm','2014-06-05 17:11:19'),(2712,'66.249.65.203','http://www.eleword.net:80/index.htm','2014-06-05 18:17:18'),(2713,'66.249.65.229','http://www.eleword.net:80/category/1.htm','2014-06-05 18:23:41'),(2714,'66.249.65.203','http://www.eleword.net:80/article/143.htm','2014-06-05 18:33:38'),(2715,'66.249.65.216','http://www.eleword.net:80/category/13.htm','2014-06-05 18:34:34'),(2716,'66.249.65.203','http://www.eleword.net:80/article/142.htm','2014-06-05 18:38:27'),(2717,'66.249.65.229','http://www.eleword.net:80/category/26.htm','2014-06-05 19:08:52'),(2718,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 19:31:19'),(2719,'61.135.190.224','http://www.eleword.net:80/index.htm','2014-06-05 19:32:14'),(2720,'66.249.65.229','http://www.eleword.net:80/category/7.htm','2014-06-05 19:47:45'),(2721,'213.238.175.66','http://www.eleword.net:80/article/9.htm','2014-06-05 19:53:36'),(2722,'213.238.175.66','http://www.eleword.net:80/comments/9.htm','2014-06-05 19:53:39'),(2723,'213.238.175.66','http://www.eleword.net:80/article/9.htm','2014-06-05 19:53:41'),(2724,'66.249.65.229','http://www.eleword.net:80/category/2.htm','2014-06-05 20:22:04'),(2725,'123.125.71.53','http://www.eleword.net:80/index.htm','2014-06-05 20:30:14'),(2726,'123.125.71.16','http://www.eleword.net:80/news.htm','2014-06-05 20:46:40'),(2727,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 22:25:50'),(2728,'123.121.199.136','http://www.eleword.net:80/category/1.htm','2014-06-05 22:26:03'),(2729,'123.121.199.136','http://www.eleword.net:80/article/141.htm','2014-06-05 22:26:04'),(2730,'123.121.199.136','http://www.eleword.net:80/category/29.htm','2014-06-05 22:29:55'),(2731,'123.121.199.136','http://www.eleword.net:80/article/130.htm','2014-06-05 22:29:57'),(2732,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-05 22:40:22'),(2733,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 22:41:27'),(2734,'123.121.199.136','http://www.eleword.net:80/article/123.htm','2014-06-05 22:41:47'),(2735,'123.121.199.136','http://www.eleword.net:80/news/175.htm','2014-06-05 22:42:04'),(2736,'123.121.199.136','http://www.eleword.net:80/article/143.htm','2014-06-05 22:42:08'),(2737,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 22:46:25'),(2738,'180.153.214.197','http://www.eleword.net:80/index.htm','2014-06-05 23:17:08'),(2739,'101.226.51.227','http://www.eleword.net:80/index.htm','2014-06-05 23:19:24'),(2740,'66.249.79.182','http://www.eleword.net:80/category/15.htm','2014-06-05 23:29:42'),(2741,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-05 23:51:51'),(2742,'123.121.199.136','http://www.eleword.net:80/article/143.htm','2014-06-05 23:52:36'),(2743,'66.249.79.150','http://www.eleword.net:80/category/6.htm','2014-06-06 00:45:06'),(2744,'66.249.79.182','http://www.eleword.net:80/category/25.htm','2014-06-06 01:32:31'),(2745,'66.249.79.150','http://www.eleword.net:80/index.htm','2014-06-06 02:39:34'),(2746,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-06-06 02:48:30'),(2747,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-06-06 04:07:17'),(2748,'91.66.102.83, 66.249.81.220','http://www.eleword.net:80/news.htm','2014-06-06 04:33:38'),(2749,'91.66.102.83, 66.249.81.220','http://www.eleword.net:80/news/178.htm','2014-06-06 04:34:02'),(2750,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 06:11:34'),(2751,'123.121.199.136','http://www.eleword.net:80/article/124.htm','2014-06-06 06:12:39'),(2752,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 06:45:49'),(2753,'123.121.199.136','http://www.eleword.net:80/go.htm','2014-06-06 06:45:57'),(2754,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-06 06:45:59'),(2755,'123.121.199.136','http://www.eleword.net:80/article/143.htm','2014-06-06 06:46:13'),(2756,'123.121.199.136','http://www.eleword.net:80/go.htm','2014-06-06 06:46:21'),(2757,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-06 06:46:23'),(2758,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-06 06:49:15'),(2759,'123.121.199.136','http://www.eleword.net:80/article/130.htm','2014-06-06 06:49:17'),(2760,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-06 06:50:40'),(2761,'123.121.199.136','http://www.eleword.net:80/article/141.htm','2014-06-06 06:53:51'),(2762,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 07:05:26'),(2763,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-06-06 07:49:49'),(2764,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 08:43:33'),(2765,'124.207.82.22','http://www.eleword.net:80/news/182.htm','2014-06-06 08:46:47'),(2766,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:46:53'),(2767,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:46:54'),(2768,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:47:10'),(2769,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:49:45'),(2770,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:53:37'),(2771,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:55:17'),(2772,'124.207.82.22','http://www.eleword.net:80/news/185.htm','2014-06-06 08:55:18'),(2773,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 08:55:40'),(2774,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 08:55:41'),(2775,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 08:59:31'),(2776,'124.207.82.22','http://www.eleword.net:80/news/186.htm','2014-06-06 08:59:33'),(2777,'124.207.82.22','http://www.eleword.net:80/news/187.htm','2014-06-06 09:02:21'),(2778,'124.207.82.22','http://www.eleword.net:80/news/187.htm','2014-06-06 09:02:23'),(2779,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 09:02:26'),(2780,'124.207.82.22','http://www.eleword.net:80/news/187.htm','2014-06-06 09:02:28'),(2781,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 09:02:29'),(2782,'124.207.82.22','http://www.eleword.net:80/news/188.htm','2014-06-06 09:04:07'),(2783,'124.207.82.22','http://www.eleword.net:80/news/188.htm','2014-06-06 09:04:08'),(2784,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 09:04:17'),(2785,'124.207.82.22','http://www.eleword.net:80/category/2.htm','2014-06-06 09:04:28'),(2786,'124.207.82.22','http://www.eleword.net:80/article/12.htm','2014-06-06 09:04:31'),(2787,'124.207.82.22','http://www.eleword.net:80/news/188.htm','2014-06-06 09:10:48'),(2788,'124.207.82.22','http://www.eleword.net:80/news/188.htm','2014-06-06 09:11:14'),(2789,'124.207.82.22','http://www.eleword.net:80/article/144.htm','2014-06-06 09:27:33'),(2790,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 09:27:45'),(2791,'124.207.82.22','http://www.eleword.net:80/article/137.htm','2014-06-06 09:30:06'),(2792,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-06-06 09:30:11'),(2793,'124.207.82.22','http://www.eleword.net:80/category/15.htm','2014-06-06 09:37:39'),(2794,'124.207.82.22','http://www.eleword.net:80/article/77.htm','2014-06-06 09:37:46'),(2795,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-06 10:18:53'),(2796,'124.207.82.22','http://www.eleword.net:80/news/185.htm','2014-06-06 10:18:56'),(2797,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-06-06 10:18:58'),(2798,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-06 10:19:00'),(2799,'124.207.82.22','http://www.eleword.net:80/article/134.htm','2014-06-06 10:19:05'),(2800,'124.207.82.22','http://www.eleword.net:80/comments/134.htm','2014-06-06 10:19:55'),(2801,'124.207.82.22','http://www.eleword.net:80/article/134.htm','2014-06-06 10:19:55'),(2802,'124.207.82.22','http://www.eleword.net:80/comments/134.htm','2014-06-06 10:20:15'),(2803,'124.207.82.22','http://www.eleword.net:80/article/134.htm','2014-06-06 10:20:16'),(2804,'124.207.82.22','http://www.eleword.net:80/article/139.htm','2014-06-06 10:22:03'),(2805,'124.207.82.22','http://www.eleword.net:80/article/129.htm','2014-06-06 10:22:31'),(2806,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 10:33:06'),(2807,'124.207.82.22','http://www.eleword.net:80/article/144.htm','2014-06-06 10:33:08'),(2808,'124.207.82.22','http://www.eleword.net:80/category/1.htm','2014-06-06 10:33:13'),(2809,'124.207.82.22','http://www.eleword.net:80/article/143.htm','2014-06-06 10:33:16'),(2810,'220.181.108.156','http://www.eleword.net:80/category/2.htm','2014-06-06 13:22:18'),(2811,'66.249.79.118','http://www.eleword.net:80/category/11.htm','2014-06-06 14:18:08'),(2812,'66.249.79.118','http://www.eleword.net:80/article/144.htm','2014-06-06 14:23:52'),(2813,'66.249.79.118','http://www.eleword.net:80/category/17.htm','2014-06-06 14:52:55'),(2814,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-06 15:41:46'),(2815,'124.207.82.22','http://www.eleword.net:80/article/144.htm','2014-06-06 15:41:59'),(2816,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-06-06 15:58:43'),(2817,'124.207.82.22','http://www.eleword.net:80/category/11.htm','2014-06-06 16:10:42'),(2818,'124.207.82.22','http://www.eleword.net:80/go.htm','2014-06-06 16:11:23'),(2819,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-06 16:11:32'),(2820,'124.207.82.22','http://www.eleword.net:80/article/35.htm','2014-06-06 16:11:44'),(2821,'124.207.82.22','http://www.eleword.net:80/article/112.htm','2014-06-06 16:11:50'),(2822,'61.135.190.221','http://www.eleword.net:80/news/156.htm','2014-06-06 16:52:24'),(2823,'61.135.190.101','http://www.eleword.net:80/index.htm','2014-06-06 16:52:34'),(2824,'61.135.190.222','http://www.eleword.net:80/news.htm','2014-06-06 16:52:35'),(2825,'66.249.79.150','http://www.eleword.net:80/category/4.htm','2014-06-06 17:36:27'),(2826,'66.249.79.182','http://www.eleword.net:80/category/18.htm','2014-06-06 19:30:17'),(2827,'66.249.79.182','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-06-06 20:15:28'),(2828,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 20:35:09'),(2829,'123.121.199.136','http://www.eleword.net:80/article/144.htm','2014-06-06 20:54:06'),(2830,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 21:26:28'),(2831,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 21:26:29'),(2832,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 21:26:29'),(2833,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-06 21:32:46'),(2834,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-06 21:44:18'),(2835,'123.121.199.136','http://www.eleword.net:80/go.htm','2014-06-06 21:44:36'),(2836,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-06 21:44:37'),(2837,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-06 22:05:14'),(2838,'66.249.79.118','http://www.eleword.net:80/category/1.htm','2014-06-06 22:29:54'),(2839,'66.249.66.111','http://www.eleword.net:80/news/25.htm','2014-06-06 23:46:23'),(2840,'66.249.66.114','http://www.eleword.net:80/article/100.htm','2014-06-06 23:47:41'),(2841,'123.125.71.15','http://www.eleword.net:80/category/4.htm','2014-06-07 00:03:02'),(2842,'66.249.79.150','http://www.eleword.net:80/news/9.htm','2014-06-07 01:15:22'),(2843,'66.249.79.118','http://www.eleword.net:80/category/5.htm','2014-06-07 01:15:39'),(2844,'66.249.79.182','http://www.eleword.net:80/news/16.htm','2014-06-07 03:06:45'),(2845,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-06-07 04:15:53'),(2846,'66.249.79.150','http://www.eleword.net:80/news/13.htm','2014-06-07 04:23:34'),(2847,'66.249.79.150','http://www.eleword.net:80/news/37.htm','2014-06-07 04:46:05'),(2848,'123.125.71.47','http://www.eleword.net:80/article/140.htm','2014-06-07 05:09:16'),(2849,'66.249.79.118','http://www.eleword.net:80/news/12.htm','2014-06-07 05:30:06'),(2850,'66.249.79.182','http://www.eleword.net:80/news/32.htm','2014-06-07 06:20:23'),(2851,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 06:29:19'),(2852,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 06:29:20'),(2853,'123.121.199.136','http://www.eleword.net:80/article/143.htm','2014-06-07 06:29:23'),(2854,'123.121.199.136','http://www.eleword.net:80/article/143.htm','2014-06-07 06:30:18'),(2855,'66.249.79.182','http://www.eleword.net:80/news/31.htm','2014-06-07 06:36:25'),(2856,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 06:39:05'),(2857,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-07 06:39:15'),(2858,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-07 06:39:18'),(2859,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-07 06:39:27'),(2860,'123.121.199.136','http://www.eleword.net:80/search.htm','2014-06-07 06:39:32'),(2861,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 06:48:45'),(2862,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 06:48:46'),(2863,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 06:49:00'),(2864,'123.121.199.136','http://www.eleword.net:80/news/189.htm','2014-06-07 06:49:01'),(2865,'66.249.79.150','http://www.eleword.net:80/news/30.htm','2014-06-07 07:05:27'),(2866,'123.121.199.136','http://www.eleword.net:80/category/22.htm','2014-06-07 07:27:51'),(2867,'123.121.199.136','http://www.eleword.net:80/article/145.htm','2014-06-07 07:29:08'),(2868,'123.121.199.136','http://www.eleword.net:80/article/145.htm','2014-06-07 07:31:05'),(2869,'123.121.199.136','http://www.eleword.net:80/article/145.htm','2014-06-07 07:31:07'),(2870,'123.121.199.136','http://www.eleword.net:80/article/145.htm','2014-06-07 07:32:05'),(2871,'123.121.199.136','http://www.eleword.net:80/article/146.htm','2014-06-07 07:37:05'),(2872,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 07:37:12'),(2873,'123.121.199.136','http://www.eleword.net:80/article/130.htm','2014-06-07 07:41:41'),(2874,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 07:47:18'),(2875,'123.121.199.136','http://www.eleword.net:80/article/141.htm','2014-06-07 07:49:09'),(2876,'123.125.71.41','http://www.eleword.net:80/index.htm','2014-06-07 08:25:43'),(2877,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 08:28:16'),(2878,'66.249.79.150','http://www.eleword.net:80/category/13.htm','2014-06-07 08:37:04'),(2879,'66.249.79.150','http://www.eleword.net:80/category/5.htm','2014-06-07 08:42:48'),(2880,'66.249.79.150','http://www.eleword.net:80/category/10.htm','2014-06-07 09:59:00'),(2881,'66.249.79.118','http://www.eleword.net:80/category/9.htm','2014-06-07 10:01:05'),(2882,'66.249.79.118','http://www.eleword.net:80/category/6.htm','2014-06-07 10:43:33'),(2883,'220.181.108.142','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-07 16:14:23'),(2884,'61.135.190.104','http://www.eleword.net:80/news/156.htm','2014-06-07 16:50:45'),(2885,'61.135.190.102','http://www.eleword.net:80/index.htm','2014-06-07 16:50:49'),(2886,'61.135.190.223','http://www.eleword.net:80/news.htm','2014-06-07 16:50:50'),(2887,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 19:49:14'),(2888,'123.121.199.136','http://www.eleword.net:80/news/190.htm','2014-06-07 20:14:28'),(2889,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:14:32'),(2890,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:14:33'),(2891,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:15:02'),(2892,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:15:03'),(2893,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 20:15:10'),(2894,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 20:16:14'),(2895,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:16:15'),(2896,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:16:34'),(2897,'123.121.199.136','http://www.eleword.net:80/news.htm','2014-06-07 20:18:21'),(2898,'123.121.199.136','http://www.eleword.net:80/news/192.htm','2014-06-07 20:18:24'),(2899,'123.121.199.136','http://www.eleword.net:80/index.htm','2014-06-07 20:18:28'),(2900,'123.125.71.112','http://www.eleword.net:80/article/137.htm','2014-06-07 20:42:01'),(2901,'66.249.67.216','http://www.eleword.net:80/index.htm','2014-06-08 06:47:17'),(2902,'66.249.67.229','http://www.eleword.net:80/article/92.htm','2014-06-08 07:07:17'),(2903,'123.125.71.60','http://www.eleword.net:80/category/26.htm','2014-06-08 09:43:28'),(2904,'204.236.226.210','http://www.eleword.net:80/aboutme.htm','2014-06-08 15:42:05'),(2905,'123.125.71.44','http://www.eleword.net:80/article/23.htm','2014-06-08 16:39:29'),(2906,'66.249.67.229','http://www.eleword.net:80/category/11.htm','2014-06-08 17:13:10'),(2907,'66.249.67.216','http://www.eleword.net:80/category/7.htm','2014-06-08 19:12:38'),(2908,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-08 19:21:07'),(2909,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-06-08 20:49:16'),(2910,'66.249.79.118','http://www.eleword.net:80/aboutme.htm','2014-06-08 20:57:58'),(2911,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-06-08 21:35:06'),(2912,'66.249.79.182','http://www.eleword.net:80/category/31.htm','2014-06-08 21:49:00'),(2913,'66.249.79.150','http://www.eleword.net:80/article/146.htm','2014-06-08 21:49:04'),(2914,'66.249.79.150','http://www.eleword.net:80/article/145.htm','2014-06-08 21:53:55'),(2915,'66.249.79.182','http://www.eleword.net:80/category/7.htm','2014-06-08 22:57:14'),(2916,'66.249.79.118','http://www.eleword.net:80/category/12.htm','2014-06-08 23:39:56'),(2917,'123.125.71.13','http://www.eleword.net:80/news/146.htm','2014-06-09 00:25:46'),(2918,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-06-09 06:14:10'),(2919,'220.181.108.116','http://www.eleword.net:80/aboutme.htm','2014-06-09 06:15:49'),(2920,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-09 07:31:14'),(2921,'123.121.230.188','http://www.eleword.net:80/category/4.htm','2014-06-09 07:31:24'),(2922,'123.121.230.188','http://www.eleword.net:80/news.htm','2014-06-09 07:31:26'),(2923,'123.121.230.188','http://www.eleword.net:80/news/192.htm','2014-06-09 07:31:31'),(2924,'123.121.230.188','http://www.eleword.net:80/article/143.htm','2014-06-09 07:31:43'),(2925,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 08:34:22'),(2926,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 08:42:53'),(2927,'124.207.82.22','http://www.eleword.net:80/news/193.htm','2014-06-09 09:09:45'),(2928,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 09:09:46'),(2929,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 09:09:47'),(2930,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 09:10:02'),(2931,'124.207.82.22','http://www.eleword.net:80/news/193.htm','2014-06-09 09:10:04'),(2932,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:10:06'),(2933,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:14:25'),(2934,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 09:14:27'),(2935,'124.207.82.22','http://www.eleword.net:80/news/195.htm','2014-06-09 09:14:28'),(2936,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:17:28'),(2937,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 09:17:30'),(2938,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 09:17:37'),(2939,'124.207.82.22','http://www.eleword.net:80/article/127.htm','2014-06-09 09:17:52'),(2940,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:17:54'),(2941,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:17:54'),(2942,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:17:58'),(2943,'124.207.82.22','http://www.eleword.net:80/news/194.htm','2014-06-09 09:18:04'),(2944,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 09:19:15'),(2945,'66.249.79.182','http://www.eleword.net:80/category/1.htm','2014-06-09 10:06:53'),(2946,'124.207.82.22','http://www.eleword.net:80/news/195.htm','2014-06-09 10:36:06'),(2947,'66.249.79.118','http://www.eleword.net:80/article/98.htm','2014-06-09 10:36:32'),(2948,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-09 10:40:10'),(2949,'124.207.82.22','http://www.eleword.net:80/article/130.htm','2014-06-09 10:40:16'),(2950,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-09 10:40:22'),(2951,'124.207.82.22','http://www.eleword.net:80/search.htm','2014-06-09 10:40:24'),(2952,'124.207.82.22','http://www.eleword.net:80/article/83.htm','2014-06-09 10:40:30'),(2953,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 10:40:33'),(2954,'124.207.82.22','http://www.eleword.net:80/article/80.htm','2014-06-09 10:40:42'),(2955,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-09 10:42:12'),(2956,'124.207.82.22','http://www.eleword.net:80/news/192.htm','2014-06-09 10:42:27'),(2957,'124.207.82.22','http://www.eleword.net:80/aboutme.htm','2014-06-09 10:42:34'),(2958,'66.249.79.150','http://www.eleword.net:80/article/97.htm','2014-06-09 10:46:42'),(2959,'66.249.79.150','http://www.eleword.net:80/article/74.htm','2014-06-09 11:06:37'),(2960,'220.181.108.109','http://www.eleword.net:80/article/114.htm','2014-06-09 11:17:52'),(2961,'66.249.79.118','http://www.eleword.net:80/category/9.htm','2014-06-09 11:31:10'),(2962,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-09 13:21:23'),(2963,'220.181.51.82','http://www.eleword.net:80/index.htm','2014-06-09 14:58:41'),(2964,'220.181.51.79','http://www.eleword.net:80/index.htm','2014-06-09 14:58:41'),(2965,'213.238.175.66','http://www.eleword.net:80/article/11.htm','2014-06-09 18:43:08'),(2966,'213.238.175.66','http://www.eleword.net:80/comments/11.htm','2014-06-09 18:43:10'),(2967,'213.238.175.66','http://www.eleword.net:80/article/11.htm','2014-06-09 18:43:11'),(2968,'66.249.79.118','http://www.eleword.net:80/category/4.htm','2014-06-09 22:43:04'),(2969,'66.249.79.182','http://www.eleword.net:80/category/25.htm','2014-06-09 23:13:30'),(2970,'66.249.79.118','http://www.eleword.net:80/article/26.htm','2014-06-09 23:42:13'),(2971,'220.181.108.185','http://www.eleword.net:80/article/25.htm','2014-06-10 00:12:28'),(2972,'66.249.79.118','http://www.eleword.net:80/category/26.htm','2014-06-10 00:51:43'),(2973,'66.249.79.118','http://www.eleword.net:80/category/8.htm','2014-06-10 01:53:33'),(2974,'66.249.79.118','http://www.eleword.net:80/category/18.htm','2014-06-10 02:50:14'),(2975,'66.249.79.150','http://www.eleword.net:80/category/25.htm','2014-06-10 03:47:12'),(2976,'66.249.79.182','http://www.eleword.net:80/news.htm','2014-06-10 04:44:59'),(2977,'66.249.79.182','http://www.eleword.net:80/news/181.htm','2014-06-10 04:53:41'),(2978,'66.249.79.150','http://www.eleword.net:80/news/183.htm','2014-06-10 04:58:48'),(2979,'66.249.79.150','http://www.eleword.net:80/news/187.htm','2014-06-10 05:03:34'),(2980,'66.249.79.118','http://www.eleword.net:80/news/189.htm','2014-06-10 05:08:42'),(2981,'66.249.79.150','http://www.eleword.net:80/news/188.htm','2014-06-10 05:13:42'),(2982,'66.249.79.182','http://www.eleword.net:80/category/4.htm','2014-06-10 05:47:38'),(2983,'66.249.74.215','http://www.eleword.net:80/category/17.htm','2014-06-10 06:56:52'),(2984,'66.249.79.150','http://www.eleword.net:80/article/99.htm','2014-06-10 07:20:12'),(2985,'66.249.79.182','http://www.eleword.net:80/article/94.htm','2014-06-10 07:41:13'),(2986,'66.249.79.182','http://www.eleword.net:80/category/3.htm','2014-06-10 09:25:27'),(2987,'66.249.79.182','http://www.eleword.net:80/news/186.htm','2014-06-10 10:43:33'),(2988,'66.249.79.150','http://www.eleword.net:80/news/184.htm','2014-06-10 10:48:38'),(2989,'66.249.79.118','http://www.eleword.net:80/category/10.htm','2014-06-10 10:54:53'),(2990,'66.249.79.182','http://www.eleword.net:80/article/93.htm','2014-06-10 11:30:47'),(2991,'123.125.71.35','http://www.eleword.net:80/article/6.htm','2014-06-10 11:48:17'),(2992,'66.249.79.182','http://www.eleword.net:80/category/8.htm','2014-06-10 12:02:52'),(2993,'66.249.79.150','http://www.eleword.net:80/category/1.htm','2014-06-10 13:30:01'),(2994,'220.181.108.163','http://www.eleword.net:80/article/49.htm','2014-06-10 14:39:14'),(2995,'220.181.108.186','http://www.eleword.net:80/category/2.htm','2014-06-10 16:56:09'),(2996,'123.125.71.85','http://www.eleword.net:80/category/4.htm','2014-06-10 19:02:43'),(2997,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-10 20:08:46'),(2998,'66.249.79.182','http://www.eleword.net:80/news/195.htm','2014-06-10 21:14:21'),(2999,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-10 22:34:27'),(3000,'66.249.79.150','http://www.eleword.net:80/news/192.htm','2014-06-11 06:43:55'),(3001,'66.249.79.150','http://www.eleword.net:80/news/194.htm','2014-06-11 06:53:46'),(3002,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-11 08:18:35'),(3003,'124.207.82.22','http://www.eleword.net:80/article/146.htm','2014-06-11 08:40:58'),(3004,'124.207.82.22','http://www.eleword.net:80/article/128.htm','2014-06-11 08:41:18'),(3005,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-11 08:41:23'),(3006,'124.207.82.22','http://www.eleword.net:80/news/189.htm','2014-06-11 08:45:25'),(3007,'182.118.44.241','http://www.eleword.net:80/index.htm','2014-06-11 10:18:45'),(3008,'66.249.79.182','http://www.eleword.net:80/article/86.htm','2014-06-11 11:52:48'),(3009,'66.249.79.118','http://www.eleword.net:80/news/191.htm','2014-06-11 12:29:02'),(3010,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-11 12:53:40'),(3011,'66.249.79.150','http://www.eleword.net:80/index.htm','2014-06-11 15:14:27'),(3012,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-11 16:11:29'),(3013,'124.207.82.22','http://www.eleword.net:80/article/147.htm','2014-06-11 16:12:46'),(3014,'124.207.82.22','http://www.eleword.net:80/article/147.htm','2014-06-11 16:12:50'),(3015,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-11 16:12:54'),(3016,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-11 18:11:27'),(3017,'124.207.82.22','http://www.eleword.net:80/article/148.htm','2014-06-11 18:12:41'),(3018,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-11 18:12:54'),(3019,'222.128.107.72','http://www.eleword.net:80/index.htm','2014-06-11 18:50:29'),(3020,'222.128.107.72','http://www.eleword.net:80/index.htm','2014-06-11 18:50:30'),(3021,'66.249.79.150','http://www.eleword.net:80/news/180.htm','2014-06-11 19:01:40'),(3022,'66.249.79.182','http://www.eleword.net:80/news/185.htm','2014-06-11 19:08:54'),(3023,'66.249.79.182','http://www.eleword.net:80/news/182.htm','2014-06-11 19:13:55'),(3024,'222.128.107.72','http://www.eleword.net:80/news.htm','2014-06-11 19:13:57'),(3025,'222.128.107.72','http://www.eleword.net:80/news/195.htm','2014-06-11 19:14:31'),(3026,'66.249.79.182','http://www.eleword.net:80/news/193.htm','2014-06-11 19:18:44'),(3027,'220.181.108.171','http://www.eleword.net:80/article/62.htm','2014-06-11 20:24:11'),(3028,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-11 20:53:53'),(3029,'123.121.230.188','http://www.eleword.net:80/article/148.htm','2014-06-11 20:58:16'),(3030,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 08:39:13'),(3031,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-12 08:54:48'),(3032,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-12 08:54:49'),(3033,'124.207.82.22','http://www.eleword.net:80/news/196.htm','2014-06-12 08:54:51'),(3034,'124.207.82.22','http://www.eleword.net:80/news/196.htm','2014-06-12 08:55:16'),(3035,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-12 08:56:24'),(3036,'124.207.82.22','http://www.eleword.net:80/news/197.htm','2014-06-12 08:56:26'),(3037,'124.207.82.22','http://www.eleword.net:80/news/197.htm','2014-06-12 08:56:36'),(3038,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-12 08:56:40'),(3039,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 08:56:41'),(3040,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-12 08:59:13'),(3041,'124.207.82.22','http://www.eleword.net:80/news/198.htm','2014-06-12 08:59:14'),(3042,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 08:59:21'),(3043,'66.249.79.150','http://www.eleword.net:80/article/148.htm','2014-06-12 09:48:19'),(3044,'123.125.71.47','http://www.eleword.net:80/article/144.htm','2014-06-12 09:57:33'),(3045,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 11:00:34'),(3046,'66.249.74.68','http://www.eleword.net:80/article/21.htm','2014-06-12 11:19:32'),(3047,'66.249.79.182','http://www.eleword.net:80/article/22.htm','2014-06-12 11:47:13'),(3048,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 12:10:20'),(3049,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 12:10:27'),(3050,'124.207.82.22','http://www.eleword.net:80/article/5.htm','2014-06-12 12:10:28'),(3051,'124.207.82.22','http://www.eleword.net:80/category/2.htm','2014-06-12 12:10:32'),(3052,'124.207.82.22','http://www.eleword.net:80/article/21.htm','2014-06-12 12:10:34'),(3053,'124.207.82.22','http://www.eleword.net:80/category/19.htm','2014-06-12 12:10:38'),(3054,'124.207.82.22','http://www.eleword.net:80/category/15.htm','2014-06-12 12:10:41'),(3055,'124.207.82.22','http://www.eleword.net:80/article/147.htm','2014-06-12 12:10:43'),(3056,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 12:10:47'),(3057,'124.207.82.22','http://www.eleword.net:80/article/144.htm','2014-06-12 12:11:24'),(3058,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 14:19:15'),(3059,'124.207.82.22','http://www.eleword.net:80/article/149.htm','2014-06-12 14:20:09'),(3060,'124.207.82.22','http://www.eleword.net:80/article/149.htm','2014-06-12 14:20:57'),(3061,'123.125.71.84','http://www.eleword.net:80/category/26.htm','2014-06-12 14:42:44'),(3062,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 14:46:20'),(3063,'66.249.79.118','http://www.eleword.net:80/article/9.htm','2014-06-12 15:07:44'),(3064,'66.249.79.182','http://www.eleword.net:80/article/149.htm','2014-06-12 15:13:32'),(3065,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-12 16:03:03'),(3066,'66.249.79.118','http://www.eleword.net:80/article/39.htm','2014-06-12 17:23:28'),(3067,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-06-12 17:30:12'),(3068,'221.237.152.76','http://www.eleword.net:80/index.htm','2014-06-12 17:41:50'),(3069,'221.237.152.76','http://www.eleword.net:80/article/147.htm','2014-06-12 17:42:01'),(3070,'221.237.152.76','http://www.eleword.net:80/article/147.htm','2014-06-12 17:42:01'),(3071,'221.237.152.76','http://www.eleword.net:80/article/146.htm','2014-06-12 17:47:21'),(3072,'66.249.74.66','http://www.eleword.net:80/news/18.htm','2014-06-12 18:18:35'),(3073,'66.249.74.67','http://www.eleword.net:80/news/6.htm','2014-06-12 19:22:35'),(3074,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-12 20:05:23'),(3075,'220.181.108.180','http://www.eleword.net:80/category/21.htm','2014-06-12 21:43:55'),(3076,'66.249.79.118','http://www.eleword.net:80/news/23.htm','2014-06-12 21:57:27'),(3077,'66.249.74.57','http://www.eleword.net:80/news/39.htm','2014-06-12 21:57:33'),(3078,'66.249.79.118','http://www.eleword.net:80/index.htm','2014-06-12 23:29:09'),(3079,'66.249.79.150','http://www.eleword.net:80/article/53.htm','2014-06-12 23:38:47'),(3080,'66.249.79.150','http://www.eleword.net:80/article/47.htm','2014-06-12 23:43:44'),(3081,'66.249.79.150','http://www.eleword.net:80/article/16.htm','2014-06-12 23:47:49'),(3082,'66.249.79.150','http://www.eleword.net:80/article/51.htm','2014-06-12 23:48:46'),(3083,'66.249.79.150','http://www.eleword.net:80/article/36.htm','2014-06-13 00:09:46'),(3084,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-13 08:41:40'),(3085,'182.118.25.231','http://www.eleword.net:80/index.htm','2014-06-13 09:29:37'),(3086,'124.207.82.22','http://www.eleword.net:80/news.htm','2014-06-13 09:33:44'),(3087,'124.207.82.22','http://www.eleword.net:80/news/198.htm','2014-06-13 09:33:47'),(3088,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-13 09:47:12'),(3089,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-13 11:00:06'),(3090,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-13 11:26:52'),(3091,'124.207.82.22','http://www.eleword.net:80/index.htm','2014-06-13 13:23:26'),(3092,'123.125.71.12','http://www.eleword.net:80/article/145.htm','2014-06-13 20:24:04'),(3093,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-13 20:55:20'),(3094,'123.125.71.84','http://www.eleword.net:80/article/30.htm','2014-06-13 20:55:45'),(3095,'66.249.79.118','http://www.eleword.net:80/article/41.htm','2014-06-14 03:22:25'),(3096,'220.181.108.114','http://www.eleword.net:80/category/27.htm','2014-06-14 03:36:29'),(3097,'66.249.79.118','http://www.eleword.net:80/article/1.htm','2014-06-14 04:04:42'),(3098,'182.118.60.29','http://www.eleword.net:80/index.htm','2014-06-14 06:08:28'),(3099,'66.249.79.118','http://www.eleword.net:80/news/33.htm','2014-06-14 06:12:52'),(3100,'94.208.214.254','http://www.eleword.net:80/article/26.htm','2014-06-14 07:19:07'),(3101,'66.249.79.118','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-14 08:12:20'),(3102,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-06-14 08:17:02'),(3103,'66.249.79.182','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-14 08:18:13'),(3104,'66.249.79.118','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-14 08:18:34'),(3105,'66.249.79.182','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-14 08:18:49'),(3106,'66.249.79.182','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-14 08:23:41'),(3107,'66.249.79.118','http://www.eleword.net:80/article/8.htm','2014-06-14 08:36:26'),(3108,'66.249.79.150','http://www.eleword.net:80/news/20.htm','2014-06-14 09:10:21'),(3109,'66.249.79.182','http://www.eleword.net:80/news/10.htm','2014-06-14 09:39:56'),(3110,'66.249.79.118','http://www.eleword.net:80/article/147.htm','2014-06-14 11:16:19'),(3111,'66.249.79.182','http://www.eleword.net:80/article/148.htm','2014-06-14 11:31:29'),(3112,'66.249.79.182','http://www.eleword.net:80/article/95.htm','2014-06-14 11:51:13'),(3113,'66.249.79.182','http://www.eleword.net:80/article/137.htm','2014-06-14 12:01:26'),(3114,'66.249.79.182','http://www.eleword.net:80/article/143.htm','2014-06-14 12:06:01'),(3115,'66.249.79.118','http://www.eleword.net:80/article/140.htm','2014-06-14 12:11:39'),(3116,'66.249.79.118','http://www.eleword.net:80/article/138.htm','2014-06-14 12:21:31'),(3117,'123.121.230.188','http://www.eleword.net:80/index.htm','2014-06-14 13:04:10'),(3118,'123.121.230.188','http://www.eleword.net:80/news.htm','2014-06-14 13:04:49'),(3119,'123.121.230.188','http://www.eleword.net:80/news/197.htm','2014-06-14 13:04:51'),(3120,'123.121.230.188','http://www.eleword.net:80/news/198.htm','2014-06-14 13:04:54'),(3121,'123.121.230.188','http://www.eleword.net:80/news/196.htm','2014-06-14 13:05:00'),(3122,'123.121.230.188','http://www.eleword.net:80/aboutme.htm','2014-06-14 13:06:29'),(3123,'123.121.230.188','http://www.eleword.net:80/search.htm','2014-06-14 13:11:20'),(3124,'123.121.230.188','http://www.eleword.net:80/article/47.htm','2014-06-14 13:11:32'),(3125,'157.55.33.39','http://www.eleword.net:80/index.htm','2014-06-14 14:14:51'),(3126,'66.249.79.182','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-06-14 14:40:06'),(3127,'123.121.220.208','http://www.eleword.net:80/index.htm','2014-06-14 15:29:17'),(3128,'123.121.220.208','http://www.eleword.net:80/article/149.htm','2014-06-14 15:53:44'),(3129,'66.249.79.182','http://www.eleword.net:80/category/19.htm','2014-06-14 16:53:28'),(3130,'66.249.79.182','http://www.eleword.net:80/news/34.htm','2014-06-14 16:53:40'),(3131,'66.249.79.118','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-14 16:57:18'),(3132,'66.249.79.150','http://www.eleword.net:80/category/9.htm','2014-06-14 17:38:22'),(3133,'66.249.79.118','http://www.eleword.net:80/article/17.htm','2014-06-14 17:53:39'),(3134,'66.249.79.182','http://www.eleword.net:80/category/2.htm','2014-06-14 18:11:28'),(3135,'66.249.79.150','http://www.eleword.net:80/article/149.htm','2014-06-14 18:35:27'),(3136,'66.249.79.118','http://www.eleword.net:80/category/6.htm','2014-06-14 18:37:36'),(3137,'66.249.79.118','http://www.eleword.net:80/news/7.htm','2014-06-14 18:46:29'),(3138,'66.249.79.150','http://www.eleword.net:80/category/13.htm','2014-06-14 19:22:02'),(3139,'66.249.79.118','http://www.eleword.net:80/news/3.htm','2014-06-14 19:25:31'),(3140,'180.153.206.32','http://www.eleword.net:80/index.htm','2014-06-14 20:16:23'),(3141,'61.135.187.48','http://www.eleword.net:80/index.htm','2014-06-14 20:18:35'),(3142,'101.226.66.176','http://www.eleword.net:80/index.htm','2014-06-14 20:31:30'),(3143,'66.249.79.118','http://www.eleword.net:80/news/5.htm','2014-06-14 21:03:49'),(3144,'66.249.79.182','http://www.eleword.net:80/aboutme.htm','2014-06-14 21:17:54'),(3145,'66.249.79.118','http://www.eleword.net:80/category/11.htm','2014-06-14 22:49:39'),(3146,'66.249.79.150','http://www.eleword.net:80/news/8.htm','2014-06-14 23:02:15'),(3147,'66.249.79.150','http://www.eleword.net:80/category/5.htm','2014-06-14 23:08:15'),(3148,'123.125.71.20','http://www.eleword.net:80/article/84.htm','2014-06-14 23:23:58'),(3149,'66.249.79.118','http://www.eleword.net:80/news/24.htm','2014-06-14 23:42:48'),(3150,'123.125.71.47','http://www.eleword.net:80/aboutme.htm','2014-06-14 23:57:22'),(3151,'66.249.79.118','http://www.eleword.net:80/news/27.htm','2014-06-15 00:03:12'),(3152,'66.249.79.150','http://www.eleword.net:80/index.htm','2014-06-15 00:03:26'),(3153,'66.249.79.182','http://www.eleword.net:80/news/17.htm','2014-06-15 01:01:05'),(3154,'66.249.79.118','http://www.eleword.net:80/article/4.htm','2014-06-15 01:01:12'),(3155,'66.249.79.118','http://www.eleword.net:80/category/12.htm','2014-06-15 01:01:19'),(3156,'66.249.79.118','http://www.eleword.net:80/category/7.htm','2014-06-15 01:01:26'),(3157,'66.249.79.182','http://www.eleword.net:80/article/13.htm','2014-06-15 01:58:29'),(3158,'66.249.79.182','http://www.eleword.net:80/article/10.htm','2014-06-15 01:58:43'),(3159,'66.249.79.150','http://www.eleword.net:80/category/4.htm','2014-06-15 01:58:51'),(3160,'66.249.79.150','http://www.eleword.net:80/category/10.htm','2014-06-15 01:58:57'),(3161,'66.249.79.182','http://www.eleword.net:80/index.htm','2014-06-15 02:24:26'),(3162,'66.249.79.150','http://www.eleword.net:80/news/19.htm','2014-06-15 03:01:55'),(3163,'66.249.79.118','http://www.eleword.net:80/article/6.htm','2014-06-15 03:02:01'),(3164,'66.249.79.118','http://www.eleword.net:80/news.htm','2014-06-15 03:02:08'),(3165,'66.249.79.118','http://www.eleword.net:80/article/26.htm','2014-06-15 03:02:15'),(3166,'66.249.79.150','http://www.eleword.net:80/news/196.htm','2014-06-15 03:04:38'),(3167,'66.249.79.150','http://www.eleword.net:80/news/197.htm','2014-06-15 03:06:25'),(3168,'66.249.79.118','http://www.eleword.net:80/news/198.htm','2014-06-15 03:07:46'),(3169,'66.249.79.118','http://www.eleword.net:80/category/30.htm','2014-06-15 03:11:39'),(3170,'66.249.79.150','http://www.eleword.net:80/news/44.htm','2014-06-15 03:13:05'),(3171,'66.249.79.118','http://www.eleword.net:80/news/40.htm','2014-06-15 03:30:14'),(3172,'66.249.79.118','http://www.eleword.net:80/news/42.htm','2014-06-15 04:01:31'),(3173,'66.249.79.182','http://www.eleword.net:80/category/1.htm','2014-06-15 04:01:37'),(3174,'66.249.79.182','http://www.eleword.net:80/category/25.htm','2014-06-15 04:01:59'),(3175,'66.249.79.150','http://www.eleword.net:80/category/19.htm','2014-06-15 04:07:03'),(3176,'66.249.79.118','http://www.eleword.net:80/category/18.htm','2014-06-15 04:16:40'),(3177,'101.226.168.247','http://www.eleword.net:80/article/1.htm','2014-06-15 05:09:48'),(3178,'101.226.168.248','http://www.eleword.net:80/article/11.htm','2014-06-15 05:09:48'),(3179,'101.226.168.247','http://www.eleword.net:80/article/10.htm','2014-06-15 05:09:48'),(3180,'101.226.168.248','http://www.eleword.net:80/article/12.htm','2014-06-15 05:10:09'),(3181,'101.226.168.243','http://www.eleword.net:80/article/13.htm','2014-06-15 05:10:09'),(3182,'101.226.168.249','http://www.eleword.net:80/article/14.htm','2014-06-15 05:10:23'),(3183,'101.226.168.246','http://www.eleword.net:80/article/147.htm','2014-06-15 05:10:23'),(3184,'101.226.168.250','http://www.eleword.net:80/article/148.htm','2014-06-15 05:10:35'),(3185,'66.249.79.182','http://www.eleword.net:80/news.htm','2014-06-15 05:12:45'),(3186,'66.249.79.150','http://www.eleword.net:80/article/40.htm','2014-06-15 05:12:52'),(3187,'66.249.79.150','http://www.eleword.net:80/category/17.htm','2014-06-15 05:13:06'),(3188,'66.249.79.182','http://www.eleword.net:80/news/96.htm','2014-06-15 05:14:41'),(3189,'66.249.79.150','http://www.eleword.net:80/news/98.htm','2014-06-15 05:15:13'),(3190,'66.249.79.118','http://www.eleword.net:80/news/97.htm','2014-06-15 05:15:37'),(3191,'101.226.166.254','http://www.eleword.net:80/article/15.htm','2014-06-15 05:15:45'),(3192,'101.226.166.251','http://www.eleword.net:80/article/17.htm','2014-06-15 05:15:45'),(3193,'101.226.167.195','http://www.eleword.net:80/article/16.htm','2014-06-15 05:15:45'),(3194,'101.226.167.198','http://www.eleword.net:80/article/19.htm','2014-06-15 05:15:49'),(3195,'101.226.167.196','http://www.eleword.net:80/article/18.htm','2014-06-15 05:15:49'),(3196,'101.226.167.197','http://www.eleword.net:80/article/2.htm','2014-06-15 05:15:49'),(3197,'101.226.167.195','http://www.eleword.net:80/article/20.htm','2014-06-15 05:15:52'),(3198,'101.226.166.254','http://www.eleword.net:80/article/21.htm','2014-06-15 05:15:52'),(3199,'101.226.167.198','http://www.eleword.net:80/article/23.htm','2014-06-15 05:15:56'),(3200,'101.226.166.251','http://www.eleword.net:80/article/22.htm','2014-06-15 05:15:56'),(3201,'66.249.79.118','http://www.eleword.net:80/news/99.htm','2014-06-15 05:16:12'),(3202,'66.249.79.118','http://www.eleword.net:80/news/100.htm','2014-06-15 05:16:47'),(3203,'66.249.79.150','http://www.eleword.net:80/news/101.htm','2014-06-15 05:17:22'),(3204,'66.249.79.150','http://www.eleword.net:80/news/102.htm','2014-06-15 05:17:57'),(3205,'66.249.79.182','http://www.eleword.net:80/news/158.htm','2014-06-15 05:18:32'),(3206,'182.118.20.167','http://www.eleword.net:80/article/149.htm','2014-06-15 05:20:46'),(3207,'182.118.22.215','http://www.eleword.net:80/article/24.htm','2014-06-15 05:21:03'),(3208,'182.118.21.248','http://www.eleword.net:80/article/26.htm','2014-06-15 05:21:54'),(3209,'182.118.21.247','http://www.eleword.net:80/article/25.htm','2014-06-15 05:21:54'),(3210,'182.118.21.245','http://www.eleword.net:80/article/27.htm','2014-06-15 05:21:54'),(3211,'182.118.21.249','http://www.eleword.net:80/article/3.htm','2014-06-15 05:21:54'),(3212,'182.118.21.248','http://www.eleword.net:80/article/4.htm','2014-06-15 05:21:54'),(3213,'182.118.21.254','http://www.eleword.net:80/article/5.htm','2014-06-15 05:24:28'),(3214,'182.118.21.251','http://www.eleword.net:80/article/7.htm','2014-06-15 05:24:28'),(3215,'182.118.21.250','http://www.eleword.net:80/article/6.htm','2014-06-15 05:24:28'),(3216,'182.118.21.254','http://www.eleword.net:80/article/8.htm','2014-06-15 05:26:39'),(3217,'182.118.21.251','http://www.eleword.net:80/article/9.htm','2014-06-15 05:26:39'),(3218,'182.118.22.226','http://www.eleword.net:80/index.htm','2014-06-15 05:28:10'),(3219,'182.118.25.243','http://www.eleword.net:80/index.htm','2014-06-15 05:36:27'),(3220,'220.181.108.177','http://www.eleword.net:80/category/23.htm','2014-06-15 05:53:12'),(3221,'66.249.79.182','http://www.eleword.net:80/news/41.htm','2014-06-15 06:17:15'),(3222,'66.249.79.150','http://www.eleword.net:80/article/42.htm','2014-06-15 06:17:22'),(3223,'66.249.79.182','http://www.eleword.net:80/category/26.htm','2014-06-15 06:17:29'),(3224,'66.249.79.182','http://www.eleword.net:80/article/43.htm','2014-06-15 07:21:38'),(3225,'66.249.79.150','http://www.eleword.net:80/news.htm','2014-06-15 07:22:03'),(3226,'66.249.79.118','http://www.eleword.net:80/category/18.htm','2014-06-15 07:22:11'),(3227,'66.249.79.150','http://www.eleword.net:80/news/53.htm','2014-06-15 07:24:24'),(3228,'66.249.79.118','http://www.eleword.net:80/news/61.htm','2014-06-15 07:24:29'),(3229,'66.249.79.150','http://www.eleword.net:80/news/63.htm','2014-06-15 07:24:35'),(3230,'66.249.79.182','http://www.eleword.net:80/news/62.htm','2014-06-15 07:24:40'),(3231,'66.249.79.118','http://www.eleword.net:80/news/93.htm','2014-06-15 07:24:59'),(3232,'66.249.79.182','http://www.eleword.net:80/news/59.htm','2014-06-15 07:25:09'),(3233,'66.249.79.182','http://www.eleword.net:80/news/94.htm','2014-06-15 07:25:18'),(3234,'66.249.79.150','http://www.eleword.net:80/news/65.htm','2014-06-15 07:25:28'),(3235,'66.249.79.182','http://www.eleword.net:80/news/48.htm','2014-06-15 07:25:38'),(3236,'66.249.79.150','http://www.eleword.net:80/news/56.htm','2014-06-15 07:25:48'),(3237,'66.249.79.118','http://www.eleword.net:80/news/47.htm','2014-06-15 07:25:58'),(3238,'66.249.79.182','http://www.eleword.net:80/news/67.htm','2014-06-15 07:26:08'),(3239,'66.249.79.118','http://www.eleword.net:80/news/66.htm','2014-06-15 07:26:17'),(3240,'66.249.79.150','http://www.eleword.net:80/news/49.htm','2014-06-15 07:26:27'),(3241,'66.249.79.150','http://www.eleword.net:80/news/46.htm','2014-06-15 07:26:37'),(3242,'66.249.79.118','http://www.eleword.net:80/news/52.htm','2014-06-15 07:26:47'),(3243,'66.249.79.182','http://www.eleword.net:80/news/57.htm','2014-06-15 07:26:57'),(3244,'66.249.79.182','http://www.eleword.net:80/news/92.htm','2014-06-15 07:27:07'),(3245,'66.249.79.118','http://www.eleword.net:80/news/60.htm','2014-06-15 07:27:17'),(3246,'66.249.79.118','http://www.eleword.net:80/news/90.htm','2014-06-15 07:27:27'),(3247,'66.249.79.182','http://www.eleword.net:80/news/64.htm','2014-06-15 07:27:37'),(3248,'66.249.79.150','http://www.eleword.net:80/news/50.htm','2014-06-15 07:27:47'),(3249,'66.249.79.118','http://www.eleword.net:80/news/95.htm','2014-06-15 07:27:57'),(3250,'66.249.79.150','http://www.eleword.net:80/news/51.htm','2014-06-15 07:28:07'),(3251,'66.249.79.150','http://www.eleword.net:80/news/54.htm','2014-06-15 07:28:16'),(3252,'66.249.79.118','http://www.eleword.net:80/news/91.htm','2014-06-15 07:28:26'),(3253,'66.249.79.182','http://www.eleword.net:80/news/55.htm','2014-06-15 07:28:36'),(3254,'66.249.79.118','http://www.eleword.net:80/news/89.htm','2014-06-15 07:28:47'),(3255,'66.249.79.182','http://www.eleword.net:80/news/58.htm','2014-06-15 07:28:58'),(3256,'66.249.79.118','http://www.eleword.net:80/news.htm','2014-06-15 08:34:55'),(3257,'66.249.79.150','http://www.eleword.net:80/category/8.htm','2014-06-15 08:35:05'),(3258,'66.249.79.118','http://www.eleword.net:80/category/5.htm','2014-06-15 09:33:19'),(3259,'66.249.79.182','http://www.eleword.net:80/category/3.htm','2014-06-15 09:54:40'),(3260,'66.249.79.118','http://www.eleword.net:80/category/15.htm','2014-06-15 11:37:42'),(3261,'123.139.100.154','http://www.eleword.net:80/index.htm','2014-06-15 11:58:14'),(3262,'123.139.100.154','http://www.eleword.net:80/aboutme.htm','2014-06-15 11:58:18'),(3263,'66.249.79.182','http://www.eleword.net:80/category/13.htm','2014-06-15 13:12:25'),(3264,'124.65.176.74','http://www.eleword.net:80/index.htm','2014-06-15 15:41:36'),(3265,'124.65.176.74','http://www.eleword.net:80/news.htm','2014-06-15 15:42:28'),(3266,'123.125.71.43','http://www.eleword.net:80/article/130.htm','2014-06-15 16:10:50'),(3267,'180.76.5.61','http://www.eleword.net:80/index.htm','2014-06-16 00:24:56'),(3268,'182.118.22.209','http://www.eleword.net:80/article/143.htm','2014-06-16 01:31:08'),(3269,'182.118.22.208','http://www.eleword.net:80/article/144.htm','2014-06-16 01:31:09'),(3270,'101.226.169.211','http://www.eleword.net:80/category/2.htm','2014-06-16 01:32:06'),(3271,'101.226.167.207','http://www.eleword.net:80/category/12.htm','2014-06-16 01:32:24'),(3272,'101.226.167.210','http://www.eleword.net:80/category/10.htm','2014-06-16 01:32:24'),(3273,'101.226.167.213','http://www.eleword.net:80/category/11.htm','2014-06-16 01:32:24'),(3274,'182.118.22.206','http://www.eleword.net:80/article/145.htm','2014-06-16 01:32:27'),(3275,'182.118.22.208','http://www.eleword.net:80/article/146.htm','2014-06-16 01:32:27'),(3276,'182.118.25.216','http://www.eleword.net:80/category/1.htm','2014-06-16 01:32:44'),(3277,'101.226.167.207','http://www.eleword.net:80/category/13.htm','2014-06-16 01:32:48'),(3278,'101.226.167.211','http://www.eleword.net:80/category/14.htm','2014-06-16 01:32:48'),(3279,'101.226.167.213','http://www.eleword.net:80/category/15.htm','2014-06-16 01:32:48'),(3280,'101.226.167.208','http://www.eleword.net:80/category/17.htm','2014-06-16 01:33:13'),(3281,'101.226.167.214','http://www.eleword.net:80/category/16.htm','2014-06-16 01:33:13'),(3282,'182.118.22.208','http://www.eleword.net:80/articles/archive/2014年4月.htm','2014-06-16 01:33:33'),(3283,'182.118.22.208','http://www.eleword.net:80/articles/archive/2014年5月.htm','2014-06-16 01:33:33'),(3284,'101.226.167.208','http://www.eleword.net:80/category/18.htm','2014-06-16 01:33:41'),(3285,'101.226.167.212','http://www.eleword.net:80/category/19.htm','2014-06-16 01:33:41'),(3286,'182.118.22.209','http://www.eleword.net:80/articles/archive/2014年6月.htm','2014-06-16 01:34:34'),(3287,'101.226.167.241','http://www.eleword.net:80/category/4.htm','2014-06-16 01:39:27'),(3288,'101.226.167.239','http://www.eleword.net:80/category/30.htm','2014-06-16 01:39:27'),(3289,'101.226.167.243','http://www.eleword.net:80/category/31.htm','2014-06-16 01:39:27'),(3290,'182.118.25.229','http://www.eleword.net:80/category/20.htm','2014-06-16 01:39:29'),(3291,'182.118.25.228','http://www.eleword.net:80/category/21.htm','2014-06-16 01:39:29'),(3292,'182.118.25.228','http://www.eleword.net:80/category/22.htm','2014-06-16 01:39:29'),(3293,'182.118.25.230','http://www.eleword.net:80/category/24.htm','2014-06-16 01:39:29'),(3294,'182.118.25.229','http://www.eleword.net:80/category/23.htm','2014-06-16 01:39:29'),(3295,'101.226.167.239','http://www.eleword.net:80/category/5.htm','2014-06-16 01:39:45'),(3296,'101.226.167.245','http://www.eleword.net:80/category/6.htm','2014-06-16 01:39:45'),(3297,'101.226.167.239','http://www.eleword.net:80/category/7.htm','2014-06-16 01:39:45'),(3298,'101.226.167.246','http://www.eleword.net:80/category/8.htm','2014-06-16 01:40:07'),(3299,'101.226.167.245','http://www.eleword.net:80/category/9.htm','2014-06-16 01:40:07'),(3300,'182.118.25.229','http://www.eleword.net:80/category/25.htm','2014-06-16 01:40:28'),(3301,'182.118.25.228','http://www.eleword.net:80/category/26.htm','2014-06-16 01:40:28'),(3302,'101.226.167.241','http://www.eleword.net:80/index.htm','2014-06-16 01:40:31'),(3303,'101.226.167.245','http://www.eleword.net:80/index.htm','2014-06-16 01:40:31'),(3304,'182.118.25.236','http://www.eleword.net:80/category/3.htm','2014-06-16 01:41:21'),(3305,'182.118.25.228','http://www.eleword.net:80/category/27.htm','2014-06-16 01:41:23'),(3306,'182.118.25.230','http://www.eleword.net:80/category/28.htm','2014-06-16 01:41:23'),(3307,'182.118.25.229','http://www.eleword.net:80/category/29.htm','2014-06-16 01:42:16'),(3308,'101.226.167.225','http://www.eleword.net:80/index.htm','2014-06-16 01:51:35'),(3309,'182.118.20.171','http://www.eleword.net:80/index.htm','2014-06-16 01:55:14'),(3310,'182.118.20.174','http://www.eleword.net:80/index.htm','2014-06-16 01:55:14'),(3311,'182.118.20.182','http://www.eleword.net:80/index.htm','2014-06-16 01:55:14'),(3312,'182.118.20.161','http://www.eleword.net:80/index.htm','2014-06-16 01:55:14'),(3313,'182.118.20.186','http://www.eleword.net:80/news.htm','2014-06-16 01:55:14'),(3314,'220.181.108.91','http://www.eleword.net:80/news.htm','2014-06-16 02:47:58'),(3315,'123.121.220.208','http://www.eleword.net:80/index.htm','2014-06-16 02:51:09'),(3316,'123.121.220.208','http://www.eleword.net:80/news.htm','2014-06-16 03:15:04');
UNLOCK TABLES;
/*!40000 ALTER TABLE `webstatistics` ENABLE KEYS */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

